{"version":3,"sources":["./node_modules/rxjs/_esm2015/internal/operators/concatAll.js","./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","./node_modules/rxjs/_esm2015/internal/symbol/rxSubscriber.js","./node_modules/rxjs/_esm2015/internal/BehaviorSubject.js","./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","./node_modules/rxjs/_esm2015/internal/config.js","./node_modules/rxjs/_esm2015/internal/scheduler/AsyncAction.js","./node_modules/rxjs/_esm2015/internal/scheduler/Action.js","./node_modules/rxjs/_esm2015/internal/util/ArgumentOutOfRangeError.js","./node_modules/rxjs/_esm2015/internal/operators/mergeMap.js","./node_modules/rxjs/_esm2015/internal/util/isObservable.js","./node_modules/rxjs/_esm2015/internal/scheduled/scheduled.js","./node_modules/rxjs/_esm2015/internal/util/isInteropObservable.js","./node_modules/rxjs/_esm2015/internal/scheduled/scheduleObservable.js","./node_modules/rxjs/_esm2015/internal/scheduled/schedulePromise.js","./node_modules/rxjs/_esm2015/internal/util/isIterable.js","./node_modules/rxjs/_esm2015/internal/scheduled/scheduleIterable.js","./node_modules/rxjs/_esm2015/internal/util/Immediate.js","./node_modules/rxjs/_esm2015/internal/scheduler/AsapAction.js","./node_modules/rxjs/_esm2015/internal/scheduler/asap.js","./node_modules/rxjs/_esm2015/internal/scheduler/AsapScheduler.js","./node_modules/@babel/runtime/helpers/inherits.js","./node_modules/rxjs/_esm2015/internal/Subscriber.js","./node_modules/highlight.js/lib/languages/css.js","./node_modules/highlight.js/lib/languages/bash.js","./node_modules/rxjs/_esm2015/internal/util/canReportError.js","./node_modules/rxjs/_esm2015/internal/util/ObjectUnsubscribedError.js","./node_modules/@babel/runtime/helpers/nonIterableSpread.js","./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","./node_modules/rxjs/_esm2015/internal/observable/from.js","./node_modules/rxjs/_esm2015/internal/scheduler/async.js","./node_modules/rxjs/_esm2015/internal/util/isArray.js","./node_modules/marked/lib/marked.js","./node_modules/highlight.js/lib/core.js","./node_modules/rxjs/_esm2015/internal/observable/ConnectableObservable.js","./node_modules/rxjs/_esm2015/internal/observable/empty.js","./node_modules/@babel/runtime/helpers/iterableToArray.js","./node_modules/rxjs/_esm2015/internal/observable/concat.js","./node_modules/rxjs/_esm2015/internal/Observable.js","./node_modules/rxjs/_esm2015/internal/util/toSubscriber.js","./node_modules/rxjs/_esm2015/internal/util/isArrayLike.js","./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","./node_modules/rxjs/_esm2015/internal/scheduler/AsyncScheduler.js","./node_modules/@babel/runtime/helpers/slicedToArray.js","./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","./node_modules/@babel/runtime/helpers/esm/inherits.js","./node_modules/highlight.js/lib/languages/php.js","./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","./node_modules/rxjs/_esm2015/internal/util/noop.js","./node_modules/@babel/runtime/helpers/esm/typeof.js","./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","./node_modules/@babel/runtime/helpers/esm/createSuper.js","./node_modules/@babel/runtime/helpers/createSuper.js","./node_modules/rxjs/_esm2015/internal/observable/of.js","./node_modules/rxjs/_esm2015/internal/symbol/iterator.js","./node_modules/rxjs/_esm2015/internal/util/hostReportError.js","./node_modules/rxjs/_esm2015/internal/observable/defer.js","./node_modules/@babel/runtime/helpers/getPrototypeOf.js","./node_modules/@babel/runtime/helpers/assertThisInitialized.js","./node_modules/rxjs/_esm2015/internal/observable/timer.js","./node_modules/@babel/runtime/helpers/toConsumableArray.js","./node_modules/@babel/runtime/helpers/esm/get.js","./node_modules/@babel/runtime/helpers/esm/superPropBase.js","./node_modules/rxjs/_esm2015/internal/util/subscribeTo.js","./node_modules/rxjs/_esm2015/internal/util/subscribeToObservable.js","./node_modules/rxjs/_esm2015/internal/util/subscribeToPromise.js","./node_modules/rxjs/_esm2015/internal/util/subscribeToIterable.js","./node_modules/@babel/runtime/helpers/setPrototypeOf.js","./node_modules/rxjs/_esm2015/internal/util/identity.js","./node_modules/highlight.js/lib/languages/javascript.js","./node_modules/rxjs/_esm2015/internal/observable/merge.js","./node_modules/@babel/runtime/helpers/createClass.js","./node_modules/rxjs/_esm2015/internal/Notification.js","./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","./node_modules/rxjs/_esm2015/internal/Subject.js","./node_modules/rxjs/_esm2015/internal/util/isObject.js","./node_modules/rxjs/_esm2015/internal/Scheduler.js","./node_modules/rxjs/_esm2015/internal/util/isNumeric.js","./node_modules/rxjs/_esm2015/internal/SubjectSubscription.js","./node_modules/rxjs/_esm2015/internal/InnerSubscriber.js","./node_modules/rxjs/_esm2015/internal/util/subscribeToResult.js","./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","./node_modules/rxjs/_esm2015/internal/operators/mergeAll.js","./node_modules/rxjs/_esm2015/internal/util/isPromise.js","./node_modules/@babel/runtime/helpers/typeof.js","./node_modules/rxjs/_esm2015/internal/observable/forkJoin.js","./node_modules/rxjs/_esm2015/internal/scheduler/AnimationFrameAction.js","./node_modules/rxjs/_esm2015/internal/scheduler/animationFrame.js","./node_modules/rxjs/_esm2015/internal/scheduler/AnimationFrameScheduler.js","./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","./node_modules/rxjs/_esm2015/internal/Observer.js","./node_modules/rxjs/_esm2015/internal/observable/combineLatest.js","./node_modules/rxjs/_esm2015/internal/scheduled/scheduleArray.js","./node_modules/rxjs/_esm2015/internal/operators/observeOn.js","./node_modules/rxjs/_esm2015/internal/ReplaySubject.js","./node_modules/rxjs/_esm2015/internal/symbol/observable.js","./node_modules/rxjs/_esm2015/internal/observable/interval.js","./node_modules/rxjs/_esm2015/internal/OuterSubscriber.js","./node_modules/rxjs/_esm2015/internal/operators/map.js","./node_modules/@babel/runtime/helpers/classCallCheck.js","./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","./node_modules/rxjs/_esm2015/internal/util/pipe.js","./node_modules/highlight.js/lib/languages/csharp.js","./node_modules/rxjs/_esm2015/internal/util/isFunction.js","./node_modules/rxjs/_esm2015/internal/util/subscribeToArray.js","./node_modules/rxjs/_esm2015/internal/operators/filter.js","./node_modules/rxjs/_esm2015/internal/util/UnsubscriptionError.js","./node_modules/rxjs/_esm2015/internal/scheduler/QueueAction.js","./node_modules/rxjs/_esm2015/internal/scheduler/queue.js","./node_modules/rxjs/_esm2015/internal/scheduler/QueueScheduler.js","./node_modules/rxjs/_esm2015/internal/Subscription.js","./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","./node_modules/rxjs/_esm2015/internal/util/EmptyError.js","./node_modules/chartist/dist/chartist.js","./node_modules/@babel/runtime/helpers/esm/createClass.js","./node_modules/@babel/runtime/helpers/arrayWithHoles.js","./node_modules/@babel/runtime/helpers/nonIterableRest.js","./node_modules/rxjs/_esm2015/internal/operators/refCount.js","./node_modules/rxjs/_esm2015/internal/observable/fromEvent.js","./node_modules/rxjs/_esm2015/internal/observable/fromArray.js","./node_modules/rxjs/_esm2015/internal/util/isScheduler.js","./node_modules/rxjs/_esm2015/internal/observable/throwError.js","./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","./node_modules/@babel/runtime/helpers/esm/defineProperty.js","./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","./node_modules/@babel/runtime/helpers/esm/construct.js","./node_modules/rxjs/_esm2015/internal/operators/share.js","./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js","./node_modules/rxjs/_esm2015/internal/operators/multicast.js","./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js","./node_modules/@angular/platform-browser/__ivy_ngcc__/fesm2015/platform-browser.js","./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js","./node_modules/rxjs/_esm2015/internal/operators/concatMap.js","./node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js","./node_modules/rxjs/_esm2015/internal/operators/takeLast.js","./node_modules/rxjs/_esm2015/internal/operators/throwIfEmpty.js","./node_modules/rxjs/_esm2015/internal/operators/defaultIfEmpty.js","./node_modules/rxjs/_esm2015/internal/operators/catchError.js","./node_modules/rxjs/_esm2015/internal/operators/take.js","./node_modules/rxjs/_esm2015/internal/operators/first.js","./node_modules/rxjs/_esm2015/internal/operators/tap.js","./node_modules/rxjs/_esm2015/internal/operators/every.js","./node_modules/rxjs/_esm2015/internal/operators/switchMap.js","./node_modules/rxjs/_esm2015/internal/operators/startWith.js","./node_modules/rxjs/_esm2015/internal/operators/scan.js","./node_modules/rxjs/_esm2015/internal/operators/finalize.js","./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js","./node_modules/rxjs/_esm2015/internal/operators/last.js","./node_modules/@angular/cdk/fesm2015/coercion.js","./node_modules/rxjs/_esm2015/internal/operators/audit.js","./node_modules/rxjs/_esm2015/internal/operators/auditTime.js","./node_modules/rxjs/_esm2015/internal/operators/takeUntil.js","./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/platform.js","./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/bidi.js","./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/scrolling.js","./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/drag-drop.js","./src/app/shared/models/activity.model.ts","./src/app/shared/models/attachment.model.ts","./src/app/shared/models/auto-actions.model.ts","./src/app/shared/models/category.model.ts","./src/app/shared/models/comment.model.ts","./src/app/shared/models/user.model.ts","./src/app/shared/models/task.model.ts","./src/app/shared/models/column.model.ts","./src/app/shared/models/issue-tracker.model.ts","./src/app/shared/models/board.model.ts","./src/app/shared/models/notification.model.ts","./src/app/shared/models/user-options.model.ts","./node_modules/tslib/tslib.es6.js","./src/app/shared/api-service.service.ts","./src/app/shared/constants.ts","./src/app/shared/strings/strings.service.ts","./src/app/shared/auth/auth.service.ts","./src/app/shared/auth/auth.guard.ts","./src/app/shared/context-menu/context-menu.service.ts","./src/app/shared/modal/modal.service.ts","./src/app/shared/notifications/notifications.service.ts","./src/app/board/board.service.ts","./src/app/shared/top-nav/top-nav.component.html","./src/app/shared/top-nav/top-nav.component.ts","./src/app/shared/context-menu/context-menu.component.html","./src/app/shared/context-menu/context-menu.component.ts","./src/app/shared/context-menu/context-menu-item.component.html","./src/app/shared/context-menu/context-menu-item.component.ts","./src/app/shared/modal/modal.component.html","./src/app/shared/modal/modal.component.ts","./src/app/board/task/task.component.html","./src/app/board/task/task.component.ts","./src/app/board/column/column.component.html","./src/app/board/column/column.component.ts","./src/app/board/board.component.html","./src/app/board/board.component.ts","./src/app/files/file-viewer.service.ts","./src/app/files/file-viewer.component.html","./src/app/files/file-viewer.component.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/settings/settings.service.ts","./src/app/settings/user-settings/user-settings.service.ts","./src/app/settings/user-settings/user-settings.models.ts","./src/app/settings/user-settings/user-settings.component.html","./src/app/settings/user-settings/user-settings.component.ts","./src/app/settings/user-admin/user-admin.service.ts","./src/app/settings/user-admin/user-admin.models.ts","./src/app/settings/user-admin/user-admin.component.html","./src/app/settings/user-admin/user-admin.component.ts","./src/app/settings/board-admin/board-admin.service.ts","./src/app/settings/board-admin/board-data.model.ts","./src/app/shared/inline-edit/inline-edit.component.ts","./src/app/shared/inline-edit/inline-edit.component.html","./src/app/settings/board-admin/board-admin.component.html","./src/app/settings/board-admin/board-admin.component.ts","./src/app/settings/auto-actions/auto-actions.service.ts","./src/app/settings/auto-actions/auto-actions.component.html","./src/app/settings/auto-actions/auto-actions.component.ts","./src/app/settings/settings.component.ts","./src/app/settings/settings.component.html","./src/app/dashboard/dashboard.service.ts","./src/app/dashboard/my-items/my-items.component.html","./src/app/dashboard/my-items/my-items.component.ts","./src/app/dashboard/charts/charts.component.html","./src/app/dashboard/charts/charts.component.ts","./src/app/dashboard/calendar/calendar.component.html","./src/app/dashboard/calendar/calendar.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/app.routes.ts","./src/app/shared/notifications/notifications.component.html","./src/app/shared/notifications/notifications.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.api-http.ts","./src/app/shared/shared.module.ts","./src/app/board/board.module.ts","./src/app/files/file-viewer.module.ts","./src/app/dashboard/dashboard.module.ts","./src/app/settings/settings.module.ts","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object","./node_modules/rxjs/_esm2015/internal/innerSubscribe.js"],"names":["concatAll","_classCallCheck","instance","Constructor","TypeError","_iterableToArray","iter","Symbol","iterator","Object","Array","from","rxSubscriber","Math","random","BehaviorSubject","_value","subscriber","subscription","closed","next","this","hasError","thrownError","value","getValue","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","prototype","toString","call","e","_enable_super_gross_mode_that_will_cause_bad_things","config","Promise","undefined","error","Error","console","warn","stack","log","scheduler","work","pending","state","delay","id","recycleAsyncId","requestAsyncId","setInterval","flush","bind","clearInterval","_execute","errored","errorValue","unsubscribe","actions","index","indexOf","splice","ArgumentOutOfRangeError","ArgumentOutOfRangeErrorImpl","message","name","create","mergeMap","project","resultSelector","concurrent","Number","POSITIVE_INFINITY","source","pipe","a","i","b","ii","lift","MergeMapOperator","observer","subscribe","MergeMapSubscriber","destination","hasCompleted","buffer","active","_tryNext","push","result","err","_innerSub","ish","innerSubscriber","add","innerSubscription","length","complete","innerValue","_next","shift","isObservable","obj","scheduled","input","isInteropObservable","Observable","sub","Subscription","schedule","observable","scheduleObservable","isPromise","then","schedulePromise","isArrayLike","scheduleArray","isIterable","return","done","scheduleIterable","nextHandle","RESOLVED","resolve","activeHandles","findAndClearHandle","handle","Immediate","cb","asapScheduler","action","count","execute","asap","setPrototypeOf","module","exports","subClass","superClass","constructor","writable","configurable","Subscriber","destinationOrNext","syncErrorValue","syncErrorThrown","syncErrorThrowable","isStopped","arguments","SafeSubscriber","_error","_complete","_parentOrParents","_parentSubscriber","observerOrNext","context","_context","useDeprecatedSynchronousErrorHandling","__tryOrSetError","__tryOrUnsub","wrappedComplete","fn","parent","hljs","case_insensitive","illegal","contains","C_BLOCK_COMMENT_MODE","className","begin","end","APOS_STRING_MODE","QUOTE_STRING_MODE","lexemes","keywords","returnBegin","endsWithParent","excludeEnd","relevance","CSS_NUMBER_MODE","starts","VAR","assign","variants","SUBST","BACKSLASH_ESCAPE","QUOTE_STRING","ARITHMETIC","NUMBER_MODE","KNOWN_SHEBANG","SHEBANG","binary","join","FUNCTION","inherit","TITLE_MODE","aliases","$pattern","keyword","literal","built_in","_","HASH_COMMENT_MODE","canReportError","ObjectUnsubscribedError","ObjectUnsubscribedErrorImpl","_unsupportedIterableToArray","o","minLen","n","slice","test","asyncScheduler","async","isArray","x","_defineProperties","target","props","descriptor","enumerable","defineProperty","key","_arrayLikeToArray","arr","len","arr2","_createForOfIteratorHelperLoose","allowArrayLike","it","defaults","baseUrl","breaks","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartLists","smartypants","tokenizer","walkTokens","xhtml","getDefaults","changeDefaults","newDefaults","createCommonjsModule","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","unescapeTest","unescape","html","replace","toLowerCase","charAt","String","fromCharCode","parseInt","substring","caret","nonWordAndColonTest","originIndependentUrl","baseUrls","justDomain","protocol","domain","rtrim","str","c","invert","l","suffLen","currChar","substr","helpers","encode","hasOwnProperty","defaults$1","rtrim$1","splitCells$1","tableRow","cells","match","offset","escaped","curr","split","trim","_escape","outputLink","cap","link","raw","href","title","text","type","Tokenizer_1","Tokenizer","options","_proto","space","src","rules","block","newline","exec","code","tokens","lastToken","trimRight","codeBlockStyle","fences","matchIndentToCode","indentToCode","map","node","matchIndentInNode","indentCodeCompensation","lang","heading","depth","nptable","item","header","align","hr","blockquote","list","addBack","loose","istask","ischecked","bull","isordered","isparen","ordered","start","items","itemMatch","RegExp","bullet","task","checked","pre","def","tag","table","lheading","paragraph","escape","inline","inLink","inRawBlock","lastParenIndex","level","findClosingBracket$1","linkLen","_escapes","reflink","links","nolink","strong","maskedSrc","prevChar","punctuation","endReg","endAst","endUnd","lastIndex","middle","em","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","startsWith","endsWith","br","del","autolink","url","prevCapZero","_backpedal","inlineText","noopTest$1","edit$1","regex","opt","val","getRegex","merge$1","_paragraph","_label","_title","_tag","_comment","normal","reflinkSearch","_punctuation","_blockSkip","_overlapSkip","blockSkip","overlapSkip","_scheme","_email","_attribute","_href","_extended_email","defaults$2","block$1","inline$1","out","charCodeAt","Lexer_1","Lexer","lex","staticProps","blockTokens","top","token","errMsg","j","k","l2","row","inlineTokens","keys","includes","lastIndexOf","repeat","get","defaults$3","cleanUrl$1","base","prot","decodeURIComponent","relativeBase","resolveUrl","encodeURI","escape$1","Renderer_1","Renderer","_code","infostring","quote","_html","slugger","slug","body","listitem","checkbox","tablerow","content","tablecell","flags","image","_text","TextRenderer_1","TextRenderer","Slugger_1","Slugger","seen","originalSlug","defaults$4","unescape$1","Parser_1","Parser","textRenderer","parse","l3","cell","itemBody","parseInline","unshift","merge$2","escape$2","defaults$5","marked","callback","checkSanitizeDeprecation$1","setTimeout","_tokens","setOptions","use","extension","opts","_loop","prop","prevRenderer","_len","args","_key","ret","apply","_loop2","prevTokenizer","_len2","_key2","_step","_iterator","_step2","_iterator2","_step3","_iterator3","_step4","_iterator4","parser","lexer","factory","deepFreeze","freeze","objIsFunction","getOwnPropertyNames","forEach","isFrozen","Response","mode","data","ignore","escapeHTML","original","objects","nodeName","utils","__proto__","nodeStream","_nodeStream","child","firstChild","nextSibling","nodeType","nodeValue","event","mergeStreams","highlighted","processed","nodeStack","selectStream","open","attributes","attr","close","render","stream","reverse","pop","emitsWrappingTags","kind","HTMLRenderer","parseTree","classPrefix","walk","sublanguage","span","TokenTreeEmitter","openNode","addText","closeNode","emitter","root","rootNode","children","JSON","stringify","builder","_walk","every","el","TokenTree","_collapse","re","concat","joined","C_NUMBER_RE","PHRASAL_WORDS_MODE","COMMENT","modeOptions","C_LINE_COMMENT_MODE","MODES","IDENT_RE","UNDERSCORE_IDENT_RE","NUMBER_RE","BINARY_NUMBER_RE","RE_STARTERS_RE","beginShebang","m","resp","ignoreMatch","C_NUMBER_MODE","BINARY_NUMBER_MODE","REGEXP_MODE","UNDERSCORE_TITLE_MODE","METHOD_GUARD","END_SAME_AS_BEGIN","_beginMatch","COMMON_KEYWORDS","scoreForKeyword","providedScore","commonKeyword","inherit$1","nodeStream$1","mergeStreams$1","NO_MATCH","ArrayProto","languages","plugins","SAFE_MODE","fixMarkupRe","LANGUAGE_NOT_FOUND","PLAINTEXT_LANGUAGE","disableAutodetect","noHighlightRe","languageDetectRe","tabReplace","useBR","__emitter","shouldNotHighlight","languageName","ignoreIllegals","continuation","language","fire","_highlight","codeToHighlight","keywordData","matchText","processBuffer","subLanguage","mode_buffer","continuations","highlightAuto","addSublanguage","processSubLanguage","last_index","keywordPatternRe","buf","keywordRelevance","addKeyword","processKeywords","startNewMode","doIgnore","lexeme","matcher","regexIndex","continueScanAtSamePosition","lastMatch","processLexeme","textBeforeMatch","badRule","rule","new_mode","__beforeBegin","endSameAsBegin","endRe","skip","excludeBegin","doBeginMatch","matchPlusRemainder","end_mode","endOfMode","matched","endsParent","origin","returnEnd","doEndMatch","iterations","getLanguage","md","langRe","global","MultiRegex","matchIndexes","regexes","matchAt","position","countMatchGroups","terminators","matcherRe","regexps","separator","backreferenceRe","numCaptures","s","findIndex","matchData","ResumableMultiRegex","multiRegexes","addRule","compile","getMatcher","skipIfhasPrecedingOrTrailingDot","response","compileMode","cmode","compiled","beginKeywords","kw_pattern","rawKeywords","compiled_keywords","splitAndCompile","keywordList","pair","compileKeywords","beginRe","terminator_end","illegalRe","cached_variants","variant","dependencyOnParent","expand_or_clone_mode","mm","term","buildModeRegex","compileLanguage","current","processContinuations","considerAll","processedCount","closeAllNodes","finalize","toHTML","illegalBy","msg","sofar","errorRaised","languageSubset","justTextHighlightResult","secondBest","filter","autoDetection","second_best","fixMarkup","highlightBlock","element","classes","parentNode","find","_class","blockLanguage","document","createElement","innerHTML","textContent","originalStream","resultNode","prevClassName","currentLang","resultLang","buildClassName","relavance","initHighlighting","called","blocks","querySelectorAll","registerAliases","aliasList","alias","plugin","configure","userOptions","initHighlightingOnLoad","window","addEventListener","registerLanguage","languageDefinition","rawDefinition","listLanguages","requireLanguage","addPlugin","debugMode","safeMode","versionString","HLJS","ConnectableObservable","subjectFactory","_refCount","_isComplete","getSubject","subject","_subject","connection","_connection","ConnectableSubscriber","EMPTY","connectableObservableDescriptor","connectableProto","operator","_subscribe","connect","refCount","connectable","_unsubscribe","empty","emptyScheduled","_isScalar","sink","nextOrObserver","toSubscriber","_trySubscribe","promiseCtor","getPromiseCtor","reject","operations","arrayLikeToArray","AsyncScheduler","SchedulerAction","now","delegate","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","_assertThisInitialized","self","ReferenceError","_inherits","VARIABLE","PREPROCESSOR","STRING","NUMBER","KEYWORDS","_toConsumableArray","iterableToArray","noop","_typeof","_possibleConstructorReturn","assertThisInitialized","_createSuper","Derived","hasNativeReflectConstruct","isNativeReflectConstruct","Super","getPrototypeOf","NewTarget","possibleConstructorReturn","of","getSymbolIterator","hostReportError","defer","observableFactory","_getPrototypeOf","timer","dueTime","periodOrScheduler","period","due","dispatch","arrayWithoutHoles","nonIterableSpread","property","receiver","object","desc","getOwnPropertyDescriptor","obs","subscribeToArray","promise","iterable","isObject","_setPrototypeOf","p","identity","LITERALS","BUILT_INS","lookahead","IDENT_RE$1","XML_TAG","KEYWORDS$1","HTML_TEMPLATE","CSS_TEMPLATE","TEMPLATE_STRING","PARAMS_CONTAINS","PARAMS","merge","observables","last","protoProps","NotificationKind","Notification","hasValue","observe","do","undefinedValueNotification","completeNotification","SubjectSubscriber","Subject","observers","AnonymousSubject","copy","Scheduler","isNumeric","parseFloat","SubjectSubscription","subscriberIndex","outerValue","outerIndex","notifyNext","notifyError","notifyComplete","subscribeToResult","outerSubscriber","subscribeTo","mergeAll","forkJoin","sources","first","forkJoinInternal","values","completed","emitted","reduce","requestAnimationFrame","cancelAnimationFrame","animationFrameScheduler","animationFrame","NONE","combineLatest","CombineLatestOperator","CombineLatestSubscriber","toRespond","unused","_outerValue","_tryResultSelector","notification","ObserveOnSubscriber","scheduleMessage","createNext","createError","createComplete","arg","bufferSize","windowTime","_events","_infiniteTimeWindow","_bufferSize","_windowTime","nextInfiniteTimeWindow","nextTimeWindow","_getNow","_trimBufferThenGetEvents","queue","eventsCount","spliceCount","time","max","interval","counter","OuterSubscriber","innerIndex","innerSub","thisArg","MapOperator","MapSubscriber","_arr","_n","_d","_e","_s","_i","fns","pipeFromArray","prev","NUMBERS","VERBATIM_STRING","VERBATIM_STRING_NO_LF","SUBST_NO_LF","INTERPOLATED_STRING","INTERPOLATED_VERBATIM_STRING","INTERPOLATED_VERBATIM_STRING_NO_LF","GENERIC_MODIFIER","TYPE_IDENT_RE","AT_IDENTIFIER","isFunction","array","predicate","FilterOperator","FilterSubscriber","UnsubscriptionError","UnsubscriptionErrorImpl","errors","queueScheduler","_subscriptions","_ctorUnsubscribe","remove","flattenUnsubscriptionErrors","teardown","tmp","subscriptions","subscriptionIndex","errs","EmptyError","EmptyErrorImpl","Chartist","version","globalRoot","namespaces","svg","xmlns","xlink","ct","alphaNumerate","extend","sourceProp","replaceAll","subStr","newSubStr","ensureUnit","unit","quantity","querySelector","query","Node","times","sum","previous","mapMultiply","factor","num","mapAdd","addend","serialMap","roundWithPrecision","digits","precision","pow","round","escapingMap","'","serialize","deserialize","createSvg","container","width","height","getAttributeNS","removeChild","Svg","addClass","_node","style","appendChild","normalizeData","multi","labelCount","output","normalized","series","getDataArray","labels","reverseData","safeHasProperty","isDataHoleValue","isNaN","recursiveConvert","multiValue","getNumberOrUndefined","y","normalizePadding","padding","fallback","right","bottom","left","getMetaData","meta","orderOfMagnitude","floor","abs","LN10","projectLength","axisLength","bounds","range","getAvailableHeight","chartPadding","axisX","getHighLow","dimension","highLow","high","toUpperCase","MAX_VALUE","low","findHigh","findLow","recursiveHighLow","referenceValue","min","isFinite","isFalseyButZero","isMultiValue","getMultiValue","rho","gcd","q","f","divisor","x1","x2","getBounds","scaleMinSpace","onlyInteger","newMin","newMax","optimizationCounter","valueRange","oom","step","ceil","numberOfSteps","scaleUp","smallestFactor","safeIncrement","increment","polarToCartesian","centerX","centerY","radius","angleInDegrees","angleInRadians","PI","cos","sin","createChartRect","fallbackPadding","hasAxis","axisY","yAxisOffset","xAxisOffset","normalizedPadding","chartRect","y1","y2","createGrid","axis","group","eventEmitter","positionalData","units","pos","counterUnits","gridElement","elem","emit","createGridBackground","gridGroup","gridBackground","createLabel","axisOffset","labelOffset","useForeignObject","labelElement","setAttribute","innerText","foreignObject","getSeriesOption","seriesOptions","optionsProvider","responsiveOptions","currentOptions","baseOptions","mediaQueryListeners","updateCurrentOptions","mediaEvent","previousOptions","matchMedia","matches","mql","addListener","removeMediaQueryListeners","removeListener","getCurrentOptions","splitIntoSegments","pathCoordinates","valueData","increasingX","fillHoles","segments","hole","Interpolation","none","path","Path","currX","currY","currData","move","line","simple","d","prevX","prevY","prevData","curve","cardinal","tension","t","paths","segment","iLen","monotoneCubic","xs","ys","ms","ds","dys","dxs","postpone","EventEmitter","handlers","addEventHandler","handler","removeEventHandler","starHandler","listToArray","Class","properties","superProtoOverride","superProto","proto","cloneDefinitions","constr","super","propName","initialize","resizeListener","update","createChart","initializeTimeoutId","Base","defaultOptions","supportsForeignObject","isSupported","supportsAnimations","__chartist__","detach","override","clearTimeout","removeEventListener","on","off","insertFirst","Element","createElementNS","insertBefore","ns","getAttribute","namespacedAttribute","setAttributeNS","SVGElement","selector","foundNode","foundNodes","List","getNode","fnObj","createTextNode","newElement","replaceChild","append","names","removeClass","removedClasses","removeAllClasses","getBoundingClientRect","animate","animations","guided","attribute","createAnimate","animationDefinition","timeout","easing","attributeProperties","Easing","dur","calcMode","keySplines","keyTimes","fill","attributeName","beginElement","to","params","feature","implementation","hasFeature","easeInSine","easeOutSine","easeInOutSine","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInBack","easeOutBack","easeInOutBack","nodeList","svgElements","prototypeProperty","elementDescriptions","accuracy","command","pathElements","relative","pathElement","forEachParam","pathElementIndex","paramName","paramIndex","arc","rx","ry","xAr","lAf","sf","scale","translate","transform","transformFnc","transformed","chunks","elements","chunk","description","spliceArgs","accuracyMultiplier","clone","splitByCommand","joinedPath","axisUnits","dir","rectStart","rectEnd","rectOffset","Axis","ticks","gridOffset","createGridAndLabels","labelGroup","chartOptions","axisOptions","projectedValues","projectValue","labelValues","labelInterpolationFnc","projectedValue","labelLength","showGrid","classNames","grid","showLabel","label","AutoScaleAxis","axisUnit","FixedScaleAxis","sort","stepLength","StepAxis","calc","stretch","showLine","showPoint","showArea","areaBase","lineSmooth","showGridBackground","fullWidth","chart","point","area","vertical","horizontal","Line","seriesGroup","seriesIndex","seriesElement","pathData","valueIndex","seriesMeta","areaBaseProjected","pathSegment","solidPathSegments","firstElement","lastElement","areaPath","seriesBarDistance","stackBars","stackMode","horizontalBars","distributeSeries","bar","Bar","serialSums","valueAxis","labelAxisTicks","labelAxis","zeroPoint","stackedBarValues","periodHalfLength","biPol","projected","previousStack","labelAxisValueIndex","positions","metaData","chartPie","chartDonut","slicePie","sliceDonut","sliceDonutSolid","startAngle","total","donut","donutSolid","donutWidth","labelPosition","labelDirection","ignoreEmptyValues","determineAnchorPosition","center","direction","toTheRight","Pie","labelsGroup","labelRadius","totalDataSum","seriesGroups","previousValue","currentValue","hasSingleValInSeries","endAngle","overlappigStartAngle","innerStart","innerEnd","donutSolidRadius","pathClassName","strokeWidth","rawValue","interpolatedValue","dx","dy","_createClass","RefCountOperator","refCounter","RefCountSubscriber","sharedConnection","fromEvent","eventName","setupSubscription","sourceObj","isEventTarget","isJQueryStyleEventEmitter","isNodeStyleEventEmitter","fromArray","isScheduler","throwError","_slicedToArray","_defineProperty","_createForOfIteratorHelper","F","normalCompletion","didErr","_e2","Parent","Function","shareSubjectFactory","noSideEffects","PARAMETERS","makeParamDecorator","parentClass","metaCtor","makeMetadataCtor","ParamDecoratorFactory","annotationInstance","ParamDecorator","annotation","cls","unusedKey","parameters","ngMetadataName","annotationCls","Inject","Optional","Self","SkipSelf","InjectFlags","getClosureSafeProperty","objWithPropertyToExtract","fillProperties","ɵɵdefineInjectable","providedIn","ɵɵdefineInjector","providers","imports","getInjectableDef","getOwnDefinition","NG_PROV_DEF","NG_INJECTABLE_DEF","getInjectorDef","NG_INJ_DEF","NG_INJECTOR_DEF","ɵprov","ɵinj","NG_PROV_DEF_FALLBACK","ɵprovFallback","ngInjectableDef","ngInjectorDef","overriddenName","res","newLineIndex","concatStringsWithSpace","before","after","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","isForwardRef","_injectImplementation","__globalThis","globalThis","__window","__self","WorkerGlobalScope","__global","_global","NG_COMP_DEF","ɵcmp","NG_DIR_DEF","ɵdir","NG_PIPE_DEF","ɵpipe","NG_MOD_DEF","ɵmod","NG_LOC_ID_DEF","ɵloc","NG_FACTORY_DEF","ɵfac","NG_ELEMENT_ID","__NG_ELEMENT_ID__","_desc","INJECTOR","THROW_IF_NOT_FOUND","NEW_LINE","USE_VALUE","provide","useValue","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","injectInjectorOnly","Default","injectRootLimpMode","ɵɵinject","inject","notFoundValue","injectableDef","injectArgs","types","catchInjectorError","injectorErrorName","tokenPath","parts","formatError","deepForEach","addToArray","removeFromArray","newArray","size","keyValueArraySet","keyValueArray","keyValueArrayIndexOf","value1","value2","arrayInsert2","keyValueArrayGet","_arrayIndexOfSorted","ChangeDetectionStrategy","ViewEncapsulation$1","ViewEncapsulation","EMPTY_OBJ","EMPTY_ARRAY","_renderCompCount","ɵɵdefineComponent","componentDefinition","declaredInputs","providersResolver","decls","vars","template","consts","ngContentSelectors","hostBindings","hostVars","hostAttrs","contentQueries","inputs","outputs","exportAs","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","styles","setInput","schemas","tView","directiveTypes","directives","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","getComponentDef","getDirectiveDef","getPipeDef","autoRegisterModuleById","ɵɵdefineNgModule","bootstrap","declarations","transitiveCompileScopes","secondary","newLookup","minifiedKey","publicName","declaredName","ɵɵdefineDirective","ɵɵdefinePipe","pipeDef","pure","onDestroy","ngOnDestroy","getFactoryDef","throwNotFound","getNgModuleDef","ngModuleDef","isLView","isLContainer","isContentQueryHost","tNode","isComponentHost","isDirectiveHost","isComponentDef","isRootView","firstChange","ɵɵNgOnChangesFeature","NgOnChangesFeatureImpl","definition","ngOnChanges","ngOnChangesSetInput","rememberChangeHistoryAndInvokeOnChangesHook","simpleChangesStore","getSimpleChangesStore","privateName","store","setSimpleChangesStore","previousChange","ngInherit","DOCUMENT","getDocument","isProceduralRenderer","listen","domRendererFactory3","createRenderer","hostElement","rendererType","unwrapRNode","getNativeByIndex","lView","getNativeByTNode","getTNode","view","getComponentLViewByIndex","nodeIndex","hostView","slotValue","readPatchedLView","readPatchedData","isCreationMode","viewAttachedToChangeDetector","getConstant","resetPreOrderHookFlags","updateTransplantedViewCount","lContainer","amount","viewOrContainer","instructionState","lFrame","createLFrame","bindingsEnabled","checkNoChangesMode","getBindingsEnabled","getLView","getTView","ɵɵrestoreView","viewToRestore","contextLView","getPreviousOrParentTNode","previousOrParentTNode","setPreviousOrParentTNode","isParent","getIsParent","setIsNotParent","getCheckNoChangesMode","setCheckNoChangesMode","getBindingRoot","bindingRootIndex","bindingStartIndex","getBindingIndex","bindingIndex","nextBindingIndex","incrementBindingIndex","setBindingRootForHostBindings","currentDirectiveIndex","setCurrentDirectiveIndex","getCurrentQueryIndex","currentQueryIndex","setCurrentQueryIndex","enterDI","newView","newLFrame","allocLFrame","enterView","currentLFrame","childLFrame","selectedIndex","elementDepthCount","currentNamespace","leaveViewLight","oldLFrame","leaveDI","leaveView","nextContextImpl","nestingLevel","currentView","walkUpViews","getSelectedIndex","setSelectedIndex","getSelectedTNode","registerPostOrderHooks","directiveStart","directiveEnd","lifecycleHooks","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeCheckHooks","hooks","callHooks","executeInitAndCheckHooks","initPhase","incrementInitPhaseFlags","currentNodeIndex","nodeIndexLimit","lastNodeIndexFound","callHook","isInitHook","hook","directive","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","setUpAttributes","native","attrs","isProc","namespaceURI","attrName","attrVal","isAnimationProp","setProperty","isNameOnlyAttributeMarker","marker","mergeHostAttrs","dst","srcMarker","mergeHostAttribute","key1","key2","markerInsertPosition","dstValue","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","renderStringify","stringifyForError","defaultScheduler","ɵ0$3","ɵɵresolveDocument","ownerDocument","maybeUnwrapFn","includeViewProviders","setIncludeViewProviders","v","oldValue","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","firstCreatePass","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","hostTNode","diPublicInInjector","bloomBit","BLOOM_SIZE","mask","b6","b5","tData","bloomAdd","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","previousTView","hostTElementNode","Host","shouldSearchParent","bloomHasToken","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","cptViewProvidersCount","endIndex","providerTokenOrDef","dirDef","previousIncludeViewProviders","directiveIndex","directiveDef","ngOnInit","ngDoCheck","wrappedOnChanges","preOrderHooks","preOrderCheckHooks","registerPreOrderHooks","tokenId","injectorView","isFirstHostTNode","_tNode","_lView","ɵɵgetFactoryOf","typeAny","injectorDef","ɵɵgetInheritedFactory","ownConstructor","ownFactory","objectPrototype","getDebugContext","getOriginalError","defaultErrorLogger","_console","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","changingThisBreaksApplicationSecurity","unwrapSafeValue","allowSanitizationBypassAndThrow","actualType","getSanitizationBypassType","getTypeName","_devMode","_runModeLocked","isDevMode","DOMParser","parseFromString","_a","defaultDoc","inertDocument","createHTMLDocument","inertHtml","inertBodyElement","templateEl","inertBody","documentMode","stripCustomNsAttrs","elAttrs","removeAttribute","childNode","ELEMENT_NODE","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","tagSet","tags","sets","inertBodyHelper","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","sanitizedSomething","traverseContent","startElement","TEXT_NODE","chars","endElement","checkClobberedElement","srcset","tagName","elAttr","lower","encodeEntities","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","isDOMParserAvailable","getInertBodyHelper","unsafeHtml","getInertBodyElement","mXSSAttempts","parsedHtml","safeHtml","sanitizeChildren","getTemplateContent","isTemplateElement","SecurityContext","ɵɵsanitizeHtml","getSanitizer","HTML","ɵɵsanitizeUrl","unsafeUrl","URL","ɵɵsanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","attachPatchData","throwMultipleComponentError","throwMixedMultiProviderError","classIndexOf","classToSearch","startingIndex","foundIndex","isCssClassMatching","cssClassToMatch","isProjectionMode","isInlineTemplate","hasTagAndTypeMatch","currentSelector","isNodeMatchingSelector","nodeAttrs","nameOnlyMarkerIdx","getNameOnlyMarkerIndex","skipToNextSelector","isPositive","selectorAttrValue","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","bindingsMode","maybeAttrName","matchTemplateAttribute","isNodeMatchingSelectorList","isSelectorInSelectorList","selectorListLoop","currentSelectorInList","maybeWrapInNotSelector","isNegativeMode","stringifyCSSSelector","currentChunk","valueOrMarker","attrValue","NO_CHANGE","getLViewParent","getFirstLContainer","getNearestLContainer","getNextLContainer","ɵɵadvance","delta","selectIndexInternal","toTStylingRange","getTStylingRangePrev","tStylingRange","setTStylingRangePrevDuplicate","getTStylingRangeNext","setTStylingRangeNext","setTStylingRangeNextDuplicate","refreshContentQueries","directiveDefIdx","elementCreate","namespace","createLView","host","tHostNode","rendererFactory","getOrCreateTNode","adjustedIndex","createTNode","createTNodeAtIndex","renderView","executeViewQueryFn","templateFn","executeTemplate","staticContentQueries","staticViewQueries","components","hostLView","renderComponent","renderChildComponents","incompleteFirstPass","refreshView","hooksInitPhaseCompleted","movedViews","movedLView","markTransplantedViewsForRefresh","embeddedLView","embeddedTView","refreshEmbeddedViews","expandoInstructions","expandoStartIndex","instruction","setHostBindingsByExecutingExpandoInstructions","refreshComponent","refreshChildComponents","firstUpdatePass","renderComponentOrTemplate","normalExecutionPath","creationModeIsActive","rf","prevSelectedIndex","executeContentQueries","createDirectivesInstances","initialInputs","isComponent","addComponentLogic","setInputsFromAttrs","instantiateAllDirectives","expando","elementIndex","dirIndex","invokeHostBindingsInCreationMode","invokeDirectivesHostBindings","saveResolvedLocalsInData","viewData","localRefExtractor","localNames","localIndex","getOrCreateTComponentView","createTView","viewIndex","initialViewLength","createViewBlueprint","queries","cleanup","directiveRegistry","pipeRegistry","storeCleanupWithContext","cleanupFn","lCleanup","getLCleanup","getTViewCleanup","tParent","directiveStylingLast","propertyBindings","mergedAttrs","tViews","projectionNext","projection","stylesWithoutHost","residualStyles","classesWithoutHost","residualClasses","classBindings","styleBindings","generatePropertyAliases","inputAliasMap","propStore","internalName","elementPropertyInternal","nativeOnly","dataValue","inputData","setInputsForProperty","childComponentLView","markDirtyIfOnPush","resolveDirectives","localRefs","hasDirectives","registry","markAsComponentHost","findDirectiveDefMatches","exportsMap","totalDirectiveHostVars","initTNodeFlags","generateExpandoInstructionBlock","preOrderHooksFound","preOrderCheckHooksFound","baseResolveDirective","saveNameToExportMap","lifeCycleHooks","addHostBindingsToExpandoInstructions","defs","tNodeAttrs","inputsFromAttrs","inputsStore","outputsStore","directiveInputs","generateInitialInputs","initializeInputAndOutputAliases","growHostVarsSpace","cacheMatchingLocalNames","directiveCount","providerCount","numberOfDirectives","directiveFactory","nodeInjectorFactory","componentView","addToViewTree","initialInputData","inputsToStore","createLContainer","hostNative","componentHostIdx","refreshContainsDirtyView","componentTView","syncViewWithBlueprint","lViewOrLContainer","markViewDirty","detectChangesInternal","handleError","detectChangesInRootView","rootContext","rootComponent","tickRootContext","viewQueryFn","component","CLEAN_PROMISE","ɵ0$4","errorHandler","textBindingInternal","setValue","getLContainer","embeddedView","getContainerRenderParent","tViewNode","nativeParentNode","applyToElementOrContainer","lNodeToHandle","beforeNode","rNode","nativeAppendChild","nativeInsertBefore","isHostElement","nativeParent","nativeRemoveChild","nativeRemoveNode","destroyNode","renderParent","anchor","applyView","applyContainer","createText","addRemoveViewFromContainer","insertMode","detachMovedView","declarationContainer","declarationViewIndex","detachView","removeIndex","indexInContainer","viewToDetach","declarationLContainer","removedLView","lQueries","destroyLView","rootView","cleanUpView","firstView","getParentState","destroyViewTree","toCall","executeOnDestroys","tCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeListeners","destroy","getRenderParent","parentTNode","ShadowDom","Native","nativeAppendOrInsertBefore","getNativeAnchorNode","getBeforeNodeForView","childEl","childTNode","anchorNode","viewIndexInContainer","nextViewIndex","firstTNodeOfView","getFirstNativeNode","tNodeType","elIcuContainerChild","rNodeOrLContainer","componentHost","firstProjectedTNode","applyNodes","isProjection","rawSlotValue","applyProjectionRecursive","applyProjection","tProjectionNode","componentLView","nodeToProjectOrRNodes","writeDirectStyle","newValue","cssText","writeDirectClass","R3ElementRef","R3TemplateRef","R3ViewContainerRef","_cdRefInjectingView","_appRef","_viewContainerRef","checkNoChangesInternal","vcRef","appRef","collectNativeNodes","lNode","lViewInAContainer","lViewFirstChildTNode","slotIdx","nodesInSlot","_view","checkNoChangesInRootView","createElementRef","ElementRefToken","createTemplateRef","TemplateRefToken","_declarationView","_declarationTContainer","elementRef","declarationViewLQueries","createEmbeddedView","createContainerRef","ViewContainerRefToken","_lContainer","_hostTNode","_hostView","templateRef","viewRef","insert","componentFactory","projectableNodes","ngModuleRef","contextInjector","parentInjector","ngModule","componentRef","destroyed","allocateContainerIfNeeded","prevIdx","prevLContainer","prevVCRef","adjustedIdx","_adjustIndex","containerLength","trackMovedView","insertView","attachToViewContainerRef","newIndex","viewRefsArr","detachedView","startTNode","getParentInjectorTNode","commentNode","createComment","nativeNextSibling","createViewRef","isPipe","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","Type","INJECTOR_SCOPE","NOT_YET","CIRCULAR","EMPTY_ARRAY$2","NULL_INJECTOR","getNullInjector","createInjectorWithoutInjectorInstances","defType","additionalProviders","records","Map","injectorDefTypes","Set","_destroyed","dedupStack","provider","processProvider","processInjectorType","set","makeRecord","record","scope","assertNotDestroyed","service","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","nextInjector","defOrWrappedDef","parents","isDuplicate","importTypesWithProviders","imported","defProviders","injectorType","ngModuleType","isTypeProvider","isValueProvider","providerToFactory","providerToRecord","existing","multiRecord","throwCyclicDependencyError","has","paramLength","inheritedInjectableDef","getInheritedInjectableDef","getUndecoratedInjectableFactory","unwrappedProvider","useFactory","deps","useExisting","isExistingProvider","classRef","useClass","ngModuleDetail","providerDetail","throwInvalidProviderError","hasDeps","INJECTOR_IMPL","_resolveInjectorDefTypes","createInjector","Injector","NULL","ANALYZE_FOR_ENTRY_COMPONENTS","computeStaticStyling","writeToHost","_symbolIterator","wrapped","WrappedValue","isWrapped","isListLikeIterable","isJsObject","updateBinding","bindingUpdated","is","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","ɵɵattribute","strValue","elementAttributeInternal","interpolation1","prefix","v0","suffix","interpolation2","i0","v1","ɵɵtemplate","attrsIndex","localRefsIndex","tViewConsts","embeddedTViewNode","templateFirstCreatePass","comment","ɵɵreference","ɵɵdirectiveInject","ɵɵproperty","setDirectiveInputsWhichShadowsStyling","isClassBased","ɵɵelementStart","elementStart","elementStartFirstCreatePass","ɵɵelementEnd","elementEnd","hasClassInput","hasStyleInput","ɵɵelement","ɵɵelementContainerStart","elementContainerStartFirstCreatePass","ɵɵelementContainerEnd","ɵɵgetCurrentView","ɵɵlistener","listenerFn","useCapture","eventTargetResolver","listenerInternal","findExistingListener","tNodeIdx","cleanupEventName","listenerIdxInLCleanup","isTNodeDirectiveHost","processOutputs","resolved","lCleanupIndex","existingListener","lastListenerFn","__ngLastListenerFn__","__ngNextListenerFn__","wrapListener","propsLength","minifiedName","directiveInstance","idx","executeListenerWithErrorHandling","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","nextListenerFn","preventDefault","returnValue","ɵɵnextContext","matchingProjectionSlotIndex","projectionSlots","wildcardNgContentIndex","ngProjectAsAttrVal","ngProjectAsAttrIdx","getProjectAsAttrValue","ɵɵprojectionDef","componentNode","projectionHeads","tails","componentChild","slotIndex","ɵɵprojection","selectorIndex","ɵɵpropertyInterpolate","ɵɵpropertyInterpolate1","ɵɵpropertyInterpolate2","EMPTY_ARRAY$3","markDuplicates","tStylingKey","isPrevDir","isClassBinding","tStylingAtIndex","isMap","cursor","foundDuplicate","tStyleRangeAtCursor","isStylingMatch","tStylingKeyCursor","parserState","textEnd","keyEnd","valueEnd","getLastParsedKey","getLastParsedValue","parseClassNameNext","startIndex","consumeClassToken","consumeWhitespace","parseStyleNext","consumeStyleKey","consumeSeparator","ch1","ch2","ch3","lastChIndex","consumeQuotedText","consumeStyleValue","resetParserState","quoteCharCode","ɵɵstyleProp","checkStylingProperty","ɵɵclassProp","ɵɵstyleMap","checkStylingMap","styleKeyValueArraySet","styleStringParser","parseStyle","classStringParser","parseClassName","stylingFirstUpdatePass","updateStyling","normalizeSuffix","stringParser","hasStylingInputShadow","isInHostBindings","staticPrefix","oldKeyValueArray","newKeyValueArray","oldIndex","oldKey","newKey","setKey","updateStylingMap","styleKeyValueArray","unwrappedValue","toStylingKeyValueArray","isHostBindings","stylingKey","hostDirectiveDef","getCurrentDirectiveDef","residual","collectStylingFromTAttrs","collectStylingFromDirectives","templateStylingKey","bindings","getTemplateHeadTStylingKey","setTemplateHeadTStylingKey","collectResidual","wrapInStaticStylingKey","tStylingKeyWithStatic","isHostBinding","tBindings","tmplHead","tmplTail","isKeyDuplicateOfStatic","previousNode","markDuplicateOfResidualStyling","insertTStylingBinding","currentDirective","desiredMarker","currentMarker","tRange","isStylingValuePresent","findStylingValue","getTStylingRangePrevDuplicate","isProcedural","classList","removeStyle","removeProperty","setStyle","applyStyling","isPrevDirection","rawKey","containsStatics","isStylingMap","valueAtLViewIndex","ɵɵtext","textNative","ɵɵtextInterpolate","ɵɵtextInterpolate1","interpolated","ɵɵtextInterpolate2","ɵɵtextInterpolate3","i1","v2","interpolation3","ɵɵtextInterpolate4","i2","v3","exp4","bindingUpdated4","interpolation4","ɵɵhostProperty","LifecycleHooksFeature","rootTView","ɵɵInheritDefinitionFeature","superType","shouldInheritFields","inheritanceChain","superDef","writeableDef","maybeUnwrapEmpty","superHostBindings","inheritHostBindings","superViewQuery","superContentQueries","inheritViewQuery","inheritContentQueries","animation","defData","mergeHostAttrsAcrossInheritance","prevViewQuery","ctx","prevContentQueries","prevHostBindings","viewProviders","resolveProvider$1","lInjectablesBlueprint","providerFactory","beginIndex","existingFactoryIndex","registerDestroyHooksIfSupported","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","factoryFn","componentProviders","multiFactoryAdd","multiFactory","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","contextIndex","indexInFactory","providerIsTypeProvider","existingCallbacksIndex","isComponentProvider","lData","multiResolve","factories","componentCount","multiProviders","ɵɵProvidersFeature","processProvidersFn","noComponentFactoryError","ComponentFactoryResolver","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","RendererStyleFlags2","Renderer2","SWITCH_RENDERER2_FACTORY","nodeAtIndex","getOrCreateRenderer2","Sanitizer","VERSION","full","major","minor","patch","trackByFn","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","_nextPrevious","_nextAdded","_nextMoved","_nextIdentityChange","collection","check","_reset","itemTrackBy","mayBeDirty","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","_prevRemoved","_insertAfter","put","toIndex","_prevDup","_nextDup","_head","_tail","atOrAfterIndex","duplicates","recordList","delete","moveOffset","_records","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","_addToAdditions","_addToChanges","IterableDiffers","supports","copied","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","componentDef","toRefArray","nonMinified","templateName","SCHEDULER","componentType","isBoundToModule","rootSelectorOrNode","tElementNode","rootViewInjector","createChainedInjector","hostRenderer","elementName","hostRNode","elementOrSelector","selectRootElement","rElement","locateHostElement","getNamespace$1","rootFlags","clean","playerHandler","rootLView","viewRenderer","createRootComponentView","extractAttrsAndClassesFromSelector","nodesforSlot","hostFeatures","rootTNode","instantiateRootComponent","createRootComponent","_rootLView","destroyCbs","changeDetectorRef","u","localeEn","LOCALE_DATA","findLocaleData","locale","normalizedLocale","normalizeLocale","getLocaleData","parentLocale","ng","common","locales","LocaleDataIndex","setLocaleId","localeId","actual","expected","comparison","modules","_parent","_bootstrapComponents","componentFactoryResolver","ngLocaleIdDef","_r3Injector","injectFlags","moduleType","registerNgModuleType","incoming","assertSameOrNotExisting","ɵɵpureFunction1","slotOffset","pureFn","exp","pureFunction1Internal","ɵɵpureFunction2","pureFunction2Internal","getPureFunctionReturnValue","returnValueIndex","lastReturnValue","bindingRoot","ɵɵpipe","pipeName","getPipeDef$1","pipeFactory","pipeInstance","ɵɵpipeBind1","unwrapValue$1","isPure","ɵɵpipeBind2","unwrap","isAsync","__isAsync","generatorOrNext","schedulerFn","errorFn","completeFn","symbolIterator","_results","dirty","changes","symbol","QueryList","init","some","resultsTree","flatten","queryList","LQuery_","setDirty","tQueries","noOfInheritedQueries","viewLQueries","tQuery","getByIndex","indexInDeclarationView","LQueries_","dirtyQueriesWithMatches","getTQuery","descendants","isStatic","read","queriesForTemplateRef","childQueryIndex","tqueryClone","TQueries_","tquery","metadata","crossesNgTemplate","_appliesToNextNode","_declarationNodeIndex","isApplyingToNode","matchTNode","addMatch","TQuery_","declarationNodeIdx","matchTNodeWithReadOption","getIdxOfMatchingSelector","nodeMatchIdx","directiveOrProviderIdx","matchIdx","createResultForNode","matchingIdx","createResultByTNodeType","createSpecialToken","materializeViewResults","queryIndex","lQuery","tViewData","tQueryMatches","matchedNodeIdx","ɵɵqueryRefresh","reset","collectQueryResults","lViewResults","embeddedLViews","notifyOnChanges","ɵɵcontentQuery","descend","track","createTQuery","tViewContentQueries","saveContentQueryAndDirectiveIndex","createLQuery","contentQueryInternal","ɵɵloadQuery","ɵɵtemplateRefExtractor","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","asyncInitPromises","initResult","all","catch","APP_ID","APP_ID_RANDOM_PROVIDER","_randomChar","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","Console","LOCALE_ID$1","DEFAULT_CURRENCY_CODE","ngModuleFactory","componentFactories","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","declaration","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","scheduleMicroTask","Zone","zone","maybeDelayChangeDetection","enableLongStackTrace","shouldCoalesceEventChangeDetection","hasPendingMacrotasks","hasPendingMicrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","lastRequestAnimationFrameId","nativeRequestAnimationFrame","nativeCancelAnimationFrame","unpatchedRequestAnimationFrame","__symbol__","unpatchedCancelAnimationFrame","getNativeRequestAnimationFrame","fakeTopEventTask","scheduleEventTask","updateMicroTaskStatus","checkStable","invoke","delayChangeDetectionForEvents","onInvokeTask","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","onHasTask","hasTaskState","hasTask","change","_hasPendingMicrotasks","microTask","macroTask","onHandleError","runOutsideAngular","run","EMPTY_PAYLOAD","noop$1","runTask","cancelTask","runGuarded","NgZone","isInAngularZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","assertNotInAngularZone","_runCallbacksIfReady","timeoutId","doneCb","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","testability","findInAncestors","findTestabilityInTree","compileNgModuleFactory","moduleFactory","ALLOW_MULTIPLE_PLATFORMS","createPlatform","inits","createPlatformFactory","parentPlatformFactory","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","PlatformRef","_injector","_modules","_destroyListeners","ngZoneOption","ngZoneEventCoalescing","ngZone","ngZoneInjector","moduleRef","exceptionHandler","initStatus","runInitializers","_moduleDoBootstrap","_callAndReportToErrorHandler","compilerOptions","optionsReducer","bootstrapModuleFactory","ngDoBootstrap","listener","objs","ApplicationRef","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","stableSub","unstableSub","assertInAngularZone","subjectOrSubjectFactory","componentOrFactory","resolveComponentFactory","compRef","_unloadComponent","registerApplication","_loadComponent","detectChanges","checkNoChanges","attachToAppRef","detachFromAppRef","attachView","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","_config","loadAndCompile","exportName","checkNotEmpty","factoryClassSuffix","modulePath","platformCore","APPLICATION_MODULE_PROVIDERS","$localize","ApplicationModule","_DOM","getDOM","PlatformLocation","useBrowserPlatformLocation","LOCATION_INITIALIZED","BrowserPlatformLocation","_doc","_init","getLocation","_history","getHistory","getBaseHref","getGlobalEventTarget","supportsState","pushState","hash","replaceState","forward","back","hostname","port","pathname","newPath","search","createBrowserPlatformLocation","history","joinWithSlash","slashes","stripTrailingSlash","pathEndIdx","normalizeQueryParams","LocationStrategy","provideLocationStrategy","platformLocation","APP_BASE_HREF","PathLocationStrategy","_platformLocation","getBaseHrefFromDOM","_baseHref","onPopState","onHashChange","internal","includeHash","queryParams","externalUrl","prepareExternalUrl","HashLocationStrategy","Location","platformStrategy","_urlChangeListeners","_platformStrategy","browserBaseHref","_stripIndexHtml","ev","normalize","getState","baseHref","_stripBaseHref","_notifyUrlChangeListeners","_urlChangeSubscription","onNext","onThrow","onReturn","createLocation","Plural","FormStyle","TranslationWidth","FormatWidth","NumberSymbol","getLocaleDateFormat","getLastDefinedValue","DateFormat","getLocaleTimeFormat","TimeFormat","getLocaleDateTimeFormat","DateTimeFormat","getLocaleNumberSymbol","NumberSymbols","CurrencyDecimal","Decimal","CurrencyGroup","Group","checkFullData","ExtraData","LocaleId","extractTime","hours","minutes","ISO8601_DATE_REGEX","NAMED_FORMATS","DATE_FORMATS_SPLIT","ZoneWidth","DateType","TranslationType","formatDate","format","timezone","date","isDate","parsedNb","tzHour","tzMin","dateSetter","setUTCFullYear","setFullYear","timeSetter","setUTCHours","setHours","h","isoStringToDate","toDate","getNamedFormat","formatValue","Short","Medium","Long","Full","shortTime","shortDate","formatDateTime","mediumTime","mediumDate","longTime","longDate","fullTime","fullDate","part","dateTimezoneOffset","getTimezoneOffset","timezoneToOffset","getTime","setMinutes","getMinutes","addDateMinutes","convertTimezoneToLocal","dateFormatter","DATE_FORMATS","formatter","dateStrGetter","Eras","Abbreviated","Wide","Narrow","dateGetter","FullYear","Month","Months","Standalone","weekGetter","Days","DayPeriods","Format","Hours","Minutes","Seconds","FractionalSeconds","timeZoneGetter","Extended","ShortGMT","getDateFormatter","opt_values","padNumber","minusSign","negWrap","neg","strNum","formatFractionalSeconds","milliseconds","getDatePart","localeMinus","MinusSign","getFullYear","getMonth","getDate","getHours","getSeconds","getMilliseconds","Day","getDay","form","extended","getDateTranslation","formStyle","months","MonthsFormat","MonthsStandalone","getLocaleMonthNames","days","DaysFormat","DaysStandalone","getLocaleDayNames","currentHours","currentMinutes","getLocaleExtraDayPeriodRules","dayPeriods","getLocaleExtraDayPeriods","afterFrom","beforeTo","amPm","DayPeriodsFormat","DayPeriodsStandalone","getLocaleDayPeriods","getLocaleEraNames","getFirstThursdayOfYear","year","firstDayOfYear","THURSDAY","getThursdayThisWeek","datetime","monthBased","nbDaysBefore1stDayOfMonth","today","firstThurs","diff","requestedTimezoneOffset","valueOf","NgLocaleLocalization","PluralCase","Zero","One","Two","Few","Many","parseCookieValue","cookieStr","encodeURIComponent","cookie","eqIndex","cookieValue","NgClass","_iterableDiffers","_keyValueDiffers","_ngEl","_renderer","_iterableDiffer","_keyValueDiffer","_initialClasses","_rawClass","iterableChanges","_applyIterableChanges","keyValueChanges","_applyKeyValueChanges","forEachAddedItem","_toggleClass","forEachChangedItem","forEachRemovedItem","rawClassVal","klass","enabled","_removeClasses","_applyClasses","ngClass","$implicit","ngForOf","even","NgForOf","_viewContainer","_template","_differs","_ngForOf","_ngForOfDirty","_differ","ngForTrackBy","_applyChanges","insertTuples","forEachOperation","adjustedPreviousIndex","tuple","_perViewChange","ilen","forEachIdentityChange","ngForTemplate","NgIf","_thenTemplateRef","_elseTemplateRef","_thenViewRef","_elseViewRef","condition","ngIf","_updateView","assertTemplate","ngIfThen","ngIfElse","invalidPipeArgumentError","DatePipe","CommonModule","ViewportScroller","supportsScrolling","scrollX","scrollY","scrollTo","elSelected","getElementById","getElementsByName","scrollToElement","scrollRestoration","supportScrollRestoration","rect","pageXOffset","pageYOffset","scrollRestorationDescriptor","getScrollRestorationProperty","urlParsingNode","groupEnd","evt","dispatchEvent","doc","getDefaultDocument","DocumentFragment","baseElement","navigator","userAgent","performance","adapter","BrowserDomAdapter","TRANSITION_ID","SERVER_TRANSITION_PROVIDERS","transitionId","dom","getAllTestabilities","getAllRootElements","testabilities","didWork","decrement","didWork_","whenStable","getTestability","isShadowRoot","parentElement","getter","BrowserGetTestability","EVENT_MANAGER_PLUGINS","EventManager","_eventNameToPlugin","manager","_plugins","_findPluginFor","addGlobalEventListener","SharedStylesHost","_stylesSet","additions","onStylesAdded","DomSharedStylesHost","_hostNodes","_styleNodes","head","styleEl","hostNode","_addStylesToHost","styleNode","NAMESPACE_URIS","COMPONENT_REGEX","HOST_ATTR","CONTENT_ATTR","flattenStyles","compId","decoratePreventDefault","eventHandler","DomRendererFactory2","eventManager","sharedStylesHost","appId","rendererByCompId","defaultRenderer","applyToHost","addStyles","newChild","refChild","oldChild","selectorOrNode","preserveContent","namespaceUri","removeAttributeNS","DashCase","Important","contentAttr","hostAttr","componentShortId","shimHostAttribute","hostEl","shadowRoot","attachShadow","createShadowRoot","addHost","removeHost","nodeOrShadowRoot","DomEventsPlugin","MODIFIER_KEYS","_keyMap","_chromeNumKeyPadMap","MODIFIER_KEY_GETTERS","altKey","ctrlKey","metaKey","shiftKey","KeyEventsPlugin","parseEventName","parsedEvent","outsideHandler","eventCallback","getZone","onAndCancel","domEventName","_normalizeKey","fullKey","modifierName","keyIdentifier","getEventKey","modifierGetter","getEventFullKey","keyName","DomSanitizer","DomSanitizerImpl","STYLE","SCRIPT","platformBrowser","makeCurrent","BROWSER_MODULE_PROVIDERS","BrowserModule","parentModule","createTitle","Title","newTitle","NG_VALUE_ACCESSOR","CHECKBOX_VALUE_ACCESSOR","CheckboxControlValueAccessor","_elementRef","onChange","onTouched","isDisabled","$event","DEFAULT_VALUE_ACCESSOR","COMPOSITION_BUFFER_MODE","DefaultValueAccessor","_compositionMode","_composing","getUserAgent","_handleInput","_compositionStart","_compositionEnd","AbstractControlDirective","control","errorCode","getError","valid","invalid","disabled","pristine","touched","status","untouched","statusChanges","valueChanges","ControlContainer","ɵControlContainer_BaseFactory","unimplemented","valueAccessor","_rawValidators","_rawAsyncValidators","cd","_cd","NgControlStatus","ngClassUntouched","ngClassTouched","ngClassPristine","ngClassDirty","ngClassValid","ngClassInvalid","ngClassPending","NgControlStatusGroup","isEmptyInputValue","hasValidLength","NG_VALIDATORS","NG_ASYNC_VALIDATORS","EMAIL_REGEXP","regexStr","Validators","nullValidator","validators","presentValidators","isPresent","mergeErrors","executeValidators","toObservable","r","arrayOfErrors","validator","normalizeValidators","validate","isValidatorFn","NUMBER_VALUE_ACCESSOR","NumberValueAccessor","RADIO_VALUE_ACCESSOR","RadioControlRegistry","_accessors","accessor","_isSameGroup","fireUncheck","controlPair","_control","RadioControlValueAccessor","_registry","_checkName","_state","_fn","select","writeValue","formControlName","_throwNameError","RANGE_VALUE_ACCESSOR","RangeValueAccessor","FormErrorExamples","SELECT_VALUE_ACCESSOR","_buildValueString","SelectControlValueAccessor","_optionMap","_idCounter","_compareWith","_getOptionId","valueString","_getOptionValue","_extractId","compareWith","NgSelectOption","_element","_select","_registerOption","_setElementValue","ngValue","SELECT_MULTIPLE_VALUE_ACCESSOR","_buildValueString$1","SelectMultipleControlValueAccessor","optionSelectedStateSetter","ids","_setSelected","selected","selectedOptions","_extractId$1","ɵNgSelectMultipleOption","controlPath","setUpControl","compose","asyncValidator","composeAsync","registerOnChange","_pendingValue","_pendingChange","_pendingDirty","updateOn","updateControl","setUpViewChangePipeline","emitModelEvent","viewToModelUpdate","setUpModelChangePipeline","registerOnTouched","_pendingTouched","markAsTouched","setUpBlurPipeline","setDisabledState","registerOnDisabledChange","registerOnValidatorChange","updateValueAndValidity","markAsDirty","emitModelToViewChange","messageEnd","composeValidators","composeAsyncValidators","BUILTIN_ACCESSORS","coerceToValidator","validatorOrOpts","isOptionsObj","coerceToAsyncValidator","origAsyncValidator","asyncValidators","_onCollectionChange","_onDisabledChange","newValidator","onlySelf","_forEachChild","markAllAsTouched","markAsUntouched","_updateTouched","markAsPristine","_updatePristine","emitEvent","markAsPending","skipPristineCheck","_parentMarkedDirty","disable","_updateValue","_updateAncestors","changeFn","enable","_setInitialStatus","_cancelExistingSubscription","_runValidator","_calculateStatus","_runAsyncValidator","ctrl","_updateTreeValidity","_allControlsDisabled","_asyncValidationSubscription","setErrors","_updateControlsErrors","delimiter","controlToFind","controls","at","_find","_anyControlsHaveStatus","_anyControls","_anyControlsDirty","_anyControlsTouched","formState","_updateOn","_onChange","_applyFormState","_setUpdateStrategy","_initObservables","emitViewToModelChange","_isBoxedValue","_setUpControls","setParent","_registerOnCollectionChange","registerControl","controlName","_checkAllValuesPresent","_throwIfControlMissing","patchValue","_reduceChildren","acc","getRawValue","subtreeUpdated","updated","_syncPendingControls","_reduceValue","initValue","_registerControl","formDirectiveProvider","resolvedPromise","NgForm","submitted","_directives","ngSubmit","_findContainer","removeControl","setUpFormContainer","resetForm","onSubmit","onReset","AbstractFormGroupDirective","_checkParentType","formDirective","addFormGroup","removeFormGroup","getFormGroup","_validators","_asyncValidators","ɵAbstractFormGroupDirective_BaseFactory","modelGroupProvider","NgModelGroup","modelGroupParentException","formControlBinding","resolvedPromise$1","NgModel","valueAccessors","_registered","defaultAccessor","builtinAccessor","customAccessor","selectValueAccessor","_checkForErrors","_setUpControl","_updateDisabled","viewModel","isFirstChange","isPropertyUpdated","model","_isStandalone","_setUpStandalone","addControl","standalone","formGroupNameException","modelParentException","missingNameException","disabledValue","ɵNgNoValidate","ɵInternalFormsSharedModule","FormsModule","concatMap","headers","normalizedNames","lazyUpdate","lazyInit","maybeSetNormalizedName","op","lcName","HttpHeaders","copyFrom","applyUpdate","other","toDelete","standardEncoding","paramParser","rawParams","codec","param","eqIdx","decodeKey","decodeValue","updates","cloneFrom","encoder","fromString","fromObject","eKey","encodeKey","encodeValue","HttpParams","isArrayBuffer","ArrayBuffer","isBlob","Blob","isFormData","FormData","method","third","fourth","reportProgress","withCredentials","responseType","mightHaveBody","urlWithParams","qIdx","setHeaders","setParams","HttpRequest","HttpEventType","defaultStatus","defaultStatusText","statusText","ok","ResponseHeader","HttpHeaderResponse","HttpResponse","addBody","HttpClient","req","events$","res$","request","callbackParam","interceptor","intercept","HTTP_INTERCEPTORS","NoopInterceptor","XSSI_PREFIX","BrowserXhr","XMLHttpRequest","HttpXhrBackend","xhrFactory","xhr","build","setRequestHeader","detectedType","detectContentTypeHeader","reqBody","serializeBody","headerResponse","partialFromXhr","getAllResponseHeaders","responseURL","getResponseHeader","getResponseUrl","onLoad","responseText","originalBody","sentHeaders","onDownProgress","progressEvent","DownloadProgress","loaded","lengthComputable","partialText","onUpProgress","progress","UploadProgress","upload","send","Sent","readyState","DONE","abort","XSRF_COOKIE_NAME","XSRF_HEADER_NAME","HttpXsrfCookieExtractor","cookieName","lastCookieString","parseCount","cookieString","HttpXsrfInterceptor","tokenService","headerName","lcUrl","getToken","HttpInterceptingHandler","backend","chain","interceptors","reduceRight","HttpClientXsrfModule","HttpClientModule","withOptions","takeLast","ring","throwIfEmpty","errorFactory","defaultErrorFactory","defaultIfEmpty","defaultValue","isEmpty","catchError","caught","err2","_unsubscribeAndRecycle","innerSubscribe","take","hasDefaultValue","tap","_tapNext","_tapError","_tapComplete","everyValueMatch","switchMap","startWith","accumulator","seed","hasSeed","_seed","navigationTrigger","restoredState","urlAfterRedirects","reason","shouldActivate","route","snapshot","routeConfig","routerEvent","convertToParamMap","navigationCancelingError","defaultUrlMatcher","segmentGroup","pathMatch","hasChildren","posParams","consumed","shallowEqual","k1","k2","equalArraysOrString","aItem","wrapIntoObservable","containsTree","containee","exact","equalQueryParams","equalSegmentGroups","equalPath","numberOfChildren","containsQueryParams","containsSegmentGroup","containsSegmentGroupHelper","containeePaths","fragment","DEFAULT_SERIALIZER","_queryParamMap","serializePaths","serializePath","_parameterMap","as","bs","mapChildrenIntoArray","childOutlet","parseRootSegment","parseQueryParams","parseFragment","tree","strParams","serializeSegment","primary","encodeUriQuery","encodeUriString","encodeUriSegment","decode","decodeQuery","SEGMENT_RE","matchSegments","QUERY_PARAM_RE","QUERY_PARAM_VALUE_RE","remaining","consumeOptional","peekStartsWith","parseChildren","parseQueryParam","parseSegment","capture","parseParens","parseMatrixParams","parseParam","valueMatch","matchUrlQueryParamValue","decodedKey","decodedVal","currentVal","allowPrimary","outletName","_root","pathFromRoot","findNode","findPath","cc","nodeChildrenAsMap","outlet","setRouterState","createEmptyState","urlTree","activated","createEmptyStateSnapshot","emptyUrl","emptyParams","emptyData","emptyQueryParams","futureSnapshot","_futureSnapshot","_routerState","_paramMap","inheritedParamsDataResolve","paramsInheritanceStrategy","inheritingStartingFrom","flattenInherited","_resolvedData","urlSegment","lastPathIndex","_urlSegment","_lastPathIndex","_resolve","serializeNode","advanceActivatedRoute","currentSnapshot","nextSnapshot","shallowEqualArrays","equalParamsAndUrlSegments","commands","nav","numberOfDoubleDots","isAbsolute","cmd","cmdIdx","outlets","segmentPath","urlPart","partIndex","computeNavigation","toRoot","startingPosition","modifier","isMatrixParams","g","ci","dd","createPositionApplyingDoubleDots","findStartingPosition","processChildren","updateSegmentGroupChildren","updateSegmentGroup","oldSegmentGroup","newSegmentGroup","qp","replaceSegment","oldSegment","newSegment","cmdWithOutlet","getPath","currentCommandIndex","currentPathIndex","noMatch","pathIndex","commandIndex","prefixedWith","slicedCommands","createNewSegmentGroup","getOutlets","createNewSegmentChildren","routeReuseStrategy","futureState","currState","forwardEvent","parentContexts","futureRoot","currRoot","deactivateChildRoutes","activateChildRoutes","futureNode","currNode","contexts","futureChild","childOutletName","deactivateRoutes","childName","deactivateRouteAndItsChildren","parentContext","future","getContext","shouldDetach","detachAndStoreRouteSubtree","deactivateRouteAndOutlet","onOutletDeactivated","deactivate","activateRoutes","getOrCreateContext","shouldAttach","stored","retrieve","onOutletReAttached","attachRef","attach","advanceActivatedRouteNodeAndItsChildren","_loadedConfig","parentLoadedConfig","cmpFactoryResolver","resolver","activateWith","routes","isUrlTree","absoluteRedirect","newTree","namedOutletsRedirect","redirectTo","configLoader","urlSerializer","allowRedirects","expandSegmentGroup","rootSegmentGroup","createUrlTree","noMatchError","rootCandidate","expandChildren","expandSegment","waitHead","waitTail","mapped","waitForMap","expandSegmentAgainstRoute","noLeftoversInUrl","getOutlet","matchSegmentAgainstRoute","expandSegmentAgainstRouteUsingRedirect","expandWildCardWithParamsAgainstRouteUsingRedirect","expandRegularSegmentAgainstRouteUsingRedirect","applyRedirectCommands","lineralizeSegments","newSegments","consumedSegments","lastChild","positionalParamSegments","rawSegmentGroup","loadChildren","load","cfg","rawSlicedSegments","getChildConfig","routerConfig","childModule","childConfig","slicedSegments","isEmptyPathRedirect","containsEmptyPathRedirectsWithNamedOutlets","mergeTrivialChildren","primarySegmentGroup","createChildrenForEmptySegments","containsEmptyPathRedirects","addEmptySegmentsToChildrenIfNeeded","cs","runCanLoadGuards","shouldLoadResult","canLoadFails","canLoad","injectionToken","guardVal","guard","isCanLoad","applyRedirectCreatreUrlTree","newRoot","createSegmentGroup","createQueryParams","redirectToParams","actualParams","sourceName","updatedSegments","createSegments","redirectToSegments","actualSegments","findPosParam","findOrReturn","redirectToUrlSegment","getClosestLoadedConfig","getChildRouteGuards","futurePath","checks","canDeactivateChecks","canActivateChecks","prevChildren","getRouteGuards","shouldRun","shouldRunGuardsAndResolvers","runGuardsAndResolvers","isActivated","INITIAL_VALUE","prioritizedGuardValue","scan","isPending","innerAcc","fireActivationStart","fireChildActivationStart","runCanActivate","futureRSS","futureARS","canActivate","canActivateObservables","isCanActivate","runCanActivateChild","canActivateChildGuardsMapped","canActivateChild","guards","getCanActivateChild","guardsMapped","isCanActivateChild","rootComponentType","relativeLinkResolution","split$1","processSegmentGroup","routeState","inheritParamsAndData","routeNode","processSegment","routeWithSameOutletName","nodes","localeCompare","sortActivatedRouteSnapshots","processSegmentAgainstRoute","rawSegment","getData","getSourceSegmentGroup","getPathIndexShift","getResolve","match$1","_sourceSegment","_segmentIndexShift","emptyPathMatch","getOutlet$1","containsEmptyPathMatchesWithNamedOutlets","primarySegment","createChildrenForEmptyPaths","containsEmptyPathMatches","addEmptyPathsToChildrenIfNeeded","switchTap","nextResult","detachedTree","ɵEmptyOutletComponent","validateConfig","parentPath","fullPath","getFullPath","currentRoute","standardizeConfig","ROUTES","loader","compiler","onLoadStartListener","onLoadEndListener","loadModuleFactory","newUrlPart","wholeUrl","defaultErrorHandler","defaultMalformedUriErrorHandler","defaultRouterHook","runExtras","Router","rootContexts","lastSuccessfulNavigation","currentNavigation","navigationId","isNgZoneEnabled","events","malformedUriErrorHandler","navigated","lastSuccessfulId","beforePreactivation","afterPreactivation","urlHandlingStrategy","onSameUrlNavigation","urlUpdateStrategy","resetConfig","currentUrlTree","rawUrlTree","browserUrlTree","triggerEvent","routerState","transitions","currentRawUrl","extractedUrl","extract","rawUrl","extras","targetSnapshot","currentRouterState","targetRouterState","guardsResult","navigations","setupNavigations","processNavigations","eventsSubject","initialUrl","trigger","previousNavigation","urlTransition","shouldProcessUrl","transition","serializeUrl","applyRedirects","finalUrl","serializer","recognize","recognize$1","skipLocationChange","setBrowserUrl","replaceUrl","routesRecognized","navStart","appliedUrlTree","guardsStart","currRSS","currARS","canDeactivate","canDeactivateObservables","isCanDeactivate","runCanDeactivate","runCanDeactivateChecks","runCanActivateChecks","checkGuards","guardsEnd","resetUrlToCurrentUrlTree","navCancel","resolveStart","dataResolved","canActivateChecksResolved","getResolver","resolveNode","resolvedData","runResolve","resolveEnd","prevState","createNode","shouldReuseRoute","createOrReuseChildren","detachedRouteHandle","setFutureSnapshotsOfActivatedRoutes","activate","redirecting","resetStateAndUrl","mergedTree","scheduleNavigation","navError","ee","getTransition","setUpLocationChangeListener","navigateByUrl","locationSubscription","parseUrl","dispose","navigationExtras","relativeTo","preserveQueryParams","queryParamsHandling","preserveFragment","removeEmptyProps","validateCommands","priorPromise","lastNavigation","setTransition","isCurrentPathEqualTo","go","storedState","storedUrl","RouterLinkWithHref","router","locationStrategy","onChanges","updateTargetUrlAndHref","button","attrBoolValue","preserve","onClick","routerLink","RouterOutlet","changeDetector","_activatedRoute","activateEvents","deactivateEvents","onChildOutletCreated","onChildOutletDestroyed","cmp","ref","activatedRoute","childContexts","createComponent","markForCheck","attrNameToInject","attrsLength","injectAttributeImpl","RouterPreloader","moduleLoader","preloadingStrategy","preload","processRoutes","preloadConfig","RouterScroller","viewportScroller","lastId","lastSource","restoredId","scrollPositionRestoration","anchorScrolling","setHistoryScrollRestoration","routerEventsSubscription","createScrollEvents","scrollEventsSubscription","consumeScrollEvents","getScrollPosition","scheduleScrollEvent","scrollToPosition","scrollToAnchor","ROUTER_CONFIGURATION","ROUTER_FORROOT_GUARD","ROUTER_PROVIDERS","enableTracing","logGroup","logGroupEnd","routerNgProbeToken","RouterModule","provideRoutes","provideForRootGuard","createRouterScroller","getAppInitializer","ROUTER_INITIALIZER","getBootstrapListener","scrollOffset","setOffset","platformLocationStrategy","useHash","RouterInitializer","initNavigation","resultOfPreactivationDone","isLegacyDisabled","isLegacyEnabled","initialNavigation","bootstrappedComponentRef","preloader","routerScroller","setUpPreloading","resetRootComponentType","appInitializer","bootstrapListener","coerceBooleanProperty","_isNumberValue","coerceElement","elementOrRef","audit","durationSelector","throttled","duration","clearThrottle","auditTime","takeUntil","notifier","hasV8BreakIterator","takeUntilSubscriber","notifierSubscription","seenValue","Intl","v8BreakIterator","supportsPassiveEvents","shadowDomIsSupported","Platform","_platformId","isBrowser","EDGE","TRIDENT","BLINK","chrome","CSS","WEBKIT","IOS","FIREFOX","ANDROID","SAFARI","normalizePassiveListenerOptions","supportsPassiveEventListeners","DIR_DOCUMENT","Directionality","_document","documentElement","ScrollDispatcher","_platform","_scrolled","_globalSubscription","_scrolledCount","scrollContainers","scrollable","elementScrolled","scrollableReference","auditTimeInMs","_addGlobalListener","_removeGlobalListener","deregister","ancestors","getAncestorScrollContainers","scrolled","scrollingContainers","_subscription","_scrollableContainsElement","_getDocument","defaultView","scrollableElement","getElementRef","_getWindow","ViewportRuler","_change","_changeListener","_updateViewportSize","_viewportSize","scrollPosition","getViewportScrollPosition","getViewportSize","documentRect","scrollTop","scrollLeft","throttleTime","innerWidth","innerHeight","CdkScrollableModule","extendStyles","dest","toggleNativeDragInteractions","userSelect","touchAction","webkitUserDrag","webkitTapHighlightColor","msUserSelect","webkitUserSelect","MozUserSelect","parseCssTimeUnitsToMs","multiplier","parseCssPropertyValue","computedStyle","getPropertyValue","getMutableClientRect","clientRect","isInsideClientRect","adjustClientRect","isPointerNearClientRect","threshold","pointerX","pointerY","xThreshold","yThreshold","_viewportRuler","cachedPosition","newTop","newLeft","scrolledParentNode","viewportScrollPosition","topDifference","leftDifference","deepCloneNode","cloneNode","descendantsWithId","transferCanvasData","transferInputData","transferData","descendantElements","cloneElements","drawImage","passiveEventListenerOptions","passive","activeEventListenerOptions","_dragDropRegistry","_passiveTransform","_activeTransform","_moveEvents","_pointerMoveSubscription","_pointerUpSubscription","_scrollSubscription","_resizeSubscription","_boundaryElement","_nativeInteractionsEnabled","_handles","_disabledHandles","_direction","dragStartDelay","_disabled","beforeStarted","started","released","ended","entered","exited","dropped","moved","asObservable","_pointerDown","targetHandle","_initializeDragSequence","_rootElement","_pointerMove","pointerPosition","_getPointerPositionOnPage","_hasStartedDragging","_previewRect","_preview","constrainedPointerPosition","_getConstrainedPointerPosition","_hasMoved","_lastKnownPointerPosition","_updatePointerDirectionDelta","_dropContainer","_updateActiveDropContainer","activeTransform","_pickupPositionOnPage","_applyRootElementTransform","appliedTransform","distance","_getDragDistance","_pointerDirectionDelta","dragStartThreshold","_dragStartTime","_getDragStartDelay","_endDragSequence","isDragging","_startDragSequence","_pointerUp","withRootElement","_parentPositions","registerDragItem","_placeholder","getPlaceholderElement","getRootElement","handles","_toggleNativeDragInteractions","_previewTemplate","_placeholderTemplate","rootElement","_removeRootElementListeners","_initialTransform","_ownerSVGElement","ownerSVGElement","boundaryElement","_containInsideBoundaryOnResize","_anchor","_destroyPreview","_destroyPlaceholder","removeDragItem","_removeSubscriptions","_previewRef","_placeholderRef","stopDragging","_rootElementTapHighlight","_stopScrolling","_animatePreviewToPlaceholder","_cleanupDragArtifacts","_cleanupCachedDimensions","isTouchEvent","_lastTouchEventTime","documentRef","dropContainer","preview","_createPreviewElement","placeholder","_createPlaceholderElement","display","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","_initialContainer","_initialIndex","getItemIndex","cache","getScrollableParents","referenceElement","stopPropagation","isTouchSequence","isAuxiliaryMouseButton","isSyntheticEvent","draggable","pointerMove","pointerUp","scroll","scrollEvent","_updateOnScroll","_boundaryRect","previewTemplate","_pickupPositionInElement","matchSize","_getPointerPositionInElement","_pointerPositionAtLastDirectionChange","startDragging","isPointerOverContainer","_isOverContainer","previousContainer","drop","rawX","rawY","newContainer","_getSiblingContainerFromPosition","exit","enter","sortingDisabled","_startScrollingIfNecessary","_sortItem","getTransform","previewConfig","previewClass","rootRect","viewContainer","getRootNode","matchElementSize","pointerEvents","margin","zIndex","placeholderRect","getComputedStyle","transitionedProperties","propertyIndex","rawDurations","rawDelays","getTransformTransitionDurationInMs","propertyName","placeholderConfig","placeholderTemplate","elementRect","handleElement","referenceRect","targetTouches","_getViewportScrollPosition","pageX","pageY","touches","changedTouches","svgMatrix","getScreenCTM","svgPoint","createSVGPoint","matrixTransform","inverse","dropContainerLock","lockAxis","constrainPosition","pickupX","pickupY","boundaryRect","previewRect","minY","maxY","clamp","pointerPositionOnPage","positionSinceLastChange","changeX","changeY","pointerDirectionChangeThreshold","shouldEnable","currentPosition","pickupPosition","leftOverflow","rightOverflow","topOverflow","bottomOverflow","setFreeDragPosition","touch","mouse","scrollDifference","handleScroll","rootNodes","wrapper","sourceRect","moveItemInArray","fromIndex","clamp$1","transferArrayItem","currentArray","targetArray","targetIndex","autoScrollDisabled","enterPredicate","sorted","_isDragging","_itemPositions","_previousSwap","drag","overlaps","_siblings","_orientation","_activeSiblings","_viewportScrollSubscription","_verticalScrollDirection","_horizontalScrollDirection","_stopScrollTimers","_cachedShadowRoot","_startScrollInterval","_scrollNode","incrementVerticalScroll","incrementHorizontalScroll","withScrollableParents","registerDropContainer","removeDropContainer","_initialScrollSnap","msScrollSnapType","scrollSnapType","_cacheItems","sibling","_startReceiving","_listenToScrollEvents","_draggables","_getItemIndexFromPointerPosition","activeDraggables","_activeDraggables","newPositionReference","_shouldEnterAsFirstChild","reference","_cacheItemPositions","_cacheParentPositions","previousItems","_withDropContainer","orientation","_scrollableElements","currentItem","pointerDelta","_clientRect","siblings","isHorizontal","siblingAtNewPosition","newPosition","itemOffset","_getItemOffsetPx","siblingOffset","_getSiblingOffsetPx","oldOrder","isDraggedItem","elementToOffset","scrollNode","verticalScrollDirection","horizontalScrollDirection","computedVertical","getVerticalScrollDirection","computedHorizontal","getHorizontalScrollDirection","scrollHeight","clientHeight","scrollWidth","clientWidth","getElementScrollDirections","elementToMeasure","getVisibleElement","_stopReceiving","immediateSibling","itemPositions","lastItemRect","firstItemRect","_canReceive","elementFromPoint","_getShadowRoot","activeSiblings","_sortFromLastPointerPosition","isReceiving","_supportsShadowDom","ShadowRoot","scrollBy","activeCapturingEventOptions","DragDropRegistry","_dropInstances","_dragInstances","_activeDragInstances","_globalListeners","_preventDefaultWhileDragging","upEvent","_clearGlobalListeners","DragDrop","CDK_DROP_LIST_GROUP","CdkDropListGroup","_items","CDK_DRAG_CONFIG","_uniqueIdCounter","CDK_DROP_LIST","CdkDropList","dragDrop","_changeDetectorRef","_dir","_group","_scrollDispatcher","connectedTo","_unsortedItems","_dropListRef","createDropList","_assignDefaults","_setupInputSyncSubscription","_handleEvents","_dropLists","_syncItemsWithRef","_dragRef","DOCUMENT_POSITION_FOLLOWING","withDirection","correspondingDropList","_scrollableParentsResolved","scrollableParents","withOrientation","draggingDisabled","listAutoScrollDisabled","listOrientation","withItems","getSortedItems","CDK_DRAG_PARENT","CDK_DRAG_HANDLE","CdkDragHandle","parentDrag","_stateChanges","_parentDrag","CDK_DRAG_PLACEHOLDER","CDK_DRAG_PREVIEW","CdkDrag","_selfHandle","movedEvent","createDrag","addItem","_syncInputs","getFreeDragPosition","_updateRootElement","childHandleElements","rootElementSelector","withHandles","handleInstance","dragRef","disableHandle","enableHandle","freeDragPosition","rootSelectorChange","positionChange","removeItem","getClosestMatchingAncestor","boundary","fallbackValue","coerceNumberProperty","withBoundaryElement","_getBoundaryElement","withPlaceholderTemplate","withPreviewTemplate","_t","currentElement","msMatchesSelector","DragDropModule","timestamp","filename","diskfilename","user_id","task_id","ActionTrigger","ActionType","source_id","change_to","board_id","MovedToColumn","SetColor","default_task_color","is_edited","default_board_id","email","last_login","security_level","user_option_id","username","board_access","collapsed","isAdmin","isBoardAdmin","isAnyAdmin","color","due_date","points","column_id","commentArray","attachmentArray","assigneeArray","categoryArray","comments","attachments","assignees","categories","Comment","attachment","Attachment","user","User","category","Category","task_limit","ownTask","tasks","ownComment","ownAttachment","sharedUser","sharedCategory","hasTaskLimit","is_active","columnArray","actionsArray","trackerArray","userArray","columns","auto_actions","issue_trackers","users","column","convertColumn","convertCategory","AutoAction","tracker","IssueTracker","addColumn","addCategory","addIssueTracker","new_tasks_at_bottom","show_animations","show_assignee","multiple_tasks_per_row","extendStatics","__extends","__","__assign","__awaiter","_arguments","P","generator","fulfilled","rejected","__generator","sent","trys","ops","verb","__values","strat","apiBase","ApiService","Constants","http","strings","stringsChanged","loadStrings","StringsService","constants","activeUser","userChanged","updateUser","userOpts","convertOpts","authenticate","isLogin","attemptedRoute","post","login","password","remember","json","logout","UserOptions","AuthService","authService","AuthGuard","menus","closeAllMenus","registerMenu","newMenu","menu","isOpen","ContextMenuService","auth","modals","registerModal","newModal","modal","modall","modalId","focusElement","focus","checkBlocking","blocking","ModalService","notifications","noteAdded","NotificationsService","checkCounts","activeBoard","showTaskId","activeBoardChanged","showTaskIdChanged","defaultCallback","initMarked","showTask","convertMarkdown","markdown","doCount","retVal","counts","updateActiveBoard","board","convertBoardData","newBoard","getBoards","toggleCollapsed","userId","columnId","updateBoard","updateColumn","addTask","updateTask","removeTask","taskId","getTaskActivity","addComment","updateComment","removeComment","commentId","addAttachment","uploadAttachment","removeAttachment","boardData","ownColumn","ownCategory","ownAutoAction","ownIssuetracker","isChecked","BoardService","notes","stringsService","pageName","showButtons","newStrings","alert","alerts","navigate","isActive","navigateTo","TopNavComponent","menuService","oncontextmenu","parentEventHandler","updatePosition","firstElementChild","offsetX","offsetY","ContextMenuComponent","onclick","isSeparator","isCustomEvent","killEvent","ContextMenuItemComponent","modalService","modalTitle","wide","filterClick","keyup","clickDefaultAction","defaultActionElement","click","ModalComponent","pureFunction3Internal","boardService","markedCallback","replacements","onUpdateBoards","percentComplete","subs","checkDueDate","convertTaskDescription","getPercentStyle","bypassSecurityTrustStyle","getPercentTitle","boards_task","toFixed","boards_taskComplete","getTextColor","changeTaskColumn","taskData","note","copyTaskToBoard","boards_copyTaskTo","newBoardId","boardsList","boards_taskCopied","moveTaskToBoard","boards_moveTaskTo","boards_taskMoved","bypassSecurityTrustHtml","dueDate","timeDiff","daysDiff","isOverdue","isNearlyDue","TaskDisplayComponent","viewTask","editTask","getShowViewModalFunction","getRemoveTaskFunction","elRef","templateElement","collapseTasks","commentOrder","sortOption","MODAL_ID","MODAL_VIEW_ID","MODAL_CONFIRM_ID","MODAL_CONFIRM_ATTACHMENT_ID","MODAL_CONFIRM_COMMENT_ID","quickAdd","modalProps","viewModalProps","columnData","showViewModal","isCollapsed","sortTasks","taskLimit","userName","sortComments","toggle","apiResponse","toggleTaskCollapse","updateTaskColorByCategory","newTask","saving","validateTask","colId","taskToRemove","fileChange","file","fileUpload","addFile","fileUploading","resetFileInput","uploadFile","boards_taskNoFileError","viewFile","getUrl","bypassSecurityTrustResourceUrl","attachmentToRemove","updateTaskActivity","newComment","updatedTask","replaceUpdatedTask","convertToTask","beginEditComment","commentEdit","editComment","commentToRemove","canAdminComment","beginLimitEdit","showLimitEditor","cancelLimitChanges","saveLimitChanges","originalLimit","colData","quickAddClicked","preventEnter","showModal","getShowModalFunction","assignee","cat","getUserName","callBoardUpdate","showActivity","getElementsByClassName","viewTaskActivities","ActivitySimple","oldTask","updateTaskComments","newComments","ColumnDisplayComponent","getBinding","setTitle","boardNavId","userFilter","categoryFilter","boards","loading","hideFiltered","updateActiveUser","updateBoards","goToBoard","toggleFiltered","filterTasks","filtered","found","updateBoardsList","activeBoards","currentBoard","noBoardsMessage","boards_noBoardsMessageUser","boards_noBoardsMessageAdmin","BoardDisplayComponent","getAttachmentInfo","FileViewerService","isLoaded","files","fileHash","fileUrl","FileViewerComponent","isSubmitted","isAuth","LoginComponent","usersChanged","boardsChanged","actionsChanged","updateUsers","getUsers","getActions","updateActions","SettingsService","changeDefaultBoard","changePassword","oldPass","newPass","new_password","old_password","changeUsername","newName","changeEmail","newEmail","changeUserOptions","newOptions","UserSettingsService","verPass","settings","EmailForm","resetForms","onOptionChange","option","updateUserOptions","addAlerts","updateDefaultBoard","boardId","updatePassword","validatePassForm","resetPasswordForm","updateUsername","resetUsernameForm","updateEmail","resetEmailForm","PassForm","UsernameForm","UserSettingsComponent","addUser","editUser","removeUser","UserAdminService","password_verify","boardAccess","userService","ModalProperties","replaceUser","updateUserList","convertUser","addEditUser","isAdd","validateModalUser","replaceUserList","closeModal","userToRemove","showConfirmModal","newUser","settings_usernameRequired","settings_passwordRequired","settings_verifyError","settings_emailError","getDefaultBoardName","default_board_name","security_level_name","settings_admin","settings_boardAdmin","settings_user","can_admin","UserAdminComponent","addBoard","editBoard","removeBoard","BoardAdminService","categoryDefaultColor","newColumnName","newCategoryName","issueTrackerUrl","issueTrackerBugId","removeColumn","removeCategory","removeIssueTracker","isDisplay","edit","beginEdit","editDone","newText","InlineEditComponent","hasBAUsers","displayBoards","BoardData","statusFilter","sortFilter","updateUsersList","dropColumns","addEditBoard","setBoardUsers","validateBoard","handleResponse","boardToRemove","toggleBoardStatus","filterBoards","userBoards","filterBoardsByUser","statusBoards","filterBoardsByStatus","foundInUserBoards","foundInStatusBoards","userBoard","statusBoard","sortBoards","cancelEnterKey","deepCopy","filteredBoards","userFound","settings_boardNameError","settings_columnError","settings_noBoards","settings_noBoardsAdmin","onPropertyEdit","getColor","defaultColor","setCategoryColor","BoardAdminComponent","addAction","removeAction","AutoActionsService","firstRun","isAddDisabled","hasInactiveBoards","newAction","autoActions","updateHasInactiveBoards","actionsList","updateStrings","actionList","nameA","getBoardName","nameB","triggers","settings_triggerMoveToColumn","AssignedToUser","settings_triggerAssignedToUser","AddedToCategory","settings_triggerAddedToCategory","PointsChanged","settings_triggerPointsChanged","typesList","settings_actionSetColor","SetCategory","settings_actionSetCategory","AddCategory","settings_actionAddCategory","SetAssignee","settings_actionSetAssignee","AddAssignee","settings_actionAddAssignee","ClearDueDate","settings_actionClearDueDate","updateTriggerSources","updateActionSources","addNewAction","triggerSources","buildSourcesArray","AlterColorByPoints","settings_alterByPoints","checkAddDisabled","actionSources","getBoard","getTriggerDescription","getNameFromArray","getTypeDescription","settings_actionAlterColor","removeAutoAction","actionToRemove","sourceArray","arrayName","foundBoard","boardArray","arrayItemId","noActionsMessage","settings_noActions","settings_noActionsAdmin","AutoActionsComponent","SettingsComponent","getBoardInfo","getTaskInfo","DashboardService","boardsLoading","tasksLoading","MyItemsComponent","chartName","chartType","tableHead","percentages","words","convertToNumberArray","createLineChart","createPieChart","percent","nums","ChartsComponent","dayLabels","monthLabels","month","generateCalendar","previousMonth","nextMonth","startingDay","monthLength","rows","day","calendarDays","weekDays","CalendarComponent","burndownDates","startDate","endDate","datesError","dashboard","boardsMessage","tasksMessage","validateDates","updateAnalytics","DashboardComponent","hide","NotificationsComponent","AppComponent","JWT_KEY","sessionStorage","getItem","setItem","ApiInterceptor","SharedModule","BoardModule","FileModule","DashboardModule","SettingsModule","AppModule","forRoot","enableProdMode","bootstrapModule","webpackEmptyAsyncContext","SimpleInnerSubscriber","SimpleOuterSubscriber"],"mappings":"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","file":"main.js","sourcesContent":["import { mergeAll } from './mergeAll';\nexport function concatAll() {\n    return mergeAll(1);\n}\n//# sourceMappingURL=concatAll.js.map","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export const rxSubscriber = (() => typeof Symbol === 'function'\n    ? Symbol('rxSubscriber')\n    : '@@rxSubscriber_' + Math.random())();\nexport const $$rxSubscriber = rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map","import { Subject } from './Subject';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nexport class BehaviorSubject extends Subject {\n    constructor(_value) {\n        super();\n        this._value = _value;\n    }\n    get value() {\n        return this.getValue();\n    }\n    _subscribe(subscriber) {\n        const subscription = super._subscribe(subscriber);\n        if (subscription && !subscription.closed) {\n            subscriber.next(this._value);\n        }\n        return subscription;\n    }\n    getValue() {\n        if (this.hasError) {\n            throw this.thrownError;\n        }\n        else if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else {\n            return this._value;\n        }\n    }\n    next(value) {\n        super.next(this._value = value);\n    }\n}\n//# sourceMappingURL=BehaviorSubject.js.map","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","let _enable_super_gross_mode_that_will_cause_bad_things = false;\nexport const config = {\n    Promise: undefined,\n    set useDeprecatedSynchronousErrorHandling(value) {\n        if (value) {\n            const error = new Error();\n            console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n        }\n        else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n            console.log('RxJS: Back to a better error behavior. Thank you. <3');\n        }\n        _enable_super_gross_mode_that_will_cause_bad_things = value;\n    },\n    get useDeprecatedSynchronousErrorHandling() {\n        return _enable_super_gross_mode_that_will_cause_bad_things;\n    },\n};\n//# sourceMappingURL=config.js.map","import { Action } from './Action';\nexport class AsyncAction extends Action {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    schedule(state, delay = 0) {\n        if (this.closed) {\n            return this;\n        }\n        this.state = state;\n        const id = this.id;\n        const scheduler = this.scheduler;\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.pending = true;\n        this.delay = delay;\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        return setInterval(scheduler.flush.bind(scheduler, this), delay);\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        if (delay !== null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        clearInterval(id);\n        return undefined;\n    }\n    execute(state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        const error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    }\n    _execute(state, delay) {\n        let errored = false;\n        let errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    }\n    _unsubscribe() {\n        const id = this.id;\n        const scheduler = this.scheduler;\n        const actions = scheduler.actions;\n        const index = actions.indexOf(this);\n        this.work = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n        this.delay = null;\n    }\n}\n//# sourceMappingURL=AsyncAction.js.map","import { Subscription } from '../Subscription';\nexport class Action extends Subscription {\n    constructor(scheduler, work) {\n        super();\n    }\n    schedule(state, delay = 0) {\n        return this;\n    }\n}\n//# sourceMappingURL=Action.js.map","const ArgumentOutOfRangeErrorImpl = (() => {\n    function ArgumentOutOfRangeErrorImpl() {\n        Error.call(this);\n        this.message = 'argument out of range';\n        this.name = 'ArgumentOutOfRangeError';\n        return this;\n    }\n    ArgumentOutOfRangeErrorImpl.prototype = Object.create(Error.prototype);\n    return ArgumentOutOfRangeErrorImpl;\n})();\nexport const ArgumentOutOfRangeError = ArgumentOutOfRangeErrorImpl;\n//# sourceMappingURL=ArgumentOutOfRangeError.js.map","import { map } from './map';\nimport { from } from '../observable/from';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function mergeMap(project, resultSelector, concurrent = Number.POSITIVE_INFINITY) {\n    if (typeof resultSelector === 'function') {\n        return (source) => source.pipe(mergeMap((a, i) => from(project(a, i)).pipe(map((b, ii) => resultSelector(a, b, i, ii))), concurrent));\n    }\n    else if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n    }\n    return (source) => source.lift(new MergeMapOperator(project, concurrent));\n}\nexport class MergeMapOperator {\n    constructor(project, concurrent = Number.POSITIVE_INFINITY) {\n        this.project = project;\n        this.concurrent = concurrent;\n    }\n    call(observer, source) {\n        return source.subscribe(new MergeMapSubscriber(observer, this.project, this.concurrent));\n    }\n}\nexport class MergeMapSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, project, concurrent = Number.POSITIVE_INFINITY) {\n        super(destination);\n        this.project = project;\n        this.concurrent = concurrent;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n        this.index = 0;\n    }\n    _next(value) {\n        if (this.active < this.concurrent) {\n            this._tryNext(value);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    }\n    _tryNext(value) {\n        let result;\n        const index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.active++;\n        this._innerSub(result);\n    }\n    _innerSub(ish) {\n        const innerSubscriber = new SimpleInnerSubscriber(this);\n        const destination = this.destination;\n        destination.add(innerSubscriber);\n        const innerSubscription = innerSubscribe(ish, innerSubscriber);\n        if (innerSubscription !== innerSubscriber) {\n            destination.add(innerSubscription);\n        }\n    }\n    _complete() {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n        this.unsubscribe();\n    }\n    notifyNext(innerValue) {\n        this.destination.next(innerValue);\n    }\n    notifyComplete() {\n        const buffer = this.buffer;\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    }\n}\nexport const flatMap = mergeMap;\n//# sourceMappingURL=mergeMap.js.map","import { Observable } from '../Observable';\nexport function isObservable(obj) {\n    return !!obj && (obj instanceof Observable || (typeof obj.lift === 'function' && typeof obj.subscribe === 'function'));\n}\n//# sourceMappingURL=isObservable.js.map","import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\nexport function scheduled(input, scheduler) {\n    if (input != null) {\n        if (isInteropObservable(input)) {\n            return scheduleObservable(input, scheduler);\n        }\n        else if (isPromise(input)) {\n            return schedulePromise(input, scheduler);\n        }\n        else if (isArrayLike(input)) {\n            return scheduleArray(input, scheduler);\n        }\n        else if (isIterable(input) || typeof input === 'string') {\n            return scheduleIterable(input, scheduler);\n        }\n    }\n    throw new TypeError((input !== null && typeof input || input) + ' is not observable');\n}\n//# sourceMappingURL=scheduled.js.map","import { observable as Symbol_observable } from '../symbol/observable';\nexport function isInteropObservable(input) {\n    return input && typeof input[Symbol_observable] === 'function';\n}\n//# sourceMappingURL=isInteropObservable.js.map","import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport function scheduleObservable(input, scheduler) {\n    return new Observable(subscriber => {\n        const sub = new Subscription();\n        sub.add(scheduler.schedule(() => {\n            const observable = input[Symbol_observable]();\n            sub.add(observable.subscribe({\n                next(value) { sub.add(scheduler.schedule(() => subscriber.next(value))); },\n                error(err) { sub.add(scheduler.schedule(() => subscriber.error(err))); },\n                complete() { sub.add(scheduler.schedule(() => subscriber.complete())); },\n            }));\n        }));\n        return sub;\n    });\n}\n//# sourceMappingURL=scheduleObservable.js.map","import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nexport function schedulePromise(input, scheduler) {\n    return new Observable(subscriber => {\n        const sub = new Subscription();\n        sub.add(scheduler.schedule(() => input.then(value => {\n            sub.add(scheduler.schedule(() => {\n                subscriber.next(value);\n                sub.add(scheduler.schedule(() => subscriber.complete()));\n            }));\n        }, err => {\n            sub.add(scheduler.schedule(() => subscriber.error(err)));\n        })));\n        return sub;\n    });\n}\n//# sourceMappingURL=schedulePromise.js.map","import { iterator as Symbol_iterator } from '../symbol/iterator';\nexport function isIterable(input) {\n    return input && typeof input[Symbol_iterator] === 'function';\n}\n//# sourceMappingURL=isIterable.js.map","import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nexport function scheduleIterable(input, scheduler) {\n    if (!input) {\n        throw new Error('Iterable cannot be null');\n    }\n    return new Observable(subscriber => {\n        const sub = new Subscription();\n        let iterator;\n        sub.add(() => {\n            if (iterator && typeof iterator.return === 'function') {\n                iterator.return();\n            }\n        });\n        sub.add(scheduler.schedule(() => {\n            iterator = input[Symbol_iterator]();\n            sub.add(scheduler.schedule(function () {\n                if (subscriber.closed) {\n                    return;\n                }\n                let value;\n                let done;\n                try {\n                    const result = iterator.next();\n                    value = result.value;\n                    done = result.done;\n                }\n                catch (err) {\n                    subscriber.error(err);\n                    return;\n                }\n                if (done) {\n                    subscriber.complete();\n                }\n                else {\n                    subscriber.next(value);\n                    this.schedule();\n                }\n            }));\n        }));\n        return sub;\n    });\n}\n//# sourceMappingURL=scheduleIterable.js.map","let nextHandle = 1;\nconst RESOLVED = (() => Promise.resolve())();\nconst activeHandles = {};\nfunction findAndClearHandle(handle) {\n    if (handle in activeHandles) {\n        delete activeHandles[handle];\n        return true;\n    }\n    return false;\n}\nexport const Immediate = {\n    setImmediate(cb) {\n        const handle = nextHandle++;\n        activeHandles[handle] = true;\n        RESOLVED.then(() => findAndClearHandle(handle) && cb());\n        return handle;\n    },\n    clearImmediate(handle) {\n        findAndClearHandle(handle);\n    },\n};\nexport const TestTools = {\n    pending() {\n        return Object.keys(activeHandles).length;\n    }\n};\n//# sourceMappingURL=Immediate.js.map","import { Immediate } from '../util/Immediate';\nimport { AsyncAction } from './AsyncAction';\nexport class AsapAction extends AsyncAction {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        if (delay !== null && delay > 0) {\n            return super.requestAsyncId(scheduler, id, delay);\n        }\n        scheduler.actions.push(this);\n        return scheduler.scheduled || (scheduler.scheduled = Immediate.setImmediate(scheduler.flush.bind(scheduler, null)));\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return super.recycleAsyncId(scheduler, id, delay);\n        }\n        if (scheduler.actions.length === 0) {\n            Immediate.clearImmediate(id);\n            scheduler.scheduled = undefined;\n        }\n        return undefined;\n    }\n}\n//# sourceMappingURL=AsapAction.js.map","import { AsapAction } from './AsapAction';\nimport { AsapScheduler } from './AsapScheduler';\nexport const asapScheduler = new AsapScheduler(AsapAction);\nexport const asap = asapScheduler;\n//# sourceMappingURL=asap.js.map","import { AsyncScheduler } from './AsyncScheduler';\nexport class AsapScheduler extends AsyncScheduler {\n    flush(action) {\n        this.active = true;\n        this.scheduled = undefined;\n        const { actions } = this;\n        let error;\n        let index = -1;\n        let count = actions.length;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n//# sourceMappingURL=AsapScheduler.js.map","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","import { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\nexport class Subscriber extends Subscription {\n    constructor(destinationOrNext, error, complete) {\n        super();\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = emptyObserver;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = emptyObserver;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n                        this.destination = destinationOrNext;\n                        destinationOrNext.add(this);\n                    }\n                    else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    [rxSubscriberSymbol]() { return this; }\n    static create(next, error, complete) {\n        const subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    }\n    next(value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    }\n    error(err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    }\n    complete() {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    }\n    unsubscribe() {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        super.unsubscribe();\n    }\n    _next(value) {\n        this.destination.next(value);\n    }\n    _error(err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    }\n    _complete() {\n        this.destination.complete();\n        this.unsubscribe();\n    }\n    _unsubscribeAndRecycle() {\n        const { _parentOrParents } = this;\n        this._parentOrParents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parentOrParents = _parentOrParents;\n        return this;\n    }\n}\nexport class SafeSubscriber extends Subscriber {\n    constructor(_parentSubscriber, observerOrNext, error, complete) {\n        super();\n        this._parentSubscriber = _parentSubscriber;\n        let next;\n        let context = this;\n        if (isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== emptyObserver) {\n                context = Object.create(observerOrNext);\n                if (isFunction(context.unsubscribe)) {\n                    this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = this.unsubscribe.bind(this);\n            }\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    next(value) {\n        if (!this.isStopped && this._next) {\n            const { _parentSubscriber } = this;\n            if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    }\n    error(err) {\n        if (!this.isStopped) {\n            const { _parentSubscriber } = this;\n            const { useDeprecatedSynchronousErrorHandling } = config;\n            if (this._error) {\n                if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                if (useDeprecatedSynchronousErrorHandling) {\n                    throw err;\n                }\n                hostReportError(err);\n            }\n            else {\n                if (useDeprecatedSynchronousErrorHandling) {\n                    _parentSubscriber.syncErrorValue = err;\n                    _parentSubscriber.syncErrorThrown = true;\n                }\n                else {\n                    hostReportError(err);\n                }\n                this.unsubscribe();\n            }\n        }\n    }\n    complete() {\n        if (!this.isStopped) {\n            const { _parentSubscriber } = this;\n            if (this._complete) {\n                const wrappedComplete = () => this._complete.call(this._context);\n                if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    }\n    __tryOrUnsub(fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                throw err;\n            }\n            else {\n                hostReportError(err);\n            }\n        }\n    }\n    __tryOrSetError(parent, fn, value) {\n        if (!config.useDeprecatedSynchronousErrorHandling) {\n            throw new Error('bad call');\n        }\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                parent.syncErrorValue = err;\n                parent.syncErrorThrown = true;\n                return true;\n            }\n            else {\n                hostReportError(err);\n                return true;\n            }\n        }\n        return false;\n    }\n    _unsubscribe() {\n        const { _parentSubscriber } = this;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    }\n}\n//# sourceMappingURL=Subscriber.js.map","/*\nLanguage: CSS\nCategory: common, css\nWebsite: https://developer.mozilla.org/en-US/docs/Web/CSS\n*/\n\n/** @type LanguageFn */\nfunction css(hljs) {\n  var FUNCTION_LIKE = {\n    begin: /[\\w-]+\\(/, returnBegin: true,\n    contains: [\n      {\n        className: 'built_in',\n        begin: /[\\w-]+/\n      },\n      {\n        begin: /\\(/, end: /\\)/,\n        contains: [\n          hljs.APOS_STRING_MODE,\n          hljs.QUOTE_STRING_MODE,\n          hljs.CSS_NUMBER_MODE,\n        ]\n      }\n    ]\n  };\n  var ATTRIBUTE = {\n    className: 'attribute',\n    begin: /\\S/, end: ':', excludeEnd: true,\n    starts: {\n      endsWithParent: true, excludeEnd: true,\n      contains: [\n        FUNCTION_LIKE,\n        hljs.CSS_NUMBER_MODE,\n        hljs.QUOTE_STRING_MODE,\n        hljs.APOS_STRING_MODE,\n        hljs.C_BLOCK_COMMENT_MODE,\n        {\n          className: 'number', begin: '#[0-9A-Fa-f]+'\n        },\n        {\n          className: 'meta', begin: '!important'\n        }\n      ]\n    }\n  };\n  var AT_IDENTIFIER = '@[a-z-]+'; // @font-face\n  var AT_MODIFIERS = \"and or not only\";\n  var AT_PROPERTY_RE = /@\\-?\\w[\\w]*(\\-\\w+)*/; // @-webkit-keyframes\n  var IDENT_RE = '[a-zA-Z-][a-zA-Z0-9_-]*';\n  var RULE = {\n    begin: /(?:[A-Z\\_\\.\\-]+|--[a-zA-Z0-9_-]+)\\s*:/, returnBegin: true, end: ';', endsWithParent: true,\n    contains: [\n      ATTRIBUTE\n    ]\n  };\n\n  return {\n    name: 'CSS',\n    case_insensitive: true,\n    illegal: /[=\\/|'\\$]/,\n    contains: [\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'selector-id', begin: /#[A-Za-z0-9_-]+/\n      },\n      {\n        className: 'selector-class', begin: /\\.[A-Za-z0-9_-]+/\n      },\n      {\n        className: 'selector-attr',\n        begin: /\\[/, end: /\\]/,\n        illegal: '$',\n        contains: [\n          hljs.APOS_STRING_MODE,\n          hljs.QUOTE_STRING_MODE,\n        ]\n      },\n      {\n        className: 'selector-pseudo',\n        begin: /:(:)?[a-zA-Z0-9\\_\\-\\+\\(\\)\"'.]+/\n      },\n      // matching these here allows us to treat them more like regular CSS\n      // rules so everything between the {} gets regular rule highlighting,\n      // which is what we want for page and font-face\n      {\n        begin: '@(page|font-face)',\n        lexemes: AT_IDENTIFIER,\n        keywords: '@page @font-face'\n      },\n      {\n        begin: '@', end: '[{;]', // at_rule eating first \"{\" is a good thing\n                                 // because it doesn’t let it to be parsed as\n                                 // a rule set but instead drops parser into\n                                 // the default mode which is how it should be.\n        illegal: /:/, // break on Less variables @var: ...\n        returnBegin: true,\n        contains: [\n          {\n            className: 'keyword',\n            begin: AT_PROPERTY_RE\n          },\n          {\n            begin: /\\s/, endsWithParent: true, excludeEnd: true,\n            relevance: 0,\n            keywords: AT_MODIFIERS,\n            contains: [\n              {\n                begin: /[a-z-]+:/,\n                className:\"attribute\"\n              },\n              hljs.APOS_STRING_MODE,\n              hljs.QUOTE_STRING_MODE,\n              hljs.CSS_NUMBER_MODE\n            ]\n          }\n        ]\n      },\n      {\n        className: 'selector-tag', begin: IDENT_RE,\n        relevance: 0\n      },\n      {\n        begin: '{', end: '}',\n        illegal: /\\S/,\n        contains: [\n          hljs.C_BLOCK_COMMENT_MODE,\n          RULE,\n        ]\n      }\n    ]\n  };\n}\n\nmodule.exports = css;\n","/*\nLanguage: Bash\nAuthor: vah <vahtenberg@gmail.com>\nContributrors: Benjamin Pannell <contact@sierrasoftworks.com>\nWebsite: https://www.gnu.org/software/bash/\nCategory: common\n*/\n\n/** @type LanguageFn */\nfunction bash(hljs) {\n  const VAR = {};\n  const BRACED_VAR = {\n    begin: /\\$\\{/, end:/\\}/,\n    contains: [\n      { begin: /:-/, contains: [VAR] } // default values\n    ]\n  };\n  Object.assign(VAR,{\n    className: 'variable',\n    variants: [\n      {begin: /\\$[\\w\\d#@][\\w\\d_]*/},\n      BRACED_VAR\n    ]\n  });\n\n  const SUBST = {\n    className: 'subst',\n    begin: /\\$\\(/, end: /\\)/,\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  const QUOTE_STRING = {\n    className: 'string',\n    begin: /\"/, end: /\"/,\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      VAR,\n      SUBST\n    ]\n  };\n  SUBST.contains.push(QUOTE_STRING);\n  const ESCAPED_QUOTE = {\n    className: '',\n    begin: /\\\\\"/\n\n  };\n  const APOS_STRING = {\n    className: 'string',\n    begin: /'/, end: /'/\n  };\n  const ARITHMETIC = {\n    begin: /\\$\\(\\(/,\n    end: /\\)\\)/,\n    contains: [\n      { begin: /\\d+#[0-9a-f]+/, className: \"number\" },\n      hljs.NUMBER_MODE,\n      VAR\n    ]\n  };\n  const SH_LIKE_SHELLS = [\n    \"fish\",\n    \"bash\",\n    \"zsh\",\n    \"sh\",\n    \"csh\",\n    \"ksh\",\n    \"tcsh\",\n    \"dash\",\n    \"scsh\",\n  ];\n  const KNOWN_SHEBANG = hljs.SHEBANG({\n    binary: `(${SH_LIKE_SHELLS.join(\"|\")})`,\n    relevance: 10\n  });\n  const FUNCTION = {\n    className: 'function',\n    begin: /\\w[\\w\\d_]*\\s*\\(\\s*\\)\\s*\\{/,\n    returnBegin: true,\n    contains: [hljs.inherit(hljs.TITLE_MODE, {begin: /\\w[\\w\\d_]*/})],\n    relevance: 0\n  };\n\n  return {\n    name: 'Bash',\n    aliases: ['sh', 'zsh'],\n    keywords: {\n      $pattern: /\\b-?[a-z\\._]+\\b/,\n      keyword:\n        'if then else elif fi for while in do done case esac function',\n      literal:\n        'true false',\n      built_in:\n        // Shell built-ins\n        // http://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n        'break cd continue eval exec exit export getopts hash pwd readonly return shift test times ' +\n        'trap umask unset ' +\n        // Bash built-ins\n        'alias bind builtin caller command declare echo enable help let local logout mapfile printf ' +\n        'read readarray source type typeset ulimit unalias ' +\n        // Shell modifiers\n        'set shopt ' +\n        // Zsh built-ins\n        'autoload bg bindkey bye cap chdir clone comparguments compcall compctl compdescribe compfiles ' +\n        'compgroups compquote comptags comptry compvalues dirs disable disown echotc echoti emulate ' +\n        'fc fg float functions getcap getln history integer jobs kill limit log noglob popd print ' +\n        'pushd pushln rehash sched setcap setopt stat suspend ttyctl unfunction unhash unlimit ' +\n        'unsetopt vared wait whence where which zcompile zformat zftp zle zmodload zparseopts zprof ' +\n        'zpty zregexparse zsocket zstyle ztcp',\n      _:\n        '-ne -eq -lt -gt -f -d -e -s -l -a' // relevance booster\n    },\n    contains: [\n      KNOWN_SHEBANG, // to catch known shells and boost relevancy\n      hljs.SHEBANG(), // to catch unknown shells but still highlight the shebang\n      FUNCTION,\n      ARITHMETIC,\n      hljs.HASH_COMMENT_MODE,\n      QUOTE_STRING,\n      ESCAPED_QUOTE,\n      APOS_STRING,\n      VAR\n    ]\n  };\n}\n\nmodule.exports = bash;\n","import { Subscriber } from '../Subscriber';\nexport function canReportError(observer) {\n    while (observer) {\n        const { closed, destination, isStopped } = observer;\n        if (closed || isStopped) {\n            return false;\n        }\n        else if (destination && destination instanceof Subscriber) {\n            observer = destination;\n        }\n        else {\n            observer = null;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=canReportError.js.map","const ObjectUnsubscribedErrorImpl = (() => {\n    function ObjectUnsubscribedErrorImpl() {\n        Error.call(this);\n        this.message = 'object unsubscribed';\n        this.name = 'ObjectUnsubscribedError';\n        return this;\n    }\n    ObjectUnsubscribedErrorImpl.prototype = Object.create(Error.prototype);\n    return ObjectUnsubscribedErrorImpl;\n})();\nexport const ObjectUnsubscribedError = ObjectUnsubscribedErrorImpl;\n//# sourceMappingURL=ObjectUnsubscribedError.js.map","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import { Observable } from '../Observable';\nimport { subscribeTo } from '../util/subscribeTo';\nimport { scheduled } from '../scheduled/scheduled';\nexport function from(input, scheduler) {\n    if (!scheduler) {\n        if (input instanceof Observable) {\n            return input;\n        }\n        return new Observable(subscribeTo(input));\n    }\n    else {\n        return scheduled(input, scheduler);\n    }\n}\n//# sourceMappingURL=from.js.map","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\nexport const async = asyncScheduler;\n//# sourceMappingURL=async.js.map","export const isArray = (() => Array.isArray || ((x) => x && typeof x.length === 'number'))();\n//# sourceMappingURL=isArray.js.map","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2020, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.marked = factory());\n}(this, (function () { 'use strict';\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n    var it;\n\n    if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n      if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n        if (it) o = it;\n        var i = 0;\n        return function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        };\n      }\n\n      throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n\n    it = o[Symbol.iterator]();\n    return it.next.bind(it);\n  }\n\n  function createCommonjsModule(fn, module) {\n  \treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n  }\n\n  var defaults = createCommonjsModule(function (module) {\n    function getDefaults() {\n      return {\n        baseUrl: null,\n        breaks: false,\n        gfm: true,\n        headerIds: true,\n        headerPrefix: '',\n        highlight: null,\n        langPrefix: 'language-',\n        mangle: true,\n        pedantic: false,\n        renderer: null,\n        sanitize: false,\n        sanitizer: null,\n        silent: false,\n        smartLists: false,\n        smartypants: false,\n        tokenizer: null,\n        walkTokens: null,\n        xhtml: false\n      };\n    }\n\n    function changeDefaults(newDefaults) {\n      module.exports.defaults = newDefaults;\n    }\n\n    module.exports = {\n      defaults: getDefaults(),\n      getDefaults: getDefaults,\n      changeDefaults: changeDefaults\n    };\n  });\n  var defaults_1 = defaults.defaults;\n  var defaults_2 = defaults.getDefaults;\n  var defaults_3 = defaults.changeDefaults;\n\n  /**\n   * Helpers\n   */\n  var escapeTest = /[&<>\"']/;\n  var escapeReplace = /[&<>\"']/g;\n  var escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\n  var escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n  var escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  var getEscapeReplacement = function getEscapeReplacement(ch) {\n    return escapeReplacements[ch];\n  };\n\n  function escape(html, encode) {\n    if (encode) {\n      if (escapeTest.test(html)) {\n        return html.replace(escapeReplace, getEscapeReplacement);\n      }\n    } else {\n      if (escapeTestNoEncode.test(html)) {\n        return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n      }\n    }\n\n    return html;\n  }\n\n  var unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n  function unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n\n      return '';\n    });\n  }\n\n  var caret = /(^|[^\\[])\\^/g;\n\n  function edit(regex, opt) {\n    regex = regex.source || regex;\n    opt = opt || '';\n    var obj = {\n      replace: function replace(name, val) {\n        val = val.source || val;\n        val = val.replace(caret, '$1');\n        regex = regex.replace(name, val);\n        return obj;\n      },\n      getRegex: function getRegex() {\n        return new RegExp(regex, opt);\n      }\n    };\n    return obj;\n  }\n\n  var nonWordAndColonTest = /[^\\w:]/g;\n  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n  function cleanUrl(sanitize, base, href) {\n    if (sanitize) {\n      var prot;\n\n      try {\n        prot = decodeURIComponent(unescape(href)).replace(nonWordAndColonTest, '').toLowerCase();\n      } catch (e) {\n        return null;\n      }\n\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n        return null;\n      }\n    }\n\n    if (base && !originIndependentUrl.test(href)) {\n      href = resolveUrl(base, href);\n    }\n\n    try {\n      href = encodeURI(href).replace(/%25/g, '%');\n    } catch (e) {\n      return null;\n    }\n\n    return href;\n  }\n\n  var baseUrls = {};\n  var justDomain = /^[^:]+:\\/*[^/]*$/;\n  var protocol = /^([^:]+:)[\\s\\S]*$/;\n  var domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n  function resolveUrl(base, href) {\n    if (!baseUrls[' ' + base]) {\n      // we can ignore everything in base after the last slash of its path component,\n      // but we might need to add _that_\n      // https://tools.ietf.org/html/rfc3986#section-3\n      if (justDomain.test(base)) {\n        baseUrls[' ' + base] = base + '/';\n      } else {\n        baseUrls[' ' + base] = rtrim(base, '/', true);\n      }\n    }\n\n    base = baseUrls[' ' + base];\n    var relativeBase = base.indexOf(':') === -1;\n\n    if (href.substring(0, 2) === '//') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(protocol, '$1') + href;\n    } else if (href.charAt(0) === '/') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(domain, '$1') + href;\n    } else {\n      return base + href;\n    }\n  }\n\n  var noopTest = {\n    exec: function noopTest() {}\n  };\n\n  function merge(obj) {\n    var i = 1,\n        target,\n        key;\n\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  function splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n      var escaped = false,\n          curr = offset;\n\n      while (--curr >= 0 && str[curr] === '\\\\') {\n        escaped = !escaped;\n      }\n\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n        cells = row.split(/ \\|/);\n    var i = 0;\n\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) {\n        cells.push('');\n      }\n    }\n\n    for (; i < cells.length; i++) {\n      // leading or trailing whitespace is ignored per the gfm spec\n      cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n\n    return cells;\n  } // Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n  // /c*$/ is vulnerable to REDOS.\n  // invert: Remove suffix of non-c chars instead. Default falsey.\n\n\n  function rtrim(str, c, invert) {\n    var l = str.length;\n\n    if (l === 0) {\n      return '';\n    } // Length of suffix matching the invert condition.\n\n\n    var suffLen = 0; // Step left until we fail to match the invert condition.\n\n    while (suffLen < l) {\n      var currChar = str.charAt(l - suffLen - 1);\n\n      if (currChar === c && !invert) {\n        suffLen++;\n      } else if (currChar !== c && invert) {\n        suffLen++;\n      } else {\n        break;\n      }\n    }\n\n    return str.substr(0, l - suffLen);\n  }\n\n  function findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n      return -1;\n    }\n\n    var l = str.length;\n    var level = 0,\n        i = 0;\n\n    for (; i < l; i++) {\n      if (str[i] === '\\\\') {\n        i++;\n      } else if (str[i] === b[0]) {\n        level++;\n      } else if (str[i] === b[1]) {\n        level--;\n\n        if (level < 0) {\n          return i;\n        }\n      }\n    }\n\n    return -1;\n  }\n\n  function checkSanitizeDeprecation(opt) {\n    if (opt && opt.sanitize && !opt.silent) {\n      console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n    }\n  }\n\n  var helpers = {\n    escape: escape,\n    unescape: unescape,\n    edit: edit,\n    cleanUrl: cleanUrl,\n    resolveUrl: resolveUrl,\n    noopTest: noopTest,\n    merge: merge,\n    splitCells: splitCells,\n    rtrim: rtrim,\n    findClosingBracket: findClosingBracket,\n    checkSanitizeDeprecation: checkSanitizeDeprecation\n  };\n\n  var defaults$1 = defaults.defaults;\n  var rtrim$1 = helpers.rtrim,\n      splitCells$1 = helpers.splitCells,\n      _escape = helpers.escape,\n      findClosingBracket$1 = helpers.findClosingBracket;\n\n  function outputLink(cap, link, raw) {\n    var href = link.href;\n    var title = link.title ? _escape(link.title) : null;\n    var text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n    if (cap[0].charAt(0) !== '!') {\n      return {\n        type: 'link',\n        raw: raw,\n        href: href,\n        title: title,\n        text: text\n      };\n    } else {\n      return {\n        type: 'image',\n        raw: raw,\n        href: href,\n        title: title,\n        text: _escape(text)\n      };\n    }\n  }\n\n  function indentCodeCompensation(raw, text) {\n    var matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n    if (matchIndentToCode === null) {\n      return text;\n    }\n\n    var indentToCode = matchIndentToCode[1];\n    return text.split('\\n').map(function (node) {\n      var matchIndentInNode = node.match(/^\\s+/);\n\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      var indentInNode = matchIndentInNode[0];\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    }).join('\\n');\n  }\n  /**\n   * Tokenizer\n   */\n\n\n  var Tokenizer_1 = /*#__PURE__*/function () {\n    function Tokenizer(options) {\n      this.options = options || defaults$1;\n    }\n\n    var _proto = Tokenizer.prototype;\n\n    _proto.space = function space(src) {\n      var cap = this.rules.block.newline.exec(src);\n\n      if (cap) {\n        if (cap[0].length > 1) {\n          return {\n            type: 'space',\n            raw: cap[0]\n          };\n        }\n\n        return {\n          raw: '\\n'\n        };\n      }\n    };\n\n    _proto.code = function code(src, tokens) {\n      var cap = this.rules.block.code.exec(src);\n\n      if (cap) {\n        var lastToken = tokens[tokens.length - 1]; // An indented code block cannot interrupt a paragraph.\n\n        if (lastToken && lastToken.type === 'paragraph') {\n          return {\n            raw: cap[0],\n            text: cap[0].trimRight()\n          };\n        }\n\n        var text = cap[0].replace(/^ {4}/gm, '');\n        return {\n          type: 'code',\n          raw: cap[0],\n          codeBlockStyle: 'indented',\n          text: !this.options.pedantic ? rtrim$1(text, '\\n') : text\n        };\n      }\n    };\n\n    _proto.fences = function fences(src) {\n      var cap = this.rules.block.fences.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var text = indentCodeCompensation(raw, cap[3] || '');\n        return {\n          type: 'code',\n          raw: raw,\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text: text\n        };\n      }\n    };\n\n    _proto.heading = function heading(src) {\n      var cap = this.rules.block.heading.exec(src);\n\n      if (cap) {\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[1].length,\n          text: cap[2]\n        };\n      }\n    };\n\n    _proto.nptable = function nptable(src) {\n      var cap = this.rules.block.nptable.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells$1(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : [],\n          raw: cap[0]\n        };\n\n        if (item.header.length === item.align.length) {\n          var l = item.align.length;\n          var i;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.cells.length;\n\n          for (i = 0; i < l; i++) {\n            item.cells[i] = splitCells$1(item.cells[i], item.header.length);\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.hr = function hr(src) {\n      var cap = this.rules.block.hr.exec(src);\n\n      if (cap) {\n        return {\n          type: 'hr',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.blockquote = function blockquote(src) {\n      var cap = this.rules.block.blockquote.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ *> ?/gm, '');\n        return {\n          type: 'blockquote',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.list = function list(src) {\n      var cap = this.rules.block.list.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var bull = cap[2];\n        var isordered = bull.length > 1;\n        var isparen = bull[bull.length - 1] === ')';\n        var list = {\n          type: 'list',\n          raw: raw,\n          ordered: isordered,\n          start: isordered ? +bull.slice(0, -1) : '',\n          loose: false,\n          items: []\n        }; // Get each top-level item.\n\n        var itemMatch = cap[0].match(this.rules.block.item);\n        var next = false,\n            item,\n            space,\n            b,\n            addBack,\n            loose,\n            istask,\n            ischecked;\n        var l = itemMatch.length;\n\n        for (var i = 0; i < l; i++) {\n          item = itemMatch[i];\n          raw = item; // Remove the list item's bullet\n          // so it is seen as the next token.\n\n          space = item.length;\n          item = item.replace(/^ *([*+-]|\\d+[.)]) */, ''); // Outdent whatever the\n          // list item contains. Hacky.\n\n          if (~item.indexOf('\\n ')) {\n            space -= item.length;\n            item = !this.options.pedantic ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '') : item.replace(/^ {1,4}/gm, '');\n          } // Determine whether the next list item belongs here.\n          // Backpedal if it does not belong in this list.\n\n\n          if (i !== l - 1) {\n            b = this.rules.block.bullet.exec(itemMatch[i + 1])[0];\n\n            if (isordered ? b.length === 1 || !isparen && b[b.length - 1] === ')' : b.length > 1 || this.options.smartLists && b !== bull) {\n              addBack = itemMatch.slice(i + 1).join('\\n');\n              list.raw = list.raw.substring(0, list.raw.length - addBack.length);\n              i = l - 1;\n            }\n          } // Determine whether item is loose or not.\n          // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n          // for discount behavior.\n\n\n          loose = next || /\\n\\n(?!\\s*$)/.test(item);\n\n          if (i !== l - 1) {\n            next = item.charAt(item.length - 1) === '\\n';\n            if (!loose) loose = next;\n          }\n\n          if (loose) {\n            list.loose = true;\n          } // Check for task list items\n\n\n          istask = /^\\[[ xX]\\] /.test(item);\n          ischecked = undefined;\n\n          if (istask) {\n            ischecked = item[1] !== ' ';\n            item = item.replace(/^\\[[ xX]\\] +/, '');\n          }\n\n          list.items.push({\n            type: 'list_item',\n            raw: raw,\n            task: istask,\n            checked: ischecked,\n            loose: loose,\n            text: item\n          });\n        }\n\n        return list;\n      }\n    };\n\n    _proto.html = function html(src) {\n      var cap = this.rules.block.html.exec(src);\n\n      if (cap) {\n        return {\n          type: this.options.sanitize ? 'paragraph' : 'html',\n          raw: cap[0],\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.def = function def(src) {\n      var cap = this.rules.block.def.exec(src);\n\n      if (cap) {\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        var tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        return {\n          tag: tag,\n          raw: cap[0],\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n    };\n\n    _proto.table = function table(src) {\n      var cap = this.rules.block.table.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells$1(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          item.raw = cap[0];\n          var l = item.align.length;\n          var i;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.cells.length;\n\n          for (i = 0; i < l; i++) {\n            item.cells[i] = splitCells$1(item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''), item.header.length);\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.lheading = function lheading(src) {\n      var cap = this.rules.block.lheading.exec(src);\n\n      if (cap) {\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1]\n        };\n      }\n    };\n\n    _proto.paragraph = function paragraph(src) {\n      var cap = this.rules.block.paragraph.exec(src);\n\n      if (cap) {\n        return {\n          type: 'paragraph',\n          raw: cap[0],\n          text: cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1]\n        };\n      }\n    };\n\n    _proto.text = function text(src, tokens) {\n      var cap = this.rules.block.text.exec(src);\n\n      if (cap) {\n        var lastToken = tokens[tokens.length - 1];\n\n        if (lastToken && lastToken.type === 'text') {\n          return {\n            raw: cap[0],\n            text: cap[0]\n          };\n        }\n\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: cap[0]\n        };\n      }\n    };\n\n    _proto.escape = function escape(src) {\n      var cap = this.rules.inline.escape.exec(src);\n\n      if (cap) {\n        return {\n          type: 'escape',\n          raw: cap[0],\n          text: _escape(cap[1])\n        };\n      }\n    };\n\n    _proto.tag = function tag(src, inLink, inRawBlock) {\n      var cap = this.rules.inline.tag.exec(src);\n\n      if (cap) {\n        if (!inLink && /^<a /i.test(cap[0])) {\n          inLink = true;\n        } else if (inLink && /^<\\/a>/i.test(cap[0])) {\n          inLink = false;\n        }\n\n        if (!inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          inRawBlock = true;\n        } else if (inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          inRawBlock = false;\n        }\n\n        return {\n          type: this.options.sanitize ? 'text' : 'html',\n          raw: cap[0],\n          inLink: inLink,\n          inRawBlock: inRawBlock,\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.link = function link(src) {\n      var cap = this.rules.inline.link.exec(src);\n\n      if (cap) {\n        var lastParenIndex = findClosingBracket$1(cap[2], '()');\n\n        if (lastParenIndex > -1) {\n          var start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          var linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n\n        var href = cap[2];\n        var title = '';\n\n        if (this.options.pedantic) {\n          var link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n          if (link) {\n            href = link[1];\n            title = link[3];\n          } else {\n            title = '';\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n\n        href = href.trim().replace(/^<([\\s\\S]*)>$/, '$1');\n        var token = outputLink(cap, {\n          href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n          title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n        }, cap[0]);\n        return token;\n      }\n    };\n\n    _proto.reflink = function reflink(src, links) {\n      var cap;\n\n      if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {\n        var link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = links[link.toLowerCase()];\n\n        if (!link || !link.href) {\n          var text = cap[0].charAt(0);\n          return {\n            type: 'text',\n            raw: text,\n            text: text\n          };\n        }\n\n        var token = outputLink(cap, link, cap[0]);\n        return token;\n      }\n    };\n\n    _proto.strong = function strong(src, maskedSrc, prevChar) {\n      if (prevChar === void 0) {\n        prevChar = '';\n      }\n\n      var match = this.rules.inline.strong.start.exec(src);\n\n      if (match && (!match[1] || match[1] && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar)))) {\n        maskedSrc = maskedSrc.slice(-1 * src.length);\n        var endReg = match[0] === '**' ? this.rules.inline.strong.endAst : this.rules.inline.strong.endUnd;\n        endReg.lastIndex = 0;\n        var cap;\n\n        while ((match = endReg.exec(maskedSrc)) != null) {\n          cap = this.rules.inline.strong.middle.exec(maskedSrc.slice(0, match.index + 3));\n\n          if (cap) {\n            return {\n              type: 'strong',\n              raw: src.slice(0, cap[0].length),\n              text: src.slice(2, cap[0].length - 2)\n            };\n          }\n        }\n      }\n    };\n\n    _proto.em = function em(src, maskedSrc, prevChar) {\n      if (prevChar === void 0) {\n        prevChar = '';\n      }\n\n      var match = this.rules.inline.em.start.exec(src);\n\n      if (match && (!match[1] || match[1] && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar)))) {\n        maskedSrc = maskedSrc.slice(-1 * src.length);\n        var endReg = match[0] === '*' ? this.rules.inline.em.endAst : this.rules.inline.em.endUnd;\n        endReg.lastIndex = 0;\n        var cap;\n\n        while ((match = endReg.exec(maskedSrc)) != null) {\n          cap = this.rules.inline.em.middle.exec(maskedSrc.slice(0, match.index + 2));\n\n          if (cap) {\n            return {\n              type: 'em',\n              raw: src.slice(0, cap[0].length),\n              text: src.slice(1, cap[0].length - 1)\n            };\n          }\n        }\n      }\n    };\n\n    _proto.codespan = function codespan(src) {\n      var cap = this.rules.inline.code.exec(src);\n\n      if (cap) {\n        var text = cap[2].replace(/\\n/g, ' ');\n        var hasNonSpaceChars = /[^ ]/.test(text);\n        var hasSpaceCharsOnBothEnds = text.startsWith(' ') && text.endsWith(' ');\n\n        if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n          text = text.substring(1, text.length - 1);\n        }\n\n        text = _escape(text, true);\n        return {\n          type: 'codespan',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.br = function br(src) {\n      var cap = this.rules.inline.br.exec(src);\n\n      if (cap) {\n        return {\n          type: 'br',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.del = function del(src) {\n      var cap = this.rules.inline.del.exec(src);\n\n      if (cap) {\n        return {\n          type: 'del',\n          raw: cap[0],\n          text: cap[1]\n        };\n      }\n    };\n\n    _proto.autolink = function autolink(src, mangle) {\n      var cap = this.rules.inline.autolink.exec(src);\n\n      if (cap) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = _escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n          href = 'mailto:' + text;\n        } else {\n          text = _escape(cap[1]);\n          href = text;\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.url = function url(src, mangle) {\n      var cap;\n\n      if (cap = this.rules.inline.url.exec(src)) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = _escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          var prevCapZero;\n\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n\n          text = _escape(cap[0]);\n\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.inlineText = function inlineText(src, inRawBlock, smartypants) {\n      var cap = this.rules.inline.text.exec(src);\n\n      if (cap) {\n        var text;\n\n        if (inRawBlock) {\n          text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0];\n        } else {\n          text = _escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n        }\n\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    return Tokenizer;\n  }();\n\n  var noopTest$1 = helpers.noopTest,\n      edit$1 = helpers.edit,\n      merge$1 = helpers.merge;\n  /**\n   * Block-Level Grammar\n   */\n\n  var block = {\n    newline: /^\\n+/,\n    code: /^( {4}[^\\n]+\\n*)+/,\n    fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n    hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n    heading: /^ {0,3}(#{1,6}) +([^\\n]*?)(?: +#+)? *(?:\\n+|$)/,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n    html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?\\\\?>\\\\n*' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?>\\\\n*' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\\\\n*' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n    def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n    nptable: noopTest$1,\n    table: noopTest$1,\n    lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    // regex template, placeholders will be replaced according to different paragraph\n    // interruption rules of commonmark and the original markdown spec:\n    _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html)[^\\n]+)*)/,\n    text: /^[^\\n]+/\n  };\n  block._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\n  block._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\n  block.def = edit$1(block.def).replace('label', block._label).replace('title', block._title).getRegex();\n  block.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\n  block.item = /^( *)(bull) ?[^\\n]*(?:\\n(?!\\1bull ?)[^\\n]*)*/;\n  block.item = edit$1(block.item, 'gm').replace(/bull/g, block.bullet).getRegex();\n  block.list = edit$1(block.list).replace(/bull/g, block.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block.def.source + ')').getRegex();\n  block._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\n  block._comment = /<!--(?!-?>)[\\s\\S]*?-->/;\n  block.html = edit$1(block.html, 'i').replace('comment', block._comment).replace('tag', block._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\n  block.paragraph = edit$1(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  block.blockquote = edit$1(block.blockquote).replace('paragraph', block.paragraph).getRegex();\n  /**\n   * Normal Block Grammar\n   */\n\n  block.normal = merge$1({}, block);\n  /**\n   * GFM Block Grammar\n   */\n\n  block.gfm = merge$1({}, block.normal, {\n    nptable: '^ *([^|\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' *([-:]+ *\\\\|[-| :]*)' // Align\n    + '(?:\\\\n((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)',\n    // Cells\n    table: '^ *\\\\|(.+)\\\\n' // Header\n    + ' *\\\\|?( *[-:]+[-| :]*)' // Align\n    + '(?:\\\\n *((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n\n  });\n  block.gfm.nptable = edit$1(block.gfm.nptable).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  block.gfm.table = edit$1(block.gfm.table).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  /**\n   * Pedantic grammar (original John Gruber's loose markdown specification)\n   */\n\n  block.pedantic = merge$1({}, block.normal, {\n    html: edit$1('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^ *(#{1,6}) *([^\\n]+?) *(?:#+ *)?(?:\\n+|$)/,\n    fences: noopTest$1,\n    // fences not supported\n    paragraph: edit$1(block.normal._paragraph).replace('hr', block.hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', block.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()\n  });\n  /**\n   * Inline-Level Grammar\n   */\n\n  var inline = {\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noopTest$1,\n    tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n    // CDATA section\n    link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n    reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n    nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n    reflinkSearch: 'reflink|nolink(?!\\\\()',\n    strong: {\n      start: /^(?:(\\*\\*(?=[*punctuation]))|\\*\\*)(?![\\s])|__/,\n      // (1) returns if starts w/ punctuation\n      middle: /^\\*\\*(?:(?:(?!overlapSkip)(?:[^*]|\\\\\\*)|overlapSkip)|\\*(?:(?!overlapSkip)(?:[^*]|\\\\\\*)|overlapSkip)*?\\*)+?\\*\\*$|^__(?![\\s])((?:(?:(?!overlapSkip)(?:[^_]|\\\\_)|overlapSkip)|_(?:(?!overlapSkip)(?:[^_]|\\\\_)|overlapSkip)*?_)+?)__$/,\n      endAst: /[^punctuation\\s]\\*\\*(?!\\*)|[punctuation]\\*\\*(?!\\*)(?:(?=[punctuation\\s]|$))/,\n      // last char can't be punct, or final * must also be followed by punct (or endline)\n      endUnd: /[^\\s]__(?!_)(?:(?=[punctuation\\s])|$)/ // last char can't be a space, and final _ must preceed punct or \\s (or endline)\n\n    },\n    em: {\n      start: /^(?:(\\*(?=[punctuation]))|\\*)(?![*\\s])|_/,\n      // (1) returns if starts w/ punctuation\n      middle: /^\\*(?:(?:(?!overlapSkip)(?:[^*]|\\\\\\*)|overlapSkip)|\\*(?:(?!overlapSkip)(?:[^*]|\\\\\\*)|overlapSkip)*?\\*)+?\\*$|^_(?![_\\s])(?:(?:(?!overlapSkip)(?:[^_]|\\\\_)|overlapSkip)|_(?:(?!overlapSkip)(?:[^_]|\\\\_)|overlapSkip)*?_)+?_$/,\n      endAst: /[^punctuation\\s]\\*(?!\\*)|[punctuation]\\*(?!\\*)(?:(?=[punctuation\\s]|$))/,\n      // last char can't be punct, or final * must also be followed by punct (or endline)\n      endUnd: /[^\\s]_(?!_)(?:(?=[punctuation\\s])|$)/ // last char can't be a space, and final _ must preceed punct or \\s (or endline)\n\n    },\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n    del: noopTest$1,\n    text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*]|\\b_|$)|[^ ](?= {2,}\\n))|(?= {2,}\\n))/,\n    punctuation: /^([\\s*punctuation])/\n  }; // list of punctuation marks from common mark spec\n  // without * and _ to workaround cases with double emphasis\n\n  inline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\n  inline.punctuation = edit$1(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex(); // sequences em should skip over [title](link), `code`, <html>\n\n  inline._blockSkip = '\\\\[[^\\\\]]*?\\\\]\\\\([^\\\\)]*?\\\\)|`[^`]*?`|<[^>]*?>';\n  inline._overlapSkip = '__[^_]*?__|\\\\*\\\\*\\\\[^\\\\*\\\\]*?\\\\*\\\\*';\n  inline.em.start = edit$1(inline.em.start).replace(/punctuation/g, inline._punctuation).getRegex();\n  inline.em.middle = edit$1(inline.em.middle).replace(/punctuation/g, inline._punctuation).replace(/overlapSkip/g, inline._overlapSkip).getRegex();\n  inline.em.endAst = edit$1(inline.em.endAst, 'g').replace(/punctuation/g, inline._punctuation).getRegex();\n  inline.em.endUnd = edit$1(inline.em.endUnd, 'g').replace(/punctuation/g, inline._punctuation).getRegex();\n  inline.strong.start = edit$1(inline.strong.start).replace(/punctuation/g, inline._punctuation).getRegex();\n  inline.strong.middle = edit$1(inline.strong.middle).replace(/punctuation/g, inline._punctuation).replace(/blockSkip/g, inline._blockSkip).getRegex();\n  inline.strong.endAst = edit$1(inline.strong.endAst, 'g').replace(/punctuation/g, inline._punctuation).getRegex();\n  inline.strong.endUnd = edit$1(inline.strong.endUnd, 'g').replace(/punctuation/g, inline._punctuation).getRegex();\n  inline.blockSkip = edit$1(inline._blockSkip, 'g').getRegex();\n  inline.overlapSkip = edit$1(inline._overlapSkip, 'g').getRegex();\n  inline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n  inline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n  inline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n  inline.autolink = edit$1(inline.autolink).replace('scheme', inline._scheme).replace('email', inline._email).getRegex();\n  inline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n  inline.tag = edit$1(inline.tag).replace('comment', block._comment).replace('attribute', inline._attribute).getRegex();\n  inline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n  inline._href = /<(?:\\\\[<>]?|[^\\s<>\\\\])*>|[^\\s\\x00-\\x1f]*/;\n  inline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n  inline.link = edit$1(inline.link).replace('label', inline._label).replace('href', inline._href).replace('title', inline._title).getRegex();\n  inline.reflink = edit$1(inline.reflink).replace('label', inline._label).getRegex();\n  inline.reflinkSearch = edit$1(inline.reflinkSearch, 'g').replace('reflink', inline.reflink).replace('nolink', inline.nolink).getRegex();\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline.normal = merge$1({}, inline);\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline.pedantic = merge$1({}, inline.normal, {\n    strong: {\n      start: /^__|\\*\\*/,\n      middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n      endAst: /\\*\\*(?!\\*)/g,\n      endUnd: /__(?!_)/g\n    },\n    em: {\n      start: /^_|\\*/,\n      middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n      endAst: /\\*(?!\\*)/g,\n      endUnd: /_(?!_)/g\n    },\n    link: edit$1(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline._label).getRegex(),\n    reflink: edit$1(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline._label).getRegex()\n  });\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline.gfm = merge$1({}, inline.normal, {\n    escape: edit$1(inline.escape).replace('])', '~|])').getRegex(),\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n    _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n    del: /^~+(?=\\S)([\\s\\S]*?\\S)~+/,\n    text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*~]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?= {2,}\\n|[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/\n  });\n  inline.gfm.url = edit$1(inline.gfm.url, 'i').replace('email', inline.gfm._extended_email).getRegex();\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline.breaks = merge$1({}, inline.gfm, {\n    br: edit$1(inline.br).replace('{2,}', '*').getRegex(),\n    text: edit$1(inline.gfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n  });\n  var rules = {\n    block: block,\n    inline: inline\n  };\n\n  var defaults$2 = defaults.defaults;\n  var block$1 = rules.block,\n      inline$1 = rules.inline;\n  /**\n   * smartypants text replacement\n   */\n\n  function smartypants(text) {\n    return text // em-dashes\n    .replace(/---/g, \"\\u2014\") // en-dashes\n    .replace(/--/g, \"\\u2013\") // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\") // closing singles & apostrophes\n    .replace(/'/g, \"\\u2019\") // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\") // closing doubles\n    .replace(/\"/g, \"\\u201D\") // ellipses\n    .replace(/\\.{3}/g, \"\\u2026\");\n  }\n  /**\n   * mangle email addresses\n   */\n\n\n  function mangle(text) {\n    var out = '',\n        i,\n        ch;\n    var l = text.length;\n\n    for (i = 0; i < l; i++) {\n      ch = text.charCodeAt(i);\n\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  }\n  /**\n   * Block Lexer\n   */\n\n\n  var Lexer_1 = /*#__PURE__*/function () {\n    function Lexer(options) {\n      this.tokens = [];\n      this.tokens.links = Object.create(null);\n      this.options = options || defaults$2;\n      this.options.tokenizer = this.options.tokenizer || new Tokenizer_1();\n      this.tokenizer = this.options.tokenizer;\n      this.tokenizer.options = this.options;\n      var rules = {\n        block: block$1.normal,\n        inline: inline$1.normal\n      };\n\n      if (this.options.pedantic) {\n        rules.block = block$1.pedantic;\n        rules.inline = inline$1.pedantic;\n      } else if (this.options.gfm) {\n        rules.block = block$1.gfm;\n\n        if (this.options.breaks) {\n          rules.inline = inline$1.breaks;\n        } else {\n          rules.inline = inline$1.gfm;\n        }\n      }\n\n      this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n\n\n    /**\n     * Static Lex Method\n     */\n    Lexer.lex = function lex(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.lex(src);\n    }\n    /**\n     * Preprocessing\n     */\n    ;\n\n    var _proto = Lexer.prototype;\n\n    _proto.lex = function lex(src) {\n      src = src.replace(/\\r\\n|\\r/g, '\\n').replace(/\\t/g, '    ');\n      this.blockTokens(src, this.tokens, true);\n      this.inline(this.tokens);\n      return this.tokens;\n    }\n    /**\n     * Lexing\n     */\n    ;\n\n    _proto.blockTokens = function blockTokens(src, tokens, top) {\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (top === void 0) {\n        top = true;\n      }\n\n      src = src.replace(/^ +$/gm, '');\n      var token, i, l, lastToken;\n\n      while (src) {\n        // newline\n        if (token = this.tokenizer.space(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type) {\n            tokens.push(token);\n          }\n\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.code(src, tokens)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type) {\n            tokens.push(token);\n          } else {\n            lastToken = tokens[tokens.length - 1];\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n          }\n\n          continue;\n        } // fences\n\n\n        if (token = this.tokenizer.fences(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // heading\n\n\n        if (token = this.tokenizer.heading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // table no leading pipe (gfm)\n\n\n        if (token = this.tokenizer.nptable(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // hr\n\n\n        if (token = this.tokenizer.hr(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // blockquote\n\n\n        if (token = this.tokenizer.blockquote(src)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.blockTokens(token.text, [], top);\n          tokens.push(token);\n          continue;\n        } // list\n\n\n        if (token = this.tokenizer.list(src)) {\n          src = src.substring(token.raw.length);\n          l = token.items.length;\n\n          for (i = 0; i < l; i++) {\n            token.items[i].tokens = this.blockTokens(token.items[i].text, [], false);\n          }\n\n          tokens.push(token);\n          continue;\n        } // html\n\n\n        if (token = this.tokenizer.html(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // def\n\n\n        if (top && (token = this.tokenizer.def(src))) {\n          src = src.substring(token.raw.length);\n\n          if (!this.tokens.links[token.tag]) {\n            this.tokens.links[token.tag] = {\n              href: token.href,\n              title: token.title\n            };\n          }\n\n          continue;\n        } // table (gfm)\n\n\n        if (token = this.tokenizer.table(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // lheading\n\n\n        if (token = this.tokenizer.lheading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // top-level paragraph\n\n\n        if (top && (token = this.tokenizer.paragraph(src))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n\n\n        if (token = this.tokenizer.text(src, tokens)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type) {\n            tokens.push(token);\n          } else {\n            lastToken = tokens[tokens.length - 1];\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _proto.inline = function inline(tokens) {\n      var i, j, k, l2, row, token;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        switch (token.type) {\n          case 'paragraph':\n          case 'text':\n          case 'heading':\n            {\n              token.tokens = [];\n              this.inlineTokens(token.text, token.tokens);\n              break;\n            }\n\n          case 'table':\n            {\n              token.tokens = {\n                header: [],\n                cells: []\n              }; // header\n\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                token.tokens.header[j] = [];\n                this.inlineTokens(token.header[j], token.tokens.header[j]);\n              } // cells\n\n\n              l2 = token.cells.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.cells[j];\n                token.tokens.cells[j] = [];\n\n                for (k = 0; k < row.length; k++) {\n                  token.tokens.cells[j][k] = [];\n                  this.inlineTokens(row[k], token.tokens.cells[j][k]);\n                }\n              }\n\n              break;\n            }\n\n          case 'blockquote':\n            {\n              this.inline(token.tokens);\n              break;\n            }\n\n          case 'list':\n            {\n              l2 = token.items.length;\n\n              for (j = 0; j < l2; j++) {\n                this.inline(token.items[j].tokens);\n              }\n\n              break;\n            }\n        }\n      }\n\n      return tokens;\n    }\n    /**\n     * Lexing/Compiling\n     */\n    ;\n\n    _proto.inlineTokens = function inlineTokens(src, tokens, inLink, inRawBlock, prevChar) {\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (inLink === void 0) {\n        inLink = false;\n      }\n\n      if (inRawBlock === void 0) {\n        inRawBlock = false;\n      }\n\n      if (prevChar === void 0) {\n        prevChar = '';\n      }\n\n      var token; // String with links masked to avoid interference with em and strong\n\n      var maskedSrc = src;\n      var match; // Mask out reflinks\n\n      if (this.tokens.links) {\n        var links = Object.keys(this.tokens.links);\n\n        if (links.length > 0) {\n          while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n            if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n              maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n            }\n          }\n        }\n      } // Mask out other blocks\n\n\n      while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n      }\n\n      while (src) {\n        // escape\n        if (token = this.tokenizer.escape(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // tag\n\n\n        if (token = this.tokenizer.tag(src, inLink, inRawBlock)) {\n          src = src.substring(token.raw.length);\n          inLink = token.inLink;\n          inRawBlock = token.inRawBlock;\n          tokens.push(token);\n          continue;\n        } // link\n\n\n        if (token = this.tokenizer.link(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type === 'link') {\n            token.tokens = this.inlineTokens(token.text, [], true, inRawBlock);\n          }\n\n          tokens.push(token);\n          continue;\n        } // reflink, nolink\n\n\n        if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type === 'link') {\n            token.tokens = this.inlineTokens(token.text, [], true, inRawBlock);\n          }\n\n          tokens.push(token);\n          continue;\n        } // strong\n\n\n        if (token = this.tokenizer.strong(src, maskedSrc, prevChar)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n          tokens.push(token);\n          continue;\n        } // em\n\n\n        if (token = this.tokenizer.em(src, maskedSrc, prevChar)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n          tokens.push(token);\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.codespan(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // br\n\n\n        if (token = this.tokenizer.br(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // del (gfm)\n\n\n        if (token = this.tokenizer.del(src)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n          tokens.push(token);\n          continue;\n        } // autolink\n\n\n        if (token = this.tokenizer.autolink(src, mangle)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // url (gfm)\n\n\n        if (!inLink && (token = this.tokenizer.url(src, mangle))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n\n\n        if (token = this.tokenizer.inlineText(src, inRawBlock, smartypants)) {\n          src = src.substring(token.raw.length);\n          prevChar = token.raw.slice(-1);\n          tokens.push(token);\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _createClass(Lexer, null, [{\n      key: \"rules\",\n      get: function get() {\n        return {\n          block: block$1,\n          inline: inline$1\n        };\n      }\n    }]);\n\n    return Lexer;\n  }();\n\n  var defaults$3 = defaults.defaults;\n  var cleanUrl$1 = helpers.cleanUrl,\n      escape$1 = helpers.escape;\n  /**\n   * Renderer\n   */\n\n  var Renderer_1 = /*#__PURE__*/function () {\n    function Renderer(options) {\n      this.options = options || defaults$3;\n    }\n\n    var _proto = Renderer.prototype;\n\n    _proto.code = function code(_code, infostring, escaped) {\n      var lang = (infostring || '').match(/\\S*/)[0];\n\n      if (this.options.highlight) {\n        var out = this.options.highlight(_code, lang);\n\n        if (out != null && out !== _code) {\n          escaped = true;\n          _code = out;\n        }\n      }\n\n      if (!lang) {\n        return '<pre><code>' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\\n';\n      }\n\n      return '<pre><code class=\"' + this.options.langPrefix + escape$1(lang, true) + '\">' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\\n';\n    };\n\n    _proto.blockquote = function blockquote(quote) {\n      return '<blockquote>\\n' + quote + '</blockquote>\\n';\n    };\n\n    _proto.html = function html(_html) {\n      return _html;\n    };\n\n    _proto.heading = function heading(text, level, raw, slugger) {\n      if (this.options.headerIds) {\n        return '<h' + level + ' id=\"' + this.options.headerPrefix + slugger.slug(raw) + '\">' + text + '</h' + level + '>\\n';\n      } // ignore IDs\n\n\n      return '<h' + level + '>' + text + '</h' + level + '>\\n';\n    };\n\n    _proto.hr = function hr() {\n      return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n    };\n\n    _proto.list = function list(body, ordered, start) {\n      var type = ordered ? 'ol' : 'ul',\n          startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n      return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    };\n\n    _proto.listitem = function listitem(text) {\n      return '<li>' + text + '</li>\\n';\n    };\n\n    _proto.checkbox = function checkbox(checked) {\n      return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n    };\n\n    _proto.paragraph = function paragraph(text) {\n      return '<p>' + text + '</p>\\n';\n    };\n\n    _proto.table = function table(header, body) {\n      if (body) body = '<tbody>' + body + '</tbody>';\n      return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n    };\n\n    _proto.tablerow = function tablerow(content) {\n      return '<tr>\\n' + content + '</tr>\\n';\n    };\n\n    _proto.tablecell = function tablecell(content, flags) {\n      var type = flags.header ? 'th' : 'td';\n      var tag = flags.align ? '<' + type + ' align=\"' + flags.align + '\">' : '<' + type + '>';\n      return tag + content + '</' + type + '>\\n';\n    } // span level renderer\n    ;\n\n    _proto.strong = function strong(text) {\n      return '<strong>' + text + '</strong>';\n    };\n\n    _proto.em = function em(text) {\n      return '<em>' + text + '</em>';\n    };\n\n    _proto.codespan = function codespan(text) {\n      return '<code>' + text + '</code>';\n    };\n\n    _proto.br = function br() {\n      return this.options.xhtml ? '<br/>' : '<br>';\n    };\n\n    _proto.del = function del(text) {\n      return '<del>' + text + '</del>';\n    };\n\n    _proto.link = function link(href, title, text) {\n      href = cleanUrl$1(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<a href=\"' + escape$1(href) + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += '>' + text + '</a>';\n      return out;\n    };\n\n    _proto.image = function image(href, title, text) {\n      href = cleanUrl$1(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += this.options.xhtml ? '/>' : '>';\n      return out;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    return Renderer;\n  }();\n\n  /**\n   * TextRenderer\n   * returns only the textual part of the token\n   */\n  var TextRenderer_1 = /*#__PURE__*/function () {\n    function TextRenderer() {}\n\n    var _proto = TextRenderer.prototype;\n\n    // no need for block level renderers\n    _proto.strong = function strong(text) {\n      return text;\n    };\n\n    _proto.em = function em(text) {\n      return text;\n    };\n\n    _proto.codespan = function codespan(text) {\n      return text;\n    };\n\n    _proto.del = function del(text) {\n      return text;\n    };\n\n    _proto.html = function html(text) {\n      return text;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    _proto.link = function link(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.image = function image(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.br = function br() {\n      return '';\n    };\n\n    return TextRenderer;\n  }();\n\n  /**\n   * Slugger generates header id\n   */\n  var Slugger_1 = /*#__PURE__*/function () {\n    function Slugger() {\n      this.seen = {};\n    }\n    /**\n     * Convert string to unique id\n     */\n\n\n    var _proto = Slugger.prototype;\n\n    _proto.slug = function slug(value) {\n      var slug = value.toLowerCase().trim() // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '') // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n\n      if (this.seen.hasOwnProperty(slug)) {\n        var originalSlug = slug;\n\n        do {\n          this.seen[originalSlug]++;\n          slug = originalSlug + '-' + this.seen[originalSlug];\n        } while (this.seen.hasOwnProperty(slug));\n      }\n\n      this.seen[slug] = 0;\n      return slug;\n    };\n\n    return Slugger;\n  }();\n\n  var defaults$4 = defaults.defaults;\n  var unescape$1 = helpers.unescape;\n  /**\n   * Parsing & Compiling\n   */\n\n  var Parser_1 = /*#__PURE__*/function () {\n    function Parser(options) {\n      this.options = options || defaults$4;\n      this.options.renderer = this.options.renderer || new Renderer_1();\n      this.renderer = this.options.renderer;\n      this.renderer.options = this.options;\n      this.textRenderer = new TextRenderer_1();\n      this.slugger = new Slugger_1();\n    }\n    /**\n     * Static Parse Method\n     */\n\n\n    Parser.parse = function parse(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parse(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    ;\n\n    var _proto = Parser.prototype;\n\n    _proto.parse = function parse(tokens, top) {\n      if (top === void 0) {\n        top = true;\n      }\n\n      var out = '',\n          i,\n          j,\n          k,\n          l2,\n          l3,\n          row,\n          cell,\n          header,\n          body,\n          token,\n          ordered,\n          start,\n          loose,\n          itemBody,\n          item,\n          checked,\n          task,\n          checkbox;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        switch (token.type) {\n          case 'space':\n            {\n              continue;\n            }\n\n          case 'hr':\n            {\n              out += this.renderer.hr();\n              continue;\n            }\n\n          case 'heading':\n            {\n              out += this.renderer.heading(this.parseInline(token.tokens), token.depth, unescape$1(this.parseInline(token.tokens, this.textRenderer)), this.slugger);\n              continue;\n            }\n\n          case 'code':\n            {\n              out += this.renderer.code(token.text, token.lang, token.escaped);\n              continue;\n            }\n\n          case 'table':\n            {\n              header = ''; // header\n\n              cell = '';\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                cell += this.renderer.tablecell(this.parseInline(token.tokens.header[j]), {\n                  header: true,\n                  align: token.align[j]\n                });\n              }\n\n              header += this.renderer.tablerow(cell);\n              body = '';\n              l2 = token.cells.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.tokens.cells[j];\n                cell = '';\n                l3 = row.length;\n\n                for (k = 0; k < l3; k++) {\n                  cell += this.renderer.tablecell(this.parseInline(row[k]), {\n                    header: false,\n                    align: token.align[k]\n                  });\n                }\n\n                body += this.renderer.tablerow(cell);\n              }\n\n              out += this.renderer.table(header, body);\n              continue;\n            }\n\n          case 'blockquote':\n            {\n              body = this.parse(token.tokens);\n              out += this.renderer.blockquote(body);\n              continue;\n            }\n\n          case 'list':\n            {\n              ordered = token.ordered;\n              start = token.start;\n              loose = token.loose;\n              l2 = token.items.length;\n              body = '';\n\n              for (j = 0; j < l2; j++) {\n                item = token.items[j];\n                checked = item.checked;\n                task = item.task;\n                itemBody = '';\n\n                if (item.task) {\n                  checkbox = this.renderer.checkbox(checked);\n\n                  if (loose) {\n                    if (item.tokens.length > 0 && item.tokens[0].type === 'text') {\n                      item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n\n                      if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                      }\n                    } else {\n                      item.tokens.unshift({\n                        type: 'text',\n                        text: checkbox\n                      });\n                    }\n                  } else {\n                    itemBody += checkbox;\n                  }\n                }\n\n                itemBody += this.parse(item.tokens, loose);\n                body += this.renderer.listitem(itemBody, task, checked);\n              }\n\n              out += this.renderer.list(body, ordered, start);\n              continue;\n            }\n\n          case 'html':\n            {\n              // TODO parse inline content if parameter markdown=1\n              out += this.renderer.html(token.text);\n              continue;\n            }\n\n          case 'paragraph':\n            {\n              out += this.renderer.paragraph(this.parseInline(token.tokens));\n              continue;\n            }\n\n          case 'text':\n            {\n              body = token.tokens ? this.parseInline(token.tokens) : token.text;\n\n              while (i + 1 < l && tokens[i + 1].type === 'text') {\n                token = tokens[++i];\n                body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n              }\n\n              out += top ? this.renderer.paragraph(body) : body;\n              continue;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    ;\n\n    _proto.parseInline = function parseInline(tokens, renderer) {\n      renderer = renderer || this.renderer;\n      var out = '',\n          i,\n          token;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        switch (token.type) {\n          case 'escape':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          case 'html':\n            {\n              out += renderer.html(token.text);\n              break;\n            }\n\n          case 'link':\n            {\n              out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'image':\n            {\n              out += renderer.image(token.href, token.title, token.text);\n              break;\n            }\n\n          case 'strong':\n            {\n              out += renderer.strong(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'em':\n            {\n              out += renderer.em(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'codespan':\n            {\n              out += renderer.codespan(token.text);\n              break;\n            }\n\n          case 'br':\n            {\n              out += renderer.br();\n              break;\n            }\n\n          case 'del':\n            {\n              out += renderer.del(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'text':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    };\n\n    return Parser;\n  }();\n\n  var merge$2 = helpers.merge,\n      checkSanitizeDeprecation$1 = helpers.checkSanitizeDeprecation,\n      escape$2 = helpers.escape;\n  var getDefaults = defaults.getDefaults,\n      changeDefaults = defaults.changeDefaults,\n      defaults$5 = defaults.defaults;\n  /**\n   * Marked\n   */\n\n  function marked(src, opt, callback) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge$2({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation$1(opt);\n\n    if (callback) {\n      var highlight = opt.highlight;\n      var tokens;\n\n      try {\n        tokens = Lexer_1.lex(src, opt);\n      } catch (e) {\n        return callback(e);\n      }\n\n      var done = function done(err) {\n        var out;\n\n        if (!err) {\n          try {\n            out = Parser_1.parse(tokens, opt);\n          } catch (e) {\n            err = e;\n          }\n        }\n\n        opt.highlight = highlight;\n        return err ? callback(err) : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n      if (!tokens.length) return done();\n      var pending = 0;\n      marked.walkTokens(tokens, function (token) {\n        if (token.type === 'code') {\n          pending++;\n          setTimeout(function () {\n            highlight(token.text, token.lang, function (err, code) {\n              if (err) {\n                return done(err);\n              }\n\n              if (code != null && code !== token.text) {\n                token.text = code;\n                token.escaped = true;\n              }\n\n              pending--;\n\n              if (pending === 0) {\n                done();\n              }\n            });\n          }, 0);\n        }\n      });\n\n      if (pending === 0) {\n        done();\n      }\n\n      return;\n    }\n\n    try {\n      var _tokens = Lexer_1.lex(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(_tokens, opt.walkTokens);\n      }\n\n      return Parser_1.parse(_tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape$2(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  }\n  /**\n   * Options\n   */\n\n\n  marked.options = marked.setOptions = function (opt) {\n    merge$2(marked.defaults, opt);\n    changeDefaults(marked.defaults);\n    return marked;\n  };\n\n  marked.getDefaults = getDefaults;\n  marked.defaults = defaults$5;\n  /**\n   * Use Extension\n   */\n\n  marked.use = function (extension) {\n    var opts = merge$2({}, extension);\n\n    if (extension.renderer) {\n      (function () {\n        var renderer = marked.defaults.renderer || new Renderer_1();\n\n        var _loop = function _loop(prop) {\n          var prevRenderer = renderer[prop];\n\n          renderer[prop] = function () {\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n              args[_key] = arguments[_key];\n            }\n\n            var ret = extension.renderer[prop].apply(renderer, args);\n\n            if (ret === false) {\n              ret = prevRenderer.apply(renderer, args);\n            }\n\n            return ret;\n          };\n        };\n\n        for (var prop in extension.renderer) {\n          _loop(prop);\n        }\n\n        opts.renderer = renderer;\n      })();\n    }\n\n    if (extension.tokenizer) {\n      (function () {\n        var tokenizer = marked.defaults.tokenizer || new Tokenizer_1();\n\n        var _loop2 = function _loop2(prop) {\n          var prevTokenizer = tokenizer[prop];\n\n          tokenizer[prop] = function () {\n            for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n              args[_key2] = arguments[_key2];\n            }\n\n            var ret = extension.tokenizer[prop].apply(tokenizer, args);\n\n            if (ret === false) {\n              ret = prevTokenizer.apply(tokenizer, args);\n            }\n\n            return ret;\n          };\n        };\n\n        for (var prop in extension.tokenizer) {\n          _loop2(prop);\n        }\n\n        opts.tokenizer = tokenizer;\n      })();\n    }\n\n    if (extension.walkTokens) {\n      var walkTokens = marked.defaults.walkTokens;\n\n      opts.walkTokens = function (token) {\n        extension.walkTokens(token);\n\n        if (walkTokens) {\n          walkTokens(token);\n        }\n      };\n    }\n\n    marked.setOptions(opts);\n  };\n  /**\n   * Run callback for every token\n   */\n\n\n  marked.walkTokens = function (tokens, callback) {\n    for (var _iterator = _createForOfIteratorHelperLoose(tokens), _step; !(_step = _iterator()).done;) {\n      var token = _step.value;\n      callback(token);\n\n      switch (token.type) {\n        case 'table':\n          {\n            for (var _iterator2 = _createForOfIteratorHelperLoose(token.tokens.header), _step2; !(_step2 = _iterator2()).done;) {\n              var cell = _step2.value;\n              marked.walkTokens(cell, callback);\n            }\n\n            for (var _iterator3 = _createForOfIteratorHelperLoose(token.tokens.cells), _step3; !(_step3 = _iterator3()).done;) {\n              var row = _step3.value;\n\n              for (var _iterator4 = _createForOfIteratorHelperLoose(row), _step4; !(_step4 = _iterator4()).done;) {\n                var _cell = _step4.value;\n                marked.walkTokens(_cell, callback);\n              }\n            }\n\n            break;\n          }\n\n        case 'list':\n          {\n            marked.walkTokens(token.items, callback);\n            break;\n          }\n\n        default:\n          {\n            if (token.tokens) {\n              marked.walkTokens(token.tokens, callback);\n            }\n          }\n      }\n    }\n  };\n  /**\n   * Expose\n   */\n\n\n  marked.Parser = Parser_1;\n  marked.parser = Parser_1.parse;\n  marked.Renderer = Renderer_1;\n  marked.TextRenderer = TextRenderer_1;\n  marked.Lexer = Lexer_1;\n  marked.lexer = Lexer_1.lex;\n  marked.Tokenizer = Tokenizer_1;\n  marked.Slugger = Slugger_1;\n  marked.parse = marked;\n  var marked_1 = marked;\n\n  return marked_1;\n\n})));\n","// https://github.com/substack/deep-freeze/blob/master/index.js\n/** @param {any} obj */\nfunction deepFreeze(obj) {\n  Object.freeze(obj);\n\n  var objIsFunction = typeof obj === 'function';\n\n  Object.getOwnPropertyNames(obj).forEach(function(prop) {\n    if (Object.hasOwnProperty.call(obj, prop)\n    && obj[prop] !== null\n    && (typeof obj[prop] === \"object\" || typeof obj[prop] === \"function\")\n    // IE11 fix: https://github.com/highlightjs/highlight.js/issues/2318\n    // TODO: remove in the future\n    && (objIsFunction ? prop !== 'caller' && prop !== 'callee' && prop !== 'arguments' : true)\n    && !Object.isFrozen(obj[prop])) {\n      deepFreeze(obj[prop]);\n    }\n  });\n\n  return obj;\n}\n\nclass Response {\n  /**\n   * @param {CompiledMode} mode\n   */\n  constructor(mode) {\n    // eslint-disable-next-line no-undefined\n    if (mode.data === undefined) mode.data = {};\n\n    this.data = mode.data;\n  }\n\n  ignoreMatch() {\n    this.ignore = true;\n  }\n}\n\n/**\n * @param {string} value\n * @returns {string}\n */\nfunction escapeHTML(value) {\n  return value\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#x27;');\n}\n\n/**\n * performs a shallow merge of multiple objects into one\n *\n * @template T\n * @param {T} original\n * @param {Record<string,any>[]} objects\n * @returns {T} a single new object\n */\nfunction inherit(original, ...objects) {\n  /** @type Record<string,any> */\n  var result = {};\n\n  for (const key in original) {\n    result[key] = original[key];\n  }\n  objects.forEach(function(obj) {\n    for (const key in obj) {\n      result[key] = obj[key];\n    }\n  });\n  return /** @type {T} */ (result);\n}\n\n/* Stream merging */\n\n/**\n * @typedef Event\n * @property {'start'|'stop'} event\n * @property {number} offset\n * @property {Node} node\n */\n\n/**\n * @param {Node} node\n */\nfunction tag(node) {\n  return node.nodeName.toLowerCase();\n}\n\n/**\n * @param {Node} node\n */\nfunction nodeStream(node) {\n  /** @type Event[] */\n  var result = [];\n  (function _nodeStream(node, offset) {\n    for (var child = node.firstChild; child; child = child.nextSibling) {\n      if (child.nodeType === 3) {\n        offset += child.nodeValue.length;\n      } else if (child.nodeType === 1) {\n        result.push({\n          event: 'start',\n          offset: offset,\n          node: child\n        });\n        offset = _nodeStream(child, offset);\n        // Prevent void elements from having an end tag that would actually\n        // double them in the output. There are more void elements in HTML\n        // but we list only those realistically expected in code display.\n        if (!tag(child).match(/br|hr|img|input/)) {\n          result.push({\n            event: 'stop',\n            offset: offset,\n            node: child\n          });\n        }\n      }\n    }\n    return offset;\n  })(node, 0);\n  return result;\n}\n\n/**\n * @param {any} original - the original stream\n * @param {any} highlighted - stream of the highlighted source\n * @param {string} value - the original source itself\n */\nfunction mergeStreams(original, highlighted, value) {\n  var processed = 0;\n  var result = '';\n  var nodeStack = [];\n\n  function selectStream() {\n    if (!original.length || !highlighted.length) {\n      return original.length ? original : highlighted;\n    }\n    if (original[0].offset !== highlighted[0].offset) {\n      return (original[0].offset < highlighted[0].offset) ? original : highlighted;\n    }\n\n    /*\n    To avoid starting the stream just before it should stop the order is\n    ensured that original always starts first and closes last:\n\n    if (event1 == 'start' && event2 == 'start')\n      return original;\n    if (event1 == 'start' && event2 == 'stop')\n      return highlighted;\n    if (event1 == 'stop' && event2 == 'start')\n      return original;\n    if (event1 == 'stop' && event2 == 'stop')\n      return highlighted;\n\n    ... which is collapsed to:\n    */\n    return highlighted[0].event === 'start' ? original : highlighted;\n  }\n\n  /**\n   * @param {Node} node\n   */\n  function open(node) {\n    /** @param {Attr} attr */\n    function attr_str(attr) {\n      return ' ' + attr.nodeName + '=\"' + escapeHTML(attr.value) + '\"';\n    }\n    // @ts-ignore\n    result += '<' + tag(node) + [].map.call(node.attributes, attr_str).join('') + '>';\n  }\n\n  /**\n   * @param {Node} node\n   */\n  function close(node) {\n    result += '</' + tag(node) + '>';\n  }\n\n  /**\n   * @param {Event} event\n   */\n  function render(event) {\n    (event.event === 'start' ? open : close)(event.node);\n  }\n\n  while (original.length || highlighted.length) {\n    var stream = selectStream();\n    result += escapeHTML(value.substring(processed, stream[0].offset));\n    processed = stream[0].offset;\n    if (stream === original) {\n      /*\n      On any opening or closing tag of the original markup we first close\n      the entire highlighted node stack, then render the original tag along\n      with all the following original tags at the same offset and then\n      reopen all the tags on the highlighted stack.\n      */\n      nodeStack.reverse().forEach(close);\n      do {\n        render(stream.splice(0, 1)[0]);\n        stream = selectStream();\n      } while (stream === original && stream.length && stream[0].offset === processed);\n      nodeStack.reverse().forEach(open);\n    } else {\n      if (stream[0].event === 'start') {\n        nodeStack.push(stream[0].node);\n      } else {\n        nodeStack.pop();\n      }\n      render(stream.splice(0, 1)[0]);\n    }\n  }\n  return result + escapeHTML(value.substr(processed));\n}\n\nvar utils = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  escapeHTML: escapeHTML,\n  inherit: inherit,\n  nodeStream: nodeStream,\n  mergeStreams: mergeStreams\n});\n\n/**\n * @typedef {object} Renderer\n * @property {(text: string) => void} addText\n * @property {(node: Node) => void} openNode\n * @property {(node: Node) => void} closeNode\n * @property {() => string} value\n */\n\n/** @typedef {{kind?: string, sublanguage?: boolean}} Node */\n/** @typedef {{walk: (r: Renderer) => void}} Tree */\n/** */\n\nconst SPAN_CLOSE = '</span>';\n\n/**\n * Determines if a node needs to be wrapped in <span>\n *\n * @param {Node} node */\nconst emitsWrappingTags = (node) => {\n  return !!node.kind;\n};\n\n/** @type {Renderer} */\nclass HTMLRenderer {\n  /**\n   * Creates a new HTMLRenderer\n   *\n   * @param {Tree} parseTree - the parse tree (must support `walk` API)\n   * @param {{classPrefix: string}} options\n   */\n  constructor(parseTree, options) {\n    this.buffer = \"\";\n    this.classPrefix = options.classPrefix;\n    parseTree.walk(this);\n  }\n\n  /**\n   * Adds texts to the output stream\n   *\n   * @param {string} text */\n  addText(text) {\n    this.buffer += escapeHTML(text);\n  }\n\n  /**\n   * Adds a node open to the output stream (if needed)\n   *\n   * @param {Node} node */\n  openNode(node) {\n    if (!emitsWrappingTags(node)) return;\n\n    let className = node.kind;\n    if (!node.sublanguage) {\n      className = `${this.classPrefix}${className}`;\n    }\n    this.span(className);\n  }\n\n  /**\n   * Adds a node close to the output stream (if needed)\n   *\n   * @param {Node} node */\n  closeNode(node) {\n    if (!emitsWrappingTags(node)) return;\n\n    this.buffer += SPAN_CLOSE;\n  }\n\n  /**\n   * returns the accumulated buffer\n  */\n  value() {\n    return this.buffer;\n  }\n\n  // helpers\n\n  /**\n   * Builds a span element\n   *\n   * @param {string} className */\n  span(className) {\n    this.buffer += `<span class=\"${className}\">`;\n  }\n}\n\n/** @typedef {{kind?: string, sublanguage?: boolean, children: Node[]} | string} Node */\n/** @typedef {{kind?: string, sublanguage?: boolean, children: Node[]} } DataNode */\n/**  */\n\nclass TokenTree {\n  constructor() {\n    /** @type DataNode */\n    this.rootNode = { children: [] };\n    this.stack = [this.rootNode];\n  }\n\n  get top() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  get root() { return this.rootNode; }\n\n  /** @param {Node} node */\n  add(node) {\n    this.top.children.push(node);\n  }\n\n  /** @param {string} kind */\n  openNode(kind) {\n    /** @type Node */\n    const node = { kind, children: [] };\n    this.add(node);\n    this.stack.push(node);\n  }\n\n  closeNode() {\n    if (this.stack.length > 1) {\n      return this.stack.pop();\n    }\n    // eslint-disable-next-line no-undefined\n    return undefined;\n  }\n\n  closeAllNodes() {\n    while (this.closeNode());\n  }\n\n  toJSON() {\n    return JSON.stringify(this.rootNode, null, 4);\n  }\n\n  /**\n   * @typedef { import(\"./html_renderer\").Renderer } Renderer\n   * @param {Renderer} builder\n   */\n  walk(builder) {\n    // this does not\n    return this.constructor._walk(builder, this.rootNode);\n    // this works\n    // return TokenTree._walk(builder, this.rootNode);\n  }\n\n  /**\n   * @param {Renderer} builder\n   * @param {Node} node\n   */\n  static _walk(builder, node) {\n    if (typeof node === \"string\") {\n      builder.addText(node);\n    } else if (node.children) {\n      builder.openNode(node);\n      node.children.forEach((child) => this._walk(builder, child));\n      builder.closeNode(node);\n    }\n    return builder;\n  }\n\n  /**\n   * @param {Node} node\n   */\n  static _collapse(node) {\n    if (typeof node === \"string\") return;\n    if (!node.children) return;\n\n    if (node.children.every(el => typeof el === \"string\")) {\n      // node.text = node.children.join(\"\");\n      // delete node.children;\n      node.children = [node.children.join(\"\")];\n    } else {\n      node.children.forEach((child) => {\n        TokenTree._collapse(child);\n      });\n    }\n  }\n}\n\n/**\n  Currently this is all private API, but this is the minimal API necessary\n  that an Emitter must implement to fully support the parser.\n\n  Minimal interface:\n\n  - addKeyword(text, kind)\n  - addText(text)\n  - addSublanguage(emitter, subLanguageName)\n  - finalize()\n  - openNode(kind)\n  - closeNode()\n  - closeAllNodes()\n  - toHTML()\n\n*/\n\n/**\n * @implements {Emitter}\n */\nclass TokenTreeEmitter extends TokenTree {\n  /**\n   * @param {*} options\n   */\n  constructor(options) {\n    super();\n    this.options = options;\n  }\n\n  /**\n   * @param {string} text\n   * @param {string} kind\n   */\n  addKeyword(text, kind) {\n    if (text === \"\") { return; }\n\n    this.openNode(kind);\n    this.addText(text);\n    this.closeNode();\n  }\n\n  /**\n   * @param {string} text\n   */\n  addText(text) {\n    if (text === \"\") { return; }\n\n    this.add(text);\n  }\n\n  /**\n   * @param {Emitter & {root: DataNode}} emitter\n   * @param {string} name\n   */\n  addSublanguage(emitter, name) {\n    /** @type DataNode */\n    const node = emitter.root;\n    node.kind = name;\n    node.sublanguage = true;\n    this.add(node);\n  }\n\n  toHTML() {\n    const renderer = new HTMLRenderer(this, this.options);\n    return renderer.value();\n  }\n\n  finalize() {\n    return true;\n  }\n}\n\n/**\n * @param {string} value\n * @returns {RegExp}\n * */\nfunction escape(value) {\n  return new RegExp(value.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'), 'm');\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/**\n * @param {RegExp} re\n * @returns {number}\n */\nfunction countMatchGroups(re) {\n  return (new RegExp(re.toString() + '|')).exec('').length - 1;\n}\n\n/**\n * Does lexeme start with a regular expression match at the beginning\n * @param {RegExp} re\n * @param {string} lexeme\n */\nfunction startsWith(re, lexeme) {\n  var match = re && re.exec(lexeme);\n  return match && match.index === 0;\n}\n\n// join logically computes regexps.join(separator), but fixes the\n// backreferences so they continue to match.\n// it also places each individual regular expression into it's own\n// match group, keeping track of the sequencing of those match groups\n// is currently an exercise for the caller. :-)\n/**\n * @param {(string | RegExp)[]} regexps\n * @param {string} separator\n * @returns {string}\n */\nfunction join(regexps, separator = \"|\") {\n  // backreferenceRe matches an open parenthesis or backreference. To avoid\n  // an incorrect parse, it additionally matches the following:\n  // - [...] elements, where the meaning of parentheses and escapes change\n  // - other escape sequences, so we do not misparse escape sequences as\n  //   interesting elements\n  // - non-matching or lookahead parentheses, which do not capture. These\n  //   follow the '(' with a '?'.\n  var backreferenceRe = /\\[(?:[^\\\\\\]]|\\\\.)*\\]|\\(\\??|\\\\([1-9][0-9]*)|\\\\./;\n  var numCaptures = 0;\n  var ret = '';\n  for (var i = 0; i < regexps.length; i++) {\n    numCaptures += 1;\n    var offset = numCaptures;\n    var re = source(regexps[i]);\n    if (i > 0) {\n      ret += separator;\n    }\n    ret += \"(\";\n    while (re.length > 0) {\n      var match = backreferenceRe.exec(re);\n      if (match == null) {\n        ret += re;\n        break;\n      }\n      ret += re.substring(0, match.index);\n      re = re.substring(match.index + match[0].length);\n      if (match[0][0] === '\\\\' && match[1]) {\n        // Adjust the backreference.\n        ret += '\\\\' + String(Number(match[1]) + offset);\n      } else {\n        ret += match[0];\n        if (match[0] === '(') {\n          numCaptures++;\n        }\n      }\n    }\n    ret += \")\";\n  }\n  return ret;\n}\n\n// Common regexps\nconst IDENT_RE = '[a-zA-Z]\\\\w*';\nconst UNDERSCORE_IDENT_RE = '[a-zA-Z_]\\\\w*';\nconst NUMBER_RE = '\\\\b\\\\d+(\\\\.\\\\d+)?';\nconst C_NUMBER_RE = '(-?)(\\\\b0[xX][a-fA-F0-9]+|(\\\\b\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)([eE][-+]?\\\\d+)?)'; // 0x..., 0..., decimal, float\nconst BINARY_NUMBER_RE = '\\\\b(0b[01]+)'; // 0b...\nconst RE_STARTERS_RE = '!|!=|!==|%|%=|&|&&|&=|\\\\*|\\\\*=|\\\\+|\\\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\\\?|\\\\[|\\\\{|\\\\(|\\\\^|\\\\^=|\\\\||\\\\|=|\\\\|\\\\||~';\n\n/**\n* @param { Partial<Mode> & {binary?: string | RegExp} } opts\n*/\nconst SHEBANG = (opts = {}) => {\n  const beginShebang = /^#![ ]*\\//;\n  if (opts.binary) {\n    opts.begin = concat(\n      beginShebang,\n      /.*\\b/,\n      opts.binary,\n      /\\b.*/);\n  }\n  return inherit({\n    className: 'meta',\n    begin: beginShebang,\n    end: /$/,\n    relevance: 0,\n    /** @type {ModeCallback} */\n    \"on:begin\": (m, resp) => {\n      if (m.index !== 0) resp.ignoreMatch();\n    }\n  }, opts);\n};\n\n// Common modes\nconst BACKSLASH_ESCAPE = {\n  begin: '\\\\\\\\[\\\\s\\\\S]', relevance: 0\n};\nconst APOS_STRING_MODE = {\n  className: 'string',\n  begin: '\\'',\n  end: '\\'',\n  illegal: '\\\\n',\n  contains: [BACKSLASH_ESCAPE]\n};\nconst QUOTE_STRING_MODE = {\n  className: 'string',\n  begin: '\"',\n  end: '\"',\n  illegal: '\\\\n',\n  contains: [BACKSLASH_ESCAPE]\n};\nconst PHRASAL_WORDS_MODE = {\n  begin: /\\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\\b/\n};\n/**\n * Creates a comment mode\n *\n * @param {string | RegExp} begin\n * @param {string | RegExp} end\n * @param {Mode | {}} [modeOptions]\n * @returns {Partial<Mode>}\n */\nconst COMMENT = function(begin, end, modeOptions = {}) {\n  var mode = inherit(\n    {\n      className: 'comment',\n      begin,\n      end,\n      contains: []\n    },\n    modeOptions\n  );\n  mode.contains.push(PHRASAL_WORDS_MODE);\n  mode.contains.push({\n    className: 'doctag',\n    begin: '(?:TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):',\n    relevance: 0\n  });\n  return mode;\n};\nconst C_LINE_COMMENT_MODE = COMMENT('//', '$');\nconst C_BLOCK_COMMENT_MODE = COMMENT('/\\\\*', '\\\\*/');\nconst HASH_COMMENT_MODE = COMMENT('#', '$');\nconst NUMBER_MODE = {\n  className: 'number',\n  begin: NUMBER_RE,\n  relevance: 0\n};\nconst C_NUMBER_MODE = {\n  className: 'number',\n  begin: C_NUMBER_RE,\n  relevance: 0\n};\nconst BINARY_NUMBER_MODE = {\n  className: 'number',\n  begin: BINARY_NUMBER_RE,\n  relevance: 0\n};\nconst CSS_NUMBER_MODE = {\n  className: 'number',\n  begin: NUMBER_RE + '(' +\n    '%|em|ex|ch|rem' +\n    '|vw|vh|vmin|vmax' +\n    '|cm|mm|in|pt|pc|px' +\n    '|deg|grad|rad|turn' +\n    '|s|ms' +\n    '|Hz|kHz' +\n    '|dpi|dpcm|dppx' +\n    ')?',\n  relevance: 0\n};\nconst REGEXP_MODE = {\n  // this outer rule makes sure we actually have a WHOLE regex and not simply\n  // an expression such as:\n  //\n  //     3 / something\n  //\n  // (which will then blow up when regex's `illegal` sees the newline)\n  begin: /(?=\\/[^/\\n]*\\/)/,\n  contains: [{\n    className: 'regexp',\n    begin: /\\//,\n    end: /\\/[gimuy]*/,\n    illegal: /\\n/,\n    contains: [\n      BACKSLASH_ESCAPE,\n      {\n        begin: /\\[/,\n        end: /\\]/,\n        relevance: 0,\n        contains: [BACKSLASH_ESCAPE]\n      }\n    ]\n  }]\n};\nconst TITLE_MODE = {\n  className: 'title',\n  begin: IDENT_RE,\n  relevance: 0\n};\nconst UNDERSCORE_TITLE_MODE = {\n  className: 'title',\n  begin: UNDERSCORE_IDENT_RE,\n  relevance: 0\n};\nconst METHOD_GUARD = {\n  // excludes method names from keyword processing\n  begin: '\\\\.\\\\s*' + UNDERSCORE_IDENT_RE,\n  relevance: 0\n};\n\n/**\n * Adds end same as begin mechanics to a mode\n *\n * Your mode must include at least a single () match group as that first match\n * group is what is used for comparison\n * @param {Partial<Mode>} mode\n */\nconst END_SAME_AS_BEGIN = function(mode) {\n  return Object.assign(mode,\n    {\n      /** @type {ModeCallback} */\n      'on:begin': (m, resp) => { resp.data._beginMatch = m[1]; },\n      /** @type {ModeCallback} */\n      'on:end': (m, resp) => { if (resp.data._beginMatch !== m[1]) resp.ignoreMatch(); }\n    });\n};\n\nvar MODES = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  IDENT_RE: IDENT_RE,\n  UNDERSCORE_IDENT_RE: UNDERSCORE_IDENT_RE,\n  NUMBER_RE: NUMBER_RE,\n  C_NUMBER_RE: C_NUMBER_RE,\n  BINARY_NUMBER_RE: BINARY_NUMBER_RE,\n  RE_STARTERS_RE: RE_STARTERS_RE,\n  SHEBANG: SHEBANG,\n  BACKSLASH_ESCAPE: BACKSLASH_ESCAPE,\n  APOS_STRING_MODE: APOS_STRING_MODE,\n  QUOTE_STRING_MODE: QUOTE_STRING_MODE,\n  PHRASAL_WORDS_MODE: PHRASAL_WORDS_MODE,\n  COMMENT: COMMENT,\n  C_LINE_COMMENT_MODE: C_LINE_COMMENT_MODE,\n  C_BLOCK_COMMENT_MODE: C_BLOCK_COMMENT_MODE,\n  HASH_COMMENT_MODE: HASH_COMMENT_MODE,\n  NUMBER_MODE: NUMBER_MODE,\n  C_NUMBER_MODE: C_NUMBER_MODE,\n  BINARY_NUMBER_MODE: BINARY_NUMBER_MODE,\n  CSS_NUMBER_MODE: CSS_NUMBER_MODE,\n  REGEXP_MODE: REGEXP_MODE,\n  TITLE_MODE: TITLE_MODE,\n  UNDERSCORE_TITLE_MODE: UNDERSCORE_TITLE_MODE,\n  METHOD_GUARD: METHOD_GUARD,\n  END_SAME_AS_BEGIN: END_SAME_AS_BEGIN\n});\n\n// keywords that should have no default relevance value\nvar COMMON_KEYWORDS = 'of and for in not or if then'.split(' ');\n\n// compilation\n\n/**\n * Compiles a language definition result\n *\n * Given the raw result of a language definition (Language), compiles this so\n * that it is ready for highlighting code.\n * @param {Language} language\n * @returns {CompiledLanguage}\n */\nfunction compileLanguage(language) {\n  /**\n   * Builds a regex with the case sensativility of the current language\n   *\n   * @param {RegExp | string} value\n   * @param {boolean} [global]\n   */\n  function langRe(value, global) {\n    return new RegExp(\n      source(value),\n      'm' + (language.case_insensitive ? 'i' : '') + (global ? 'g' : '')\n    );\n  }\n\n  /**\n    Stores multiple regular expressions and allows you to quickly search for\n    them all in a string simultaneously - returning the first match.  It does\n    this by creating a huge (a|b|c) regex - each individual item wrapped with ()\n    and joined by `|` - using match groups to track position.  When a match is\n    found checking which position in the array has content allows us to figure\n    out which of the original regexes / match groups triggered the match.\n\n    The match object itself (the result of `Regex.exec`) is returned but also\n    enhanced by merging in any meta-data that was registered with the regex.\n    This is how we keep track of which mode matched, and what type of rule\n    (`illegal`, `begin`, end, etc).\n  */\n  class MultiRegex {\n    constructor() {\n      this.matchIndexes = {};\n      // @ts-ignore\n      this.regexes = [];\n      this.matchAt = 1;\n      this.position = 0;\n    }\n\n    // @ts-ignore\n    addRule(re, opts) {\n      opts.position = this.position++;\n      // @ts-ignore\n      this.matchIndexes[this.matchAt] = opts;\n      this.regexes.push([opts, re]);\n      this.matchAt += countMatchGroups(re) + 1;\n    }\n\n    compile() {\n      if (this.regexes.length === 0) {\n        // avoids the need to check length every time exec is called\n        // @ts-ignore\n        this.exec = () => null;\n      }\n      const terminators = this.regexes.map(el => el[1]);\n      this.matcherRe = langRe(join(terminators), true);\n      this.lastIndex = 0;\n    }\n\n    /** @param {string} s */\n    exec(s) {\n      this.matcherRe.lastIndex = this.lastIndex;\n      const match = this.matcherRe.exec(s);\n      if (!match) { return null; }\n\n      // eslint-disable-next-line no-undefined\n      const i = match.findIndex((el, i) => i > 0 && el !== undefined);\n      // @ts-ignore\n      const matchData = this.matchIndexes[i];\n      // trim off any earlier non-relevant match groups (ie, the other regex\n      // match groups that make up the multi-matcher)\n      match.splice(0, i);\n\n      return Object.assign(match, matchData);\n    }\n  }\n\n  /*\n    Created to solve the key deficiently with MultiRegex - there is no way to\n    test for multiple matches at a single location.  Why would we need to do\n    that?  In the future a more dynamic engine will allow certain matches to be\n    ignored.  An example: if we matched say the 3rd regex in a large group but\n    decided to ignore it - we'd need to started testing again at the 4th\n    regex... but MultiRegex itself gives us no real way to do that.\n\n    So what this class creates MultiRegexs on the fly for whatever search\n    position they are needed.\n\n    NOTE: These additional MultiRegex objects are created dynamically.  For most\n    grammars most of the time we will never actually need anything more than the\n    first MultiRegex - so this shouldn't have too much overhead.\n\n    Say this is our search group, and we match regex3, but wish to ignore it.\n\n      regex1 | regex2 | regex3 | regex4 | regex5    ' ie, startAt = 0\n\n    What we need is a new MultiRegex that only includes the remaining\n    possibilities:\n\n      regex4 | regex5                               ' ie, startAt = 3\n\n    This class wraps all that complexity up in a simple API... `startAt` decides\n    where in the array of expressions to start doing the matching. It\n    auto-increments, so if a match is found at position 2, then startAt will be\n    set to 3.  If the end is reached startAt will return to 0.\n\n    MOST of the time the parser will be setting startAt manually to 0.\n  */\n  class ResumableMultiRegex {\n    constructor() {\n      // @ts-ignore\n      this.rules = [];\n      // @ts-ignore\n      this.multiRegexes = [];\n      this.count = 0;\n\n      this.lastIndex = 0;\n      this.regexIndex = 0;\n    }\n\n    // @ts-ignore\n    getMatcher(index) {\n      if (this.multiRegexes[index]) return this.multiRegexes[index];\n\n      const matcher = new MultiRegex();\n      this.rules.slice(index).forEach(([re, opts]) => matcher.addRule(re, opts));\n      matcher.compile();\n      this.multiRegexes[index] = matcher;\n      return matcher;\n    }\n\n    considerAll() {\n      this.regexIndex = 0;\n    }\n\n    // @ts-ignore\n    addRule(re, opts) {\n      this.rules.push([re, opts]);\n      if (opts.type === \"begin\") this.count++;\n    }\n\n    /** @param {string} s */\n    exec(s) {\n      const m = this.getMatcher(this.regexIndex);\n      m.lastIndex = this.lastIndex;\n      const result = m.exec(s);\n      if (result) {\n        this.regexIndex += result.position + 1;\n        if (this.regexIndex === this.count) { // wrap-around\n          this.regexIndex = 0;\n        }\n      }\n\n      // this.regexIndex = 0;\n      return result;\n    }\n  }\n\n  /**\n   * Given a mode, builds a huge ResumableMultiRegex that can be used to walk\n   * the content and find matches.\n   *\n   * @param {CompiledMode} mode\n   * @returns {ResumableMultiRegex}\n   */\n  function buildModeRegex(mode) {\n    const mm = new ResumableMultiRegex();\n\n    mode.contains.forEach(term => mm.addRule(term.begin, { rule: term, type: \"begin\" }));\n\n    if (mode.terminator_end) {\n      mm.addRule(mode.terminator_end, { type: \"end\" });\n    }\n    if (mode.illegal) {\n      mm.addRule(mode.illegal, { type: \"illegal\" });\n    }\n\n    return mm;\n  }\n\n  // TODO: We need negative look-behind support to do this properly\n  /**\n   * Skip a match if it has a preceding or trailing dot\n   *\n   * This is used for `beginKeywords` to prevent matching expressions such as\n   * `bob.keyword.do()`. The mode compiler automatically wires this up as a\n   * special _internal_ 'on:begin' callback for modes with `beginKeywords`\n   * @param {RegExpMatchArray} match\n   * @param {CallbackResponse} response\n   */\n  function skipIfhasPrecedingOrTrailingDot(match, response) {\n    const before = match.input[match.index - 1];\n    const after = match.input[match.index + match[0].length];\n    if (before === \".\" || after === \".\") {\n      response.ignoreMatch();\n    }\n  }\n\n  /** skip vs abort vs ignore\n   *\n   * @skip   - The mode is still entered and exited normally (and contains rules apply),\n   *           but all content is held and added to the parent buffer rather than being\n   *           output when the mode ends.  Mostly used with `sublanguage` to build up\n   *           a single large buffer than can be parsed by sublanguage.\n   *\n   *             - The mode begin ands ends normally.\n   *             - Content matched is added to the parent mode buffer.\n   *             - The parser cursor is moved forward normally.\n   *\n   * @abort  - A hack placeholder until we have ignore.  Aborts the mode (as if it\n   *           never matched) but DOES NOT continue to match subsequent `contains`\n   *           modes.  Abort is bad/suboptimal because it can result in modes\n   *           farther down not getting applied because an earlier rule eats the\n   *           content but then aborts.\n   *\n   *             - The mode does not begin.\n   *             - Content matched by `begin` is added to the mode buffer.\n   *             - The parser cursor is moved forward accordingly.\n   *\n   * @ignore - Ignores the mode (as if it never matched) and continues to match any\n   *           subsequent `contains` modes.  Ignore isn't technically possible with\n   *           the current parser implementation.\n   *\n   *             - The mode does not begin.\n   *             - Content matched by `begin` is ignored.\n   *             - The parser cursor is not moved forward.\n   */\n\n  /**\n   * Compiles an individual mode\n   *\n   * This can raise an error if the mode contains certain detectable known logic\n   * issues.\n   * @param {Mode} mode\n   * @param {CompiledMode | null} [parent]\n   * @returns {CompiledMode | never}\n   */\n  function compileMode(mode, parent) {\n    const cmode = /** @type CompiledMode */ (mode);\n    if (mode.compiled) return cmode;\n    mode.compiled = true;\n\n    // __beforeBegin is considered private API, internal use only\n    mode.__beforeBegin = null;\n\n    mode.keywords = mode.keywords || mode.beginKeywords;\n\n    let kw_pattern = null;\n    if (typeof mode.keywords === \"object\") {\n      kw_pattern = mode.keywords.$pattern;\n      delete mode.keywords.$pattern;\n    }\n\n    if (mode.keywords) {\n      mode.keywords = compileKeywords(mode.keywords, language.case_insensitive);\n    }\n\n    // both are not allowed\n    if (mode.lexemes && kw_pattern) {\n      throw new Error(\"ERR: Prefer `keywords.$pattern` to `mode.lexemes`, BOTH are not allowed. (see mode reference) \");\n    }\n\n    // `mode.lexemes` was the old standard before we added and now recommend\n    // using `keywords.$pattern` to pass the keyword pattern\n    cmode.keywordPatternRe = langRe(mode.lexemes || kw_pattern || /\\w+/, true);\n\n    if (parent) {\n      if (mode.beginKeywords) {\n        // for languages with keywords that include non-word characters checking for\n        // a word boundary is not sufficient, so instead we check for a word boundary\n        // or whitespace - this does no harm in any case since our keyword engine\n        // doesn't allow spaces in keywords anyways and we still check for the boundary\n        // first\n        mode.begin = '\\\\b(' + mode.beginKeywords.split(' ').join('|') + ')(?=\\\\b|\\\\s)';\n        mode.__beforeBegin = skipIfhasPrecedingOrTrailingDot;\n      }\n      if (!mode.begin) mode.begin = /\\B|\\b/;\n      cmode.beginRe = langRe(mode.begin);\n      if (mode.endSameAsBegin) mode.end = mode.begin;\n      if (!mode.end && !mode.endsWithParent) mode.end = /\\B|\\b/;\n      if (mode.end) cmode.endRe = langRe(mode.end);\n      cmode.terminator_end = source(mode.end) || '';\n      if (mode.endsWithParent && parent.terminator_end) {\n        cmode.terminator_end += (mode.end ? '|' : '') + parent.terminator_end;\n      }\n    }\n    if (mode.illegal) cmode.illegalRe = langRe(mode.illegal);\n    // eslint-disable-next-line no-undefined\n    if (mode.relevance === undefined) mode.relevance = 1;\n    if (!mode.contains) mode.contains = [];\n\n    mode.contains = [].concat(...mode.contains.map(function(c) {\n      return expand_or_clone_mode(c === 'self' ? mode : c);\n    }));\n    mode.contains.forEach(function(c) { compileMode(/** @type Mode */ (c), cmode); });\n\n    if (mode.starts) {\n      compileMode(mode.starts, parent);\n    }\n\n    cmode.matcher = buildModeRegex(cmode);\n    return cmode;\n  }\n\n  // self is not valid at the top-level\n  if (language.contains && language.contains.includes('self')) {\n    throw new Error(\"ERR: contains `self` is not supported at the top-level of a language.  See documentation.\");\n  }\n  return compileMode(/** @type Mode */ (language));\n}\n\n/**\n * Determines if a mode has a dependency on it's parent or not\n *\n * If a mode does have a parent dependency then often we need to clone it if\n * it's used in multiple places so that each copy points to the correct parent,\n * where-as modes without a parent can often safely be re-used at the bottom of\n * a mode chain.\n *\n * @param {Mode | null} mode\n * @returns {boolean} - is there a dependency on the parent?\n * */\nfunction dependencyOnParent(mode) {\n  if (!mode) return false;\n\n  return mode.endsWithParent || dependencyOnParent(mode.starts);\n}\n\n/**\n * Expands a mode or clones it if necessary\n *\n * This is necessary for modes with parental dependenceis (see notes on\n * `dependencyOnParent`) and for nodes that have `variants` - which must then be\n * exploded into their own individual modes at compile time.\n *\n * @param {Mode} mode\n * @returns {Mode | Mode[]}\n * */\nfunction expand_or_clone_mode(mode) {\n  if (mode.variants && !mode.cached_variants) {\n    mode.cached_variants = mode.variants.map(function(variant) {\n      return inherit(mode, { variants: null }, variant);\n    });\n  }\n\n  // EXPAND\n  // if we have variants then essentially \"replace\" the mode with the variants\n  // this happens in compileMode, where this function is called from\n  if (mode.cached_variants) {\n    return mode.cached_variants;\n  }\n\n  // CLONE\n  // if we have dependencies on parents then we need a unique\n  // instance of ourselves, so we can be reused with many\n  // different parents without issue\n  if (dependencyOnParent(mode)) {\n    return inherit(mode, { starts: mode.starts ? inherit(mode.starts) : null });\n  }\n\n  if (Object.isFrozen(mode)) {\n    return inherit(mode);\n  }\n\n  // no special dependency issues, just return ourselves\n  return mode;\n}\n\n/***********************************************\n  Keywords\n***********************************************/\n\n/**\n * Given raw keywords from a language definition, compile them.\n *\n * @param {string | Record<string,string>} rawKeywords\n * @param {boolean} case_insensitive\n */\nfunction compileKeywords(rawKeywords, case_insensitive) {\n  /** @type KeywordDict */\n  var compiled_keywords = {};\n\n  if (typeof rawKeywords === 'string') { // string\n    splitAndCompile('keyword', rawKeywords);\n  } else {\n    Object.keys(rawKeywords).forEach(function(className) {\n      splitAndCompile(className, rawKeywords[className]);\n    });\n  }\n  return compiled_keywords;\n\n  // ---\n\n  /**\n   * Compiles an individual list of keywords\n   *\n   * Ex: \"for if when while|5\"\n   *\n   * @param {string} className\n   * @param {string} keywordList\n   */\n  function splitAndCompile(className, keywordList) {\n    if (case_insensitive) {\n      keywordList = keywordList.toLowerCase();\n    }\n    keywordList.split(' ').forEach(function(keyword) {\n      var pair = keyword.split('|');\n      compiled_keywords[pair[0]] = [className, scoreForKeyword(pair[0], pair[1])];\n    });\n  }\n}\n\n/**\n * Returns the proper score for a given keyword\n *\n * Also takes into account comment keywords, which will be scored 0 UNLESS\n * another score has been manually assigned.\n * @param {string} keyword\n * @param {string} [providedScore]\n */\nfunction scoreForKeyword(keyword, providedScore) {\n  // manual scores always win over common keywords\n  // so you can force a score of 1 if you really insist\n  if (providedScore) {\n    return Number(providedScore);\n  }\n\n  return commonKeyword(keyword) ? 0 : 1;\n}\n\n/**\n * Determines if a given keyword is common or not\n *\n * @param {string} keyword */\nfunction commonKeyword(keyword) {\n  return COMMON_KEYWORDS.includes(keyword.toLowerCase());\n}\n\nvar version = \"10.1.2\";\n\n/*\nSyntax highlighting with language autodetection.\nhttps://highlightjs.org/\n*/\n\nconst escape$1 = escapeHTML;\nconst inherit$1 = inherit;\n\nconst { nodeStream: nodeStream$1, mergeStreams: mergeStreams$1 } = utils;\nconst NO_MATCH = Symbol(\"nomatch\");\n\n/**\n * @param {any} hljs - object that is extended (legacy)\n * @returns {HLJSApi}\n */\nconst HLJS = function(hljs) {\n  // Convenience variables for build-in objects\n  /** @type {unknown[]} */\n  var ArrayProto = [];\n\n  // Global internal variables used within the highlight.js library.\n  /** @type {Record<string, Language>} */\n  var languages = Object.create(null);\n  /** @type {Record<string, string>} */\n  var aliases = Object.create(null);\n  /** @type {HLJSPlugin[]} */\n  var plugins = [];\n\n  // safe/production mode - swallows more errors, tries to keep running\n  // even if a single syntax or parse hits a fatal error\n  var SAFE_MODE = true;\n  var fixMarkupRe = /(^(<[^>]+>|\\t|)+|\\n)/gm;\n  var LANGUAGE_NOT_FOUND = \"Could not find the language '{}', did you forget to load/include a language module?\";\n  /** @type {Language} */\n  const PLAINTEXT_LANGUAGE = { disableAutodetect: true, name: 'Plain text', contains: [] };\n\n  // Global options used when within external APIs. This is modified when\n  // calling the `hljs.configure` function.\n  /** @type HLJSOptions */\n  var options = {\n    noHighlightRe: /^(no-?highlight)$/i,\n    languageDetectRe: /\\blang(?:uage)?-([\\w-]+)\\b/i,\n    classPrefix: 'hljs-',\n    tabReplace: null,\n    useBR: false,\n    languages: null,\n    // beta configuration options, subject to change, welcome to discuss\n    // https://github.com/highlightjs/highlight.js/issues/1086\n    __emitter: TokenTreeEmitter\n  };\n\n  /* Utility functions */\n\n  /**\n   * Tests a language name to see if highlighting should be skipped\n   * @param {string} languageName\n   */\n  function shouldNotHighlight(languageName) {\n    return options.noHighlightRe.test(languageName);\n  }\n\n  /**\n   * @param {HighlightedHTMLElement} block - the HTML element to determine language for\n   */\n  function blockLanguage(block) {\n    var classes = block.className + ' ';\n\n    classes += block.parentNode ? block.parentNode.className : '';\n\n    // language-* takes precedence over non-prefixed class names.\n    const match = options.languageDetectRe.exec(classes);\n    if (match) {\n      var language = getLanguage(match[1]);\n      if (!language) {\n        console.warn(LANGUAGE_NOT_FOUND.replace(\"{}\", match[1]));\n        console.warn(\"Falling back to no-highlight mode for this block.\", block);\n      }\n      return language ? match[1] : 'no-highlight';\n    }\n\n    return classes\n      .split(/\\s+/)\n      .find((_class) => shouldNotHighlight(_class) || getLanguage(_class));\n  }\n\n  /**\n   * Core highlighting function.\n   *\n   * @param {string} languageName - the language to use for highlighting\n   * @param {string} code - the code to highlight\n   * @param {boolean} [ignoreIllegals] - whether to ignore illegal matches, default is to bail\n   * @param {Mode} [continuation] - current continuation mode, if any\n   *\n   * @returns {HighlightResult} Result - an object that represents the result\n   * @property {string} language - the language name\n   * @property {number} relevance - the relevance score\n   * @property {string} value - the highlighted HTML code\n   * @property {string} code - the original raw code\n   * @property {Mode} top - top of the current mode stack\n   * @property {boolean} illegal - indicates whether any illegal matches were found\n  */\n  function highlight(languageName, code, ignoreIllegals, continuation) {\n    /** @type {{ code: string, language: string, result?: any }} */\n    var context = {\n      code,\n      language: languageName\n    };\n    // the plugin can change the desired language or the code to be highlighted\n    // just be changing the object it was passed\n    fire(\"before:highlight\", context);\n\n    // a before plugin can usurp the result completely by providing it's own\n    // in which case we don't even need to call highlight\n    var result = context.result ?\n      context.result :\n      _highlight(context.language, context.code, ignoreIllegals, continuation);\n\n    result.code = context.code;\n    // the plugin can change anything in result to suite it\n    fire(\"after:highlight\", result);\n\n    return result;\n  }\n\n  /**\n   * private highlight that's used internally and does not fire callbacks\n   *\n   * @param {string} languageName - the language to use for highlighting\n   * @param {string} code - the code to highlight\n   * @param {boolean} [ignoreIllegals] - whether to ignore illegal matches, default is to bail\n   * @param {Mode} [continuation] - current continuation mode, if any\n  */\n  function _highlight(languageName, code, ignoreIllegals, continuation) {\n    var codeToHighlight = code;\n\n    /**\n     * Return keyword data if a match is a keyword\n     * @param {CompiledMode} mode - current mode\n     * @param {RegExpMatchArray} match - regexp match data\n     * @returns {KeywordData | false}\n     */\n    function keywordData(mode, match) {\n      var matchText = language.case_insensitive ? match[0].toLowerCase() : match[0];\n      return Object.prototype.hasOwnProperty.call(mode.keywords, matchText) && mode.keywords[matchText];\n    }\n\n    function processKeywords() {\n      if (!top.keywords) {\n        emitter.addText(mode_buffer);\n        return;\n      }\n\n      let last_index = 0;\n      top.keywordPatternRe.lastIndex = 0;\n      let match = top.keywordPatternRe.exec(mode_buffer);\n      let buf = \"\";\n\n      while (match) {\n        buf += mode_buffer.substring(last_index, match.index);\n        const data = keywordData(top, match);\n        if (data) {\n          const [kind, keywordRelevance] = data;\n          emitter.addText(buf);\n          buf = \"\";\n\n          relevance += keywordRelevance;\n          emitter.addKeyword(match[0], kind);\n        } else {\n          buf += match[0];\n        }\n        last_index = top.keywordPatternRe.lastIndex;\n        match = top.keywordPatternRe.exec(mode_buffer);\n      }\n      buf += mode_buffer.substr(last_index);\n      emitter.addText(buf);\n    }\n\n    function processSubLanguage() {\n      if (mode_buffer === \"\") return;\n      /** @type HighlightResult */\n      var result = null;\n\n      if (typeof top.subLanguage === 'string') {\n        if (!languages[top.subLanguage]) {\n          emitter.addText(mode_buffer);\n          return;\n        }\n        result = _highlight(top.subLanguage, mode_buffer, true, continuations[top.subLanguage]);\n        continuations[top.subLanguage] = result.top;\n      } else {\n        result = highlightAuto(mode_buffer, top.subLanguage.length ? top.subLanguage : null);\n      }\n\n      // Counting embedded language score towards the host language may be disabled\n      // with zeroing the containing mode relevance. Use case in point is Markdown that\n      // allows XML everywhere and makes every XML snippet to have a much larger Markdown\n      // score.\n      if (top.relevance > 0) {\n        relevance += result.relevance;\n      }\n      emitter.addSublanguage(result.emitter, result.language);\n    }\n\n    function processBuffer() {\n      if (top.subLanguage != null) {\n        processSubLanguage();\n      } else {\n        processKeywords();\n      }\n      mode_buffer = '';\n    }\n\n    /**\n     * @param {Mode} mode - new mode to start\n     */\n    function startNewMode(mode) {\n      if (mode.className) {\n        emitter.openNode(mode.className);\n      }\n      top = Object.create(mode, { parent: { value: top } });\n      return top;\n    }\n\n    /**\n     * @param {CompiledMode } mode - the mode to potentially end\n     * @param {RegExpMatchArray} match - the latest match\n     * @param {string} matchPlusRemainder - match plus remainder of content\n     * @returns {CompiledMode | void} - the next mode, or if void continue on in current mode\n     */\n    function endOfMode(mode, match, matchPlusRemainder) {\n      let matched = startsWith(mode.endRe, matchPlusRemainder);\n\n      if (matched) {\n        if (mode[\"on:end\"]) {\n          const resp = new Response(mode);\n          mode[\"on:end\"](match, resp);\n          if (resp.ignore) matched = false;\n        }\n\n        if (matched) {\n          while (mode.endsParent && mode.parent) {\n            mode = mode.parent;\n          }\n          return mode;\n        }\n      }\n      // even if on:end fires an `ignore` it's still possible\n      // that we might trigger the end node because of a parent mode\n      if (mode.endsWithParent) {\n        return endOfMode(mode.parent, match, matchPlusRemainder);\n      }\n    }\n\n    /**\n     * Handle matching but then ignoring a sequence of text\n     *\n     * @param {string} lexeme - string containing full match text\n     */\n    function doIgnore(lexeme) {\n      if (top.matcher.regexIndex === 0) {\n        // no more regexs to potentially match here, so we move the cursor forward one\n        // space\n        mode_buffer += lexeme[0];\n        return 1;\n      } else {\n        // no need to move the cursor, we still have additional regexes to try and\n        // match at this very spot\n        continueScanAtSamePosition = true;\n        return 0;\n      }\n    }\n\n    /**\n     * Handle the start of a new potential mode match\n     *\n     * @param {EnhancedMatch} match - the current match\n     * @returns {number} how far to advance the parse cursor\n     */\n    function doBeginMatch(match) {\n      var lexeme = match[0];\n      var new_mode = match.rule;\n\n      const resp = new Response(new_mode);\n      // first internal before callbacks, then the public ones\n      const beforeCallbacks = [new_mode.__beforeBegin, new_mode[\"on:begin\"]];\n      for (const cb of beforeCallbacks) {\n        if (!cb) continue;\n        cb(match, resp);\n        if (resp.ignore) return doIgnore(lexeme);\n      }\n\n      if (new_mode && new_mode.endSameAsBegin) {\n        new_mode.endRe = escape(lexeme);\n      }\n\n      if (new_mode.skip) {\n        mode_buffer += lexeme;\n      } else {\n        if (new_mode.excludeBegin) {\n          mode_buffer += lexeme;\n        }\n        processBuffer();\n        if (!new_mode.returnBegin && !new_mode.excludeBegin) {\n          mode_buffer = lexeme;\n        }\n      }\n      startNewMode(new_mode);\n      // if (mode[\"after:begin\"]) {\n      //   let resp = new Response(mode);\n      //   mode[\"after:begin\"](match, resp);\n      // }\n      return new_mode.returnBegin ? 0 : lexeme.length;\n    }\n\n    /**\n     * Handle the potential end of mode\n     *\n     * @param {RegExpMatchArray} match - the current match\n     */\n    function doEndMatch(match) {\n      var lexeme = match[0];\n      var matchPlusRemainder = codeToHighlight.substr(match.index);\n\n      var end_mode = endOfMode(top, match, matchPlusRemainder);\n      if (!end_mode) { return NO_MATCH; }\n\n      var origin = top;\n      if (origin.skip) {\n        mode_buffer += lexeme;\n      } else {\n        if (!(origin.returnEnd || origin.excludeEnd)) {\n          mode_buffer += lexeme;\n        }\n        processBuffer();\n        if (origin.excludeEnd) {\n          mode_buffer = lexeme;\n        }\n      }\n      do {\n        if (top.className) {\n          emitter.closeNode();\n        }\n        if (!top.skip && !top.subLanguage) {\n          relevance += top.relevance;\n        }\n        top = top.parent;\n      } while (top !== end_mode.parent);\n      if (end_mode.starts) {\n        if (end_mode.endSameAsBegin) {\n          end_mode.starts.endRe = end_mode.endRe;\n        }\n        startNewMode(end_mode.starts);\n      }\n      return origin.returnEnd ? 0 : lexeme.length;\n    }\n\n    function processContinuations() {\n      var list = [];\n      for (var current = top; current !== language; current = current.parent) {\n        if (current.className) {\n          list.unshift(current.className);\n        }\n      }\n      list.forEach(item => emitter.openNode(item));\n    }\n\n    /** @type {{type?: MatchType, index?: number, rule?: Mode}}} */\n    var lastMatch = {};\n\n    /**\n     *  Process an individual match\n     *\n     * @param {string} textBeforeMatch - text preceeding the match (since the last match)\n     * @param {EnhancedMatch} [match] - the match itself\n     */\n    function processLexeme(textBeforeMatch, match) {\n      var lexeme = match && match[0];\n\n      // add non-matched text to the current mode buffer\n      mode_buffer += textBeforeMatch;\n\n      if (lexeme == null) {\n        processBuffer();\n        return 0;\n      }\n\n      // we've found a 0 width match and we're stuck, so we need to advance\n      // this happens when we have badly behaved rules that have optional matchers to the degree that\n      // sometimes they can end up matching nothing at all\n      // Ref: https://github.com/highlightjs/highlight.js/issues/2140\n      if (lastMatch.type === \"begin\" && match.type === \"end\" && lastMatch.index === match.index && lexeme === \"\") {\n        // spit the \"skipped\" character that our regex choked on back into the output sequence\n        mode_buffer += codeToHighlight.slice(match.index, match.index + 1);\n        if (!SAFE_MODE) {\n          /** @type {AnnotatedError} */\n          const err = new Error('0 width match regex');\n          err.languageName = languageName;\n          err.badRule = lastMatch.rule;\n          throw err;\n        }\n        return 1;\n      }\n      lastMatch = match;\n\n      if (match.type === \"begin\") {\n        return doBeginMatch(match);\n      } else if (match.type === \"illegal\" && !ignoreIllegals) {\n        // illegal match, we do not continue processing\n        /** @type {AnnotatedError} */\n        const err = new Error('Illegal lexeme \"' + lexeme + '\" for mode \"' + (top.className || '<unnamed>') + '\"');\n        err.mode = top;\n        throw err;\n      } else if (match.type === \"end\") {\n        var processed = doEndMatch(match);\n        if (processed !== NO_MATCH) {\n          return processed;\n        }\n      }\n\n      // edge case for when illegal matches $ (end of line) which is technically\n      // a 0 width match but not a begin/end match so it's not caught by the\n      // first handler (when ignoreIllegals is true)\n      if (match.type === \"illegal\" && lexeme === \"\") {\n        // advance so we aren't stuck in an infinite loop\n        return 1;\n      }\n\n      // infinite loops are BAD, this is a last ditch catch all. if we have a\n      // decent number of iterations yet our index (cursor position in our\n      // parsing) still 3x behind our index then something is very wrong\n      // so we bail\n      if (iterations > 100000 && iterations > match.index * 3) {\n        const err = new Error('potential infinite loop, way more iterations than matches');\n        throw err;\n      }\n\n      /*\n      Why might be find ourselves here?  Only one occasion now.  An end match that was\n      triggered but could not be completed.  When might this happen?  When an `endSameasBegin`\n      rule sets the end rule to a specific match.  Since the overall mode termination rule that's\n      being used to scan the text isn't recompiled that means that any match that LOOKS like\n      the end (but is not, because it is not an exact match to the beginning) will\n      end up here.  A definite end match, but when `doEndMatch` tries to \"reapply\"\n      the end rule and fails to match, we wind up here, and just silently ignore the end.\n\n      This causes no real harm other than stopping a few times too many.\n      */\n\n      mode_buffer += lexeme;\n      return lexeme.length;\n    }\n\n    var language = getLanguage(languageName);\n    if (!language) {\n      console.error(LANGUAGE_NOT_FOUND.replace(\"{}\", languageName));\n      throw new Error('Unknown language: \"' + languageName + '\"');\n    }\n\n    var md = compileLanguage(language);\n    var result = '';\n    /** @type {CompiledMode} */\n    var top = continuation || md;\n    /** @type Record<string,Mode> */\n    var continuations = {}; // keep continuations for sub-languages\n    var emitter = new options.__emitter(options);\n    processContinuations();\n    var mode_buffer = '';\n    var relevance = 0;\n    var index = 0;\n    var iterations = 0;\n    var continueScanAtSamePosition = false;\n\n    try {\n      top.matcher.considerAll();\n\n      for (;;) {\n        iterations++;\n        if (continueScanAtSamePosition) {\n          // only regexes not matched previously will now be\n          // considered for a potential match\n          continueScanAtSamePosition = false;\n        } else {\n          top.matcher.lastIndex = index;\n          top.matcher.considerAll();\n        }\n        const match = top.matcher.exec(codeToHighlight);\n        // console.log(\"match\", match[0], match.rule && match.rule.begin)\n        if (!match) break;\n\n        const beforeMatch = codeToHighlight.substring(index, match.index);\n        const processedCount = processLexeme(beforeMatch, match);\n        index = match.index + processedCount;\n      }\n      processLexeme(codeToHighlight.substr(index));\n      emitter.closeAllNodes();\n      emitter.finalize();\n      result = emitter.toHTML();\n\n      return {\n        relevance: relevance,\n        value: result,\n        language: languageName,\n        illegal: false,\n        emitter: emitter,\n        top: top\n      };\n    } catch (err) {\n      if (err.message && err.message.includes('Illegal')) {\n        return {\n          illegal: true,\n          illegalBy: {\n            msg: err.message,\n            context: codeToHighlight.slice(index - 100, index + 100),\n            mode: err.mode\n          },\n          sofar: result,\n          relevance: 0,\n          value: escape$1(codeToHighlight),\n          emitter: emitter\n        };\n      } else if (SAFE_MODE) {\n        return {\n          illegal: false,\n          relevance: 0,\n          value: escape$1(codeToHighlight),\n          emitter: emitter,\n          language: languageName,\n          top: top,\n          errorRaised: err\n        };\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  /**\n   * returns a valid highlight result, without actually doing any actual work,\n   * auto highlight starts with this and it's possible for small snippets that\n   * auto-detection may not find a better match\n   * @param {string} code\n   * @returns {HighlightResult}\n   */\n  function justTextHighlightResult(code) {\n    const result = {\n      relevance: 0,\n      emitter: new options.__emitter(options),\n      value: escape$1(code),\n      illegal: false,\n      top: PLAINTEXT_LANGUAGE\n    };\n    result.emitter.addText(code);\n    return result;\n  }\n\n  /**\n  Highlighting with language detection. Accepts a string with the code to\n  highlight. Returns an object with the following properties:\n\n  - language (detected language)\n  - relevance (int)\n  - value (an HTML string with highlighting markup)\n  - second_best (object with the same structure for second-best heuristically\n    detected language, may be absent)\n\n    @param {string} code\n    @param {Array<string>} [languageSubset]\n    @returns {AutoHighlightResult}\n  */\n  function highlightAuto(code, languageSubset) {\n    languageSubset = languageSubset || options.languages || Object.keys(languages);\n    var result = justTextHighlightResult(code);\n    var secondBest = result;\n    languageSubset.filter(getLanguage).filter(autoDetection).forEach(function(name) {\n      var current = _highlight(name, code, false);\n      current.language = name;\n      if (current.relevance > secondBest.relevance) {\n        secondBest = current;\n      }\n      if (current.relevance > result.relevance) {\n        secondBest = result;\n        result = current;\n      }\n    });\n    if (secondBest.language) {\n      // second_best (with underscore) is the expected API\n      result.second_best = secondBest;\n    }\n    return result;\n  }\n\n  /**\n  Post-processing of the highlighted markup:\n\n  - replace TABs with something more useful\n  - replace real line-breaks with '<br>' for non-pre containers\n\n    @param {string} html\n    @returns {string}\n  */\n  function fixMarkup(html) {\n    if (!(options.tabReplace || options.useBR)) {\n      return html;\n    }\n\n    return html.replace(fixMarkupRe, match => {\n      if (match === '\\n') {\n        return options.useBR ? '<br>' : match;\n      } else if (options.tabReplace) {\n        return match.replace(/\\t/g, options.tabReplace);\n      }\n      return match;\n    });\n  }\n\n  /**\n   * Builds new class name for block given the language name\n   *\n   * @param {string} prevClassName\n   * @param {string} [currentLang]\n   * @param {string} [resultLang]\n   */\n  function buildClassName(prevClassName, currentLang, resultLang) {\n    var language = currentLang ? aliases[currentLang] : resultLang;\n    var result = [prevClassName.trim()];\n\n    if (!prevClassName.match(/\\bhljs\\b/)) {\n      result.push('hljs');\n    }\n\n    if (!prevClassName.includes(language)) {\n      result.push(language);\n    }\n\n    return result.join(' ').trim();\n  }\n\n  /**\n   * Applies highlighting to a DOM node containing code. Accepts a DOM node and\n   * two optional parameters for fixMarkup.\n   *\n   * @param {HighlightedHTMLElement} element - the HTML element to highlight\n  */\n  function highlightBlock(element) {\n    /** @type HTMLElement */\n    let node = null;\n    const language = blockLanguage(element);\n\n    if (shouldNotHighlight(language)) return;\n\n    fire(\"before:highlightBlock\",\n      { block: element, language: language });\n\n    if (options.useBR) {\n      node = document.createElement('div');\n      node.innerHTML = element.innerHTML.replace(/\\n/g, '').replace(/<br[ /]*>/g, '\\n');\n    } else {\n      node = element;\n    }\n    const text = node.textContent;\n    const result = language ? highlight(language, text, true) : highlightAuto(text);\n\n    const originalStream = nodeStream$1(node);\n    if (originalStream.length) {\n      const resultNode = document.createElement('div');\n      resultNode.innerHTML = result.value;\n      result.value = mergeStreams$1(originalStream, nodeStream$1(resultNode), text);\n    }\n    result.value = fixMarkup(result.value);\n\n    fire(\"after:highlightBlock\", { block: element, result: result });\n\n    element.innerHTML = result.value;\n    element.className = buildClassName(element.className, language, result.language);\n    element.result = {\n      language: result.language,\n      // TODO: remove with version 11.0\n      re: result.relevance,\n      relavance: result.relevance\n    };\n    if (result.second_best) {\n      element.second_best = {\n        language: result.second_best.language,\n        // TODO: remove with version 11.0\n        re: result.second_best.relevance,\n        relavance: result.second_best.relevance\n      };\n    }\n  }\n\n  /**\n   * Updates highlight.js global options with the passed options\n   *\n   * @param {{}} userOptions\n   */\n  function configure(userOptions) {\n    options = inherit$1(options, userOptions);\n  }\n\n  /**\n   * Highlights to all <pre><code> blocks on a page\n   *\n   * @type {Function & {called?: boolean}}\n   */\n  const initHighlighting = () => {\n    if (initHighlighting.called) return;\n    initHighlighting.called = true;\n\n    var blocks = document.querySelectorAll('pre code');\n    ArrayProto.forEach.call(blocks, highlightBlock);\n  };\n\n  // Higlights all when DOMContentLoaded fires\n  function initHighlightingOnLoad() {\n    // @ts-ignore\n    window.addEventListener('DOMContentLoaded', initHighlighting, false);\n  }\n\n  /**\n   * Register a language grammar module\n   *\n   * @param {string} languageName\n   * @param {LanguageFn} languageDefinition\n   */\n  function registerLanguage(languageName, languageDefinition) {\n    var lang = null;\n    try {\n      lang = languageDefinition(hljs);\n    } catch (error) {\n      console.error(\"Language definition for '{}' could not be registered.\".replace(\"{}\", languageName));\n      // hard or soft error\n      if (!SAFE_MODE) { throw error; } else { console.error(error); }\n      // languages that have serious errors are replaced with essentially a\n      // \"plaintext\" stand-in so that the code blocks will still get normal\n      // css classes applied to them - and one bad language won't break the\n      // entire highlighter\n      lang = PLAINTEXT_LANGUAGE;\n    }\n    // give it a temporary name if it doesn't have one in the meta-data\n    if (!lang.name) lang.name = languageName;\n    languages[languageName] = lang;\n    lang.rawDefinition = languageDefinition.bind(null, hljs);\n\n    if (lang.aliases) {\n      registerAliases(lang.aliases, { languageName });\n    }\n  }\n\n  /**\n   * @returns {string[]} List of language internal names\n   */\n  function listLanguages() {\n    return Object.keys(languages);\n  }\n\n  /**\n    intended usage: When one language truly requires another\n\n    Unlike `getLanguage`, this will throw when the requested language\n    is not available.\n\n    @param {string} name - name of the language to fetch/require\n    @returns {Language | never}\n  */\n  function requireLanguage(name) {\n    var lang = getLanguage(name);\n    if (lang) { return lang; }\n\n    var err = new Error('The \\'{}\\' language is required, but not loaded.'.replace('{}', name));\n    throw err;\n  }\n\n  /**\n   * @param {string} name - name of the language to retrieve\n   * @returns {Language | undefined}\n   */\n  function getLanguage(name) {\n    name = (name || '').toLowerCase();\n    return languages[name] || languages[aliases[name]];\n  }\n\n  /**\n   *\n   * @param {string|string[]} aliasList - single alias or list of aliases\n   * @param {{languageName: string}} opts\n   */\n  function registerAliases(aliasList, { languageName }) {\n    if (typeof aliasList === 'string') {\n      aliasList = [aliasList];\n    }\n    aliasList.forEach(alias => { aliases[alias] = languageName; });\n  }\n\n  /**\n   * Determines if a given language has auto-detection enabled\n   * @param {string} name - name of the language\n   */\n  function autoDetection(name) {\n    var lang = getLanguage(name);\n    return lang && !lang.disableAutodetect;\n  }\n\n  /**\n   * @param {HLJSPlugin} plugin\n   */\n  function addPlugin(plugin) {\n    plugins.push(plugin);\n  }\n\n  /**\n   *\n   * @param {PluginEvent} event\n   * @param {any} args\n   */\n  function fire(event, args) {\n    var cb = event;\n    plugins.forEach(function(plugin) {\n      if (plugin[cb]) {\n        plugin[cb](args);\n      }\n    });\n  }\n\n  /* Interface definition */\n\n  Object.assign(hljs, {\n    highlight,\n    highlightAuto,\n    fixMarkup,\n    highlightBlock,\n    configure,\n    initHighlighting,\n    initHighlightingOnLoad,\n    registerLanguage,\n    listLanguages,\n    getLanguage,\n    registerAliases,\n    requireLanguage,\n    autoDetection,\n    inherit: inherit$1,\n    addPlugin\n  });\n\n  hljs.debugMode = function() { SAFE_MODE = false; };\n  hljs.safeMode = function() { SAFE_MODE = true; };\n  hljs.versionString = version;\n\n  for (const key in MODES) {\n    // @ts-ignore\n    if (typeof MODES[key] === \"object\") {\n      // @ts-ignore\n      deepFreeze(MODES[key]);\n    }\n  }\n\n  // merge all the modes/regexs into our main object\n  Object.assign(hljs, MODES);\n\n  return hljs;\n};\n\n// export an \"instance\" of the highlighter\nvar highlight = HLJS({});\n\nmodule.exports = highlight;\n","import { SubjectSubscriber } from '../Subject';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\nexport class ConnectableObservable extends Observable {\n    constructor(source, subjectFactory) {\n        super();\n        this.source = source;\n        this.subjectFactory = subjectFactory;\n        this._refCount = 0;\n        this._isComplete = false;\n    }\n    _subscribe(subscriber) {\n        return this.getSubject().subscribe(subscriber);\n    }\n    getSubject() {\n        const subject = this._subject;\n        if (!subject || subject.isStopped) {\n            this._subject = this.subjectFactory();\n        }\n        return this._subject;\n    }\n    connect() {\n        let connection = this._connection;\n        if (!connection) {\n            this._isComplete = false;\n            connection = this._connection = new Subscription();\n            connection.add(this.source\n                .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n            if (connection.closed) {\n                this._connection = null;\n                connection = Subscription.EMPTY;\n            }\n        }\n        return connection;\n    }\n    refCount() {\n        return higherOrderRefCount()(this);\n    }\n}\nexport const connectableObservableDescriptor = (() => {\n    const connectableProto = ConnectableObservable.prototype;\n    return {\n        operator: { value: null },\n        _refCount: { value: 0, writable: true },\n        _subject: { value: null, writable: true },\n        _connection: { value: null, writable: true },\n        _subscribe: { value: connectableProto._subscribe },\n        _isComplete: { value: connectableProto._isComplete, writable: true },\n        getSubject: { value: connectableProto.getSubject },\n        connect: { value: connectableProto.connect },\n        refCount: { value: connectableProto.refCount }\n    };\n})();\nclass ConnectableSubscriber extends SubjectSubscriber {\n    constructor(destination, connectable) {\n        super(destination);\n        this.connectable = connectable;\n    }\n    _error(err) {\n        this._unsubscribe();\n        super._error(err);\n    }\n    _complete() {\n        this.connectable._isComplete = true;\n        this._unsubscribe();\n        super._complete();\n    }\n    _unsubscribe() {\n        const connectable = this.connectable;\n        if (connectable) {\n            this.connectable = null;\n            const connection = connectable._connection;\n            connectable._refCount = 0;\n            connectable._subject = null;\n            connectable._connection = null;\n            if (connection) {\n                connection.unsubscribe();\n            }\n        }\n    }\n}\nclass RefCountOperator {\n    constructor(connectable) {\n        this.connectable = connectable;\n    }\n    call(subscriber, source) {\n        const { connectable } = this;\n        connectable._refCount++;\n        const refCounter = new RefCountSubscriber(subscriber, connectable);\n        const subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    }\n}\nclass RefCountSubscriber extends Subscriber {\n    constructor(destination, connectable) {\n        super(destination);\n        this.connectable = connectable;\n    }\n    _unsubscribe() {\n        const { connectable } = this;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        const refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        const { connection } = this;\n        const sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    }\n}\n//# sourceMappingURL=ConnectableObservable.js.map","import { Observable } from '../Observable';\nexport const EMPTY = new Observable(subscriber => subscriber.complete());\nexport function empty(scheduler) {\n    return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\nfunction emptyScheduled(scheduler) {\n    return new Observable(subscriber => scheduler.schedule(() => subscriber.complete()));\n}\n//# sourceMappingURL=empty.js.map","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","import { of } from './of';\nimport { concatAll } from '../operators/concatAll';\nexport function concat(...observables) {\n    return concatAll()(of(...observables));\n}\n//# sourceMappingURL=concat.js.map","import { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nexport class Observable {\n    constructor(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    lift(operator) {\n        const observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    }\n    subscribe(observerOrNext, error, complete) {\n        const { operator } = this;\n        const sink = toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            sink.add(operator.call(sink, this.source));\n        }\n        else {\n            sink.add(this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n                this._subscribe(sink) :\n                this._trySubscribe(sink));\n        }\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            if (sink.syncErrorThrowable) {\n                sink.syncErrorThrowable = false;\n                if (sink.syncErrorThrown) {\n                    throw sink.syncErrorValue;\n                }\n            }\n        }\n        return sink;\n    }\n    _trySubscribe(sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                sink.syncErrorThrown = true;\n                sink.syncErrorValue = err;\n            }\n            if (canReportError(sink)) {\n                sink.error(err);\n            }\n            else {\n                console.warn(err);\n            }\n        }\n    }\n    forEach(next, promiseCtor) {\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor((resolve, reject) => {\n            let subscription;\n            subscription = this.subscribe((value) => {\n                try {\n                    next(value);\n                }\n                catch (err) {\n                    reject(err);\n                    if (subscription) {\n                        subscription.unsubscribe();\n                    }\n                }\n            }, reject, resolve);\n        });\n    }\n    _subscribe(subscriber) {\n        const { source } = this;\n        return source && source.subscribe(subscriber);\n    }\n    [Symbol_observable]() {\n        return this;\n    }\n    pipe(...operations) {\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipeFromArray(operations)(this);\n    }\n    toPromise(promiseCtor) {\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor((resolve, reject) => {\n            let value;\n            this.subscribe((x) => value = x, (err) => reject(err), () => resolve(value));\n        });\n    }\n}\nObservable.create = (subscribe) => {\n    return new Observable(subscribe);\n};\nfunction getPromiseCtor(promiseCtor) {\n    if (!promiseCtor) {\n        promiseCtor = config.Promise || Promise;\n    }\n    if (!promiseCtor) {\n        throw new Error('no Promise impl found');\n    }\n    return promiseCtor;\n}\n//# sourceMappingURL=Observable.js.map","import { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nexport function toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriberSymbol]) {\n            return nextOrObserver[rxSubscriberSymbol]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber(emptyObserver);\n    }\n    return new Subscriber(nextOrObserver, error, complete);\n}\n//# sourceMappingURL=toSubscriber.js.map","export const isArrayLike = ((x) => x && typeof x.length === 'number' && typeof x !== 'function');\n//# sourceMappingURL=isArrayLike.js.map","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","import { Scheduler } from '../Scheduler';\nexport class AsyncScheduler extends Scheduler {\n    constructor(SchedulerAction, now = Scheduler.now) {\n        super(SchedulerAction, () => {\n            if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n                return AsyncScheduler.delegate.now();\n            }\n            else {\n                return now();\n            }\n        });\n        this.actions = [];\n        this.active = false;\n        this.scheduled = undefined;\n    }\n    schedule(work, delay = 0, state) {\n        if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n            return AsyncScheduler.delegate.schedule(work, delay, state);\n        }\n        else {\n            return super.schedule(work, delay, state);\n        }\n    }\n    flush(action) {\n        const { actions } = this;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        let error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift());\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n//# sourceMappingURL=AsyncScheduler.js.map","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","/*\nLanguage: PHP\nAuthor: Victor Karamzin <Victor.Karamzin@enterra-inc.com>\nContributors: Evgeny Stepanischev <imbolk@gmail.com>, Ivan Sagalaev <maniac@softwaremaniacs.org>\nWebsite: https://www.php.net\nCategory: common\n*/\n\nfunction php(hljs) {\n  var VARIABLE = {\n    begin: '\\\\$+[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*'\n  };\n  var PREPROCESSOR = {\n    className: 'meta',\n    variants: [\n      { begin: /<\\?php/, relevance: 10 }, // boost for obvious PHP\n      { begin: /<\\?[=]?/ },\n      { begin: /\\?>/ } // end php tag\n    ]\n  };\n  var STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE, PREPROCESSOR],\n    variants: [\n      {\n        begin: 'b\"', end: '\"'\n      },\n      {\n        begin: 'b\\'', end: '\\''\n      },\n      hljs.inherit(hljs.APOS_STRING_MODE, {illegal: null}),\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null})\n    ]\n  };\n  var NUMBER = {variants: [hljs.BINARY_NUMBER_MODE, hljs.C_NUMBER_MODE]};\n  var KEYWORDS = {\n    keyword:\n    // Magic constants:\n    // <https://www.php.net/manual/en/language.constants.predefined.php>\n    '__CLASS__ __DIR__ __FILE__ __FUNCTION__ __LINE__ __METHOD__ __NAMESPACE__ __TRAIT__ ' +\n    // Function that look like language construct or language construct that look like function:\n    // List of keywords that may not require parenthesis\n    'die echo exit include include_once print require require_once ' +\n    // These are not language construct (function) but operate on the currently-executing function and can access the current symbol table\n    // 'compact extract func_get_arg func_get_args func_num_args get_called_class get_parent_class ' +\n    // Other keywords:\n    // <https://www.php.net/manual/en/reserved.php>\n    // <https://www.php.net/manual/en/language.types.type-juggling.php>\n    'array abstract and as binary bool boolean break callable case catch class clone const continue declare default do double else elseif empty enddeclare endfor endforeach endif endswitch endwhile eval extends final finally float for foreach from global goto if implements instanceof insteadof int integer interface isset iterable list new object or private protected public real return string switch throw trait try unset use var void while xor yield',\n    literal: 'false null true',\n    built_in:\n    // Standard PHP library:\n    // <https://www.php.net/manual/en/book.spl.php>\n    'Error|0 ' + // error is too common a name esp since PHP is case in-sensitive\n    'AppendIterator ArgumentCountError ArithmeticError ArrayIterator ArrayObject AssertionError BadFunctionCallException BadMethodCallException CachingIterator CallbackFilterIterator CompileError Countable DirectoryIterator DivisionByZeroError DomainException EmptyIterator ErrorException Exception FilesystemIterator FilterIterator GlobIterator InfiniteIterator InvalidArgumentException IteratorIterator LengthException LimitIterator LogicException MultipleIterator NoRewindIterator OutOfBoundsException OutOfRangeException OuterIterator OverflowException ParentIterator ParseError RangeException RecursiveArrayIterator RecursiveCachingIterator RecursiveCallbackFilterIterator RecursiveDirectoryIterator RecursiveFilterIterator RecursiveIterator RecursiveIteratorIterator RecursiveRegexIterator RecursiveTreeIterator RegexIterator RuntimeException SeekableIterator SplDoublyLinkedList SplFileInfo SplFileObject SplFixedArray SplHeap SplMaxHeap SplMinHeap SplObjectStorage SplObserver SplObserver SplPriorityQueue SplQueue SplStack SplSubject SplSubject SplTempFileObject TypeError UnderflowException UnexpectedValueException ' +\n    // Reserved interfaces:\n    // <https://www.php.net/manual/en/reserved.interfaces.php>\n    'ArrayAccess Closure Generator Iterator IteratorAggregate Serializable Throwable Traversable WeakReference ' +\n    // Reserved classes:\n    // <https://www.php.net/manual/en/reserved.classes.php>\n    'Directory __PHP_Incomplete_Class parent php_user_filter self static stdClass'\n  };\n  return {\n    aliases: ['php', 'php3', 'php4', 'php5', 'php6', 'php7'],\n    case_insensitive: true,\n    keywords: KEYWORDS,\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      hljs.COMMENT('//', '$', {contains: [PREPROCESSOR]}),\n      hljs.COMMENT(\n        '/\\\\*',\n        '\\\\*/',\n        {\n          contains: [\n            {\n              className: 'doctag',\n              begin: '@[A-Za-z]+'\n            }\n          ]\n        }\n      ),\n      hljs.COMMENT(\n        '__halt_compiler.+?;',\n        false,\n        {\n          endsWithParent: true,\n          keywords: '__halt_compiler'\n        }\n      ),\n      {\n        className: 'string',\n        begin: /<<<['\"]?\\w+['\"]?$/, end: /^\\w+;?$/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          {\n            className: 'subst',\n            variants: [\n              {begin: /\\$\\w+/},\n              {begin: /\\{\\$/, end: /\\}/}\n            ]\n          }\n        ]\n      },\n      PREPROCESSOR,\n      {\n        className: 'keyword', begin: /\\$this\\b/\n      },\n      VARIABLE,\n      {\n        // swallow composed identifiers to avoid parsing them as keywords\n        begin: /(::|->)+[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*/\n      },\n      {\n        className: 'function',\n        beginKeywords: 'fn function', end: /[;{]/, excludeEnd: true,\n        illegal: '[$%\\\\[]',\n        contains: [\n          hljs.UNDERSCORE_TITLE_MODE,\n          {\n            className: 'params',\n            begin: '\\\\(', end: '\\\\)',\n            excludeBegin: true,\n            excludeEnd: true,\n            keywords: KEYWORDS,\n            contains: [\n              'self',\n              VARIABLE,\n              hljs.C_BLOCK_COMMENT_MODE,\n              STRING,\n              NUMBER\n            ]\n          }\n        ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class interface', end: '{', excludeEnd: true,\n        illegal: /[:\\(\\$\"]/,\n        contains: [\n          {beginKeywords: 'extends implements'},\n          hljs.UNDERSCORE_TITLE_MODE\n        ]\n      },\n      {\n        beginKeywords: 'namespace', end: ';',\n        illegal: /[\\.']/,\n        contains: [hljs.UNDERSCORE_TITLE_MODE]\n      },\n      {\n        beginKeywords: 'use', end: ';',\n        contains: [hljs.UNDERSCORE_TITLE_MODE]\n      },\n      {\n        begin: '=>' // No markup, just a relevance booster\n      },\n      STRING,\n      NUMBER\n    ]\n  };\n}\n\nmodule.exports = php;\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export function noop() { }\n//# sourceMappingURL=noop.js.map","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function () {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","var getPrototypeOf = require(\"./getPrototypeOf\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct\");\n\nvar possibleConstructorReturn = require(\"./possibleConstructorReturn\");\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function () {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}\n\nmodule.exports = _createSuper;","import { isScheduler } from '../util/isScheduler';\nimport { fromArray } from './fromArray';\nimport { scheduleArray } from '../scheduled/scheduleArray';\nexport function of(...args) {\n    let scheduler = args[args.length - 1];\n    if (isScheduler(scheduler)) {\n        args.pop();\n        return scheduleArray(args, scheduler);\n    }\n    else {\n        return fromArray(args);\n    }\n}\n//# sourceMappingURL=of.js.map","export function getSymbolIterator() {\n    if (typeof Symbol !== 'function' || !Symbol.iterator) {\n        return '@@iterator';\n    }\n    return Symbol.iterator;\n}\nexport const iterator = getSymbolIterator();\nexport const $$iterator = iterator;\n//# sourceMappingURL=iterator.js.map","export function hostReportError(err) {\n    setTimeout(() => { throw err; }, 0);\n}\n//# sourceMappingURL=hostReportError.js.map","import { Observable } from '../Observable';\nimport { from } from './from';\nimport { empty } from './empty';\nexport function defer(observableFactory) {\n    return new Observable(subscriber => {\n        let input;\n        try {\n            input = observableFactory();\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        const source = input ? from(input) : empty();\n        return source.subscribe(subscriber);\n    });\n}\n//# sourceMappingURL=defer.js.map","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nexport function timer(dueTime = 0, periodOrScheduler, scheduler) {\n    let period = -1;\n    if (isNumeric(periodOrScheduler)) {\n        period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);\n    }\n    else if (isScheduler(periodOrScheduler)) {\n        scheduler = periodOrScheduler;\n    }\n    if (!isScheduler(scheduler)) {\n        scheduler = async;\n    }\n    return new Observable(subscriber => {\n        const due = isNumeric(dueTime)\n            ? dueTime\n            : (+dueTime - scheduler.now());\n        return scheduler.schedule(dispatch, due, {\n            index: 0, period, subscriber\n        });\n    });\n}\nfunction dispatch(state) {\n    const { index, period, subscriber } = state;\n    subscriber.next(index);\n    if (subscriber.closed) {\n        return;\n    }\n    else if (period === -1) {\n        return subscriber.complete();\n    }\n    state.index = index + 1;\n    this.schedule(state, period);\n}\n//# sourceMappingURL=timer.js.map","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","import superPropBase from \"./superPropBase\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import { subscribeToArray } from './subscribeToArray';\nimport { subscribeToPromise } from './subscribeToPromise';\nimport { subscribeToIterable } from './subscribeToIterable';\nimport { subscribeToObservable } from './subscribeToObservable';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport const subscribeTo = (result) => {\n    if (!!result && typeof result[Symbol_observable] === 'function') {\n        return subscribeToObservable(result);\n    }\n    else if (isArrayLike(result)) {\n        return subscribeToArray(result);\n    }\n    else if (isPromise(result)) {\n        return subscribeToPromise(result);\n    }\n    else if (!!result && typeof result[Symbol_iterator] === 'function') {\n        return subscribeToIterable(result);\n    }\n    else {\n        const value = isObject(result) ? 'an invalid object' : `'${result}'`;\n        const msg = `You provided ${value} where a stream was expected.`\n            + ' You can provide an Observable, Promise, Array, or Iterable.';\n        throw new TypeError(msg);\n    }\n};\n//# sourceMappingURL=subscribeTo.js.map","import { observable as Symbol_observable } from '../symbol/observable';\nexport const subscribeToObservable = (obj) => (subscriber) => {\n    const obs = obj[Symbol_observable]();\n    if (typeof obs.subscribe !== 'function') {\n        throw new TypeError('Provided object does not correctly implement Symbol.observable');\n    }\n    else {\n        return obs.subscribe(subscriber);\n    }\n};\n//# sourceMappingURL=subscribeToObservable.js.map","import { hostReportError } from './hostReportError';\nexport const subscribeToPromise = (promise) => (subscriber) => {\n    promise.then((value) => {\n        if (!subscriber.closed) {\n            subscriber.next(value);\n            subscriber.complete();\n        }\n    }, (err) => subscriber.error(err))\n        .then(null, hostReportError);\n    return subscriber;\n};\n//# sourceMappingURL=subscribeToPromise.js.map","import { iterator as Symbol_iterator } from '../symbol/iterator';\nexport const subscribeToIterable = (iterable) => (subscriber) => {\n    const iterator = iterable[Symbol_iterator]();\n    do {\n        let item;\n        try {\n            item = iterator.next();\n        }\n        catch (err) {\n            subscriber.error(err);\n            return subscriber;\n        }\n        if (item.done) {\n            subscriber.complete();\n            break;\n        }\n        subscriber.next(item.value);\n        if (subscriber.closed) {\n            break;\n        }\n    } while (true);\n    if (typeof iterator.return === 'function') {\n        subscriber.add(() => {\n            if (iterator.return) {\n                iterator.return();\n            }\n        });\n    }\n    return subscriber;\n};\n//# sourceMappingURL=subscribeToIterable.js.map","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","export function identity(x) {\n    return x;\n}\n//# sourceMappingURL=identity.js.map","const IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\nconst KEYWORDS = [\n  \"as\", // for exports\n  \"in\",\n  \"of\",\n  \"if\",\n  \"for\",\n  \"while\",\n  \"finally\",\n  \"var\",\n  \"new\",\n  \"function\",\n  \"do\",\n  \"return\",\n  \"void\",\n  \"else\",\n  \"break\",\n  \"catch\",\n  \"instanceof\",\n  \"with\",\n  \"throw\",\n  \"case\",\n  \"default\",\n  \"try\",\n  \"switch\",\n  \"continue\",\n  \"typeof\",\n  \"delete\",\n  \"let\",\n  \"yield\",\n  \"const\",\n  \"class\",\n  // JS handles these with a special rule\n  // \"get\",\n  // \"set\",\n  \"debugger\",\n  \"async\",\n  \"await\",\n  \"static\",\n  \"import\",\n  \"from\",\n  \"export\",\n  \"extends\"\n];\nconst LITERALS = [\n  \"true\",\n  \"false\",\n  \"null\",\n  \"undefined\",\n  \"NaN\",\n  \"Infinity\"\n];\n\nconst TYPES = [\n  \"Intl\",\n  \"DataView\",\n  \"Number\",\n  \"Math\",\n  \"Date\",\n  \"String\",\n  \"RegExp\",\n  \"Object\",\n  \"Function\",\n  \"Boolean\",\n  \"Error\",\n  \"Symbol\",\n  \"Set\",\n  \"Map\",\n  \"WeakSet\",\n  \"WeakMap\",\n  \"Proxy\",\n  \"Reflect\",\n  \"JSON\",\n  \"Promise\",\n  \"Float64Array\",\n  \"Int16Array\",\n  \"Int32Array\",\n  \"Int8Array\",\n  \"Uint16Array\",\n  \"Uint32Array\",\n  \"Float32Array\",\n  \"Array\",\n  \"Uint8Array\",\n  \"Uint8ClampedArray\",\n  \"ArrayBuffer\"\n];\n\nconst ERROR_TYPES = [\n  \"EvalError\",\n  \"InternalError\",\n  \"RangeError\",\n  \"ReferenceError\",\n  \"SyntaxError\",\n  \"TypeError\",\n  \"URIError\"\n];\n\nconst BUILT_IN_GLOBALS = [\n  \"setInterval\",\n  \"setTimeout\",\n  \"clearInterval\",\n  \"clearTimeout\",\n\n  \"require\",\n  \"exports\",\n\n  \"eval\",\n  \"isFinite\",\n  \"isNaN\",\n  \"parseFloat\",\n  \"parseInt\",\n  \"decodeURI\",\n  \"decodeURIComponent\",\n  \"encodeURI\",\n  \"encodeURIComponent\",\n  \"escape\",\n  \"unescape\"\n];\n\nconst BUILT_IN_VARIABLES = [\n  \"arguments\",\n  \"this\",\n  \"super\",\n  \"console\",\n  \"window\",\n  \"document\",\n  \"localStorage\",\n  \"module\",\n  \"global\" // Node.js\n];\n\nconst BUILT_INS = [].concat(\n  BUILT_IN_GLOBALS,\n  BUILT_IN_VARIABLES,\n  TYPES,\n  ERROR_TYPES\n);\n\n/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: JavaScript\nDescription: JavaScript (JS) is a lightweight, interpreted, or just-in-time compiled programming language with first-class functions.\nCategory: common, scripting\nWebsite: https://developer.mozilla.org/en-US/docs/Web/JavaScript\n*/\n\nfunction javascript(hljs) {\n  var IDENT_RE$1 = IDENT_RE;\n  var FRAGMENT = {\n    begin: '<>',\n    end: '</>'\n  };\n  var XML_TAG = {\n    begin: /<[A-Za-z0-9\\\\._:-]+/,\n    end: /\\/[A-Za-z0-9\\\\._:-]+>|\\/>/\n  };\n  var KEYWORDS$1 = {\n    $pattern: IDENT_RE,\n    keyword: KEYWORDS.join(\" \"),\n    literal: LITERALS.join(\" \"),\n    built_in: BUILT_INS.join(\" \")\n  };\n  var NUMBER = {\n    className: 'number',\n    variants: [\n      { begin: '\\\\b(0[bB][01]+)n?' },\n      { begin: '\\\\b(0[oO][0-7]+)n?' },\n      { begin: hljs.C_NUMBER_RE + 'n?' }\n    ],\n    relevance: 0\n  };\n  var SUBST = {\n    className: 'subst',\n    begin: '\\\\$\\\\{', end: '\\\\}',\n    keywords: KEYWORDS$1,\n    contains: []  // defined later\n  };\n  var HTML_TEMPLATE = {\n    begin: 'html`', end: '',\n    starts: {\n      end: '`', returnEnd: false,\n      contains: [\n        hljs.BACKSLASH_ESCAPE,\n        SUBST\n      ],\n      subLanguage: 'xml',\n    }\n  };\n  var CSS_TEMPLATE = {\n    begin: 'css`', end: '',\n    starts: {\n      end: '`', returnEnd: false,\n      contains: [\n        hljs.BACKSLASH_ESCAPE,\n        SUBST\n      ],\n      subLanguage: 'css',\n    }\n  };\n  var TEMPLATE_STRING = {\n    className: 'string',\n    begin: '`', end: '`',\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      SUBST\n    ]\n  };\n  SUBST.contains = [\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE,\n    HTML_TEMPLATE,\n    CSS_TEMPLATE,\n    TEMPLATE_STRING,\n    NUMBER,\n    hljs.REGEXP_MODE\n  ];\n  var PARAMS_CONTAINS = SUBST.contains.concat([\n    // eat recursive parens in sub expressions\n    { begin: /\\(/, end: /\\)/,\n      contains: [\"self\"].concat(SUBST.contains, [hljs.C_BLOCK_COMMENT_MODE, hljs.C_LINE_COMMENT_MODE])\n    },\n    hljs.C_BLOCK_COMMENT_MODE,\n    hljs.C_LINE_COMMENT_MODE\n  ]);\n  var PARAMS = {\n    className: 'params',\n    begin: /\\(/, end: /\\)/,\n    excludeBegin: true,\n    excludeEnd: true,\n    contains: PARAMS_CONTAINS\n  };\n\n  return {\n    name: 'JavaScript',\n    aliases: ['js', 'jsx', 'mjs', 'cjs'],\n    keywords: KEYWORDS$1,\n    contains: [\n      hljs.SHEBANG({\n        binary: \"node\",\n        relevance: 5\n      }),\n      {\n        className: 'meta',\n        relevance: 10,\n        begin: /^\\s*['\"]use (strict|asm)['\"]/\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      HTML_TEMPLATE,\n      CSS_TEMPLATE,\n      TEMPLATE_STRING,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.COMMENT(\n        '/\\\\*\\\\*',\n        '\\\\*/',\n        {\n          relevance : 0,\n          contains : [\n            {\n              className : 'doctag',\n              begin : '@[A-Za-z]+',\n              contains : [\n                {\n                  className: 'type',\n                  begin: '\\\\{',\n                  end: '\\\\}',\n                  relevance: 0\n                },\n                {\n                  className: 'variable',\n                  begin: IDENT_RE$1 + '(?=\\\\s*(-)|$)',\n                  endsParent: true,\n                  relevance: 0\n                },\n                // eat spaces (not newlines) so we can find\n                // types or variables\n                {\n                  begin: /(?=[^\\n])\\s/,\n                  relevance: 0\n                },\n              ]\n            }\n          ]\n        }\n      ),\n      hljs.C_BLOCK_COMMENT_MODE,\n      NUMBER,\n      { // object attr container\n        begin: concat(/[{,\\n]\\s*/,\n          // we need to look ahead to make sure that we actually have an\n          // attribute coming up so we don't steal a comma from a potential\n          // \"value\" container\n          //\n          // NOTE: this might not work how you think.  We don't actually always\n          // enter this mode and stay.  Instead it might merely match `,\n          // <comments up next>` and then immediately end after the , because it\n          // fails to find any actual attrs. But this still does the job because\n          // it prevents the value contain rule from grabbing this instead and\n          // prevening this rule from firing when we actually DO have keys.\n          lookahead(concat(\n            // we also need to allow for multiple possible comments inbetween\n            // the first key:value pairing\n            /(((\\/\\/.*)|(\\/\\*(.|\\n)*\\*\\/))\\s*)*/,\n            IDENT_RE$1 + '\\\\s*:'))),\n        relevance: 0,\n        contains: [\n          {\n            className: 'attr',\n            begin: IDENT_RE$1 + lookahead('\\\\s*:'),\n            relevance: 0,\n          },\n        ]\n      },\n      { // \"value\" container\n        begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\n        keywords: 'return throw case',\n        contains: [\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          hljs.REGEXP_MODE,\n          {\n            className: 'function',\n            // we have to count the parens to make sure we actually have the\n            // correct bounding ( ) before the =>.  There could be any number of\n            // sub-expressions inside also surrounded by parens.\n            begin: '(\\\\([^(]*' +\n              '(\\\\([^(]*' +\n                '(\\\\([^(]*' +\n                '\\\\))?' +\n              '\\\\))?' +\n            '\\\\)|' + hljs.UNDERSCORE_IDENT_RE + ')\\\\s*=>', returnBegin: true,\n            end: '\\\\s*=>',\n            contains: [\n              {\n                className: 'params',\n                variants: [\n                  {\n                    begin: hljs.UNDERSCORE_IDENT_RE\n                  },\n                  {\n                    className: null,\n                    begin: /\\(\\s*\\)/,\n                    skip: true\n                  },\n                  {\n                    begin: /\\(/, end: /\\)/,\n                    excludeBegin: true, excludeEnd: true,\n                    keywords: KEYWORDS$1,\n                    contains: PARAMS_CONTAINS\n                  }\n                ]\n              }\n            ]\n          },\n          { // could be a comma delimited list of params to a function call\n            begin: /,/, relevance: 0,\n          },\n          {\n            className: '',\n            begin: /\\s/,\n            end: /\\s*/,\n            skip: true,\n          },\n          { // JSX\n            variants: [\n              { begin: FRAGMENT.begin, end: FRAGMENT.end },\n              { begin: XML_TAG.begin, end: XML_TAG.end }\n            ],\n            subLanguage: 'xml',\n            contains: [\n              {\n                begin: XML_TAG.begin, end: XML_TAG.end, skip: true,\n                contains: ['self']\n              }\n            ]\n          },\n        ],\n        relevance: 0\n      },\n      {\n        className: 'function',\n        beginKeywords: 'function', end: /\\{/, excludeEnd: true,\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {begin: IDENT_RE$1}),\n          PARAMS\n        ],\n        illegal: /\\[|%/\n      },\n      {\n        begin: /\\$[(.]/ // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`\n      },\n\n      hljs.METHOD_GUARD,\n      { // ES6 class\n        className: 'class',\n        beginKeywords: 'class', end: /[{;=]/, excludeEnd: true,\n        illegal: /[:\"\\[\\]]/,\n        contains: [\n          {beginKeywords: 'extends'},\n          hljs.UNDERSCORE_TITLE_MODE\n        ]\n      },\n      {\n        beginKeywords: 'constructor', end: /\\{/, excludeEnd: true\n      },\n      {\n        begin: '(get|set)\\\\s+(?=' + IDENT_RE$1 + '\\\\()',\n        end: /{/,\n        keywords: \"get set\",\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {begin: IDENT_RE$1}),\n          { begin: /\\(\\)/ }, // eat to avoid empty params\n          PARAMS\n        ]\n\n      }\n    ],\n    illegal: /#(?!!)/\n  };\n}\n\nmodule.exports = javascript;\n","import { Observable } from '../Observable';\nimport { isScheduler } from '../util/isScheduler';\nimport { mergeAll } from '../operators/mergeAll';\nimport { fromArray } from './fromArray';\nexport function merge(...observables) {\n    let concurrent = Number.POSITIVE_INFINITY;\n    let scheduler = null;\n    let last = observables[observables.length - 1];\n    if (isScheduler(last)) {\n        scheduler = observables.pop();\n        if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n            concurrent = observables.pop();\n        }\n    }\n    else if (typeof last === 'number') {\n        concurrent = observables.pop();\n    }\n    if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable) {\n        return observables[0];\n    }\n    return mergeAll(concurrent)(fromArray(observables, scheduler));\n}\n//# sourceMappingURL=merge.js.map","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","import { empty } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\nexport var NotificationKind;\n(function (NotificationKind) {\n    NotificationKind[\"NEXT\"] = \"N\";\n    NotificationKind[\"ERROR\"] = \"E\";\n    NotificationKind[\"COMPLETE\"] = \"C\";\n})(NotificationKind || (NotificationKind = {}));\nexport class Notification {\n    constructor(kind, value, error) {\n        this.kind = kind;\n        this.value = value;\n        this.error = error;\n        this.hasValue = kind === 'N';\n    }\n    observe(observer) {\n        switch (this.kind) {\n            case 'N':\n                return observer.next && observer.next(this.value);\n            case 'E':\n                return observer.error && observer.error(this.error);\n            case 'C':\n                return observer.complete && observer.complete();\n        }\n    }\n    do(next, error, complete) {\n        const kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return next && next(this.value);\n            case 'E':\n                return error && error(this.error);\n            case 'C':\n                return complete && complete();\n        }\n    }\n    accept(nextOrObserver, error, complete) {\n        if (nextOrObserver && typeof nextOrObserver.next === 'function') {\n            return this.observe(nextOrObserver);\n        }\n        else {\n            return this.do(nextOrObserver, error, complete);\n        }\n    }\n    toObservable() {\n        const kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return of(this.value);\n            case 'E':\n                return throwError(this.error);\n            case 'C':\n                return empty();\n        }\n        throw new Error('unexpected notification kind value');\n    }\n    static createNext(value) {\n        if (typeof value !== 'undefined') {\n            return new Notification('N', value);\n        }\n        return Notification.undefinedValueNotification;\n    }\n    static createError(err) {\n        return new Notification('E', undefined, err);\n    }\n    static createComplete() {\n        return Notification.completeNotification;\n    }\n}\nNotification.completeNotification = new Notification('C');\nNotification.undefinedValueNotification = new Notification('N', undefined);\n//# sourceMappingURL=Notification.js.map","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","import { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nexport class SubjectSubscriber extends Subscriber {\n    constructor(destination) {\n        super(destination);\n        this.destination = destination;\n    }\n}\nexport class Subject extends Observable {\n    constructor() {\n        super();\n        this.observers = [];\n        this.closed = false;\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    [rxSubscriberSymbol]() {\n        return new SubjectSubscriber(this);\n    }\n    lift(operator) {\n        const subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    }\n    next(value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            const { observers } = this;\n            const len = observers.length;\n            const copy = observers.slice();\n            for (let i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    }\n    error(err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        const { observers } = this;\n        const len = observers.length;\n        const copy = observers.slice();\n        for (let i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    }\n    complete() {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        const { observers } = this;\n        const len = observers.length;\n        const copy = observers.slice();\n        for (let i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    }\n    unsubscribe() {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    }\n    _trySubscribe(subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else {\n            return super._trySubscribe(subscriber);\n        }\n    }\n    _subscribe(subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription(this, subscriber);\n        }\n    }\n    asObservable() {\n        const observable = new Observable();\n        observable.source = this;\n        return observable;\n    }\n}\nSubject.create = (destination, source) => {\n    return new AnonymousSubject(destination, source);\n};\nexport class AnonymousSubject extends Subject {\n    constructor(destination, source) {\n        super();\n        this.destination = destination;\n        this.source = source;\n    }\n    next(value) {\n        const { destination } = this;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    }\n    error(err) {\n        const { destination } = this;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    }\n    complete() {\n        const { destination } = this;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    }\n    _subscribe(subscriber) {\n        const { source } = this;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription.EMPTY;\n        }\n    }\n}\n//# sourceMappingURL=Subject.js.map","export function isObject(x) {\n    return x !== null && typeof x === 'object';\n}\n//# sourceMappingURL=isObject.js.map","export class Scheduler {\n    constructor(SchedulerAction, now = Scheduler.now) {\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    schedule(work, delay = 0, state) {\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    }\n}\nScheduler.now = () => Date.now();\n//# sourceMappingURL=Scheduler.js.map","import { isArray } from './isArray';\nexport function isNumeric(val) {\n    return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\n//# sourceMappingURL=isNumeric.js.map","import { Subscription } from './Subscription';\nexport class SubjectSubscription extends Subscription {\n    constructor(subject, subscriber) {\n        super();\n        this.subject = subject;\n        this.subscriber = subscriber;\n        this.closed = false;\n    }\n    unsubscribe() {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        const subject = this.subject;\n        const observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        const subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    }\n}\n//# sourceMappingURL=SubjectSubscription.js.map","import { Subscriber } from './Subscriber';\nexport class InnerSubscriber extends Subscriber {\n    constructor(parent, outerValue, outerIndex) {\n        super();\n        this.parent = parent;\n        this.outerValue = outerValue;\n        this.outerIndex = outerIndex;\n        this.index = 0;\n    }\n    _next(value) {\n        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n    }\n    _error(error) {\n        this.parent.notifyError(error, this);\n        this.unsubscribe();\n    }\n    _complete() {\n        this.parent.notifyComplete(this);\n        this.unsubscribe();\n    }\n}\n//# sourceMappingURL=InnerSubscriber.js.map","import { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeTo } from './subscribeTo';\nimport { Observable } from '../Observable';\nexport function subscribeToResult(outerSubscriber, result, outerValue, outerIndex, innerSubscriber = new InnerSubscriber(outerSubscriber, outerValue, outerIndex)) {\n    if (innerSubscriber.closed) {\n        return undefined;\n    }\n    if (result instanceof Observable) {\n        return result.subscribe(innerSubscriber);\n    }\n    return subscribeTo(result)(innerSubscriber);\n}\n//# sourceMappingURL=subscribeToResult.js.map","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;","import { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nexport function mergeAll(concurrent = Number.POSITIVE_INFINITY) {\n    return mergeMap(identity, concurrent);\n}\n//# sourceMappingURL=mergeAll.js.map","export function isPromise(value) {\n    return !!value && typeof value.subscribe !== 'function' && typeof value.then === 'function';\n}\n//# sourceMappingURL=isPromise.js.map","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { map } from '../operators/map';\nimport { isObject } from '../util/isObject';\nimport { from } from './from';\nexport function forkJoin(...sources) {\n    if (sources.length === 1) {\n        const first = sources[0];\n        if (isArray(first)) {\n            return forkJoinInternal(first, null);\n        }\n        if (isObject(first) && Object.getPrototypeOf(first) === Object.prototype) {\n            const keys = Object.keys(first);\n            return forkJoinInternal(keys.map(key => first[key]), keys);\n        }\n    }\n    if (typeof sources[sources.length - 1] === 'function') {\n        const resultSelector = sources.pop();\n        sources = (sources.length === 1 && isArray(sources[0])) ? sources[0] : sources;\n        return forkJoinInternal(sources, null).pipe(map((args) => resultSelector(...args)));\n    }\n    return forkJoinInternal(sources, null);\n}\nfunction forkJoinInternal(sources, keys) {\n    return new Observable(subscriber => {\n        const len = sources.length;\n        if (len === 0) {\n            subscriber.complete();\n            return;\n        }\n        const values = new Array(len);\n        let completed = 0;\n        let emitted = 0;\n        for (let i = 0; i < len; i++) {\n            const source = from(sources[i]);\n            let hasValue = false;\n            subscriber.add(source.subscribe({\n                next: value => {\n                    if (!hasValue) {\n                        hasValue = true;\n                        emitted++;\n                    }\n                    values[i] = value;\n                },\n                error: err => subscriber.error(err),\n                complete: () => {\n                    completed++;\n                    if (completed === len || !hasValue) {\n                        if (emitted === len) {\n                            subscriber.next(keys ?\n                                keys.reduce((result, key, i) => (result[key] = values[i], result), {}) :\n                                values);\n                        }\n                        subscriber.complete();\n                    }\n                }\n            }));\n        }\n    });\n}\n//# sourceMappingURL=forkJoin.js.map","import { AsyncAction } from './AsyncAction';\nexport class AnimationFrameAction extends AsyncAction {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        if (delay !== null && delay > 0) {\n            return super.requestAsyncId(scheduler, id, delay);\n        }\n        scheduler.actions.push(this);\n        return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(() => scheduler.flush(null)));\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return super.recycleAsyncId(scheduler, id, delay);\n        }\n        if (scheduler.actions.length === 0) {\n            cancelAnimationFrame(id);\n            scheduler.scheduled = undefined;\n        }\n        return undefined;\n    }\n}\n//# sourceMappingURL=AnimationFrameAction.js.map","import { AnimationFrameAction } from './AnimationFrameAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\nexport const animationFrameScheduler = new AnimationFrameScheduler(AnimationFrameAction);\nexport const animationFrame = animationFrameScheduler;\n//# sourceMappingURL=animationFrame.js.map","import { AsyncScheduler } from './AsyncScheduler';\nexport class AnimationFrameScheduler extends AsyncScheduler {\n    flush(action) {\n        this.active = true;\n        this.scheduled = undefined;\n        const { actions } = this;\n        let error;\n        let index = -1;\n        let count = actions.length;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n//# sourceMappingURL=AnimationFrameScheduler.js.map","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import { config } from './config';\nimport { hostReportError } from './util/hostReportError';\nexport const empty = {\n    closed: true,\n    next(value) { },\n    error(err) {\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            throw err;\n        }\n        else {\n            hostReportError(err);\n        }\n    },\n    complete() { }\n};\n//# sourceMappingURL=Observer.js.map","import { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { fromArray } from './fromArray';\nconst NONE = {};\nexport function combineLatest(...observables) {\n    let resultSelector = undefined;\n    let scheduler = undefined;\n    if (isScheduler(observables[observables.length - 1])) {\n        scheduler = observables.pop();\n    }\n    if (typeof observables[observables.length - 1] === 'function') {\n        resultSelector = observables.pop();\n    }\n    if (observables.length === 1 && isArray(observables[0])) {\n        observables = observables[0];\n    }\n    return fromArray(observables, scheduler).lift(new CombineLatestOperator(resultSelector));\n}\nexport class CombineLatestOperator {\n    constructor(resultSelector) {\n        this.resultSelector = resultSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));\n    }\n}\nexport class CombineLatestSubscriber extends OuterSubscriber {\n    constructor(destination, resultSelector) {\n        super(destination);\n        this.resultSelector = resultSelector;\n        this.active = 0;\n        this.values = [];\n        this.observables = [];\n    }\n    _next(observable) {\n        this.values.push(NONE);\n        this.observables.push(observable);\n    }\n    _complete() {\n        const observables = this.observables;\n        const len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            this.active = len;\n            this.toRespond = len;\n            for (let i = 0; i < len; i++) {\n                const observable = observables[i];\n                this.add(subscribeToResult(this, observable, undefined, i));\n            }\n        }\n    }\n    notifyComplete(unused) {\n        if ((this.active -= 1) === 0) {\n            this.destination.complete();\n        }\n    }\n    notifyNext(_outerValue, innerValue, outerIndex) {\n        const values = this.values;\n        const oldVal = values[outerIndex];\n        const toRespond = !this.toRespond\n            ? 0\n            : oldVal === NONE ? --this.toRespond : this.toRespond;\n        values[outerIndex] = innerValue;\n        if (toRespond === 0) {\n            if (this.resultSelector) {\n                this._tryResultSelector(values);\n            }\n            else {\n                this.destination.next(values.slice());\n            }\n        }\n    }\n    _tryResultSelector(values) {\n        let result;\n        try {\n            result = this.resultSelector.apply(this, values);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    }\n}\n//# sourceMappingURL=combineLatest.js.map","import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nexport function scheduleArray(input, scheduler) {\n    return new Observable(subscriber => {\n        const sub = new Subscription();\n        let i = 0;\n        sub.add(scheduler.schedule(function () {\n            if (i === input.length) {\n                subscriber.complete();\n                return;\n            }\n            subscriber.next(input[i++]);\n            if (!subscriber.closed) {\n                sub.add(this.schedule());\n            }\n        }));\n        return sub;\n    });\n}\n//# sourceMappingURL=scheduleArray.js.map","import { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nexport function observeOn(scheduler, delay = 0) {\n    return function observeOnOperatorFunction(source) {\n        return source.lift(new ObserveOnOperator(scheduler, delay));\n    };\n}\nexport class ObserveOnOperator {\n    constructor(scheduler, delay = 0) {\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n    }\n}\nexport class ObserveOnSubscriber extends Subscriber {\n    constructor(destination, scheduler, delay = 0) {\n        super(destination);\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    static dispatch(arg) {\n        const { notification, destination } = arg;\n        notification.observe(destination);\n        this.unsubscribe();\n    }\n    scheduleMessage(notification) {\n        const destination = this.destination;\n        destination.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));\n    }\n    _next(value) {\n        this.scheduleMessage(Notification.createNext(value));\n    }\n    _error(err) {\n        this.scheduleMessage(Notification.createError(err));\n        this.unsubscribe();\n    }\n    _complete() {\n        this.scheduleMessage(Notification.createComplete());\n        this.unsubscribe();\n    }\n}\nexport class ObserveOnMessage {\n    constructor(notification, destination) {\n        this.notification = notification;\n        this.destination = destination;\n    }\n}\n//# sourceMappingURL=observeOn.js.map","import { Subject } from './Subject';\nimport { queue } from './scheduler/queue';\nimport { Subscription } from './Subscription';\nimport { ObserveOnSubscriber } from './operators/observeOn';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nexport class ReplaySubject extends Subject {\n    constructor(bufferSize = Number.POSITIVE_INFINITY, windowTime = Number.POSITIVE_INFINITY, scheduler) {\n        super();\n        this.scheduler = scheduler;\n        this._events = [];\n        this._infiniteTimeWindow = false;\n        this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n        this._windowTime = windowTime < 1 ? 1 : windowTime;\n        if (windowTime === Number.POSITIVE_INFINITY) {\n            this._infiniteTimeWindow = true;\n            this.next = this.nextInfiniteTimeWindow;\n        }\n        else {\n            this.next = this.nextTimeWindow;\n        }\n    }\n    nextInfiniteTimeWindow(value) {\n        const _events = this._events;\n        _events.push(value);\n        if (_events.length > this._bufferSize) {\n            _events.shift();\n        }\n        super.next(value);\n    }\n    nextTimeWindow(value) {\n        this._events.push(new ReplayEvent(this._getNow(), value));\n        this._trimBufferThenGetEvents();\n        super.next(value);\n    }\n    _subscribe(subscriber) {\n        const _infiniteTimeWindow = this._infiniteTimeWindow;\n        const _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();\n        const scheduler = this.scheduler;\n        const len = _events.length;\n        let subscription;\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.isStopped || this.hasError) {\n            subscription = Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            subscription = new SubjectSubscription(this, subscriber);\n        }\n        if (scheduler) {\n            subscriber.add(subscriber = new ObserveOnSubscriber(subscriber, scheduler));\n        }\n        if (_infiniteTimeWindow) {\n            for (let i = 0; i < len && !subscriber.closed; i++) {\n                subscriber.next(_events[i]);\n            }\n        }\n        else {\n            for (let i = 0; i < len && !subscriber.closed; i++) {\n                subscriber.next(_events[i].value);\n            }\n        }\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n        }\n        return subscription;\n    }\n    _getNow() {\n        return (this.scheduler || queue).now();\n    }\n    _trimBufferThenGetEvents() {\n        const now = this._getNow();\n        const _bufferSize = this._bufferSize;\n        const _windowTime = this._windowTime;\n        const _events = this._events;\n        const eventsCount = _events.length;\n        let spliceCount = 0;\n        while (spliceCount < eventsCount) {\n            if ((now - _events[spliceCount].time) < _windowTime) {\n                break;\n            }\n            spliceCount++;\n        }\n        if (eventsCount > _bufferSize) {\n            spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n        }\n        if (spliceCount > 0) {\n            _events.splice(0, spliceCount);\n        }\n        return _events;\n    }\n}\nclass ReplayEvent {\n    constructor(time, value) {\n        this.time = time;\n        this.value = value;\n    }\n}\n//# sourceMappingURL=ReplaySubject.js.map","export const observable = (() => typeof Symbol === 'function' && Symbol.observable || '@@observable')();\n//# sourceMappingURL=observable.js.map","import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nexport function interval(period = 0, scheduler = async) {\n    if (!isNumeric(period) || period < 0) {\n        period = 0;\n    }\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n        scheduler = async;\n    }\n    return new Observable(subscriber => {\n        subscriber.add(scheduler.schedule(dispatch, period, { subscriber, counter: 0, period }));\n        return subscriber;\n    });\n}\nfunction dispatch(state) {\n    const { subscriber, counter, period } = state;\n    subscriber.next(counter);\n    this.schedule({ subscriber, counter: counter + 1, period }, period);\n}\n//# sourceMappingURL=interval.js.map","import { Subscriber } from './Subscriber';\nexport class OuterSubscriber extends Subscriber {\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    }\n    notifyError(error, innerSub) {\n        this.destination.error(error);\n    }\n    notifyComplete(innerSub) {\n        this.destination.complete();\n    }\n}\n//# sourceMappingURL=OuterSubscriber.js.map","import { Subscriber } from '../Subscriber';\nexport function map(project, thisArg) {\n    return function mapOperation(source) {\n        if (typeof project !== 'function') {\n            throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n        }\n        return source.lift(new MapOperator(project, thisArg));\n    };\n}\nexport class MapOperator {\n    constructor(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    }\n}\nclass MapSubscriber extends Subscriber {\n    constructor(destination, project, thisArg) {\n        super(destination);\n        this.project = project;\n        this.count = 0;\n        this.thisArg = thisArg || this;\n    }\n    _next(value) {\n        let result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    }\n}\n//# sourceMappingURL=map.js.map","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","import { identity } from './identity';\nexport function pipe(...fns) {\n    return pipeFromArray(fns);\n}\nexport function pipeFromArray(fns) {\n    if (fns.length === 0) {\n        return identity;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce((prev, fn) => fn(prev), input);\n    };\n}\n//# sourceMappingURL=pipe.js.map","/*\nLanguage: C#\nAuthor: Jason Diamond <jason@diamond.name>\nContributor: Nicolas LLOBERA <nllobera@gmail.com>, Pieter Vantorre <pietervantorre@gmail.com>\nWebsite: https://docs.microsoft.com/en-us/dotnet/csharp/\nCategory: common\n*/\n\n/** @type LanguageFn */\nfunction csharp(hljs) {\n  var KEYWORDS = {\n    keyword:\n      // Normal keywords.\n      'abstract as base bool break byte case catch char checked const continue decimal ' +\n      'default delegate do double enum event explicit extern finally fixed float ' +\n      'for foreach goto if implicit in int interface internal is lock long ' +\n      'object operator out override params private protected public readonly ref sbyte ' +\n      'sealed short sizeof stackalloc static string struct switch this try typeof ' +\n      'uint ulong unchecked unsafe ushort using virtual void volatile while ' +\n      // Contextual keywords.\n      'add alias ascending async await by descending dynamic equals from get global group into join ' +\n      'let nameof on orderby partial remove select set value var when where yield',\n    literal:\n      'null false true'\n  };\n  var TITLE_MODE = hljs.inherit(hljs.TITLE_MODE, {begin: '[a-zA-Z](\\\\.?\\\\w)*'});\n  var NUMBERS = {\n    className: 'number',\n    variants: [\n      { begin: '\\\\b(0b[01\\']+)' },\n      { begin: '(-?)\\\\b([\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)(u|U|l|L|ul|UL|f|F|b|B)' },\n      { begin: '(-?)(\\\\b0[xX][a-fA-F0-9\\']+|(\\\\b[\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)([eE][-+]?[\\\\d\\']+)?)' }\n    ],\n    relevance: 0\n  };\n  var VERBATIM_STRING = {\n    className: 'string',\n    begin: '@\"', end: '\"',\n    contains: [{begin: '\"\"'}]\n  };\n  var VERBATIM_STRING_NO_LF = hljs.inherit(VERBATIM_STRING, {illegal: /\\n/});\n  var SUBST = {\n    className: 'subst',\n    begin: '{', end: '}',\n    keywords: KEYWORDS\n  };\n  var SUBST_NO_LF = hljs.inherit(SUBST, {illegal: /\\n/});\n  var INTERPOLATED_STRING = {\n    className: 'string',\n    begin: /\\$\"/, end: '\"',\n    illegal: /\\n/,\n    contains: [{begin: '{{'}, {begin: '}}'}, hljs.BACKSLASH_ESCAPE, SUBST_NO_LF]\n  };\n  var INTERPOLATED_VERBATIM_STRING = {\n    className: 'string',\n    begin: /\\$@\"/, end: '\"',\n    contains: [{begin: '{{'}, {begin: '}}'}, {begin: '\"\"'}, SUBST]\n  };\n  var INTERPOLATED_VERBATIM_STRING_NO_LF = hljs.inherit(INTERPOLATED_VERBATIM_STRING, {\n    illegal: /\\n/,\n    contains: [{begin: '{{'}, {begin: '}}'}, {begin: '\"\"'}, SUBST_NO_LF]\n  });\n  SUBST.contains = [\n    INTERPOLATED_VERBATIM_STRING,\n    INTERPOLATED_STRING,\n    VERBATIM_STRING,\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE,\n    NUMBERS,\n    hljs.C_BLOCK_COMMENT_MODE\n  ];\n  SUBST_NO_LF.contains = [\n    INTERPOLATED_VERBATIM_STRING_NO_LF,\n    INTERPOLATED_STRING,\n    VERBATIM_STRING_NO_LF,\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE,\n    NUMBERS,\n    hljs.inherit(hljs.C_BLOCK_COMMENT_MODE, {illegal: /\\n/})\n  ];\n  var STRING = {\n    variants: [\n      INTERPOLATED_VERBATIM_STRING,\n      INTERPOLATED_STRING,\n      VERBATIM_STRING,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE\n    ]\n  };\n\n  var GENERIC_MODIFIER = {\n    begin: \"<\",\n    end: \">\",\n    contains: [ \n      { beginKeywords: \"in out\"},\n      TITLE_MODE \n    ]\n  };\n  var TYPE_IDENT_RE = hljs.IDENT_RE + '(<' + hljs.IDENT_RE + '(\\\\s*,\\\\s*' + hljs.IDENT_RE + ')*>)?(\\\\[\\\\])?';\n  var AT_IDENTIFIER = {\n    // prevents expressions like `@class` from incorrect flagging\n    // `class` as a keyword\n    begin: \"@\" + hljs.IDENT_RE,\n    relevance: 0\n  };\n\n  return {\n    name: 'C#',\n    aliases: ['cs', 'c#'],\n    keywords: KEYWORDS,\n    illegal: /::/,\n    contains: [\n      hljs.COMMENT(\n        '///',\n        '$',\n        {\n          returnBegin: true,\n          contains: [\n            {\n              className: 'doctag',\n              variants: [\n                {\n                  begin: '///', relevance: 0\n                },\n                {\n                  begin: '<!--|-->'\n                },\n                {\n                  begin: '</?', end: '>'\n                }\n              ]\n            }\n          ]\n        }\n      ),\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'meta',\n        begin: '#', end: '$',\n        keywords: {\n          'meta-keyword': 'if else elif endif define undef warning error line region endregion pragma checksum'\n        }\n      },\n      STRING,\n      NUMBERS,\n      {\n        beginKeywords: 'class interface', end: /[{;=]/,\n        illegal: /[^\\s:,]/,\n        contains: [\n          { beginKeywords: \"where class\" },\n          TITLE_MODE,\n          GENERIC_MODIFIER,\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      {\n        beginKeywords: 'namespace', end: /[{;=]/,\n        illegal: /[^\\s:]/,\n        contains: [\n          TITLE_MODE,\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      {\n        // [Attributes(\"\")]\n        className: 'meta',\n        begin: '^\\\\s*\\\\[', excludeBegin: true, end: '\\\\]', excludeEnd: true,\n        contains: [\n          {className: 'meta-string', begin: /\"/, end: /\"/}\n        ]\n      },\n      {\n        // Expression keywords prevent 'keyword Name(...)' from being\n        // recognized as a function definition\n        beginKeywords: 'new return throw await else',\n        relevance: 0\n      },\n      {\n        className: 'function',\n        begin: '(' + TYPE_IDENT_RE + '\\\\s+)+' + hljs.IDENT_RE + '\\\\s*(\\\\<.+\\\\>)?\\\\s*\\\\(', returnBegin: true,\n        end: /\\s*[{;=]/, excludeEnd: true,\n        keywords: KEYWORDS,\n        contains: [\n          {\n            begin: hljs.IDENT_RE + '\\\\s*(\\\\<.+\\\\>)?\\\\s*\\\\(', returnBegin: true,\n            contains: [\n              hljs.TITLE_MODE,\n              GENERIC_MODIFIER\n            ],\n            relevance: 0\n          },\n          {\n            className: 'params',\n            begin: /\\(/, end: /\\)/,\n            excludeBegin: true,\n            excludeEnd: true,\n            keywords: KEYWORDS,\n            relevance: 0,\n            contains: [\n              STRING,\n              NUMBERS,\n              hljs.C_BLOCK_COMMENT_MODE\n            ]\n          },\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n      AT_IDENTIFIER\n    ]\n  };\n}\n\nmodule.exports = csharp;\n","export function isFunction(x) {\n    return typeof x === 'function';\n}\n//# sourceMappingURL=isFunction.js.map","export const subscribeToArray = (array) => (subscriber) => {\n    for (let i = 0, len = array.length; i < len && !subscriber.closed; i++) {\n        subscriber.next(array[i]);\n    }\n    subscriber.complete();\n};\n//# sourceMappingURL=subscribeToArray.js.map","import { Subscriber } from '../Subscriber';\nexport function filter(predicate, thisArg) {\n    return function filterOperatorFunction(source) {\n        return source.lift(new FilterOperator(predicate, thisArg));\n    };\n}\nclass FilterOperator {\n    constructor(predicate, thisArg) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n    }\n}\nclass FilterSubscriber extends Subscriber {\n    constructor(destination, predicate, thisArg) {\n        super(destination);\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.count = 0;\n    }\n    _next(value) {\n        let result;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.destination.next(value);\n        }\n    }\n}\n//# sourceMappingURL=filter.js.map","const UnsubscriptionErrorImpl = (() => {\n    function UnsubscriptionErrorImpl(errors) {\n        Error.call(this);\n        this.message = errors ?\n            `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '';\n        this.name = 'UnsubscriptionError';\n        this.errors = errors;\n        return this;\n    }\n    UnsubscriptionErrorImpl.prototype = Object.create(Error.prototype);\n    return UnsubscriptionErrorImpl;\n})();\nexport const UnsubscriptionError = UnsubscriptionErrorImpl;\n//# sourceMappingURL=UnsubscriptionError.js.map","import { AsyncAction } from './AsyncAction';\nexport class QueueAction extends AsyncAction {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    schedule(state, delay = 0) {\n        if (delay > 0) {\n            return super.schedule(state, delay);\n        }\n        this.delay = delay;\n        this.state = state;\n        this.scheduler.flush(this);\n        return this;\n    }\n    execute(state, delay) {\n        return (delay > 0 || this.closed) ?\n            super.execute(state, delay) :\n            this._execute(state, delay);\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return super.requestAsyncId(scheduler, id, delay);\n        }\n        return scheduler.flush(this);\n    }\n}\n//# sourceMappingURL=QueueAction.js.map","import { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\nexport const queueScheduler = new QueueScheduler(QueueAction);\nexport const queue = queueScheduler;\n//# sourceMappingURL=queue.js.map","import { AsyncScheduler } from './AsyncScheduler';\nexport class QueueScheduler extends AsyncScheduler {\n}\n//# sourceMappingURL=QueueScheduler.js.map","import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nexport class Subscription {\n    constructor(unsubscribe) {\n        this.closed = false;\n        this._parentOrParents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._ctorUnsubscribe = true;\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    unsubscribe() {\n        let errors;\n        if (this.closed) {\n            return;\n        }\n        let { _parentOrParents, _ctorUnsubscribe, _unsubscribe, _subscriptions } = this;\n        this.closed = true;\n        this._parentOrParents = null;\n        this._subscriptions = null;\n        if (_parentOrParents instanceof Subscription) {\n            _parentOrParents.remove(this);\n        }\n        else if (_parentOrParents !== null) {\n            for (let index = 0; index < _parentOrParents.length; ++index) {\n                const parent = _parentOrParents[index];\n                parent.remove(this);\n            }\n        }\n        if (isFunction(_unsubscribe)) {\n            if (_ctorUnsubscribe) {\n                this._unsubscribe = undefined;\n            }\n            try {\n                _unsubscribe.call(this);\n            }\n            catch (e) {\n                errors = e instanceof UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];\n            }\n        }\n        if (isArray(_subscriptions)) {\n            let index = -1;\n            let len = _subscriptions.length;\n            while (++index < len) {\n                const sub = _subscriptions[index];\n                if (isObject(sub)) {\n                    try {\n                        sub.unsubscribe();\n                    }\n                    catch (e) {\n                        errors = errors || [];\n                        if (e instanceof UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\n                        }\n                        else {\n                            errors.push(e);\n                        }\n                    }\n                }\n            }\n        }\n        if (errors) {\n            throw new UnsubscriptionError(errors);\n        }\n    }\n    add(teardown) {\n        let subscription = teardown;\n        if (!teardown) {\n            return Subscription.EMPTY;\n        }\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (!(subscription instanceof Subscription)) {\n                    const tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default: {\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n            }\n        }\n        let { _parentOrParents } = subscription;\n        if (_parentOrParents === null) {\n            subscription._parentOrParents = this;\n        }\n        else if (_parentOrParents instanceof Subscription) {\n            if (_parentOrParents === this) {\n                return subscription;\n            }\n            subscription._parentOrParents = [_parentOrParents, this];\n        }\n        else if (_parentOrParents.indexOf(this) === -1) {\n            _parentOrParents.push(this);\n        }\n        else {\n            return subscription;\n        }\n        const subscriptions = this._subscriptions;\n        if (subscriptions === null) {\n            this._subscriptions = [subscription];\n        }\n        else {\n            subscriptions.push(subscription);\n        }\n        return subscription;\n    }\n    remove(subscription) {\n        const subscriptions = this._subscriptions;\n        if (subscriptions) {\n            const subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    }\n}\nSubscription.EMPTY = (function (empty) {\n    empty.closed = true;\n    return empty;\n}(new Subscription()));\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n//# sourceMappingURL=Subscription.js.map","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","const EmptyErrorImpl = (() => {\n    function EmptyErrorImpl() {\n        Error.call(this);\n        this.message = 'no elements in sequence';\n        this.name = 'EmptyError';\n        return this;\n    }\n    EmptyErrorImpl.prototype = Object.create(Error.prototype);\n    return EmptyErrorImpl;\n})();\nexport const EmptyError = EmptyErrorImpl;\n//# sourceMappingURL=EmptyError.js.map","(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module unless amdModuleId is set\n    define('Chartist', [], function () {\n      return (root['Chartist'] = factory());\n    });\n  } else if (typeof module === 'object' && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    root['Chartist'] = factory();\n  }\n}(this, function () {\n\n/* Chartist.js 0.11.4\n * Copyright © 2019 Gion Kunz\n * Free to use under either the WTFPL license or the MIT license.\n * https://raw.githubusercontent.com/gionkunz/chartist-js/master/LICENSE-WTFPL\n * https://raw.githubusercontent.com/gionkunz/chartist-js/master/LICENSE-MIT\n */\n/**\n * The core module of Chartist that is mainly providing static functions and higher level functions for chart modules.\n *\n * @module Chartist.Core\n */\nvar Chartist = {\n  version: '0.11.4'\n};\n\n(function (globalRoot, Chartist) {\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  /**\n   * This object contains all namespaces used within Chartist.\n   *\n   * @memberof Chartist.Core\n   * @type {{svg: string, xmlns: string, xhtml: string, xlink: string, ct: string}}\n   */\n  Chartist.namespaces = {\n    svg: 'http://www.w3.org/2000/svg',\n    xmlns: 'http://www.w3.org/2000/xmlns/',\n    xhtml: 'http://www.w3.org/1999/xhtml',\n    xlink: 'http://www.w3.org/1999/xlink',\n    ct: 'http://gionkunz.github.com/chartist-js/ct'\n  };\n\n  /**\n   * Helps to simplify functional style code\n   *\n   * @memberof Chartist.Core\n   * @param {*} n This exact value will be returned by the noop function\n   * @return {*} The same value that was provided to the n parameter\n   */\n  Chartist.noop = function (n) {\n    return n;\n  };\n\n  /**\n   * Generates a-z from a number 0 to 26\n   *\n   * @memberof Chartist.Core\n   * @param {Number} n A number from 0 to 26 that will result in a letter a-z\n   * @return {String} A character from a-z based on the input number n\n   */\n  Chartist.alphaNumerate = function (n) {\n    // Limit to a-z\n    return String.fromCharCode(97 + n % 26);\n  };\n\n  /**\n   * Simple recursive object extend\n   *\n   * @memberof Chartist.Core\n   * @param {Object} target Target object where the source will be merged into\n   * @param {Object...} sources This object (objects) will be merged into target and then target is returned\n   * @return {Object} An object that has the same reference as target but is extended and merged with the properties of source\n   */\n  Chartist.extend = function (target) {\n    var i, source, sourceProp;\n    target = target || {};\n\n    for (i = 1; i < arguments.length; i++) {\n      source = arguments[i];\n      for (var prop in source) {\n        sourceProp = source[prop];\n        if (typeof sourceProp === 'object' && sourceProp !== null && !(sourceProp instanceof Array)) {\n          target[prop] = Chartist.extend(target[prop], sourceProp);\n        } else {\n          target[prop] = sourceProp;\n        }\n      }\n    }\n\n    return target;\n  };\n\n  /**\n   * Replaces all occurrences of subStr in str with newSubStr and returns a new string.\n   *\n   * @memberof Chartist.Core\n   * @param {String} str\n   * @param {String} subStr\n   * @param {String} newSubStr\n   * @return {String}\n   */\n  Chartist.replaceAll = function(str, subStr, newSubStr) {\n    return str.replace(new RegExp(subStr, 'g'), newSubStr);\n  };\n\n  /**\n   * Converts a number to a string with a unit. If a string is passed then this will be returned unmodified.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} value\n   * @param {String} unit\n   * @return {String} Returns the passed number value with unit.\n   */\n  Chartist.ensureUnit = function(value, unit) {\n    if(typeof value === 'number') {\n      value = value + unit;\n    }\n\n    return value;\n  };\n\n  /**\n   * Converts a number or string to a quantity object.\n   *\n   * @memberof Chartist.Core\n   * @param {String|Number} input\n   * @return {Object} Returns an object containing the value as number and the unit as string.\n   */\n  Chartist.quantity = function(input) {\n    if (typeof input === 'string') {\n      var match = (/^(\\d+)\\s*(.*)$/g).exec(input);\n      return {\n        value : +match[1],\n        unit: match[2] || undefined\n      };\n    }\n    return { value: input };\n  };\n\n  /**\n   * This is a wrapper around document.querySelector that will return the query if it's already of type Node\n   *\n   * @memberof Chartist.Core\n   * @param {String|Node} query The query to use for selecting a Node or a DOM node that will be returned directly\n   * @return {Node}\n   */\n  Chartist.querySelector = function(query) {\n    return query instanceof Node ? query : document.querySelector(query);\n  };\n\n  /**\n   * Functional style helper to produce array with given length initialized with undefined values\n   *\n   * @memberof Chartist.Core\n   * @param length\n   * @return {Array}\n   */\n  Chartist.times = function(length) {\n    return Array.apply(null, new Array(length));\n  };\n\n  /**\n   * Sum helper to be used in reduce functions\n   *\n   * @memberof Chartist.Core\n   * @param previous\n   * @param current\n   * @return {*}\n   */\n  Chartist.sum = function(previous, current) {\n    return previous + (current ? current : 0);\n  };\n\n  /**\n   * Multiply helper to be used in `Array.map` for multiplying each value of an array with a factor.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} factor\n   * @returns {Function} Function that can be used in `Array.map` to multiply each value in an array\n   */\n  Chartist.mapMultiply = function(factor) {\n    return function(num) {\n      return num * factor;\n    };\n  };\n\n  /**\n   * Add helper to be used in `Array.map` for adding a addend to each value of an array.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} addend\n   * @returns {Function} Function that can be used in `Array.map` to add a addend to each value in an array\n   */\n  Chartist.mapAdd = function(addend) {\n    return function(num) {\n      return num + addend;\n    };\n  };\n\n  /**\n   * Map for multi dimensional arrays where their nested arrays will be mapped in serial. The output array will have the length of the largest nested array. The callback function is called with variable arguments where each argument is the nested array value (or undefined if there are no more values).\n   *\n   * @memberof Chartist.Core\n   * @param arr\n   * @param cb\n   * @return {Array}\n   */\n  Chartist.serialMap = function(arr, cb) {\n    var result = [],\n        length = Math.max.apply(null, arr.map(function(e) {\n          return e.length;\n        }));\n\n    Chartist.times(length).forEach(function(e, index) {\n      var args = arr.map(function(e) {\n        return e[index];\n      });\n\n      result[index] = cb.apply(null, args);\n    });\n\n    return result;\n  };\n\n  /**\n   * This helper function can be used to round values with certain precision level after decimal. This is used to prevent rounding errors near float point precision limit.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} value The value that should be rounded with precision\n   * @param {Number} [digits] The number of digits after decimal used to do the rounding\n   * @returns {number} Rounded value\n   */\n  Chartist.roundWithPrecision = function(value, digits) {\n    var precision = Math.pow(10, digits || Chartist.precision);\n    return Math.round(value * precision) / precision;\n  };\n\n  /**\n   * Precision level used internally in Chartist for rounding. If you require more decimal places you can increase this number.\n   *\n   * @memberof Chartist.Core\n   * @type {number}\n   */\n  Chartist.precision = 8;\n\n  /**\n   * A map with characters to escape for strings to be safely used as attribute values.\n   *\n   * @memberof Chartist.Core\n   * @type {Object}\n   */\n  Chartist.escapingMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    '\\'': '&#039;'\n  };\n\n  /**\n   * This function serializes arbitrary data to a string. In case of data that can't be easily converted to a string, this function will create a wrapper object and serialize the data using JSON.stringify. The outcoming string will always be escaped using Chartist.escapingMap.\n   * If called with null or undefined the function will return immediately with null or undefined.\n   *\n   * @memberof Chartist.Core\n   * @param {Number|String|Object} data\n   * @return {String}\n   */\n  Chartist.serialize = function(data) {\n    if(data === null || data === undefined) {\n      return data;\n    } else if(typeof data === 'number') {\n      data = ''+data;\n    } else if(typeof data === 'object') {\n      data = JSON.stringify({data: data});\n    }\n\n    return Object.keys(Chartist.escapingMap).reduce(function(result, key) {\n      return Chartist.replaceAll(result, key, Chartist.escapingMap[key]);\n    }, data);\n  };\n\n  /**\n   * This function de-serializes a string previously serialized with Chartist.serialize. The string will always be unescaped using Chartist.escapingMap before it's returned. Based on the input value the return type can be Number, String or Object. JSON.parse is used with try / catch to see if the unescaped string can be parsed into an Object and this Object will be returned on success.\n   *\n   * @memberof Chartist.Core\n   * @param {String} data\n   * @return {String|Number|Object}\n   */\n  Chartist.deserialize = function(data) {\n    if(typeof data !== 'string') {\n      return data;\n    }\n\n    data = Object.keys(Chartist.escapingMap).reduce(function(result, key) {\n      return Chartist.replaceAll(result, Chartist.escapingMap[key], key);\n    }, data);\n\n    try {\n      data = JSON.parse(data);\n      data = data.data !== undefined ? data.data : data;\n    } catch(e) {}\n\n    return data;\n  };\n\n  /**\n   * Create or reinitialize the SVG element for the chart\n   *\n   * @memberof Chartist.Core\n   * @param {Node} container The containing DOM Node object that will be used to plant the SVG element\n   * @param {String} width Set the width of the SVG element. Default is 100%\n   * @param {String} height Set the height of the SVG element. Default is 100%\n   * @param {String} className Specify a class to be added to the SVG element\n   * @return {Object} The created/reinitialized SVG element\n   */\n  Chartist.createSvg = function (container, width, height, className) {\n    var svg;\n\n    width = width || '100%';\n    height = height || '100%';\n\n    // Check if there is a previous SVG element in the container that contains the Chartist XML namespace and remove it\n    // Since the DOM API does not support namespaces we need to manually search the returned list http://www.w3.org/TR/selectors-api/\n    Array.prototype.slice.call(container.querySelectorAll('svg')).filter(function filterChartistSvgObjects(svg) {\n      return svg.getAttributeNS(Chartist.namespaces.xmlns, 'ct');\n    }).forEach(function removePreviousElement(svg) {\n      container.removeChild(svg);\n    });\n\n    // Create svg object with width and height or use 100% as default\n    svg = new Chartist.Svg('svg').attr({\n      width: width,\n      height: height\n    }).addClass(className);\n\n    svg._node.style.width = width;\n    svg._node.style.height = height;\n\n    // Add the DOM node to our container\n    container.appendChild(svg._node);\n\n    return svg;\n  };\n\n  /**\n   * Ensures that the data object passed as second argument to the charts is present and correctly initialized.\n   *\n   * @param  {Object} data The data object that is passed as second argument to the charts\n   * @return {Object} The normalized data object\n   */\n  Chartist.normalizeData = function(data, reverse, multi) {\n    var labelCount;\n    var output = {\n      raw: data,\n      normalized: {}\n    };\n\n    // Check if we should generate some labels based on existing series data\n    output.normalized.series = Chartist.getDataArray({\n      series: data.series || []\n    }, reverse, multi);\n\n    // If all elements of the normalized data array are arrays we're dealing with\n    // multi series data and we need to find the largest series if they are un-even\n    if (output.normalized.series.every(function(value) {\n        return value instanceof Array;\n      })) {\n      // Getting the series with the the most elements\n      labelCount = Math.max.apply(null, output.normalized.series.map(function(series) {\n        return series.length;\n      }));\n    } else {\n      // We're dealing with Pie data so we just take the normalized array length\n      labelCount = output.normalized.series.length;\n    }\n\n    output.normalized.labels = (data.labels || []).slice();\n    // Padding the labels to labelCount with empty strings\n    Array.prototype.push.apply(\n      output.normalized.labels,\n      Chartist.times(Math.max(0, labelCount - output.normalized.labels.length)).map(function() {\n        return '';\n      })\n    );\n\n    if(reverse) {\n      Chartist.reverseData(output.normalized);\n    }\n\n    return output;\n  };\n\n  /**\n   * This function safely checks if an objects has an owned property.\n   *\n   * @param {Object} object The object where to check for a property\n   * @param {string} property The property name\n   * @returns {boolean} Returns true if the object owns the specified property\n   */\n  Chartist.safeHasProperty = function(object, property) {\n    return object !== null &&\n      typeof object === 'object' &&\n      object.hasOwnProperty(property);\n  };\n\n  /**\n   * Checks if a value is considered a hole in the data series.\n   *\n   * @param {*} value\n   * @returns {boolean} True if the value is considered a data hole\n   */\n  Chartist.isDataHoleValue = function(value) {\n    return value === null ||\n      value === undefined ||\n      (typeof value === 'number' && isNaN(value));\n  };\n\n  /**\n   * Reverses the series, labels and series data arrays.\n   *\n   * @memberof Chartist.Core\n   * @param data\n   */\n  Chartist.reverseData = function(data) {\n    data.labels.reverse();\n    data.series.reverse();\n    for (var i = 0; i < data.series.length; i++) {\n      if(typeof(data.series[i]) === 'object' && data.series[i].data !== undefined) {\n        data.series[i].data.reverse();\n      } else if(data.series[i] instanceof Array) {\n        data.series[i].reverse();\n      }\n    }\n  };\n\n  /**\n   * Convert data series into plain array\n   *\n   * @memberof Chartist.Core\n   * @param {Object} data The series object that contains the data to be visualized in the chart\n   * @param {Boolean} [reverse] If true the whole data is reversed by the getDataArray call. This will modify the data object passed as first parameter. The labels as well as the series order is reversed. The whole series data arrays are reversed too.\n   * @param {Boolean} [multi] Create a multi dimensional array from a series data array where a value object with `x` and `y` values will be created.\n   * @return {Array} A plain array that contains the data to be visualized in the chart\n   */\n  Chartist.getDataArray = function(data, reverse, multi) {\n    // Recursively walks through nested arrays and convert string values to numbers and objects with value properties\n    // to values. Check the tests in data core -> data normalization for a detailed specification of expected values\n    function recursiveConvert(value) {\n      if(Chartist.safeHasProperty(value, 'value')) {\n        // We are dealing with value object notation so we need to recurse on value property\n        return recursiveConvert(value.value);\n      } else if(Chartist.safeHasProperty(value, 'data')) {\n        // We are dealing with series object notation so we need to recurse on data property\n        return recursiveConvert(value.data);\n      } else if(value instanceof Array) {\n        // Data is of type array so we need to recurse on the series\n        return value.map(recursiveConvert);\n      } else if(Chartist.isDataHoleValue(value)) {\n        // We're dealing with a hole in the data and therefore need to return undefined\n        // We're also returning undefined for multi value output\n        return undefined;\n      } else {\n        // We need to prepare multi value output (x and y data)\n        if(multi) {\n          var multiValue = {};\n\n          // Single series value arrays are assumed to specify the Y-Axis value\n          // For example: [1, 2] => [{x: undefined, y: 1}, {x: undefined, y: 2}]\n          // If multi is a string then it's assumed that it specified which dimension should be filled as default\n          if(typeof multi === 'string') {\n            multiValue[multi] = Chartist.getNumberOrUndefined(value);\n          } else {\n            multiValue.y = Chartist.getNumberOrUndefined(value);\n          }\n\n          multiValue.x = value.hasOwnProperty('x') ? Chartist.getNumberOrUndefined(value.x) : multiValue.x;\n          multiValue.y = value.hasOwnProperty('y') ? Chartist.getNumberOrUndefined(value.y) : multiValue.y;\n\n          return multiValue;\n\n        } else {\n          // We can return simple data\n          return Chartist.getNumberOrUndefined(value);\n        }\n      }\n    }\n\n    return data.series.map(recursiveConvert);\n  };\n\n  /**\n   * Converts a number into a padding object.\n   *\n   * @memberof Chartist.Core\n   * @param {Object|Number} padding\n   * @param {Number} [fallback] This value is used to fill missing values if a incomplete padding object was passed\n   * @returns {Object} Returns a padding object containing top, right, bottom, left properties filled with the padding number passed in as argument. If the argument is something else than a number (presumably already a correct padding object) then this argument is directly returned.\n   */\n  Chartist.normalizePadding = function(padding, fallback) {\n    fallback = fallback || 0;\n\n    return typeof padding === 'number' ? {\n      top: padding,\n      right: padding,\n      bottom: padding,\n      left: padding\n    } : {\n      top: typeof padding.top === 'number' ? padding.top : fallback,\n      right: typeof padding.right === 'number' ? padding.right : fallback,\n      bottom: typeof padding.bottom === 'number' ? padding.bottom : fallback,\n      left: typeof padding.left === 'number' ? padding.left : fallback\n    };\n  };\n\n  Chartist.getMetaData = function(series, index) {\n    var value = series.data ? series.data[index] : series[index];\n    return value ? value.meta : undefined;\n  };\n\n  /**\n   * Calculate the order of magnitude for the chart scale\n   *\n   * @memberof Chartist.Core\n   * @param {Number} value The value Range of the chart\n   * @return {Number} The order of magnitude\n   */\n  Chartist.orderOfMagnitude = function (value) {\n    return Math.floor(Math.log(Math.abs(value)) / Math.LN10);\n  };\n\n  /**\n   * Project a data length into screen coordinates (pixels)\n   *\n   * @memberof Chartist.Core\n   * @param {Object} axisLength The svg element for the chart\n   * @param {Number} length Single data value from a series array\n   * @param {Object} bounds All the values to set the bounds of the chart\n   * @return {Number} The projected data length in pixels\n   */\n  Chartist.projectLength = function (axisLength, length, bounds) {\n    return length / bounds.range * axisLength;\n  };\n\n  /**\n   * Get the height of the area in the chart for the data series\n   *\n   * @memberof Chartist.Core\n   * @param {Object} svg The svg element for the chart\n   * @param {Object} options The Object that contains all the optional values for the chart\n   * @return {Number} The height of the area in the chart for the data series\n   */\n  Chartist.getAvailableHeight = function (svg, options) {\n    return Math.max((Chartist.quantity(options.height).value || svg.height()) - (options.chartPadding.top +  options.chartPadding.bottom) - options.axisX.offset, 0);\n  };\n\n  /**\n   * Get highest and lowest value of data array. This Array contains the data that will be visualized in the chart.\n   *\n   * @memberof Chartist.Core\n   * @param {Array} data The array that contains the data to be visualized in the chart\n   * @param {Object} options The Object that contains the chart options\n   * @param {String} dimension Axis dimension 'x' or 'y' used to access the correct value and high / low configuration\n   * @return {Object} An object that contains the highest and lowest value that will be visualized on the chart.\n   */\n  Chartist.getHighLow = function (data, options, dimension) {\n    // TODO: Remove workaround for deprecated global high / low config. Axis high / low configuration is preferred\n    options = Chartist.extend({}, options, dimension ? options['axis' + dimension.toUpperCase()] : {});\n\n    var highLow = {\n        high: options.high === undefined ? -Number.MAX_VALUE : +options.high,\n        low: options.low === undefined ? Number.MAX_VALUE : +options.low\n      };\n    var findHigh = options.high === undefined;\n    var findLow = options.low === undefined;\n\n    // Function to recursively walk through arrays and find highest and lowest number\n    function recursiveHighLow(data) {\n      if(data === undefined) {\n        return undefined;\n      } else if(data instanceof Array) {\n        for (var i = 0; i < data.length; i++) {\n          recursiveHighLow(data[i]);\n        }\n      } else {\n        var value = dimension ? +data[dimension] : +data;\n\n        if (findHigh && value > highLow.high) {\n          highLow.high = value;\n        }\n\n        if (findLow && value < highLow.low) {\n          highLow.low = value;\n        }\n      }\n    }\n\n    // Start to find highest and lowest number recursively\n    if(findHigh || findLow) {\n      recursiveHighLow(data);\n    }\n\n    // Overrides of high / low based on reference value, it will make sure that the invisible reference value is\n    // used to generate the chart. This is useful when the chart always needs to contain the position of the\n    // invisible reference value in the view i.e. for bipolar scales.\n    if (options.referenceValue || options.referenceValue === 0) {\n      highLow.high = Math.max(options.referenceValue, highLow.high);\n      highLow.low = Math.min(options.referenceValue, highLow.low);\n    }\n\n    // If high and low are the same because of misconfiguration or flat data (only the same value) we need\n    // to set the high or low to 0 depending on the polarity\n    if (highLow.high <= highLow.low) {\n      // If both values are 0 we set high to 1\n      if (highLow.low === 0) {\n        highLow.high = 1;\n      } else if (highLow.low < 0) {\n        // If we have the same negative value for the bounds we set bounds.high to 0\n        highLow.high = 0;\n      } else if (highLow.high > 0) {\n        // If we have the same positive value for the bounds we set bounds.low to 0\n        highLow.low = 0;\n      } else {\n        // If data array was empty, values are Number.MAX_VALUE and -Number.MAX_VALUE. Set bounds to prevent errors\n        highLow.high = 1;\n        highLow.low = 0;\n      }\n    }\n\n    return highLow;\n  };\n\n  /**\n   * Checks if a value can be safely coerced to a number. This includes all values except null which result in finite numbers when coerced. This excludes NaN, since it's not finite.\n   *\n   * @memberof Chartist.Core\n   * @param value\n   * @returns {Boolean}\n   */\n  Chartist.isNumeric = function(value) {\n    return value === null ? false : isFinite(value);\n  };\n\n  /**\n   * Returns true on all falsey values except the numeric value 0.\n   *\n   * @memberof Chartist.Core\n   * @param value\n   * @returns {boolean}\n   */\n  Chartist.isFalseyButZero = function(value) {\n    return !value && value !== 0;\n  };\n\n  /**\n   * Returns a number if the passed parameter is a valid number or the function will return undefined. On all other values than a valid number, this function will return undefined.\n   *\n   * @memberof Chartist.Core\n   * @param value\n   * @returns {*}\n   */\n  Chartist.getNumberOrUndefined = function(value) {\n    return Chartist.isNumeric(value) ? +value : undefined;\n  };\n\n  /**\n   * Checks if provided value object is multi value (contains x or y properties)\n   *\n   * @memberof Chartist.Core\n   * @param value\n   */\n  Chartist.isMultiValue = function(value) {\n    return typeof value === 'object' && ('x' in value || 'y' in value);\n  };\n\n  /**\n   * Gets a value from a dimension `value.x` or `value.y` while returning value directly if it's a valid numeric value. If the value is not numeric and it's falsey this function will return `defaultValue`.\n   *\n   * @memberof Chartist.Core\n   * @param value\n   * @param dimension\n   * @param defaultValue\n   * @returns {*}\n   */\n  Chartist.getMultiValue = function(value, dimension) {\n    if(Chartist.isMultiValue(value)) {\n      return Chartist.getNumberOrUndefined(value[dimension || 'y']);\n    } else {\n      return Chartist.getNumberOrUndefined(value);\n    }\n  };\n\n  /**\n   * Pollard Rho Algorithm to find smallest factor of an integer value. There are more efficient algorithms for factorization, but this one is quite efficient and not so complex.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} num An integer number where the smallest factor should be searched for\n   * @returns {Number} The smallest integer factor of the parameter num.\n   */\n  Chartist.rho = function(num) {\n    if(num === 1) {\n      return num;\n    }\n\n    function gcd(p, q) {\n      if (p % q === 0) {\n        return q;\n      } else {\n        return gcd(q, p % q);\n      }\n    }\n\n    function f(x) {\n      return x * x + 1;\n    }\n\n    var x1 = 2, x2 = 2, divisor;\n    if (num % 2 === 0) {\n      return 2;\n    }\n\n    do {\n      x1 = f(x1) % num;\n      x2 = f(f(x2)) % num;\n      divisor = gcd(Math.abs(x1 - x2), num);\n    } while (divisor === 1);\n\n    return divisor;\n  };\n\n  /**\n   * Calculate and retrieve all the bounds for the chart and return them in one array\n   *\n   * @memberof Chartist.Core\n   * @param {Number} axisLength The length of the Axis used for\n   * @param {Object} highLow An object containing a high and low property indicating the value range of the chart.\n   * @param {Number} scaleMinSpace The minimum projected length a step should result in\n   * @param {Boolean} onlyInteger\n   * @return {Object} All the values to set the bounds of the chart\n   */\n  Chartist.getBounds = function (axisLength, highLow, scaleMinSpace, onlyInteger) {\n    var i,\n      optimizationCounter = 0,\n      newMin,\n      newMax,\n      bounds = {\n        high: highLow.high,\n        low: highLow.low\n      };\n\n    bounds.valueRange = bounds.high - bounds.low;\n    bounds.oom = Chartist.orderOfMagnitude(bounds.valueRange);\n    bounds.step = Math.pow(10, bounds.oom);\n    bounds.min = Math.floor(bounds.low / bounds.step) * bounds.step;\n    bounds.max = Math.ceil(bounds.high / bounds.step) * bounds.step;\n    bounds.range = bounds.max - bounds.min;\n    bounds.numberOfSteps = Math.round(bounds.range / bounds.step);\n\n    // Optimize scale step by checking if subdivision is possible based on horizontalGridMinSpace\n    // If we are already below the scaleMinSpace value we will scale up\n    var length = Chartist.projectLength(axisLength, bounds.step, bounds);\n    var scaleUp = length < scaleMinSpace;\n    var smallestFactor = onlyInteger ? Chartist.rho(bounds.range) : 0;\n\n    // First check if we should only use integer steps and if step 1 is still larger than scaleMinSpace so we can use 1\n    if(onlyInteger && Chartist.projectLength(axisLength, 1, bounds) >= scaleMinSpace) {\n      bounds.step = 1;\n    } else if(onlyInteger && smallestFactor < bounds.step && Chartist.projectLength(axisLength, smallestFactor, bounds) >= scaleMinSpace) {\n      // If step 1 was too small, we can try the smallest factor of range\n      // If the smallest factor is smaller than the current bounds.step and the projected length of smallest factor\n      // is larger than the scaleMinSpace we should go for it.\n      bounds.step = smallestFactor;\n    } else {\n      // Trying to divide or multiply by 2 and find the best step value\n      while (true) {\n        if (scaleUp && Chartist.projectLength(axisLength, bounds.step, bounds) <= scaleMinSpace) {\n          bounds.step *= 2;\n        } else if (!scaleUp && Chartist.projectLength(axisLength, bounds.step / 2, bounds) >= scaleMinSpace) {\n          bounds.step /= 2;\n          if(onlyInteger && bounds.step % 1 !== 0) {\n            bounds.step *= 2;\n            break;\n          }\n        } else {\n          break;\n        }\n\n        if(optimizationCounter++ > 1000) {\n          throw new Error('Exceeded maximum number of iterations while optimizing scale step!');\n        }\n      }\n    }\n\n    var EPSILON = 2.221E-16;\n    bounds.step = Math.max(bounds.step, EPSILON);\n    function safeIncrement(value, increment) {\n      // If increment is too small use *= (1+EPSILON) as a simple nextafter\n      if (value === (value += increment)) {\n      \tvalue *= (1 + (increment > 0 ? EPSILON : -EPSILON));\n      }\n      return value;\n    }\n\n    // Narrow min and max based on new step\n    newMin = bounds.min;\n    newMax = bounds.max;\n    while (newMin + bounds.step <= bounds.low) {\n    \tnewMin = safeIncrement(newMin, bounds.step);\n    }\n    while (newMax - bounds.step >= bounds.high) {\n    \tnewMax = safeIncrement(newMax, -bounds.step);\n    }\n    bounds.min = newMin;\n    bounds.max = newMax;\n    bounds.range = bounds.max - bounds.min;\n\n    var values = [];\n    for (i = bounds.min; i <= bounds.max; i = safeIncrement(i, bounds.step)) {\n      var value = Chartist.roundWithPrecision(i);\n      if (value !== values[values.length - 1]) {\n        values.push(value);\n      }\n    }\n    bounds.values = values;\n    return bounds;\n  };\n\n  /**\n   * Calculate cartesian coordinates of polar coordinates\n   *\n   * @memberof Chartist.Core\n   * @param {Number} centerX X-axis coordinates of center point of circle segment\n   * @param {Number} centerY X-axis coordinates of center point of circle segment\n   * @param {Number} radius Radius of circle segment\n   * @param {Number} angleInDegrees Angle of circle segment in degrees\n   * @return {{x:Number, y:Number}} Coordinates of point on circumference\n   */\n  Chartist.polarToCartesian = function (centerX, centerY, radius, angleInDegrees) {\n    var angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;\n\n    return {\n      x: centerX + (radius * Math.cos(angleInRadians)),\n      y: centerY + (radius * Math.sin(angleInRadians))\n    };\n  };\n\n  /**\n   * Initialize chart drawing rectangle (area where chart is drawn) x1,y1 = bottom left / x2,y2 = top right\n   *\n   * @memberof Chartist.Core\n   * @param {Object} svg The svg element for the chart\n   * @param {Object} options The Object that contains all the optional values for the chart\n   * @param {Number} [fallbackPadding] The fallback padding if partial padding objects are used\n   * @return {Object} The chart rectangles coordinates inside the svg element plus the rectangles measurements\n   */\n  Chartist.createChartRect = function (svg, options, fallbackPadding) {\n    var hasAxis = !!(options.axisX || options.axisY);\n    var yAxisOffset = hasAxis ? options.axisY.offset : 0;\n    var xAxisOffset = hasAxis ? options.axisX.offset : 0;\n    // If width or height results in invalid value (including 0) we fallback to the unitless settings or even 0\n    var width = svg.width() || Chartist.quantity(options.width).value || 0;\n    var height = svg.height() || Chartist.quantity(options.height).value || 0;\n    var normalizedPadding = Chartist.normalizePadding(options.chartPadding, fallbackPadding);\n\n    // If settings were to small to cope with offset (legacy) and padding, we'll adjust\n    width = Math.max(width, yAxisOffset + normalizedPadding.left + normalizedPadding.right);\n    height = Math.max(height, xAxisOffset + normalizedPadding.top + normalizedPadding.bottom);\n\n    var chartRect = {\n      padding: normalizedPadding,\n      width: function () {\n        return this.x2 - this.x1;\n      },\n      height: function () {\n        return this.y1 - this.y2;\n      }\n    };\n\n    if(hasAxis) {\n      if (options.axisX.position === 'start') {\n        chartRect.y2 = normalizedPadding.top + xAxisOffset;\n        chartRect.y1 = Math.max(height - normalizedPadding.bottom, chartRect.y2 + 1);\n      } else {\n        chartRect.y2 = normalizedPadding.top;\n        chartRect.y1 = Math.max(height - normalizedPadding.bottom - xAxisOffset, chartRect.y2 + 1);\n      }\n\n      if (options.axisY.position === 'start') {\n        chartRect.x1 = normalizedPadding.left + yAxisOffset;\n        chartRect.x2 = Math.max(width - normalizedPadding.right, chartRect.x1 + 1);\n      } else {\n        chartRect.x1 = normalizedPadding.left;\n        chartRect.x2 = Math.max(width - normalizedPadding.right - yAxisOffset, chartRect.x1 + 1);\n      }\n    } else {\n      chartRect.x1 = normalizedPadding.left;\n      chartRect.x2 = Math.max(width - normalizedPadding.right, chartRect.x1 + 1);\n      chartRect.y2 = normalizedPadding.top;\n      chartRect.y1 = Math.max(height - normalizedPadding.bottom, chartRect.y2 + 1);\n    }\n\n    return chartRect;\n  };\n\n  /**\n   * Creates a grid line based on a projected value.\n   *\n   * @memberof Chartist.Core\n   * @param position\n   * @param index\n   * @param axis\n   * @param offset\n   * @param length\n   * @param group\n   * @param classes\n   * @param eventEmitter\n   */\n  Chartist.createGrid = function(position, index, axis, offset, length, group, classes, eventEmitter) {\n    var positionalData = {};\n    positionalData[axis.units.pos + '1'] = position;\n    positionalData[axis.units.pos + '2'] = position;\n    positionalData[axis.counterUnits.pos + '1'] = offset;\n    positionalData[axis.counterUnits.pos + '2'] = offset + length;\n\n    var gridElement = group.elem('line', positionalData, classes.join(' '));\n\n    // Event for grid draw\n    eventEmitter.emit('draw',\n      Chartist.extend({\n        type: 'grid',\n        axis: axis,\n        index: index,\n        group: group,\n        element: gridElement\n      }, positionalData)\n    );\n  };\n\n  /**\n   * Creates a grid background rect and emits the draw event.\n   *\n   * @memberof Chartist.Core\n   * @param gridGroup\n   * @param chartRect\n   * @param className\n   * @param eventEmitter\n   */\n  Chartist.createGridBackground = function (gridGroup, chartRect, className, eventEmitter) {\n    var gridBackground = gridGroup.elem('rect', {\n        x: chartRect.x1,\n        y: chartRect.y2,\n        width: chartRect.width(),\n        height: chartRect.height(),\n      }, className, true);\n\n      // Event for grid background draw\n      eventEmitter.emit('draw', {\n        type: 'gridBackground',\n        group: gridGroup,\n        element: gridBackground\n      });\n  };\n\n  /**\n   * Creates a label based on a projected value and an axis.\n   *\n   * @memberof Chartist.Core\n   * @param position\n   * @param length\n   * @param index\n   * @param labels\n   * @param axis\n   * @param axisOffset\n   * @param labelOffset\n   * @param group\n   * @param classes\n   * @param useForeignObject\n   * @param eventEmitter\n   */\n  Chartist.createLabel = function(position, length, index, labels, axis, axisOffset, labelOffset, group, classes, useForeignObject, eventEmitter) {\n    var labelElement;\n    var positionalData = {};\n\n    positionalData[axis.units.pos] = position + labelOffset[axis.units.pos];\n    positionalData[axis.counterUnits.pos] = labelOffset[axis.counterUnits.pos];\n    positionalData[axis.units.len] = length;\n    positionalData[axis.counterUnits.len] = Math.max(0, axisOffset - 10);\n\n    if(useForeignObject) {\n      // We need to set width and height explicitly to px as span will not expand with width and height being\n      // 100% in all browsers\n      var content = document.createElement('span');\n      content.className = classes.join(' ');\n      content.setAttribute('xmlns', Chartist.namespaces.xhtml);\n      content.innerText = labels[index];\n      content.style[axis.units.len] = Math.round(positionalData[axis.units.len]) + 'px';\n      content.style[axis.counterUnits.len] = Math.round(positionalData[axis.counterUnits.len]) + 'px';\n\n      labelElement = group.foreignObject(content, Chartist.extend({\n        style: 'overflow: visible;'\n      }, positionalData));\n    } else {\n      labelElement = group.elem('text', positionalData, classes.join(' ')).text(labels[index]);\n    }\n\n    eventEmitter.emit('draw', Chartist.extend({\n      type: 'label',\n      axis: axis,\n      index: index,\n      group: group,\n      element: labelElement,\n      text: labels[index]\n    }, positionalData));\n  };\n\n  /**\n   * Helper to read series specific options from options object. It automatically falls back to the global option if\n   * there is no option in the series options.\n   *\n   * @param {Object} series Series object\n   * @param {Object} options Chartist options object\n   * @param {string} key The options key that should be used to obtain the options\n   * @returns {*}\n   */\n  Chartist.getSeriesOption = function(series, options, key) {\n    if(series.name && options.series && options.series[series.name]) {\n      var seriesOptions = options.series[series.name];\n      return seriesOptions.hasOwnProperty(key) ? seriesOptions[key] : options[key];\n    } else {\n      return options[key];\n    }\n  };\n\n  /**\n   * Provides options handling functionality with callback for options changes triggered by responsive options and media query matches\n   *\n   * @memberof Chartist.Core\n   * @param {Object} options Options set by user\n   * @param {Array} responsiveOptions Optional functions to add responsive behavior to chart\n   * @param {Object} eventEmitter The event emitter that will be used to emit the options changed events\n   * @return {Object} The consolidated options object from the defaults, base and matching responsive options\n   */\n  Chartist.optionsProvider = function (options, responsiveOptions, eventEmitter) {\n    var baseOptions = Chartist.extend({}, options),\n      currentOptions,\n      mediaQueryListeners = [],\n      i;\n\n    function updateCurrentOptions(mediaEvent) {\n      var previousOptions = currentOptions;\n      currentOptions = Chartist.extend({}, baseOptions);\n\n      if (responsiveOptions) {\n        for (i = 0; i < responsiveOptions.length; i++) {\n          var mql = window.matchMedia(responsiveOptions[i][0]);\n          if (mql.matches) {\n            currentOptions = Chartist.extend(currentOptions, responsiveOptions[i][1]);\n          }\n        }\n      }\n\n      if(eventEmitter && mediaEvent) {\n        eventEmitter.emit('optionsChanged', {\n          previousOptions: previousOptions,\n          currentOptions: currentOptions\n        });\n      }\n    }\n\n    function removeMediaQueryListeners() {\n      mediaQueryListeners.forEach(function(mql) {\n        mql.removeListener(updateCurrentOptions);\n      });\n    }\n\n    if (!window.matchMedia) {\n      throw 'window.matchMedia not found! Make sure you\\'re using a polyfill.';\n    } else if (responsiveOptions) {\n\n      for (i = 0; i < responsiveOptions.length; i++) {\n        var mql = window.matchMedia(responsiveOptions[i][0]);\n        mql.addListener(updateCurrentOptions);\n        mediaQueryListeners.push(mql);\n      }\n    }\n    // Execute initially without an event argument so we get the correct options\n    updateCurrentOptions();\n\n    return {\n      removeMediaQueryListeners: removeMediaQueryListeners,\n      getCurrentOptions: function getCurrentOptions() {\n        return Chartist.extend({}, currentOptions);\n      }\n    };\n  };\n\n\n  /**\n   * Splits a list of coordinates and associated values into segments. Each returned segment contains a pathCoordinates\n   * valueData property describing the segment.\n   *\n   * With the default options, segments consist of contiguous sets of points that do not have an undefined value. Any\n   * points with undefined values are discarded.\n   *\n   * **Options**\n   * The following options are used to determine how segments are formed\n   * ```javascript\n   * var options = {\n   *   // If fillHoles is true, undefined values are simply discarded without creating a new segment. Assuming other options are default, this returns single segment.\n   *   fillHoles: false,\n   *   // If increasingX is true, the coordinates in all segments have strictly increasing x-values.\n   *   increasingX: false\n   * };\n   * ```\n   *\n   * @memberof Chartist.Core\n   * @param {Array} pathCoordinates List of point coordinates to be split in the form [x1, y1, x2, y2 ... xn, yn]\n   * @param {Array} values List of associated point values in the form [v1, v2 .. vn]\n   * @param {Object} options Options set by user\n   * @return {Array} List of segments, each containing a pathCoordinates and valueData property.\n   */\n  Chartist.splitIntoSegments = function(pathCoordinates, valueData, options) {\n    var defaultOptions = {\n      increasingX: false,\n      fillHoles: false\n    };\n\n    options = Chartist.extend({}, defaultOptions, options);\n\n    var segments = [];\n    var hole = true;\n\n    for(var i = 0; i < pathCoordinates.length; i += 2) {\n      // If this value is a \"hole\" we set the hole flag\n      if(Chartist.getMultiValue(valueData[i / 2].value) === undefined) {\n      // if(valueData[i / 2].value === undefined) {\n        if(!options.fillHoles) {\n          hole = true;\n        }\n      } else {\n        if(options.increasingX && i >= 2 && pathCoordinates[i] <= pathCoordinates[i-2]) {\n          // X is not increasing, so we need to make sure we start a new segment\n          hole = true;\n        }\n\n\n        // If it's a valid value we need to check if we're coming out of a hole and create a new empty segment\n        if(hole) {\n          segments.push({\n            pathCoordinates: [],\n            valueData: []\n          });\n          // As we have a valid value now, we are not in a \"hole\" anymore\n          hole = false;\n        }\n\n        // Add to the segment pathCoordinates and valueData\n        segments[segments.length - 1].pathCoordinates.push(pathCoordinates[i], pathCoordinates[i + 1]);\n        segments[segments.length - 1].valueData.push(valueData[i / 2]);\n      }\n    }\n\n    return segments;\n  };\n}(this || global, Chartist));\n;/**\n * Chartist path interpolation functions.\n *\n * @module Chartist.Interpolation\n */\n/* global Chartist */\n(function(globalRoot, Chartist) {\n  'use strict';\n\n  Chartist.Interpolation = {};\n\n  /**\n   * This interpolation function does not smooth the path and the result is only containing lines and no curves.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.none({\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   *\n   * @memberof Chartist.Interpolation\n   * @return {Function}\n   */\n  Chartist.Interpolation.none = function(options) {\n    var defaultOptions = {\n      fillHoles: false\n    };\n    options = Chartist.extend({}, defaultOptions, options);\n    return function none(pathCoordinates, valueData) {\n      var path = new Chartist.Svg.Path();\n      var hole = true;\n\n      for(var i = 0; i < pathCoordinates.length; i += 2) {\n        var currX = pathCoordinates[i];\n        var currY = pathCoordinates[i + 1];\n        var currData = valueData[i / 2];\n\n        if(Chartist.getMultiValue(currData.value) !== undefined) {\n\n          if(hole) {\n            path.move(currX, currY, false, currData);\n          } else {\n            path.line(currX, currY, false, currData);\n          }\n\n          hole = false;\n        } else if(!options.fillHoles) {\n          hole = true;\n        }\n      }\n\n      return path;\n    };\n  };\n\n  /**\n   * Simple smoothing creates horizontal handles that are positioned with a fraction of the length between two data points. You can use the divisor option to specify the amount of smoothing.\n   *\n   * Simple smoothing can be used instead of `Chartist.Smoothing.cardinal` if you'd like to get rid of the artifacts it produces sometimes. Simple smoothing produces less flowing lines but is accurate by hitting the points and it also doesn't swing below or above the given data point.\n   *\n   * All smoothing functions within Chartist are factory functions that accept an options parameter. The simple interpolation function accepts one configuration parameter `divisor`, between 1 and ∞, which controls the smoothing characteristics.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.simple({\n   *     divisor: 2,\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   *\n   * @memberof Chartist.Interpolation\n   * @param {Object} options The options of the simple interpolation factory function.\n   * @return {Function}\n   */\n  Chartist.Interpolation.simple = function(options) {\n    var defaultOptions = {\n      divisor: 2,\n      fillHoles: false\n    };\n    options = Chartist.extend({}, defaultOptions, options);\n\n    var d = 1 / Math.max(1, options.divisor);\n\n    return function simple(pathCoordinates, valueData) {\n      var path = new Chartist.Svg.Path();\n      var prevX, prevY, prevData;\n\n      for(var i = 0; i < pathCoordinates.length; i += 2) {\n        var currX = pathCoordinates[i];\n        var currY = pathCoordinates[i + 1];\n        var length = (currX - prevX) * d;\n        var currData = valueData[i / 2];\n\n        if(currData.value !== undefined) {\n\n          if(prevData === undefined) {\n            path.move(currX, currY, false, currData);\n          } else {\n            path.curve(\n              prevX + length,\n              prevY,\n              currX - length,\n              currY,\n              currX,\n              currY,\n              false,\n              currData\n            );\n          }\n\n          prevX = currX;\n          prevY = currY;\n          prevData = currData;\n        } else if(!options.fillHoles) {\n          prevX = currX = prevData = undefined;\n        }\n      }\n\n      return path;\n    };\n  };\n\n  /**\n   * Cardinal / Catmull-Rome spline interpolation is the default smoothing function in Chartist. It produces nice results where the splines will always meet the points. It produces some artifacts though when data values are increased or decreased rapidly. The line may not follow a very accurate path and if the line should be accurate this smoothing function does not produce the best results.\n   *\n   * Cardinal splines can only be created if there are more than two data points. If this is not the case this smoothing will fallback to `Chartist.Smoothing.none`.\n   *\n   * All smoothing functions within Chartist are factory functions that accept an options parameter. The cardinal interpolation function accepts one configuration parameter `tension`, between 0 and 1, which controls the smoothing intensity.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.cardinal({\n   *     tension: 1,\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   * @memberof Chartist.Interpolation\n   * @param {Object} options The options of the cardinal factory function.\n   * @return {Function}\n   */\n  Chartist.Interpolation.cardinal = function(options) {\n    var defaultOptions = {\n      tension: 1,\n      fillHoles: false\n    };\n\n    options = Chartist.extend({}, defaultOptions, options);\n\n    var t = Math.min(1, Math.max(0, options.tension)),\n      c = 1 - t;\n\n    return function cardinal(pathCoordinates, valueData) {\n      // First we try to split the coordinates into segments\n      // This is necessary to treat \"holes\" in line charts\n      var segments = Chartist.splitIntoSegments(pathCoordinates, valueData, {\n        fillHoles: options.fillHoles\n      });\n\n      if(!segments.length) {\n        // If there were no segments return 'Chartist.Interpolation.none'\n        return Chartist.Interpolation.none()([]);\n      } else if(segments.length > 1) {\n        // If the split resulted in more that one segment we need to interpolate each segment individually and join them\n        // afterwards together into a single path.\n          var paths = [];\n        // For each segment we will recurse the cardinal function\n        segments.forEach(function(segment) {\n          paths.push(cardinal(segment.pathCoordinates, segment.valueData));\n        });\n        // Join the segment path data into a single path and return\n        return Chartist.Svg.Path.join(paths);\n      } else {\n        // If there was only one segment we can proceed regularly by using pathCoordinates and valueData from the first\n        // segment\n        pathCoordinates = segments[0].pathCoordinates;\n        valueData = segments[0].valueData;\n\n        // If less than two points we need to fallback to no smoothing\n        if(pathCoordinates.length <= 4) {\n          return Chartist.Interpolation.none()(pathCoordinates, valueData);\n        }\n\n        var path = new Chartist.Svg.Path().move(pathCoordinates[0], pathCoordinates[1], false, valueData[0]),\n          z;\n\n        for (var i = 0, iLen = pathCoordinates.length; iLen - 2 * !z > i; i += 2) {\n          var p = [\n            {x: +pathCoordinates[i - 2], y: +pathCoordinates[i - 1]},\n            {x: +pathCoordinates[i], y: +pathCoordinates[i + 1]},\n            {x: +pathCoordinates[i + 2], y: +pathCoordinates[i + 3]},\n            {x: +pathCoordinates[i + 4], y: +pathCoordinates[i + 5]}\n          ];\n          if (z) {\n            if (!i) {\n              p[0] = {x: +pathCoordinates[iLen - 2], y: +pathCoordinates[iLen - 1]};\n            } else if (iLen - 4 === i) {\n              p[3] = {x: +pathCoordinates[0], y: +pathCoordinates[1]};\n            } else if (iLen - 2 === i) {\n              p[2] = {x: +pathCoordinates[0], y: +pathCoordinates[1]};\n              p[3] = {x: +pathCoordinates[2], y: +pathCoordinates[3]};\n            }\n          } else {\n            if (iLen - 4 === i) {\n              p[3] = p[2];\n            } else if (!i) {\n              p[0] = {x: +pathCoordinates[i], y: +pathCoordinates[i + 1]};\n            }\n          }\n\n          path.curve(\n            (t * (-p[0].x + 6 * p[1].x + p[2].x) / 6) + (c * p[2].x),\n            (t * (-p[0].y + 6 * p[1].y + p[2].y) / 6) + (c * p[2].y),\n            (t * (p[1].x + 6 * p[2].x - p[3].x) / 6) + (c * p[2].x),\n            (t * (p[1].y + 6 * p[2].y - p[3].y) / 6) + (c * p[2].y),\n            p[2].x,\n            p[2].y,\n            false,\n            valueData[(i + 2) / 2]\n          );\n        }\n\n        return path;\n      }\n    };\n  };\n\n  /**\n   * Monotone Cubic spline interpolation produces a smooth curve which preserves monotonicity. Unlike cardinal splines, the curve will not extend beyond the range of y-values of the original data points.\n   *\n   * Monotone Cubic splines can only be created if there are more than two data points. If this is not the case this smoothing will fallback to `Chartist.Smoothing.none`.\n   *\n   * The x-values of subsequent points must be increasing to fit a Monotone Cubic spline. If this condition is not met for a pair of adjacent points, then there will be a break in the curve between those data points.\n   *\n   * All smoothing functions within Chartist are factory functions that accept an options parameter.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.monotoneCubic({\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   * @memberof Chartist.Interpolation\n   * @param {Object} options The options of the monotoneCubic factory function.\n   * @return {Function}\n   */\n  Chartist.Interpolation.monotoneCubic = function(options) {\n    var defaultOptions = {\n      fillHoles: false\n    };\n\n    options = Chartist.extend({}, defaultOptions, options);\n\n    return function monotoneCubic(pathCoordinates, valueData) {\n      // First we try to split the coordinates into segments\n      // This is necessary to treat \"holes\" in line charts\n      var segments = Chartist.splitIntoSegments(pathCoordinates, valueData, {\n        fillHoles: options.fillHoles,\n        increasingX: true\n      });\n\n      if(!segments.length) {\n        // If there were no segments return 'Chartist.Interpolation.none'\n        return Chartist.Interpolation.none()([]);\n      } else if(segments.length > 1) {\n        // If the split resulted in more that one segment we need to interpolate each segment individually and join them\n        // afterwards together into a single path.\n          var paths = [];\n        // For each segment we will recurse the monotoneCubic fn function\n        segments.forEach(function(segment) {\n          paths.push(monotoneCubic(segment.pathCoordinates, segment.valueData));\n        });\n        // Join the segment path data into a single path and return\n        return Chartist.Svg.Path.join(paths);\n      } else {\n        // If there was only one segment we can proceed regularly by using pathCoordinates and valueData from the first\n        // segment\n        pathCoordinates = segments[0].pathCoordinates;\n        valueData = segments[0].valueData;\n\n        // If less than three points we need to fallback to no smoothing\n        if(pathCoordinates.length <= 4) {\n          return Chartist.Interpolation.none()(pathCoordinates, valueData);\n        }\n\n        var xs = [],\n          ys = [],\n          i,\n          n = pathCoordinates.length / 2,\n          ms = [],\n          ds = [], dys = [], dxs = [],\n          path;\n\n        // Populate x and y coordinates into separate arrays, for readability\n\n        for(i = 0; i < n; i++) {\n          xs[i] = pathCoordinates[i * 2];\n          ys[i] = pathCoordinates[i * 2 + 1];\n        }\n\n        // Calculate deltas and derivative\n\n        for(i = 0; i < n - 1; i++) {\n          dys[i] = ys[i + 1] - ys[i];\n          dxs[i] = xs[i + 1] - xs[i];\n          ds[i] = dys[i] / dxs[i];\n        }\n\n        // Determine desired slope (m) at each point using Fritsch-Carlson method\n        // See: http://math.stackexchange.com/questions/45218/implementation-of-monotone-cubic-interpolation\n\n        ms[0] = ds[0];\n        ms[n - 1] = ds[n - 2];\n\n        for(i = 1; i < n - 1; i++) {\n          if(ds[i] === 0 || ds[i - 1] === 0 || (ds[i - 1] > 0) !== (ds[i] > 0)) {\n            ms[i] = 0;\n          } else {\n            ms[i] = 3 * (dxs[i - 1] + dxs[i]) / (\n              (2 * dxs[i] + dxs[i - 1]) / ds[i - 1] +\n              (dxs[i] + 2 * dxs[i - 1]) / ds[i]);\n\n            if(!isFinite(ms[i])) {\n              ms[i] = 0;\n            }\n          }\n        }\n\n        // Now build a path from the slopes\n\n        path = new Chartist.Svg.Path().move(xs[0], ys[0], false, valueData[0]);\n\n        for(i = 0; i < n - 1; i++) {\n          path.curve(\n            // First control point\n            xs[i] + dxs[i] / 3,\n            ys[i] + ms[i] * dxs[i] / 3,\n            // Second control point\n            xs[i + 1] - dxs[i] / 3,\n            ys[i + 1] - ms[i + 1] * dxs[i] / 3,\n            // End point\n            xs[i + 1],\n            ys[i + 1],\n\n            false,\n            valueData[i + 1]\n          );\n        }\n\n        return path;\n      }\n    };\n  };\n\n  /**\n   * Step interpolation will cause the line chart to move in steps rather than diagonal or smoothed lines. This interpolation will create additional points that will also be drawn when the `showPoint` option is enabled.\n   *\n   * All smoothing functions within Chartist are factory functions that accept an options parameter. The step interpolation function accepts one configuration parameter `postpone`, that can be `true` or `false`. The default value is `true` and will cause the step to occur where the value actually changes. If a different behaviour is needed where the step is shifted to the left and happens before the actual value, this option can be set to `false`.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.step({\n   *     postpone: true,\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   * @memberof Chartist.Interpolation\n   * @param options\n   * @returns {Function}\n   */\n  Chartist.Interpolation.step = function(options) {\n    var defaultOptions = {\n      postpone: true,\n      fillHoles: false\n    };\n\n    options = Chartist.extend({}, defaultOptions, options);\n\n    return function step(pathCoordinates, valueData) {\n      var path = new Chartist.Svg.Path();\n\n      var prevX, prevY, prevData;\n\n      for (var i = 0; i < pathCoordinates.length; i += 2) {\n        var currX = pathCoordinates[i];\n        var currY = pathCoordinates[i + 1];\n        var currData = valueData[i / 2];\n\n        // If the current point is also not a hole we can draw the step lines\n        if(currData.value !== undefined) {\n          if(prevData === undefined) {\n            path.move(currX, currY, false, currData);\n          } else {\n            if(options.postpone) {\n              // If postponed we should draw the step line with the value of the previous value\n              path.line(currX, prevY, false, prevData);\n            } else {\n              // If not postponed we should draw the step line with the value of the current value\n              path.line(prevX, currY, false, currData);\n            }\n            // Line to the actual point (this should only be a Y-Axis movement\n            path.line(currX, currY, false, currData);\n          }\n\n          prevX = currX;\n          prevY = currY;\n          prevData = currData;\n        } else if(!options.fillHoles) {\n          prevX = prevY = prevData = undefined;\n        }\n      }\n\n      return path;\n    };\n  };\n\n}(this || global, Chartist));\n;/**\n * A very basic event module that helps to generate and catch events.\n *\n * @module Chartist.Event\n */\n/* global Chartist */\n(function (globalRoot, Chartist) {\n  'use strict';\n\n  Chartist.EventEmitter = function () {\n    var handlers = [];\n\n    /**\n     * Add an event handler for a specific event\n     *\n     * @memberof Chartist.Event\n     * @param {String} event The event name\n     * @param {Function} handler A event handler function\n     */\n    function addEventHandler(event, handler) {\n      handlers[event] = handlers[event] || [];\n      handlers[event].push(handler);\n    }\n\n    /**\n     * Remove an event handler of a specific event name or remove all event handlers for a specific event.\n     *\n     * @memberof Chartist.Event\n     * @param {String} event The event name where a specific or all handlers should be removed\n     * @param {Function} [handler] An optional event handler function. If specified only this specific handler will be removed and otherwise all handlers are removed.\n     */\n    function removeEventHandler(event, handler) {\n      // Only do something if there are event handlers with this name existing\n      if(handlers[event]) {\n        // If handler is set we will look for a specific handler and only remove this\n        if(handler) {\n          handlers[event].splice(handlers[event].indexOf(handler), 1);\n          if(handlers[event].length === 0) {\n            delete handlers[event];\n          }\n        } else {\n          // If no handler is specified we remove all handlers for this event\n          delete handlers[event];\n        }\n      }\n    }\n\n    /**\n     * Use this function to emit an event. All handlers that are listening for this event will be triggered with the data parameter.\n     *\n     * @memberof Chartist.Event\n     * @param {String} event The event name that should be triggered\n     * @param {*} data Arbitrary data that will be passed to the event handler callback functions\n     */\n    function emit(event, data) {\n      // Only do something if there are event handlers with this name existing\n      if(handlers[event]) {\n        handlers[event].forEach(function(handler) {\n          handler(data);\n        });\n      }\n\n      // Emit event to star event handlers\n      if(handlers['*']) {\n        handlers['*'].forEach(function(starHandler) {\n          starHandler(event, data);\n        });\n      }\n    }\n\n    return {\n      addEventHandler: addEventHandler,\n      removeEventHandler: removeEventHandler,\n      emit: emit\n    };\n  };\n\n}(this || global, Chartist));\n;/**\n * This module provides some basic prototype inheritance utilities.\n *\n * @module Chartist.Class\n */\n/* global Chartist */\n(function(globalRoot, Chartist) {\n  'use strict';\n\n  function listToArray(list) {\n    var arr = [];\n    if (list.length) {\n      for (var i = 0; i < list.length; i++) {\n        arr.push(list[i]);\n      }\n    }\n    return arr;\n  }\n\n  /**\n   * Method to extend from current prototype.\n   *\n   * @memberof Chartist.Class\n   * @param {Object} properties The object that serves as definition for the prototype that gets created for the new class. This object should always contain a constructor property that is the desired constructor for the newly created class.\n   * @param {Object} [superProtoOverride] By default extens will use the current class prototype or Chartist.class. With this parameter you can specify any super prototype that will be used.\n   * @return {Function} Constructor function of the new class\n   *\n   * @example\n   * var Fruit = Class.extend({\n     * color: undefined,\n     *   sugar: undefined,\n     *\n     *   constructor: function(color, sugar) {\n     *     this.color = color;\n     *     this.sugar = sugar;\n     *   },\n     *\n     *   eat: function() {\n     *     this.sugar = 0;\n     *     return this;\n     *   }\n     * });\n   *\n   * var Banana = Fruit.extend({\n     *   length: undefined,\n     *\n     *   constructor: function(length, sugar) {\n     *     Banana.super.constructor.call(this, 'Yellow', sugar);\n     *     this.length = length;\n     *   }\n     * });\n   *\n   * var banana = new Banana(20, 40);\n   * console.log('banana instanceof Fruit', banana instanceof Fruit);\n   * console.log('Fruit is prototype of banana', Fruit.prototype.isPrototypeOf(banana));\n   * console.log('bananas prototype is Fruit', Object.getPrototypeOf(banana) === Fruit.prototype);\n   * console.log(banana.sugar);\n   * console.log(banana.eat().sugar);\n   * console.log(banana.color);\n   */\n  function extend(properties, superProtoOverride) {\n    var superProto = superProtoOverride || this.prototype || Chartist.Class;\n    var proto = Object.create(superProto);\n\n    Chartist.Class.cloneDefinitions(proto, properties);\n\n    var constr = function() {\n      var fn = proto.constructor || function () {},\n        instance;\n\n      // If this is linked to the Chartist namespace the constructor was not called with new\n      // To provide a fallback we will instantiate here and return the instance\n      instance = this === Chartist ? Object.create(proto) : this;\n      fn.apply(instance, Array.prototype.slice.call(arguments, 0));\n\n      // If this constructor was not called with new we need to return the instance\n      // This will not harm when the constructor has been called with new as the returned value is ignored\n      return instance;\n    };\n\n    constr.prototype = proto;\n    constr.super = superProto;\n    constr.extend = this.extend;\n\n    return constr;\n  }\n\n  // Variable argument list clones args > 0 into args[0] and retruns modified args[0]\n  function cloneDefinitions() {\n    var args = listToArray(arguments);\n    var target = args[0];\n\n    args.splice(1, args.length - 1).forEach(function (source) {\n      Object.getOwnPropertyNames(source).forEach(function (propName) {\n        // If this property already exist in target we delete it first\n        delete target[propName];\n        // Define the property with the descriptor from source\n        Object.defineProperty(target, propName,\n          Object.getOwnPropertyDescriptor(source, propName));\n      });\n    });\n\n    return target;\n  }\n\n  Chartist.Class = {\n    extend: extend,\n    cloneDefinitions: cloneDefinitions\n  };\n\n}(this || global, Chartist));\n;/**\n * Base for all chart types. The methods in Chartist.Base are inherited to all chart types.\n *\n * @module Chartist.Base\n */\n/* global Chartist */\n(function(globalRoot, Chartist) {\n  'use strict';\n\n  var window = globalRoot.window;\n\n  // TODO: Currently we need to re-draw the chart on window resize. This is usually very bad and will affect performance.\n  // This is done because we can't work with relative coordinates when drawing the chart because SVG Path does not\n  // work with relative positions yet. We need to check if we can do a viewBox hack to switch to percentage.\n  // See http://mozilla.6506.n7.nabble.com/Specyfing-paths-with-percentages-unit-td247474.html\n  // Update: can be done using the above method tested here: http://codepen.io/gionkunz/pen/KDvLj\n  // The problem is with the label offsets that can't be converted into percentage and affecting the chart container\n  /**\n   * Updates the chart which currently does a full reconstruction of the SVG DOM\n   *\n   * @param {Object} [data] Optional data you'd like to set for the chart before it will update. If not specified the update method will use the data that is already configured with the chart.\n   * @param {Object} [options] Optional options you'd like to add to the previous options for the chart before it will update. If not specified the update method will use the options that have been already configured with the chart.\n   * @param {Boolean} [override] If set to true, the passed options will be used to extend the options that have been configured already. Otherwise the chart default options will be used as the base\n   * @memberof Chartist.Base\n   */\n  function update(data, options, override) {\n    if(data) {\n      this.data = data || {};\n      this.data.labels = this.data.labels || [];\n      this.data.series = this.data.series || [];\n      // Event for data transformation that allows to manipulate the data before it gets rendered in the charts\n      this.eventEmitter.emit('data', {\n        type: 'update',\n        data: this.data\n      });\n    }\n\n    if(options) {\n      this.options = Chartist.extend({}, override ? this.options : this.defaultOptions, options);\n\n      // If chartist was not initialized yet, we just set the options and leave the rest to the initialization\n      // Otherwise we re-create the optionsProvider at this point\n      if(!this.initializeTimeoutId) {\n        this.optionsProvider.removeMediaQueryListeners();\n        this.optionsProvider = Chartist.optionsProvider(this.options, this.responsiveOptions, this.eventEmitter);\n      }\n    }\n\n    // Only re-created the chart if it has been initialized yet\n    if(!this.initializeTimeoutId) {\n      this.createChart(this.optionsProvider.getCurrentOptions());\n    }\n\n    // Return a reference to the chart object to chain up calls\n    return this;\n  }\n\n  /**\n   * This method can be called on the API object of each chart and will un-register all event listeners that were added to other components. This currently includes a window.resize listener as well as media query listeners if any responsive options have been provided. Use this function if you need to destroy and recreate Chartist charts dynamically.\n   *\n   * @memberof Chartist.Base\n   */\n  function detach() {\n    // Only detach if initialization already occurred on this chart. If this chart still hasn't initialized (therefore\n    // the initializationTimeoutId is still a valid timeout reference, we will clear the timeout\n    if(!this.initializeTimeoutId) {\n      window.removeEventListener('resize', this.resizeListener);\n      this.optionsProvider.removeMediaQueryListeners();\n    } else {\n      window.clearTimeout(this.initializeTimeoutId);\n    }\n\n    return this;\n  }\n\n  /**\n   * Use this function to register event handlers. The handler callbacks are synchronous and will run in the main thread rather than the event loop.\n   *\n   * @memberof Chartist.Base\n   * @param {String} event Name of the event. Check the examples for supported events.\n   * @param {Function} handler The handler function that will be called when an event with the given name was emitted. This function will receive a data argument which contains event data. See the example for more details.\n   */\n  function on(event, handler) {\n    this.eventEmitter.addEventHandler(event, handler);\n    return this;\n  }\n\n  /**\n   * Use this function to un-register event handlers. If the handler function parameter is omitted all handlers for the given event will be un-registered.\n   *\n   * @memberof Chartist.Base\n   * @param {String} event Name of the event for which a handler should be removed\n   * @param {Function} [handler] The handler function that that was previously used to register a new event handler. This handler will be removed from the event handler list. If this parameter is omitted then all event handlers for the given event are removed from the list.\n   */\n  function off(event, handler) {\n    this.eventEmitter.removeEventHandler(event, handler);\n    return this;\n  }\n\n  function initialize() {\n    // Add window resize listener that re-creates the chart\n    window.addEventListener('resize', this.resizeListener);\n\n    // Obtain current options based on matching media queries (if responsive options are given)\n    // This will also register a listener that is re-creating the chart based on media changes\n    this.optionsProvider = Chartist.optionsProvider(this.options, this.responsiveOptions, this.eventEmitter);\n    // Register options change listener that will trigger a chart update\n    this.eventEmitter.addEventHandler('optionsChanged', function() {\n      this.update();\n    }.bind(this));\n\n    // Before the first chart creation we need to register us with all plugins that are configured\n    // Initialize all relevant plugins with our chart object and the plugin options specified in the config\n    if(this.options.plugins) {\n      this.options.plugins.forEach(function(plugin) {\n        if(plugin instanceof Array) {\n          plugin[0](this, plugin[1]);\n        } else {\n          plugin(this);\n        }\n      }.bind(this));\n    }\n\n    // Event for data transformation that allows to manipulate the data before it gets rendered in the charts\n    this.eventEmitter.emit('data', {\n      type: 'initial',\n      data: this.data\n    });\n\n    // Create the first chart\n    this.createChart(this.optionsProvider.getCurrentOptions());\n\n    // As chart is initialized from the event loop now we can reset our timeout reference\n    // This is important if the chart gets initialized on the same element twice\n    this.initializeTimeoutId = undefined;\n  }\n\n  /**\n   * Constructor of chart base class.\n   *\n   * @param query\n   * @param data\n   * @param defaultOptions\n   * @param options\n   * @param responsiveOptions\n   * @constructor\n   */\n  function Base(query, data, defaultOptions, options, responsiveOptions) {\n    this.container = Chartist.querySelector(query);\n    this.data = data || {};\n    this.data.labels = this.data.labels || [];\n    this.data.series = this.data.series || [];\n    this.defaultOptions = defaultOptions;\n    this.options = options;\n    this.responsiveOptions = responsiveOptions;\n    this.eventEmitter = Chartist.EventEmitter();\n    this.supportsForeignObject = Chartist.Svg.isSupported('Extensibility');\n    this.supportsAnimations = Chartist.Svg.isSupported('AnimationEventsAttribute');\n    this.resizeListener = function resizeListener(){\n      this.update();\n    }.bind(this);\n\n    if(this.container) {\n      // If chartist was already initialized in this container we are detaching all event listeners first\n      if(this.container.__chartist__) {\n        this.container.__chartist__.detach();\n      }\n\n      this.container.__chartist__ = this;\n    }\n\n    // Using event loop for first draw to make it possible to register event listeners in the same call stack where\n    // the chart was created.\n    this.initializeTimeoutId = setTimeout(initialize.bind(this), 0);\n  }\n\n  // Creating the chart base class\n  Chartist.Base = Chartist.Class.extend({\n    constructor: Base,\n    optionsProvider: undefined,\n    container: undefined,\n    svg: undefined,\n    eventEmitter: undefined,\n    createChart: function() {\n      throw new Error('Base chart type can\\'t be instantiated!');\n    },\n    update: update,\n    detach: detach,\n    on: on,\n    off: off,\n    version: Chartist.version,\n    supportsForeignObject: false\n  });\n\n}(this || global, Chartist));\n;/**\n * Chartist SVG module for simple SVG DOM abstraction\n *\n * @module Chartist.Svg\n */\n/* global Chartist */\n(function(globalRoot, Chartist) {\n  'use strict';\n\n  var document = globalRoot.document;\n\n  /**\n   * Chartist.Svg creates a new SVG object wrapper with a starting element. You can use the wrapper to fluently create sub-elements and modify them.\n   *\n   * @memberof Chartist.Svg\n   * @constructor\n   * @param {String|Element} name The name of the SVG element to create or an SVG dom element which should be wrapped into Chartist.Svg\n   * @param {Object} attributes An object with properties that will be added as attributes to the SVG element that is created. Attributes with undefined values will not be added.\n   * @param {String} className This class or class list will be added to the SVG element\n   * @param {Object} parent The parent SVG wrapper object where this newly created wrapper and it's element will be attached to as child\n   * @param {Boolean} insertFirst If this param is set to true in conjunction with a parent element the newly created element will be added as first child element in the parent element\n   */\n  function Svg(name, attributes, className, parent, insertFirst) {\n    // If Svg is getting called with an SVG element we just return the wrapper\n    if(name instanceof Element) {\n      this._node = name;\n    } else {\n      this._node = document.createElementNS(Chartist.namespaces.svg, name);\n\n      // If this is an SVG element created then custom namespace\n      if(name === 'svg') {\n        this.attr({\n          'xmlns:ct': Chartist.namespaces.ct\n        });\n      }\n    }\n\n    if(attributes) {\n      this.attr(attributes);\n    }\n\n    if(className) {\n      this.addClass(className);\n    }\n\n    if(parent) {\n      if (insertFirst && parent._node.firstChild) {\n        parent._node.insertBefore(this._node, parent._node.firstChild);\n      } else {\n        parent._node.appendChild(this._node);\n      }\n    }\n  }\n\n  /**\n   * Set attributes on the current SVG element of the wrapper you're currently working on.\n   *\n   * @memberof Chartist.Svg\n   * @param {Object|String} attributes An object with properties that will be added as attributes to the SVG element that is created. Attributes with undefined values will not be added. If this parameter is a String then the function is used as a getter and will return the attribute value.\n   * @param {String} [ns] If specified, the attribute will be obtained using getAttributeNs. In order to write namepsaced attributes you can use the namespace:attribute notation within the attributes object.\n   * @return {Object|String} The current wrapper object will be returned so it can be used for chaining or the attribute value if used as getter function.\n   */\n  function attr(attributes, ns) {\n    if(typeof attributes === 'string') {\n      if(ns) {\n        return this._node.getAttributeNS(ns, attributes);\n      } else {\n        return this._node.getAttribute(attributes);\n      }\n    }\n\n    Object.keys(attributes).forEach(function(key) {\n      // If the attribute value is undefined we can skip this one\n      if(attributes[key] === undefined) {\n        return;\n      }\n\n      if (key.indexOf(':') !== -1) {\n        var namespacedAttribute = key.split(':');\n        this._node.setAttributeNS(Chartist.namespaces[namespacedAttribute[0]], key, attributes[key]);\n      } else {\n        this._node.setAttribute(key, attributes[key]);\n      }\n    }.bind(this));\n\n    return this;\n  }\n\n  /**\n   * Create a new SVG element whose wrapper object will be selected for further operations. This way you can also create nested groups easily.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} name The name of the SVG element that should be created as child element of the currently selected element wrapper\n   * @param {Object} [attributes] An object with properties that will be added as attributes to the SVG element that is created. Attributes with undefined values will not be added.\n   * @param {String} [className] This class or class list will be added to the SVG element\n   * @param {Boolean} [insertFirst] If this param is set to true in conjunction with a parent element the newly created element will be added as first child element in the parent element\n   * @return {Chartist.Svg} Returns a Chartist.Svg wrapper object that can be used to modify the containing SVG data\n   */\n  function elem(name, attributes, className, insertFirst) {\n    return new Chartist.Svg(name, attributes, className, this, insertFirst);\n  }\n\n  /**\n   * Returns the parent Chartist.SVG wrapper object\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} Returns a Chartist.Svg wrapper around the parent node of the current node. If the parent node is not existing or it's not an SVG node then this function will return null.\n   */\n  function parent() {\n    return this._node.parentNode instanceof SVGElement ? new Chartist.Svg(this._node.parentNode) : null;\n  }\n\n  /**\n   * This method returns a Chartist.Svg wrapper around the root SVG element of the current tree.\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} The root SVG element wrapped in a Chartist.Svg element\n   */\n  function root() {\n    var node = this._node;\n    while(node.nodeName !== 'svg') {\n      node = node.parentNode;\n    }\n    return new Chartist.Svg(node);\n  }\n\n  /**\n   * Find the first child SVG element of the current element that matches a CSS selector. The returned object is a Chartist.Svg wrapper.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} selector A CSS selector that is used to query for child SVG elements\n   * @return {Chartist.Svg} The SVG wrapper for the element found or null if no element was found\n   */\n  function querySelector(selector) {\n    var foundNode = this._node.querySelector(selector);\n    return foundNode ? new Chartist.Svg(foundNode) : null;\n  }\n\n  /**\n   * Find the all child SVG elements of the current element that match a CSS selector. The returned object is a Chartist.Svg.List wrapper.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} selector A CSS selector that is used to query for child SVG elements\n   * @return {Chartist.Svg.List} The SVG wrapper list for the element found or null if no element was found\n   */\n  function querySelectorAll(selector) {\n    var foundNodes = this._node.querySelectorAll(selector);\n    return foundNodes.length ? new Chartist.Svg.List(foundNodes) : null;\n  }\n\n  /**\n   * Returns the underlying SVG node for the current element.\n   *\n   * @memberof Chartist.Svg\n   * @returns {Node}\n   */\n  function getNode() {\n    return this._node;\n  }\n\n  /**\n   * This method creates a foreignObject (see https://developer.mozilla.org/en-US/docs/Web/SVG/Element/foreignObject) that allows to embed HTML content into a SVG graphic. With the help of foreignObjects you can enable the usage of regular HTML elements inside of SVG where they are subject for SVG positioning and transformation but the Browser will use the HTML rendering capabilities for the containing DOM.\n   *\n   * @memberof Chartist.Svg\n   * @param {Node|String} content The DOM Node, or HTML string that will be converted to a DOM Node, that is then placed into and wrapped by the foreignObject\n   * @param {String} [attributes] An object with properties that will be added as attributes to the foreignObject element that is created. Attributes with undefined values will not be added.\n   * @param {String} [className] This class or class list will be added to the SVG element\n   * @param {Boolean} [insertFirst] Specifies if the foreignObject should be inserted as first child\n   * @return {Chartist.Svg} New wrapper object that wraps the foreignObject element\n   */\n  function foreignObject(content, attributes, className, insertFirst) {\n    // If content is string then we convert it to DOM\n    // TODO: Handle case where content is not a string nor a DOM Node\n    if(typeof content === 'string') {\n      var container = document.createElement('div');\n      container.innerHTML = content;\n      content = container.firstChild;\n    }\n\n    // Adding namespace to content element\n    content.setAttribute('xmlns', Chartist.namespaces.xmlns);\n\n    // Creating the foreignObject without required extension attribute (as described here\n    // http://www.w3.org/TR/SVG/extend.html#ForeignObjectElement)\n    var fnObj = this.elem('foreignObject', attributes, className, insertFirst);\n\n    // Add content to foreignObjectElement\n    fnObj._node.appendChild(content);\n\n    return fnObj;\n  }\n\n  /**\n   * This method adds a new text element to the current Chartist.Svg wrapper.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} t The text that should be added to the text element that is created\n   * @return {Chartist.Svg} The same wrapper object that was used to add the newly created element\n   */\n  function text(t) {\n    this._node.appendChild(document.createTextNode(t));\n    return this;\n  }\n\n  /**\n   * This method will clear all child nodes of the current wrapper object.\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} The same wrapper object that got emptied\n   */\n  function empty() {\n    while (this._node.firstChild) {\n      this._node.removeChild(this._node.firstChild);\n    }\n\n    return this;\n  }\n\n  /**\n   * This method will cause the current wrapper to remove itself from its parent wrapper. Use this method if you'd like to get rid of an element in a given DOM structure.\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} The parent wrapper object of the element that got removed\n   */\n  function remove() {\n    this._node.parentNode.removeChild(this._node);\n    return this.parent();\n  }\n\n  /**\n   * This method will replace the element with a new element that can be created outside of the current DOM.\n   *\n   * @memberof Chartist.Svg\n   * @param {Chartist.Svg} newElement The new Chartist.Svg object that will be used to replace the current wrapper object\n   * @return {Chartist.Svg} The wrapper of the new element\n   */\n  function replace(newElement) {\n    this._node.parentNode.replaceChild(newElement._node, this._node);\n    return newElement;\n  }\n\n  /**\n   * This method will append an element to the current element as a child.\n   *\n   * @memberof Chartist.Svg\n   * @param {Chartist.Svg} element The Chartist.Svg element that should be added as a child\n   * @param {Boolean} [insertFirst] Specifies if the element should be inserted as first child\n   * @return {Chartist.Svg} The wrapper of the appended object\n   */\n  function append(element, insertFirst) {\n    if(insertFirst && this._node.firstChild) {\n      this._node.insertBefore(element._node, this._node.firstChild);\n    } else {\n      this._node.appendChild(element._node);\n    }\n\n    return this;\n  }\n\n  /**\n   * Returns an array of class names that are attached to the current wrapper element. This method can not be chained further.\n   *\n   * @memberof Chartist.Svg\n   * @return {Array} A list of classes or an empty array if there are no classes on the current element\n   */\n  function classes() {\n    return this._node.getAttribute('class') ? this._node.getAttribute('class').trim().split(/\\s+/) : [];\n  }\n\n  /**\n   * Adds one or a space separated list of classes to the current element and ensures the classes are only existing once.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} names A white space separated list of class names\n   * @return {Chartist.Svg} The wrapper of the current element\n   */\n  function addClass(names) {\n    this._node.setAttribute('class',\n      this.classes(this._node)\n        .concat(names.trim().split(/\\s+/))\n        .filter(function(elem, pos, self) {\n          return self.indexOf(elem) === pos;\n        }).join(' ')\n    );\n\n    return this;\n  }\n\n  /**\n   * Removes one or a space separated list of classes from the current element.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} names A white space separated list of class names\n   * @return {Chartist.Svg} The wrapper of the current element\n   */\n  function removeClass(names) {\n    var removedClasses = names.trim().split(/\\s+/);\n\n    this._node.setAttribute('class', this.classes(this._node).filter(function(name) {\n      return removedClasses.indexOf(name) === -1;\n    }).join(' '));\n\n    return this;\n  }\n\n  /**\n   * Removes all classes from the current element.\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} The wrapper of the current element\n   */\n  function removeAllClasses() {\n    this._node.setAttribute('class', '');\n\n    return this;\n  }\n\n  /**\n   * Get element height using `getBoundingClientRect`\n   *\n   * @memberof Chartist.Svg\n   * @return {Number} The elements height in pixels\n   */\n  function height() {\n    return this._node.getBoundingClientRect().height;\n  }\n\n  /**\n   * Get element width using `getBoundingClientRect`\n   *\n   * @memberof Chartist.Core\n   * @return {Number} The elements width in pixels\n   */\n  function width() {\n    return this._node.getBoundingClientRect().width;\n  }\n\n  /**\n   * The animate function lets you animate the current element with SMIL animations. You can add animations for multiple attributes at the same time by using an animation definition object. This object should contain SMIL animation attributes. Please refer to http://www.w3.org/TR/SVG/animate.html for a detailed specification about the available animation attributes. Additionally an easing property can be passed in the animation definition object. This can be a string with a name of an easing function in `Chartist.Svg.Easing` or an array with four numbers specifying a cubic Bézier curve.\n   * **An animations object could look like this:**\n   * ```javascript\n   * element.animate({\n   *   opacity: {\n   *     dur: 1000,\n   *     from: 0,\n   *     to: 1\n   *   },\n   *   x1: {\n   *     dur: '1000ms',\n   *     from: 100,\n   *     to: 200,\n   *     easing: 'easeOutQuart'\n   *   },\n   *   y1: {\n   *     dur: '2s',\n   *     from: 0,\n   *     to: 100\n   *   }\n   * });\n   * ```\n   * **Automatic unit conversion**\n   * For the `dur` and the `begin` animate attribute you can also omit a unit by passing a number. The number will automatically be converted to milli seconds.\n   * **Guided mode**\n   * The default behavior of SMIL animations with offset using the `begin` attribute is that the attribute will keep it's original value until the animation starts. Mostly this behavior is not desired as you'd like to have your element attributes already initialized with the animation `from` value even before the animation starts. Also if you don't specify `fill=\"freeze\"` on an animate element or if you delete the animation after it's done (which is done in guided mode) the attribute will switch back to the initial value. This behavior is also not desired when performing simple one-time animations. For one-time animations you'd want to trigger animations immediately instead of relative to the document begin time. That's why in guided mode Chartist.Svg will also use the `begin` property to schedule a timeout and manually start the animation after the timeout. If you're using multiple SMIL definition objects for an attribute (in an array), guided mode will be disabled for this attribute, even if you explicitly enabled it.\n   * If guided mode is enabled the following behavior is added:\n   * - Before the animation starts (even when delayed with `begin`) the animated attribute will be set already to the `from` value of the animation\n   * - `begin` is explicitly set to `indefinite` so it can be started manually without relying on document begin time (creation)\n   * - The animate element will be forced to use `fill=\"freeze\"`\n   * - The animation will be triggered with `beginElement()` in a timeout where `begin` of the definition object is interpreted in milli seconds. If no `begin` was specified the timeout is triggered immediately.\n   * - After the animation the element attribute value will be set to the `to` value of the animation\n   * - The animate element is deleted from the DOM\n   *\n   * @memberof Chartist.Svg\n   * @param {Object} animations An animations object where the property keys are the attributes you'd like to animate. The properties should be objects again that contain the SMIL animation attributes (usually begin, dur, from, and to). The property begin and dur is auto converted (see Automatic unit conversion). You can also schedule multiple animations for the same attribute by passing an Array of SMIL definition objects. Attributes that contain an array of SMIL definition objects will not be executed in guided mode.\n   * @param {Boolean} guided Specify if guided mode should be activated for this animation (see Guided mode). If not otherwise specified, guided mode will be activated.\n   * @param {Object} eventEmitter If specified, this event emitter will be notified when an animation starts or ends.\n   * @return {Chartist.Svg} The current element where the animation was added\n   */\n  function animate(animations, guided, eventEmitter) {\n    if(guided === undefined) {\n      guided = true;\n    }\n\n    Object.keys(animations).forEach(function createAnimateForAttributes(attribute) {\n\n      function createAnimate(animationDefinition, guided) {\n        var attributeProperties = {},\n          animate,\n          timeout,\n          easing;\n\n        // Check if an easing is specified in the definition object and delete it from the object as it will not\n        // be part of the animate element attributes.\n        if(animationDefinition.easing) {\n          // If already an easing Bézier curve array we take it or we lookup a easing array in the Easing object\n          easing = animationDefinition.easing instanceof Array ?\n            animationDefinition.easing :\n            Chartist.Svg.Easing[animationDefinition.easing];\n          delete animationDefinition.easing;\n        }\n\n        // If numeric dur or begin was provided we assume milli seconds\n        animationDefinition.begin = Chartist.ensureUnit(animationDefinition.begin, 'ms');\n        animationDefinition.dur = Chartist.ensureUnit(animationDefinition.dur, 'ms');\n\n        if(easing) {\n          animationDefinition.calcMode = 'spline';\n          animationDefinition.keySplines = easing.join(' ');\n          animationDefinition.keyTimes = '0;1';\n        }\n\n        // Adding \"fill: freeze\" if we are in guided mode and set initial attribute values\n        if(guided) {\n          animationDefinition.fill = 'freeze';\n          // Animated property on our element should already be set to the animation from value in guided mode\n          attributeProperties[attribute] = animationDefinition.from;\n          this.attr(attributeProperties);\n\n          // In guided mode we also set begin to indefinite so we can trigger the start manually and put the begin\n          // which needs to be in ms aside\n          timeout = Chartist.quantity(animationDefinition.begin || 0).value;\n          animationDefinition.begin = 'indefinite';\n        }\n\n        animate = this.elem('animate', Chartist.extend({\n          attributeName: attribute\n        }, animationDefinition));\n\n        if(guided) {\n          // If guided we take the value that was put aside in timeout and trigger the animation manually with a timeout\n          setTimeout(function() {\n            // If beginElement fails we set the animated attribute to the end position and remove the animate element\n            // This happens if the SMIL ElementTimeControl interface is not supported or any other problems occured in\n            // the browser. (Currently FF 34 does not support animate elements in foreignObjects)\n            try {\n              animate._node.beginElement();\n            } catch(err) {\n              // Set animated attribute to current animated value\n              attributeProperties[attribute] = animationDefinition.to;\n              this.attr(attributeProperties);\n              // Remove the animate element as it's no longer required\n              animate.remove();\n            }\n          }.bind(this), timeout);\n        }\n\n        if(eventEmitter) {\n          animate._node.addEventListener('beginEvent', function handleBeginEvent() {\n            eventEmitter.emit('animationBegin', {\n              element: this,\n              animate: animate._node,\n              params: animationDefinition\n            });\n          }.bind(this));\n        }\n\n        animate._node.addEventListener('endEvent', function handleEndEvent() {\n          if(eventEmitter) {\n            eventEmitter.emit('animationEnd', {\n              element: this,\n              animate: animate._node,\n              params: animationDefinition\n            });\n          }\n\n          if(guided) {\n            // Set animated attribute to current animated value\n            attributeProperties[attribute] = animationDefinition.to;\n            this.attr(attributeProperties);\n            // Remove the animate element as it's no longer required\n            animate.remove();\n          }\n        }.bind(this));\n      }\n\n      // If current attribute is an array of definition objects we create an animate for each and disable guided mode\n      if(animations[attribute] instanceof Array) {\n        animations[attribute].forEach(function(animationDefinition) {\n          createAnimate.bind(this)(animationDefinition, false);\n        }.bind(this));\n      } else {\n        createAnimate.bind(this)(animations[attribute], guided);\n      }\n\n    }.bind(this));\n\n    return this;\n  }\n\n  Chartist.Svg = Chartist.Class.extend({\n    constructor: Svg,\n    attr: attr,\n    elem: elem,\n    parent: parent,\n    root: root,\n    querySelector: querySelector,\n    querySelectorAll: querySelectorAll,\n    getNode: getNode,\n    foreignObject: foreignObject,\n    text: text,\n    empty: empty,\n    remove: remove,\n    replace: replace,\n    append: append,\n    classes: classes,\n    addClass: addClass,\n    removeClass: removeClass,\n    removeAllClasses: removeAllClasses,\n    height: height,\n    width: width,\n    animate: animate\n  });\n\n  /**\n   * This method checks for support of a given SVG feature like Extensibility, SVG-animation or the like. Check http://www.w3.org/TR/SVG11/feature for a detailed list.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} feature The SVG 1.1 feature that should be checked for support.\n   * @return {Boolean} True of false if the feature is supported or not\n   */\n  Chartist.Svg.isSupported = function(feature) {\n    return document.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#' + feature, '1.1');\n  };\n\n  /**\n   * This Object contains some standard easing cubic bezier curves. Then can be used with their name in the `Chartist.Svg.animate`. You can also extend the list and use your own name in the `animate` function. Click the show code button to see the available bezier functions.\n   *\n   * @memberof Chartist.Svg\n   */\n  var easingCubicBeziers = {\n    easeInSine: [0.47, 0, 0.745, 0.715],\n    easeOutSine: [0.39, 0.575, 0.565, 1],\n    easeInOutSine: [0.445, 0.05, 0.55, 0.95],\n    easeInQuad: [0.55, 0.085, 0.68, 0.53],\n    easeOutQuad: [0.25, 0.46, 0.45, 0.94],\n    easeInOutQuad: [0.455, 0.03, 0.515, 0.955],\n    easeInCubic: [0.55, 0.055, 0.675, 0.19],\n    easeOutCubic: [0.215, 0.61, 0.355, 1],\n    easeInOutCubic: [0.645, 0.045, 0.355, 1],\n    easeInQuart: [0.895, 0.03, 0.685, 0.22],\n    easeOutQuart: [0.165, 0.84, 0.44, 1],\n    easeInOutQuart: [0.77, 0, 0.175, 1],\n    easeInQuint: [0.755, 0.05, 0.855, 0.06],\n    easeOutQuint: [0.23, 1, 0.32, 1],\n    easeInOutQuint: [0.86, 0, 0.07, 1],\n    easeInExpo: [0.95, 0.05, 0.795, 0.035],\n    easeOutExpo: [0.19, 1, 0.22, 1],\n    easeInOutExpo: [1, 0, 0, 1],\n    easeInCirc: [0.6, 0.04, 0.98, 0.335],\n    easeOutCirc: [0.075, 0.82, 0.165, 1],\n    easeInOutCirc: [0.785, 0.135, 0.15, 0.86],\n    easeInBack: [0.6, -0.28, 0.735, 0.045],\n    easeOutBack: [0.175, 0.885, 0.32, 1.275],\n    easeInOutBack: [0.68, -0.55, 0.265, 1.55]\n  };\n\n  Chartist.Svg.Easing = easingCubicBeziers;\n\n  /**\n   * This helper class is to wrap multiple `Chartist.Svg` elements into a list where you can call the `Chartist.Svg` functions on all elements in the list with one call. This is helpful when you'd like to perform calls with `Chartist.Svg` on multiple elements.\n   * An instance of this class is also returned by `Chartist.Svg.querySelectorAll`.\n   *\n   * @memberof Chartist.Svg\n   * @param {Array<Node>|NodeList} nodeList An Array of SVG DOM nodes or a SVG DOM NodeList (as returned by document.querySelectorAll)\n   * @constructor\n   */\n  function SvgList(nodeList) {\n    var list = this;\n\n    this.svgElements = [];\n    for(var i = 0; i < nodeList.length; i++) {\n      this.svgElements.push(new Chartist.Svg(nodeList[i]));\n    }\n\n    // Add delegation methods for Chartist.Svg\n    Object.keys(Chartist.Svg.prototype).filter(function(prototypeProperty) {\n      return ['constructor',\n          'parent',\n          'querySelector',\n          'querySelectorAll',\n          'replace',\n          'append',\n          'classes',\n          'height',\n          'width'].indexOf(prototypeProperty) === -1;\n    }).forEach(function(prototypeProperty) {\n      list[prototypeProperty] = function() {\n        var args = Array.prototype.slice.call(arguments, 0);\n        list.svgElements.forEach(function(element) {\n          Chartist.Svg.prototype[prototypeProperty].apply(element, args);\n        });\n        return list;\n      };\n    });\n  }\n\n  Chartist.Svg.List = Chartist.Class.extend({\n    constructor: SvgList\n  });\n}(this || global, Chartist));\n;/**\n * Chartist SVG path module for SVG path description creation and modification.\n *\n * @module Chartist.Svg.Path\n */\n/* global Chartist */\n(function(globalRoot, Chartist) {\n  'use strict';\n\n  /**\n   * Contains the descriptors of supported element types in a SVG path. Currently only move, line and curve are supported.\n   *\n   * @memberof Chartist.Svg.Path\n   * @type {Object}\n   */\n  var elementDescriptions = {\n    m: ['x', 'y'],\n    l: ['x', 'y'],\n    c: ['x1', 'y1', 'x2', 'y2', 'x', 'y'],\n    a: ['rx', 'ry', 'xAr', 'lAf', 'sf', 'x', 'y']\n  };\n\n  /**\n   * Default options for newly created SVG path objects.\n   *\n   * @memberof Chartist.Svg.Path\n   * @type {Object}\n   */\n  var defaultOptions = {\n    // The accuracy in digit count after the decimal point. This will be used to round numbers in the SVG path. If this option is set to false then no rounding will be performed.\n    accuracy: 3\n  };\n\n  function element(command, params, pathElements, pos, relative, data) {\n    var pathElement = Chartist.extend({\n      command: relative ? command.toLowerCase() : command.toUpperCase()\n    }, params, data ? { data: data } : {} );\n\n    pathElements.splice(pos, 0, pathElement);\n  }\n\n  function forEachParam(pathElements, cb) {\n    pathElements.forEach(function(pathElement, pathElementIndex) {\n      elementDescriptions[pathElement.command.toLowerCase()].forEach(function(paramName, paramIndex) {\n        cb(pathElement, paramName, pathElementIndex, paramIndex, pathElements);\n      });\n    });\n  }\n\n  /**\n   * Used to construct a new path object.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Boolean} close If set to true then this path will be closed when stringified (with a Z at the end)\n   * @param {Object} options Options object that overrides the default objects. See default options for more details.\n   * @constructor\n   */\n  function SvgPath(close, options) {\n    this.pathElements = [];\n    this.pos = 0;\n    this.close = close;\n    this.options = Chartist.extend({}, defaultOptions, options);\n  }\n\n  /**\n   * Gets or sets the current position (cursor) inside of the path. You can move around the cursor freely but limited to 0 or the count of existing elements. All modifications with element functions will insert new elements at the position of this cursor.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} [pos] If a number is passed then the cursor is set to this position in the path element array.\n   * @return {Chartist.Svg.Path|Number} If the position parameter was passed then the return value will be the path object for easy call chaining. If no position parameter was passed then the current position is returned.\n   */\n  function position(pos) {\n    if(pos !== undefined) {\n      this.pos = Math.max(0, Math.min(this.pathElements.length, pos));\n      return this;\n    } else {\n      return this.pos;\n    }\n  }\n\n  /**\n   * Removes elements from the path starting at the current position.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} count Number of path elements that should be removed from the current position.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function remove(count) {\n    this.pathElements.splice(this.pos, count);\n    return this;\n  }\n\n  /**\n   * Use this function to add a new move SVG path element.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x The x coordinate for the move element.\n   * @param {Number} y The y coordinate for the move element.\n   * @param {Boolean} [relative] If set to true the move element will be created with relative coordinates (lowercase letter)\n   * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function move(x, y, relative, data) {\n    element('M', {\n      x: +x,\n      y: +y\n    }, this.pathElements, this.pos++, relative, data);\n    return this;\n  }\n\n  /**\n   * Use this function to add a new line SVG path element.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x The x coordinate for the line element.\n   * @param {Number} y The y coordinate for the line element.\n   * @param {Boolean} [relative] If set to true the line element will be created with relative coordinates (lowercase letter)\n   * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function line(x, y, relative, data) {\n    element('L', {\n      x: +x,\n      y: +y\n    }, this.pathElements, this.pos++, relative, data);\n    return this;\n  }\n\n  /**\n   * Use this function to add a new curve SVG path element.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x1 The x coordinate for the first control point of the bezier curve.\n   * @param {Number} y1 The y coordinate for the first control point of the bezier curve.\n   * @param {Number} x2 The x coordinate for the second control point of the bezier curve.\n   * @param {Number} y2 The y coordinate for the second control point of the bezier curve.\n   * @param {Number} x The x coordinate for the target point of the curve element.\n   * @param {Number} y The y coordinate for the target point of the curve element.\n   * @param {Boolean} [relative] If set to true the curve element will be created with relative coordinates (lowercase letter)\n   * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function curve(x1, y1, x2, y2, x, y, relative, data) {\n    element('C', {\n      x1: +x1,\n      y1: +y1,\n      x2: +x2,\n      y2: +y2,\n      x: +x,\n      y: +y\n    }, this.pathElements, this.pos++, relative, data);\n    return this;\n  }\n\n  /**\n   * Use this function to add a new non-bezier curve SVG path element.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} rx The radius to be used for the x-axis of the arc.\n   * @param {Number} ry The radius to be used for the y-axis of the arc.\n   * @param {Number} xAr Defines the orientation of the arc\n   * @param {Number} lAf Large arc flag\n   * @param {Number} sf Sweep flag\n   * @param {Number} x The x coordinate for the target point of the curve element.\n   * @param {Number} y The y coordinate for the target point of the curve element.\n   * @param {Boolean} [relative] If set to true the curve element will be created with relative coordinates (lowercase letter)\n   * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function arc(rx, ry, xAr, lAf, sf, x, y, relative, data) {\n    element('A', {\n      rx: +rx,\n      ry: +ry,\n      xAr: +xAr,\n      lAf: +lAf,\n      sf: +sf,\n      x: +x,\n      y: +y\n    }, this.pathElements, this.pos++, relative, data);\n    return this;\n  }\n\n  /**\n   * Parses an SVG path seen in the d attribute of path elements, and inserts the parsed elements into the existing path object at the current cursor position. Any closing path indicators (Z at the end of the path) will be ignored by the parser as this is provided by the close option in the options of the path object.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {String} path Any SVG path that contains move (m), line (l) or curve (c) components.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function parse(path) {\n    // Parsing the SVG path string into an array of arrays [['M', '10', '10'], ['L', '100', '100']]\n    var chunks = path.replace(/([A-Za-z])([0-9])/g, '$1 $2')\n      .replace(/([0-9])([A-Za-z])/g, '$1 $2')\n      .split(/[\\s,]+/)\n      .reduce(function(result, element) {\n        if(element.match(/[A-Za-z]/)) {\n          result.push([]);\n        }\n\n        result[result.length - 1].push(element);\n        return result;\n      }, []);\n\n    // If this is a closed path we remove the Z at the end because this is determined by the close option\n    if(chunks[chunks.length - 1][0].toUpperCase() === 'Z') {\n      chunks.pop();\n    }\n\n    // Using svgPathElementDescriptions to map raw path arrays into objects that contain the command and the parameters\n    // For example {command: 'M', x: '10', y: '10'}\n    var elements = chunks.map(function(chunk) {\n        var command = chunk.shift(),\n          description = elementDescriptions[command.toLowerCase()];\n\n        return Chartist.extend({\n          command: command\n        }, description.reduce(function(result, paramName, index) {\n          result[paramName] = +chunk[index];\n          return result;\n        }, {}));\n      });\n\n    // Preparing a splice call with the elements array as var arg params and insert the parsed elements at the current position\n    var spliceArgs = [this.pos, 0];\n    Array.prototype.push.apply(spliceArgs, elements);\n    Array.prototype.splice.apply(this.pathElements, spliceArgs);\n    // Increase the internal position by the element count\n    this.pos += elements.length;\n\n    return this;\n  }\n\n  /**\n   * This function renders to current SVG path object into a final SVG string that can be used in the d attribute of SVG path elements. It uses the accuracy option to round big decimals. If the close parameter was set in the constructor of this path object then a path closing Z will be appended to the output string.\n   *\n   * @memberof Chartist.Svg.Path\n   * @return {String}\n   */\n  function stringify() {\n    var accuracyMultiplier = Math.pow(10, this.options.accuracy);\n\n    return this.pathElements.reduce(function(path, pathElement) {\n        var params = elementDescriptions[pathElement.command.toLowerCase()].map(function(paramName) {\n          return this.options.accuracy ?\n            (Math.round(pathElement[paramName] * accuracyMultiplier) / accuracyMultiplier) :\n            pathElement[paramName];\n        }.bind(this));\n\n        return path + pathElement.command + params.join(',');\n      }.bind(this), '') + (this.close ? 'Z' : '');\n  }\n\n  /**\n   * Scales all elements in the current SVG path object. There is an individual parameter for each coordinate. Scaling will also be done for control points of curves, affecting the given coordinate.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x The number which will be used to scale the x, x1 and x2 of all path elements.\n   * @param {Number} y The number which will be used to scale the y, y1 and y2 of all path elements.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function scale(x, y) {\n    forEachParam(this.pathElements, function(pathElement, paramName) {\n      pathElement[paramName] *= paramName[0] === 'x' ? x : y;\n    });\n    return this;\n  }\n\n  /**\n   * Translates all elements in the current SVG path object. The translation is relative and there is an individual parameter for each coordinate. Translation will also be done for control points of curves, affecting the given coordinate.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x The number which will be used to translate the x, x1 and x2 of all path elements.\n   * @param {Number} y The number which will be used to translate the y, y1 and y2 of all path elements.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function translate(x, y) {\n    forEachParam(this.pathElements, function(pathElement, paramName) {\n      pathElement[paramName] += paramName[0] === 'x' ? x : y;\n    });\n    return this;\n  }\n\n  /**\n   * This function will run over all existing path elements and then loop over their attributes. The callback function will be called for every path element attribute that exists in the current path.\n   * The method signature of the callback function looks like this:\n   * ```javascript\n   * function(pathElement, paramName, pathElementIndex, paramIndex, pathElements)\n   * ```\n   * If something else than undefined is returned by the callback function, this value will be used to replace the old value. This allows you to build custom transformations of path objects that can't be achieved using the basic transformation functions scale and translate.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Function} transformFnc The callback function for the transformation. Check the signature in the function description.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function transform(transformFnc) {\n    forEachParam(this.pathElements, function(pathElement, paramName, pathElementIndex, paramIndex, pathElements) {\n      var transformed = transformFnc(pathElement, paramName, pathElementIndex, paramIndex, pathElements);\n      if(transformed || transformed === 0) {\n        pathElement[paramName] = transformed;\n      }\n    });\n    return this;\n  }\n\n  /**\n   * This function clones a whole path object with all its properties. This is a deep clone and path element objects will also be cloned.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Boolean} [close] Optional option to set the new cloned path to closed. If not specified or false, the original path close option will be used.\n   * @return {Chartist.Svg.Path}\n   */\n  function clone(close) {\n    var c = new Chartist.Svg.Path(close || this.close);\n    c.pos = this.pos;\n    c.pathElements = this.pathElements.slice().map(function cloneElements(pathElement) {\n      return Chartist.extend({}, pathElement);\n    });\n    c.options = Chartist.extend({}, this.options);\n    return c;\n  }\n\n  /**\n   * Split a Svg.Path object by a specific command in the path chain. The path chain will be split and an array of newly created paths objects will be returned. This is useful if you'd like to split an SVG path by it's move commands, for example, in order to isolate chunks of drawings.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {String} command The command you'd like to use to split the path\n   * @return {Array<Chartist.Svg.Path>}\n   */\n  function splitByCommand(command) {\n    var split = [\n      new Chartist.Svg.Path()\n    ];\n\n    this.pathElements.forEach(function(pathElement) {\n      if(pathElement.command === command.toUpperCase() && split[split.length - 1].pathElements.length !== 0) {\n        split.push(new Chartist.Svg.Path());\n      }\n\n      split[split.length - 1].pathElements.push(pathElement);\n    });\n\n    return split;\n  }\n\n  /**\n   * This static function on `Chartist.Svg.Path` is joining multiple paths together into one paths.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Array<Chartist.Svg.Path>} paths A list of paths to be joined together. The order is important.\n   * @param {boolean} close If the newly created path should be a closed path\n   * @param {Object} options Path options for the newly created path.\n   * @return {Chartist.Svg.Path}\n   */\n\n  function join(paths, close, options) {\n    var joinedPath = new Chartist.Svg.Path(close, options);\n    for(var i = 0; i < paths.length; i++) {\n      var path = paths[i];\n      for(var j = 0; j < path.pathElements.length; j++) {\n        joinedPath.pathElements.push(path.pathElements[j]);\n      }\n    }\n    return joinedPath;\n  }\n\n  Chartist.Svg.Path = Chartist.Class.extend({\n    constructor: SvgPath,\n    position: position,\n    remove: remove,\n    move: move,\n    line: line,\n    curve: curve,\n    arc: arc,\n    scale: scale,\n    translate: translate,\n    transform: transform,\n    parse: parse,\n    stringify: stringify,\n    clone: clone,\n    splitByCommand: splitByCommand\n  });\n\n  Chartist.Svg.Path.elementDescriptions = elementDescriptions;\n  Chartist.Svg.Path.join = join;\n}(this || global, Chartist));\n;/* global Chartist */\n(function (globalRoot, Chartist) {\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  var axisUnits = {\n    x: {\n      pos: 'x',\n      len: 'width',\n      dir: 'horizontal',\n      rectStart: 'x1',\n      rectEnd: 'x2',\n      rectOffset: 'y2'\n    },\n    y: {\n      pos: 'y',\n      len: 'height',\n      dir: 'vertical',\n      rectStart: 'y2',\n      rectEnd: 'y1',\n      rectOffset: 'x1'\n    }\n  };\n\n  function Axis(units, chartRect, ticks, options) {\n    this.units = units;\n    this.counterUnits = units === axisUnits.x ? axisUnits.y : axisUnits.x;\n    this.chartRect = chartRect;\n    this.axisLength = chartRect[units.rectEnd] - chartRect[units.rectStart];\n    this.gridOffset = chartRect[units.rectOffset];\n    this.ticks = ticks;\n    this.options = options;\n  }\n\n  function createGridAndLabels(gridGroup, labelGroup, useForeignObject, chartOptions, eventEmitter) {\n    var axisOptions = chartOptions['axis' + this.units.pos.toUpperCase()];\n    var projectedValues = this.ticks.map(this.projectValue.bind(this));\n    var labelValues = this.ticks.map(axisOptions.labelInterpolationFnc);\n\n    projectedValues.forEach(function(projectedValue, index) {\n      var labelOffset = {\n        x: 0,\n        y: 0\n      };\n\n      // TODO: Find better solution for solving this problem\n      // Calculate how much space we have available for the label\n      var labelLength;\n      if(projectedValues[index + 1]) {\n        // If we still have one label ahead, we can calculate the distance to the next tick / label\n        labelLength = projectedValues[index + 1] - projectedValue;\n      } else {\n        // If we don't have a label ahead and we have only two labels in total, we just take the remaining distance to\n        // on the whole axis length. We limit that to a minimum of 30 pixel, so that labels close to the border will\n        // still be visible inside of the chart padding.\n        labelLength = Math.max(this.axisLength - projectedValue, 30);\n      }\n\n      // Skip grid lines and labels where interpolated label values are falsey (execpt for 0)\n      if(Chartist.isFalseyButZero(labelValues[index]) && labelValues[index] !== '') {\n        return;\n      }\n\n      // Transform to global coordinates using the chartRect\n      // We also need to set the label offset for the createLabel function\n      if(this.units.pos === 'x') {\n        projectedValue = this.chartRect.x1 + projectedValue;\n        labelOffset.x = chartOptions.axisX.labelOffset.x;\n\n        // If the labels should be positioned in start position (top side for vertical axis) we need to set a\n        // different offset as for positioned with end (bottom)\n        if(chartOptions.axisX.position === 'start') {\n          labelOffset.y = this.chartRect.padding.top + chartOptions.axisX.labelOffset.y + (useForeignObject ? 5 : 20);\n        } else {\n          labelOffset.y = this.chartRect.y1 + chartOptions.axisX.labelOffset.y + (useForeignObject ? 5 : 20);\n        }\n      } else {\n        projectedValue = this.chartRect.y1 - projectedValue;\n        labelOffset.y = chartOptions.axisY.labelOffset.y - (useForeignObject ? labelLength : 0);\n\n        // If the labels should be positioned in start position (left side for horizontal axis) we need to set a\n        // different offset as for positioned with end (right side)\n        if(chartOptions.axisY.position === 'start') {\n          labelOffset.x = useForeignObject ? this.chartRect.padding.left + chartOptions.axisY.labelOffset.x : this.chartRect.x1 - 10;\n        } else {\n          labelOffset.x = this.chartRect.x2 + chartOptions.axisY.labelOffset.x + 10;\n        }\n      }\n\n      if(axisOptions.showGrid) {\n        Chartist.createGrid(projectedValue, index, this, this.gridOffset, this.chartRect[this.counterUnits.len](), gridGroup, [\n          chartOptions.classNames.grid,\n          chartOptions.classNames[this.units.dir]\n        ], eventEmitter);\n      }\n\n      if(axisOptions.showLabel) {\n        Chartist.createLabel(projectedValue, labelLength, index, labelValues, this, axisOptions.offset, labelOffset, labelGroup, [\n          chartOptions.classNames.label,\n          chartOptions.classNames[this.units.dir],\n          (axisOptions.position === 'start' ? chartOptions.classNames[axisOptions.position] : chartOptions.classNames['end'])\n        ], useForeignObject, eventEmitter);\n      }\n    }.bind(this));\n  }\n\n  Chartist.Axis = Chartist.Class.extend({\n    constructor: Axis,\n    createGridAndLabels: createGridAndLabels,\n    projectValue: function(value, index, data) {\n      throw new Error('Base axis can\\'t be instantiated!');\n    }\n  });\n\n  Chartist.Axis.units = axisUnits;\n\n}(this || global, Chartist));\n;/**\n * The auto scale axis uses standard linear scale projection of values along an axis. It uses order of magnitude to find a scale automatically and evaluates the available space in order to find the perfect amount of ticks for your chart.\n * **Options**\n * The following options are used by this axis in addition to the default axis options outlined in the axis configuration of the chart default settings.\n * ```javascript\n * var options = {\n *   // If high is specified then the axis will display values explicitly up to this value and the computed maximum from the data is ignored\n *   high: 100,\n *   // If low is specified then the axis will display values explicitly down to this value and the computed minimum from the data is ignored\n *   low: 0,\n *   // This option will be used when finding the right scale division settings. The amount of ticks on the scale will be determined so that as many ticks as possible will be displayed, while not violating this minimum required space (in pixel).\n *   scaleMinSpace: 20,\n *   // Can be set to true or false. If set to true, the scale will be generated with whole numbers only.\n *   onlyInteger: true,\n *   // The reference value can be used to make sure that this value will always be on the chart. This is especially useful on bipolar charts where the bipolar center always needs to be part of the chart.\n *   referenceValue: 5\n * };\n * ```\n *\n * @module Chartist.AutoScaleAxis\n */\n/* global Chartist */\n(function (globalRoot, Chartist) {\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  function AutoScaleAxis(axisUnit, data, chartRect, options) {\n    // Usually we calculate highLow based on the data but this can be overriden by a highLow object in the options\n    var highLow = options.highLow || Chartist.getHighLow(data, options, axisUnit.pos);\n    this.bounds = Chartist.getBounds(chartRect[axisUnit.rectEnd] - chartRect[axisUnit.rectStart], highLow, options.scaleMinSpace || 20, options.onlyInteger);\n    this.range = {\n      min: this.bounds.min,\n      max: this.bounds.max\n    };\n\n    Chartist.AutoScaleAxis.super.constructor.call(this,\n      axisUnit,\n      chartRect,\n      this.bounds.values,\n      options);\n  }\n\n  function projectValue(value) {\n    return this.axisLength * (+Chartist.getMultiValue(value, this.units.pos) - this.bounds.min) / this.bounds.range;\n  }\n\n  Chartist.AutoScaleAxis = Chartist.Axis.extend({\n    constructor: AutoScaleAxis,\n    projectValue: projectValue\n  });\n\n}(this || global, Chartist));\n;/**\n * The fixed scale axis uses standard linear projection of values along an axis. It makes use of a divisor option to divide the range provided from the minimum and maximum value or the options high and low that will override the computed minimum and maximum.\n * **Options**\n * The following options are used by this axis in addition to the default axis options outlined in the axis configuration of the chart default settings.\n * ```javascript\n * var options = {\n *   // If high is specified then the axis will display values explicitly up to this value and the computed maximum from the data is ignored\n *   high: 100,\n *   // If low is specified then the axis will display values explicitly down to this value and the computed minimum from the data is ignored\n *   low: 0,\n *   // If specified then the value range determined from minimum to maximum (or low and high) will be divided by this number and ticks will be generated at those division points. The default divisor is 1.\n *   divisor: 4,\n *   // If ticks is explicitly set, then the axis will not compute the ticks with the divisor, but directly use the data in ticks to determine at what points on the axis a tick need to be generated.\n *   ticks: [1, 10, 20, 30]\n * };\n * ```\n *\n * @module Chartist.FixedScaleAxis\n */\n/* global Chartist */\n(function (globalRoot, Chartist) {\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  function FixedScaleAxis(axisUnit, data, chartRect, options) {\n    var highLow = options.highLow || Chartist.getHighLow(data, options, axisUnit.pos);\n    this.divisor = options.divisor || 1;\n    this.ticks = options.ticks || Chartist.times(this.divisor).map(function(value, index) {\n      return highLow.low + (highLow.high - highLow.low) / this.divisor * index;\n    }.bind(this));\n    this.ticks.sort(function(a, b) {\n      return a - b;\n    });\n    this.range = {\n      min: highLow.low,\n      max: highLow.high\n    };\n\n    Chartist.FixedScaleAxis.super.constructor.call(this,\n      axisUnit,\n      chartRect,\n      this.ticks,\n      options);\n\n    this.stepLength = this.axisLength / this.divisor;\n  }\n\n  function projectValue(value) {\n    return this.axisLength * (+Chartist.getMultiValue(value, this.units.pos) - this.range.min) / (this.range.max - this.range.min);\n  }\n\n  Chartist.FixedScaleAxis = Chartist.Axis.extend({\n    constructor: FixedScaleAxis,\n    projectValue: projectValue\n  });\n\n}(this || global, Chartist));\n;/**\n * The step axis for step based charts like bar chart or step based line charts. It uses a fixed amount of ticks that will be equally distributed across the whole axis length. The projection is done using the index of the data value rather than the value itself and therefore it's only useful for distribution purpose.\n * **Options**\n * The following options are used by this axis in addition to the default axis options outlined in the axis configuration of the chart default settings.\n * ```javascript\n * var options = {\n *   // Ticks to be used to distribute across the axis length. As this axis type relies on the index of the value rather than the value, arbitrary data that can be converted to a string can be used as ticks.\n *   ticks: ['One', 'Two', 'Three'],\n *   // If set to true the full width will be used to distribute the values where the last value will be at the maximum of the axis length. If false the spaces between the ticks will be evenly distributed instead.\n *   stretch: true\n * };\n * ```\n *\n * @module Chartist.StepAxis\n */\n/* global Chartist */\n(function (globalRoot, Chartist) {\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  function StepAxis(axisUnit, data, chartRect, options) {\n    Chartist.StepAxis.super.constructor.call(this,\n      axisUnit,\n      chartRect,\n      options.ticks,\n      options);\n\n    var calc = Math.max(1, options.ticks.length - (options.stretch ? 1 : 0));\n    this.stepLength = this.axisLength / calc;\n  }\n\n  function projectValue(value, index) {\n    return this.stepLength * index;\n  }\n\n  Chartist.StepAxis = Chartist.Axis.extend({\n    constructor: StepAxis,\n    projectValue: projectValue\n  });\n\n}(this || global, Chartist));\n;/**\n * The Chartist line chart can be used to draw Line or Scatter charts. If used in the browser you can access the global `Chartist` namespace where you find the `Line` function as a main entry point.\n *\n * For examples on how to use the line chart please check the examples of the `Chartist.Line` method.\n *\n * @module Chartist.Line\n */\n/* global Chartist */\n(function(globalRoot, Chartist){\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  /**\n   * Default options in line charts. Expand the code view to see a detailed list of options with comments.\n   *\n   * @memberof Chartist.Line\n   */\n  var defaultOptions = {\n    // Options for X-Axis\n    axisX: {\n      // The offset of the labels to the chart area\n      offset: 30,\n      // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n      position: 'end',\n      // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n      labelOffset: {\n        x: 0,\n        y: 0\n      },\n      // If labels should be shown or not\n      showLabel: true,\n      // If the axis grid should be drawn or not\n      showGrid: true,\n      // Interpolation function that allows you to intercept the value from the axis label\n      labelInterpolationFnc: Chartist.noop,\n      // Set the axis type to be used to project values on this axis. If not defined, Chartist.StepAxis will be used for the X-Axis, where the ticks option will be set to the labels in the data and the stretch option will be set to the global fullWidth option. This type can be changed to any axis constructor available (e.g. Chartist.FixedScaleAxis), where all axis options should be present here.\n      type: undefined\n    },\n    // Options for Y-Axis\n    axisY: {\n      // The offset of the labels to the chart area\n      offset: 40,\n      // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n      position: 'start',\n      // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n      labelOffset: {\n        x: 0,\n        y: 0\n      },\n      // If labels should be shown or not\n      showLabel: true,\n      // If the axis grid should be drawn or not\n      showGrid: true,\n      // Interpolation function that allows you to intercept the value from the axis label\n      labelInterpolationFnc: Chartist.noop,\n      // Set the axis type to be used to project values on this axis. If not defined, Chartist.AutoScaleAxis will be used for the Y-Axis, where the high and low options will be set to the global high and low options. This type can be changed to any axis constructor available (e.g. Chartist.FixedScaleAxis), where all axis options should be present here.\n      type: undefined,\n      // This value specifies the minimum height in pixel of the scale steps\n      scaleMinSpace: 20,\n      // Use only integer values (whole numbers) for the scale steps\n      onlyInteger: false\n    },\n    // Specify a fixed width for the chart as a string (i.e. '100px' or '50%')\n    width: undefined,\n    // Specify a fixed height for the chart as a string (i.e. '100px' or '50%')\n    height: undefined,\n    // If the line should be drawn or not\n    showLine: true,\n    // If dots should be drawn or not\n    showPoint: true,\n    // If the line chart should draw an area\n    showArea: false,\n    // The base for the area chart that will be used to close the area shape (is normally 0)\n    areaBase: 0,\n    // Specify if the lines should be smoothed. This value can be true or false where true will result in smoothing using the default smoothing interpolation function Chartist.Interpolation.cardinal and false results in Chartist.Interpolation.none. You can also choose other smoothing / interpolation functions available in the Chartist.Interpolation module, or write your own interpolation function. Check the examples for a brief description.\n    lineSmooth: true,\n    // If the line chart should add a background fill to the .ct-grids group.\n    showGridBackground: false,\n    // Overriding the natural low of the chart allows you to zoom in or limit the charts lowest displayed value\n    low: undefined,\n    // Overriding the natural high of the chart allows you to zoom in or limit the charts highest displayed value\n    high: undefined,\n    // Padding of the chart drawing area to the container element and labels as a number or padding object {top: 5, right: 5, bottom: 5, left: 5}\n    chartPadding: {\n      top: 15,\n      right: 15,\n      bottom: 5,\n      left: 10\n    },\n    // When set to true, the last grid line on the x-axis is not drawn and the chart elements will expand to the full available width of the chart. For the last label to be drawn correctly you might need to add chart padding or offset the last label with a draw event handler.\n    fullWidth: false,\n    // If true the whole data is reversed including labels, the series order as well as the whole series data arrays.\n    reverseData: false,\n    // Override the class names that get used to generate the SVG structure of the chart\n    classNames: {\n      chart: 'ct-chart-line',\n      label: 'ct-label',\n      labelGroup: 'ct-labels',\n      series: 'ct-series',\n      line: 'ct-line',\n      point: 'ct-point',\n      area: 'ct-area',\n      grid: 'ct-grid',\n      gridGroup: 'ct-grids',\n      gridBackground: 'ct-grid-background',\n      vertical: 'ct-vertical',\n      horizontal: 'ct-horizontal',\n      start: 'ct-start',\n      end: 'ct-end'\n    }\n  };\n\n  /**\n   * Creates a new chart\n   *\n   */\n  function createChart(options) {\n    var data = Chartist.normalizeData(this.data, options.reverseData, true);\n\n    // Create new svg object\n    this.svg = Chartist.createSvg(this.container, options.width, options.height, options.classNames.chart);\n    // Create groups for labels, grid and series\n    var gridGroup = this.svg.elem('g').addClass(options.classNames.gridGroup);\n    var seriesGroup = this.svg.elem('g');\n    var labelGroup = this.svg.elem('g').addClass(options.classNames.labelGroup);\n\n    var chartRect = Chartist.createChartRect(this.svg, options, defaultOptions.padding);\n    var axisX, axisY;\n\n    if(options.axisX.type === undefined) {\n      axisX = new Chartist.StepAxis(Chartist.Axis.units.x, data.normalized.series, chartRect, Chartist.extend({}, options.axisX, {\n        ticks: data.normalized.labels,\n        stretch: options.fullWidth\n      }));\n    } else {\n      axisX = options.axisX.type.call(Chartist, Chartist.Axis.units.x, data.normalized.series, chartRect, options.axisX);\n    }\n\n    if(options.axisY.type === undefined) {\n      axisY = new Chartist.AutoScaleAxis(Chartist.Axis.units.y, data.normalized.series, chartRect, Chartist.extend({}, options.axisY, {\n        high: Chartist.isNumeric(options.high) ? options.high : options.axisY.high,\n        low: Chartist.isNumeric(options.low) ? options.low : options.axisY.low\n      }));\n    } else {\n      axisY = options.axisY.type.call(Chartist, Chartist.Axis.units.y, data.normalized.series, chartRect, options.axisY);\n    }\n\n    axisX.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);\n    axisY.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);\n\n    if (options.showGridBackground) {\n      Chartist.createGridBackground(gridGroup, chartRect, options.classNames.gridBackground, this.eventEmitter);\n    }\n\n    // Draw the series\n    data.raw.series.forEach(function(series, seriesIndex) {\n      var seriesElement = seriesGroup.elem('g');\n\n      // Write attributes to series group element. If series name or meta is undefined the attributes will not be written\n      seriesElement.attr({\n        'ct:series-name': series.name,\n        'ct:meta': Chartist.serialize(series.meta)\n      });\n\n      // Use series class from series data or if not set generate one\n      seriesElement.addClass([\n        options.classNames.series,\n        (series.className || options.classNames.series + '-' + Chartist.alphaNumerate(seriesIndex))\n      ].join(' '));\n\n      var pathCoordinates = [],\n        pathData = [];\n\n      data.normalized.series[seriesIndex].forEach(function(value, valueIndex) {\n        var p = {\n          x: chartRect.x1 + axisX.projectValue(value, valueIndex, data.normalized.series[seriesIndex]),\n          y: chartRect.y1 - axisY.projectValue(value, valueIndex, data.normalized.series[seriesIndex])\n        };\n        pathCoordinates.push(p.x, p.y);\n        pathData.push({\n          value: value,\n          valueIndex: valueIndex,\n          meta: Chartist.getMetaData(series, valueIndex)\n        });\n      }.bind(this));\n\n      var seriesOptions = {\n        lineSmooth: Chartist.getSeriesOption(series, options, 'lineSmooth'),\n        showPoint: Chartist.getSeriesOption(series, options, 'showPoint'),\n        showLine: Chartist.getSeriesOption(series, options, 'showLine'),\n        showArea: Chartist.getSeriesOption(series, options, 'showArea'),\n        areaBase: Chartist.getSeriesOption(series, options, 'areaBase')\n      };\n\n      var smoothing = typeof seriesOptions.lineSmooth === 'function' ?\n        seriesOptions.lineSmooth : (seriesOptions.lineSmooth ? Chartist.Interpolation.monotoneCubic() : Chartist.Interpolation.none());\n      // Interpolating path where pathData will be used to annotate each path element so we can trace back the original\n      // index, value and meta data\n      var path = smoothing(pathCoordinates, pathData);\n\n      // If we should show points we need to create them now to avoid secondary loop\n      // Points are drawn from the pathElements returned by the interpolation function\n      // Small offset for Firefox to render squares correctly\n      if (seriesOptions.showPoint) {\n\n        path.pathElements.forEach(function(pathElement) {\n          var point = seriesElement.elem('line', {\n            x1: pathElement.x,\n            y1: pathElement.y,\n            x2: pathElement.x + 0.01,\n            y2: pathElement.y\n          }, options.classNames.point).attr({\n            'ct:value': [pathElement.data.value.x, pathElement.data.value.y].filter(Chartist.isNumeric).join(','),\n            'ct:meta': Chartist.serialize(pathElement.data.meta)\n          });\n\n          this.eventEmitter.emit('draw', {\n            type: 'point',\n            value: pathElement.data.value,\n            index: pathElement.data.valueIndex,\n            meta: pathElement.data.meta,\n            series: series,\n            seriesIndex: seriesIndex,\n            axisX: axisX,\n            axisY: axisY,\n            group: seriesElement,\n            element: point,\n            x: pathElement.x,\n            y: pathElement.y\n          });\n        }.bind(this));\n      }\n\n      if(seriesOptions.showLine) {\n        var line = seriesElement.elem('path', {\n          d: path.stringify()\n        }, options.classNames.line, true);\n\n        this.eventEmitter.emit('draw', {\n          type: 'line',\n          values: data.normalized.series[seriesIndex],\n          path: path.clone(),\n          chartRect: chartRect,\n          index: seriesIndex,\n          series: series,\n          seriesIndex: seriesIndex,\n          seriesMeta: series.meta,\n          axisX: axisX,\n          axisY: axisY,\n          group: seriesElement,\n          element: line\n        });\n      }\n\n      // Area currently only works with axes that support a range!\n      if(seriesOptions.showArea && axisY.range) {\n        // If areaBase is outside the chart area (< min or > max) we need to set it respectively so that\n        // the area is not drawn outside the chart area.\n        var areaBase = Math.max(Math.min(seriesOptions.areaBase, axisY.range.max), axisY.range.min);\n\n        // We project the areaBase value into screen coordinates\n        var areaBaseProjected = chartRect.y1 - axisY.projectValue(areaBase);\n\n        // In order to form the area we'll first split the path by move commands so we can chunk it up into segments\n        path.splitByCommand('M').filter(function onlySolidSegments(pathSegment) {\n          // We filter only \"solid\" segments that contain more than one point. Otherwise there's no need for an area\n          return pathSegment.pathElements.length > 1;\n        }).map(function convertToArea(solidPathSegments) {\n          // Receiving the filtered solid path segments we can now convert those segments into fill areas\n          var firstElement = solidPathSegments.pathElements[0];\n          var lastElement = solidPathSegments.pathElements[solidPathSegments.pathElements.length - 1];\n\n          // Cloning the solid path segment with closing option and removing the first move command from the clone\n          // We then insert a new move that should start at the area base and draw a straight line up or down\n          // at the end of the path we add an additional straight line to the projected area base value\n          // As the closing option is set our path will be automatically closed\n          return solidPathSegments.clone(true)\n            .position(0)\n            .remove(1)\n            .move(firstElement.x, areaBaseProjected)\n            .line(firstElement.x, firstElement.y)\n            .position(solidPathSegments.pathElements.length + 1)\n            .line(lastElement.x, areaBaseProjected);\n\n        }).forEach(function createArea(areaPath) {\n          // For each of our newly created area paths, we'll now create path elements by stringifying our path objects\n          // and adding the created DOM elements to the correct series group\n          var area = seriesElement.elem('path', {\n            d: areaPath.stringify()\n          }, options.classNames.area, true);\n\n          // Emit an event for each area that was drawn\n          this.eventEmitter.emit('draw', {\n            type: 'area',\n            values: data.normalized.series[seriesIndex],\n            path: areaPath.clone(),\n            series: series,\n            seriesIndex: seriesIndex,\n            axisX: axisX,\n            axisY: axisY,\n            chartRect: chartRect,\n            index: seriesIndex,\n            group: seriesElement,\n            element: area\n          });\n        }.bind(this));\n      }\n    }.bind(this));\n\n    this.eventEmitter.emit('created', {\n      bounds: axisY.bounds,\n      chartRect: chartRect,\n      axisX: axisX,\n      axisY: axisY,\n      svg: this.svg,\n      options: options\n    });\n  }\n\n  /**\n   * This method creates a new line chart.\n   *\n   * @memberof Chartist.Line\n   * @param {String|Node} query A selector query string or directly a DOM element\n   * @param {Object} data The data object that needs to consist of a labels and a series array\n   * @param {Object} [options] The options object with options that override the default options. Check the examples for a detailed list.\n   * @param {Array} [responsiveOptions] Specify an array of responsive option arrays which are a media query and options object pair => [[mediaQueryString, optionsObject],[more...]]\n   * @return {Object} An object which exposes the API for the created chart\n   *\n   * @example\n   * // Create a simple line chart\n   * var data = {\n   *   // A labels array that can contain any sort of values\n   *   labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri'],\n   *   // Our series array that contains series objects or in this case series data arrays\n   *   series: [\n   *     [5, 2, 4, 2, 0]\n   *   ]\n   * };\n   *\n   * // As options we currently only set a static size of 300x200 px\n   * var options = {\n   *   width: '300px',\n   *   height: '200px'\n   * };\n   *\n   * // In the global name space Chartist we call the Line function to initialize a line chart. As a first parameter we pass in a selector where we would like to get our chart created. Second parameter is the actual data object and as a third parameter we pass in our options\n   * new Chartist.Line('.ct-chart', data, options);\n   *\n   * @example\n   * // Use specific interpolation function with configuration from the Chartist.Interpolation module\n   *\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [\n   *     [1, 1, 8, 1, 7]\n   *   ]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.cardinal({\n   *     tension: 0.2\n   *   })\n   * });\n   *\n   * @example\n   * // Create a line chart with responsive options\n   *\n   * var data = {\n   *   // A labels array that can contain any sort of values\n   *   labels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'],\n   *   // Our series array that contains series objects or in this case series data arrays\n   *   series: [\n   *     [5, 2, 4, 2, 0]\n   *   ]\n   * };\n   *\n   * // In addition to the regular options we specify responsive option overrides that will override the default configutation based on the matching media queries.\n   * var responsiveOptions = [\n   *   ['screen and (min-width: 641px) and (max-width: 1024px)', {\n   *     showPoint: false,\n   *     axisX: {\n   *       labelInterpolationFnc: function(value) {\n   *         // Will return Mon, Tue, Wed etc. on medium screens\n   *         return value.slice(0, 3);\n   *       }\n   *     }\n   *   }],\n   *   ['screen and (max-width: 640px)', {\n   *     showLine: false,\n   *     axisX: {\n   *       labelInterpolationFnc: function(value) {\n   *         // Will return M, T, W etc. on small screens\n   *         return value[0];\n   *       }\n   *     }\n   *   }]\n   * ];\n   *\n   * new Chartist.Line('.ct-chart', data, null, responsiveOptions);\n   *\n   */\n  function Line(query, data, options, responsiveOptions) {\n    Chartist.Line.super.constructor.call(this,\n      query,\n      data,\n      defaultOptions,\n      Chartist.extend({}, defaultOptions, options),\n      responsiveOptions);\n  }\n\n  // Creating line chart type in Chartist namespace\n  Chartist.Line = Chartist.Base.extend({\n    constructor: Line,\n    createChart: createChart\n  });\n\n}(this || global, Chartist));\n;/**\n * The bar chart module of Chartist that can be used to draw unipolar or bipolar bar and grouped bar charts.\n *\n * @module Chartist.Bar\n */\n/* global Chartist */\n(function(globalRoot, Chartist){\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  /**\n   * Default options in bar charts. Expand the code view to see a detailed list of options with comments.\n   *\n   * @memberof Chartist.Bar\n   */\n  var defaultOptions = {\n    // Options for X-Axis\n    axisX: {\n      // The offset of the chart drawing area to the border of the container\n      offset: 30,\n      // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n      position: 'end',\n      // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n      labelOffset: {\n        x: 0,\n        y: 0\n      },\n      // If labels should be shown or not\n      showLabel: true,\n      // If the axis grid should be drawn or not\n      showGrid: true,\n      // Interpolation function that allows you to intercept the value from the axis label\n      labelInterpolationFnc: Chartist.noop,\n      // This value specifies the minimum width in pixel of the scale steps\n      scaleMinSpace: 30,\n      // Use only integer values (whole numbers) for the scale steps\n      onlyInteger: false\n    },\n    // Options for Y-Axis\n    axisY: {\n      // The offset of the chart drawing area to the border of the container\n      offset: 40,\n      // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n      position: 'start',\n      // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n      labelOffset: {\n        x: 0,\n        y: 0\n      },\n      // If labels should be shown or not\n      showLabel: true,\n      // If the axis grid should be drawn or not\n      showGrid: true,\n      // Interpolation function that allows you to intercept the value from the axis label\n      labelInterpolationFnc: Chartist.noop,\n      // This value specifies the minimum height in pixel of the scale steps\n      scaleMinSpace: 20,\n      // Use only integer values (whole numbers) for the scale steps\n      onlyInteger: false\n    },\n    // Specify a fixed width for the chart as a string (i.e. '100px' or '50%')\n    width: undefined,\n    // Specify a fixed height for the chart as a string (i.e. '100px' or '50%')\n    height: undefined,\n    // Overriding the natural high of the chart allows you to zoom in or limit the charts highest displayed value\n    high: undefined,\n    // Overriding the natural low of the chart allows you to zoom in or limit the charts lowest displayed value\n    low: undefined,\n    // Unless low/high are explicitly set, bar chart will be centered at zero by default. Set referenceValue to null to auto scale.\n    referenceValue: 0,\n    // Padding of the chart drawing area to the container element and labels as a number or padding object {top: 5, right: 5, bottom: 5, left: 5}\n    chartPadding: {\n      top: 15,\n      right: 15,\n      bottom: 5,\n      left: 10\n    },\n    // Specify the distance in pixel of bars in a group\n    seriesBarDistance: 15,\n    // If set to true this property will cause the series bars to be stacked. Check the `stackMode` option for further stacking options.\n    stackBars: false,\n    // If set to 'overlap' this property will force the stacked bars to draw from the zero line.\n    // If set to 'accumulate' this property will form a total for each series point. This will also influence the y-axis and the overall bounds of the chart. In stacked mode the seriesBarDistance property will have no effect.\n    stackMode: 'accumulate',\n    // Inverts the axes of the bar chart in order to draw a horizontal bar chart. Be aware that you also need to invert your axis settings as the Y Axis will now display the labels and the X Axis the values.\n    horizontalBars: false,\n    // If set to true then each bar will represent a series and the data array is expected to be a one dimensional array of data values rather than a series array of series. This is useful if the bar chart should represent a profile rather than some data over time.\n    distributeSeries: false,\n    // If true the whole data is reversed including labels, the series order as well as the whole series data arrays.\n    reverseData: false,\n    // If the bar chart should add a background fill to the .ct-grids group.\n    showGridBackground: false,\n    // Override the class names that get used to generate the SVG structure of the chart\n    classNames: {\n      chart: 'ct-chart-bar',\n      horizontalBars: 'ct-horizontal-bars',\n      label: 'ct-label',\n      labelGroup: 'ct-labels',\n      series: 'ct-series',\n      bar: 'ct-bar',\n      grid: 'ct-grid',\n      gridGroup: 'ct-grids',\n      gridBackground: 'ct-grid-background',\n      vertical: 'ct-vertical',\n      horizontal: 'ct-horizontal',\n      start: 'ct-start',\n      end: 'ct-end'\n    }\n  };\n\n  /**\n   * Creates a new chart\n   *\n   */\n  function createChart(options) {\n    var data;\n    var highLow;\n\n    if(options.distributeSeries) {\n      data = Chartist.normalizeData(this.data, options.reverseData, options.horizontalBars ? 'x' : 'y');\n      data.normalized.series = data.normalized.series.map(function(value) {\n        return [value];\n      });\n    } else {\n      data = Chartist.normalizeData(this.data, options.reverseData, options.horizontalBars ? 'x' : 'y');\n    }\n\n    // Create new svg element\n    this.svg = Chartist.createSvg(\n      this.container,\n      options.width,\n      options.height,\n      options.classNames.chart + (options.horizontalBars ? ' ' + options.classNames.horizontalBars : '')\n    );\n\n    // Drawing groups in correct order\n    var gridGroup = this.svg.elem('g').addClass(options.classNames.gridGroup);\n    var seriesGroup = this.svg.elem('g');\n    var labelGroup = this.svg.elem('g').addClass(options.classNames.labelGroup);\n\n    if(options.stackBars && data.normalized.series.length !== 0) {\n\n      // If stacked bars we need to calculate the high low from stacked values from each series\n      var serialSums = Chartist.serialMap(data.normalized.series, function serialSums() {\n        return Array.prototype.slice.call(arguments).map(function(value) {\n          return value;\n        }).reduce(function(prev, curr) {\n          return {\n            x: prev.x + (curr && curr.x) || 0,\n            y: prev.y + (curr && curr.y) || 0\n          };\n        }, {x: 0, y: 0});\n      });\n\n      highLow = Chartist.getHighLow([serialSums], options, options.horizontalBars ? 'x' : 'y');\n\n    } else {\n\n      highLow = Chartist.getHighLow(data.normalized.series, options, options.horizontalBars ? 'x' : 'y');\n    }\n\n    // Overrides of high / low from settings\n    highLow.high = +options.high || (options.high === 0 ? 0 : highLow.high);\n    highLow.low = +options.low || (options.low === 0 ? 0 : highLow.low);\n\n    var chartRect = Chartist.createChartRect(this.svg, options, defaultOptions.padding);\n\n    var valueAxis,\n      labelAxisTicks,\n      labelAxis,\n      axisX,\n      axisY;\n\n    // We need to set step count based on some options combinations\n    if(options.distributeSeries && options.stackBars) {\n      // If distributed series are enabled and bars need to be stacked, we'll only have one bar and therefore should\n      // use only the first label for the step axis\n      labelAxisTicks = data.normalized.labels.slice(0, 1);\n    } else {\n      // If distributed series are enabled but stacked bars aren't, we should use the series labels\n      // If we are drawing a regular bar chart with two dimensional series data, we just use the labels array\n      // as the bars are normalized\n      labelAxisTicks = data.normalized.labels;\n    }\n\n    // Set labelAxis and valueAxis based on the horizontalBars setting. This setting will flip the axes if necessary.\n    if(options.horizontalBars) {\n      if(options.axisX.type === undefined) {\n        valueAxis = axisX = new Chartist.AutoScaleAxis(Chartist.Axis.units.x, data.normalized.series, chartRect, Chartist.extend({}, options.axisX, {\n          highLow: highLow,\n          referenceValue: 0\n        }));\n      } else {\n        valueAxis = axisX = options.axisX.type.call(Chartist, Chartist.Axis.units.x, data.normalized.series, chartRect, Chartist.extend({}, options.axisX, {\n          highLow: highLow,\n          referenceValue: 0\n        }));\n      }\n\n      if(options.axisY.type === undefined) {\n        labelAxis = axisY = new Chartist.StepAxis(Chartist.Axis.units.y, data.normalized.series, chartRect, {\n          ticks: labelAxisTicks\n        });\n      } else {\n        labelAxis = axisY = options.axisY.type.call(Chartist, Chartist.Axis.units.y, data.normalized.series, chartRect, options.axisY);\n      }\n    } else {\n      if(options.axisX.type === undefined) {\n        labelAxis = axisX = new Chartist.StepAxis(Chartist.Axis.units.x, data.normalized.series, chartRect, {\n          ticks: labelAxisTicks\n        });\n      } else {\n        labelAxis = axisX = options.axisX.type.call(Chartist, Chartist.Axis.units.x, data.normalized.series, chartRect, options.axisX);\n      }\n\n      if(options.axisY.type === undefined) {\n        valueAxis = axisY = new Chartist.AutoScaleAxis(Chartist.Axis.units.y, data.normalized.series, chartRect, Chartist.extend({}, options.axisY, {\n          highLow: highLow,\n          referenceValue: 0\n        }));\n      } else {\n        valueAxis = axisY = options.axisY.type.call(Chartist, Chartist.Axis.units.y, data.normalized.series, chartRect, Chartist.extend({}, options.axisY, {\n          highLow: highLow,\n          referenceValue: 0\n        }));\n      }\n    }\n\n    // Projected 0 point\n    var zeroPoint = options.horizontalBars ? (chartRect.x1 + valueAxis.projectValue(0)) : (chartRect.y1 - valueAxis.projectValue(0));\n    // Used to track the screen coordinates of stacked bars\n    var stackedBarValues = [];\n\n    labelAxis.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);\n    valueAxis.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);\n\n    if (options.showGridBackground) {\n      Chartist.createGridBackground(gridGroup, chartRect, options.classNames.gridBackground, this.eventEmitter);\n    }\n\n    // Draw the series\n    data.raw.series.forEach(function(series, seriesIndex) {\n      // Calculating bi-polar value of index for seriesOffset. For i = 0..4 biPol will be -1.5, -0.5, 0.5, 1.5 etc.\n      var biPol = seriesIndex - (data.raw.series.length - 1) / 2;\n      // Half of the period width between vertical grid lines used to position bars\n      var periodHalfLength;\n      // Current series SVG element\n      var seriesElement;\n\n      // We need to set periodHalfLength based on some options combinations\n      if(options.distributeSeries && !options.stackBars) {\n        // If distributed series are enabled but stacked bars aren't, we need to use the length of the normaizedData array\n        // which is the series count and divide by 2\n        periodHalfLength = labelAxis.axisLength / data.normalized.series.length / 2;\n      } else if(options.distributeSeries && options.stackBars) {\n        // If distributed series and stacked bars are enabled we'll only get one bar so we should just divide the axis\n        // length by 2\n        periodHalfLength = labelAxis.axisLength / 2;\n      } else {\n        // On regular bar charts we should just use the series length\n        periodHalfLength = labelAxis.axisLength / data.normalized.series[seriesIndex].length / 2;\n      }\n\n      // Adding the series group to the series element\n      seriesElement = seriesGroup.elem('g');\n\n      // Write attributes to series group element. If series name or meta is undefined the attributes will not be written\n      seriesElement.attr({\n        'ct:series-name': series.name,\n        'ct:meta': Chartist.serialize(series.meta)\n      });\n\n      // Use series class from series data or if not set generate one\n      seriesElement.addClass([\n        options.classNames.series,\n        (series.className || options.classNames.series + '-' + Chartist.alphaNumerate(seriesIndex))\n      ].join(' '));\n\n      data.normalized.series[seriesIndex].forEach(function(value, valueIndex) {\n        var projected,\n          bar,\n          previousStack,\n          labelAxisValueIndex;\n\n        // We need to set labelAxisValueIndex based on some options combinations\n        if(options.distributeSeries && !options.stackBars) {\n          // If distributed series are enabled but stacked bars aren't, we can use the seriesIndex for later projection\n          // on the step axis for label positioning\n          labelAxisValueIndex = seriesIndex;\n        } else if(options.distributeSeries && options.stackBars) {\n          // If distributed series and stacked bars are enabled, we will only get one bar and therefore always use\n          // 0 for projection on the label step axis\n          labelAxisValueIndex = 0;\n        } else {\n          // On regular bar charts we just use the value index to project on the label step axis\n          labelAxisValueIndex = valueIndex;\n        }\n\n        // We need to transform coordinates differently based on the chart layout\n        if(options.horizontalBars) {\n          projected = {\n            x: chartRect.x1 + valueAxis.projectValue(value && value.x ? value.x : 0, valueIndex, data.normalized.series[seriesIndex]),\n            y: chartRect.y1 - labelAxis.projectValue(value && value.y ? value.y : 0, labelAxisValueIndex, data.normalized.series[seriesIndex])\n          };\n        } else {\n          projected = {\n            x: chartRect.x1 + labelAxis.projectValue(value && value.x ? value.x : 0, labelAxisValueIndex, data.normalized.series[seriesIndex]),\n            y: chartRect.y1 - valueAxis.projectValue(value && value.y ? value.y : 0, valueIndex, data.normalized.series[seriesIndex])\n          }\n        }\n\n        // If the label axis is a step based axis we will offset the bar into the middle of between two steps using\n        // the periodHalfLength value. Also we do arrange the different series so that they align up to each other using\n        // the seriesBarDistance. If we don't have a step axis, the bar positions can be chosen freely so we should not\n        // add any automated positioning.\n        if(labelAxis instanceof Chartist.StepAxis) {\n          // Offset to center bar between grid lines, but only if the step axis is not stretched\n          if(!labelAxis.options.stretch) {\n            projected[labelAxis.units.pos] += periodHalfLength * (options.horizontalBars ? -1 : 1);\n          }\n          // Using bi-polar offset for multiple series if no stacked bars or series distribution is used\n          projected[labelAxis.units.pos] += (options.stackBars || options.distributeSeries) ? 0 : biPol * options.seriesBarDistance * (options.horizontalBars ? -1 : 1);\n        }\n\n        // Enter value in stacked bar values used to remember previous screen value for stacking up bars\n        previousStack = stackedBarValues[valueIndex] || zeroPoint;\n        stackedBarValues[valueIndex] = previousStack - (zeroPoint - projected[labelAxis.counterUnits.pos]);\n\n        // Skip if value is undefined\n        if(value === undefined) {\n          return;\n        }\n\n        var positions = {};\n        positions[labelAxis.units.pos + '1'] = projected[labelAxis.units.pos];\n        positions[labelAxis.units.pos + '2'] = projected[labelAxis.units.pos];\n\n        if(options.stackBars && (options.stackMode === 'accumulate' || !options.stackMode)) {\n          // Stack mode: accumulate (default)\n          // If bars are stacked we use the stackedBarValues reference and otherwise base all bars off the zero line\n          // We want backwards compatibility, so the expected fallback without the 'stackMode' option\n          // to be the original behaviour (accumulate)\n          positions[labelAxis.counterUnits.pos + '1'] = previousStack;\n          positions[labelAxis.counterUnits.pos + '2'] = stackedBarValues[valueIndex];\n        } else {\n          // Draw from the zero line normally\n          // This is also the same code for Stack mode: overlap\n          positions[labelAxis.counterUnits.pos + '1'] = zeroPoint;\n          positions[labelAxis.counterUnits.pos + '2'] = projected[labelAxis.counterUnits.pos];\n        }\n\n        // Limit x and y so that they are within the chart rect\n        positions.x1 = Math.min(Math.max(positions.x1, chartRect.x1), chartRect.x2);\n        positions.x2 = Math.min(Math.max(positions.x2, chartRect.x1), chartRect.x2);\n        positions.y1 = Math.min(Math.max(positions.y1, chartRect.y2), chartRect.y1);\n        positions.y2 = Math.min(Math.max(positions.y2, chartRect.y2), chartRect.y1);\n\n        var metaData = Chartist.getMetaData(series, valueIndex);\n\n        // Create bar element\n        bar = seriesElement.elem('line', positions, options.classNames.bar).attr({\n          'ct:value': [value.x, value.y].filter(Chartist.isNumeric).join(','),\n          'ct:meta': Chartist.serialize(metaData)\n        });\n\n        this.eventEmitter.emit('draw', Chartist.extend({\n          type: 'bar',\n          value: value,\n          index: valueIndex,\n          meta: metaData,\n          series: series,\n          seriesIndex: seriesIndex,\n          axisX: axisX,\n          axisY: axisY,\n          chartRect: chartRect,\n          group: seriesElement,\n          element: bar\n        }, positions));\n      }.bind(this));\n    }.bind(this));\n\n    this.eventEmitter.emit('created', {\n      bounds: valueAxis.bounds,\n      chartRect: chartRect,\n      axisX: axisX,\n      axisY: axisY,\n      svg: this.svg,\n      options: options\n    });\n  }\n\n  /**\n   * This method creates a new bar chart and returns API object that you can use for later changes.\n   *\n   * @memberof Chartist.Bar\n   * @param {String|Node} query A selector query string or directly a DOM element\n   * @param {Object} data The data object that needs to consist of a labels and a series array\n   * @param {Object} [options] The options object with options that override the default options. Check the examples for a detailed list.\n   * @param {Array} [responsiveOptions] Specify an array of responsive option arrays which are a media query and options object pair => [[mediaQueryString, optionsObject],[more...]]\n   * @return {Object} An object which exposes the API for the created chart\n   *\n   * @example\n   * // Create a simple bar chart\n   * var data = {\n   *   labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri'],\n   *   series: [\n   *     [5, 2, 4, 2, 0]\n   *   ]\n   * };\n   *\n   * // In the global name space Chartist we call the Bar function to initialize a bar chart. As a first parameter we pass in a selector where we would like to get our chart created and as a second parameter we pass our data object.\n   * new Chartist.Bar('.ct-chart', data);\n   *\n   * @example\n   * // This example creates a bipolar grouped bar chart where the boundaries are limitted to -10 and 10\n   * new Chartist.Bar('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5, 6, 7],\n   *   series: [\n   *     [1, 3, 2, -5, -3, 1, -6],\n   *     [-5, -2, -4, -1, 2, -3, 1]\n   *   ]\n   * }, {\n   *   seriesBarDistance: 12,\n   *   low: -10,\n   *   high: 10\n   * });\n   *\n   */\n  function Bar(query, data, options, responsiveOptions) {\n    Chartist.Bar.super.constructor.call(this,\n      query,\n      data,\n      defaultOptions,\n      Chartist.extend({}, defaultOptions, options),\n      responsiveOptions);\n  }\n\n  // Creating bar chart type in Chartist namespace\n  Chartist.Bar = Chartist.Base.extend({\n    constructor: Bar,\n    createChart: createChart\n  });\n\n}(this || global, Chartist));\n;/**\n * The pie chart module of Chartist that can be used to draw pie, donut or gauge charts\n *\n * @module Chartist.Pie\n */\n/* global Chartist */\n(function(globalRoot, Chartist) {\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  /**\n   * Default options in line charts. Expand the code view to see a detailed list of options with comments.\n   *\n   * @memberof Chartist.Pie\n   */\n  var defaultOptions = {\n    // Specify a fixed width for the chart as a string (i.e. '100px' or '50%')\n    width: undefined,\n    // Specify a fixed height for the chart as a string (i.e. '100px' or '50%')\n    height: undefined,\n    // Padding of the chart drawing area to the container element and labels as a number or padding object {top: 5, right: 5, bottom: 5, left: 5}\n    chartPadding: 5,\n    // Override the class names that are used to generate the SVG structure of the chart\n    classNames: {\n      chartPie: 'ct-chart-pie',\n      chartDonut: 'ct-chart-donut',\n      series: 'ct-series',\n      slicePie: 'ct-slice-pie',\n      sliceDonut: 'ct-slice-donut',\n      sliceDonutSolid: 'ct-slice-donut-solid',\n      label: 'ct-label'\n    },\n    // The start angle of the pie chart in degrees where 0 points north. A higher value offsets the start angle clockwise.\n    startAngle: 0,\n    // An optional total you can specify. By specifying a total value, the sum of the values in the series must be this total in order to draw a full pie. You can use this parameter to draw only parts of a pie or gauge charts.\n    total: undefined,\n    // If specified the donut CSS classes will be used and strokes will be drawn instead of pie slices.\n    donut: false,\n    // If specified the donut segments will be drawn as shapes instead of strokes.\n    donutSolid: false,\n    // Specify the donut stroke width, currently done in javascript for convenience. May move to CSS styles in the future.\n    // This option can be set as number or string to specify a relative width (i.e. 100 or '30%').\n    donutWidth: 60,\n    // If a label should be shown or not\n    showLabel: true,\n    // Label position offset from the standard position which is half distance of the radius. This value can be either positive or negative. Positive values will position the label away from the center.\n    labelOffset: 0,\n    // This option can be set to 'inside', 'outside' or 'center'. Positioned with 'inside' the labels will be placed on half the distance of the radius to the border of the Pie by respecting the 'labelOffset'. The 'outside' option will place the labels at the border of the pie and 'center' will place the labels in the absolute center point of the chart. The 'center' option only makes sense in conjunction with the 'labelOffset' option.\n    labelPosition: 'inside',\n    // An interpolation function for the label value\n    labelInterpolationFnc: Chartist.noop,\n    // Label direction can be 'neutral', 'explode' or 'implode'. The labels anchor will be positioned based on those settings as well as the fact if the labels are on the right or left side of the center of the chart. Usually explode is useful when labels are positioned far away from the center.\n    labelDirection: 'neutral',\n    // If true the whole data is reversed including labels, the series order as well as the whole series data arrays.\n    reverseData: false,\n    // If true empty values will be ignored to avoid drawing unncessary slices and labels\n    ignoreEmptyValues: false\n  };\n\n  /**\n   * Determines SVG anchor position based on direction and center parameter\n   *\n   * @param center\n   * @param label\n   * @param direction\n   * @return {string}\n   */\n  function determineAnchorPosition(center, label, direction) {\n    var toTheRight = label.x > center.x;\n\n    if(toTheRight && direction === 'explode' ||\n      !toTheRight && direction === 'implode') {\n      return 'start';\n    } else if(toTheRight && direction === 'implode' ||\n      !toTheRight && direction === 'explode') {\n      return 'end';\n    } else {\n      return 'middle';\n    }\n  }\n\n  /**\n   * Creates the pie chart\n   *\n   * @param options\n   */\n  function createChart(options) {\n    var data = Chartist.normalizeData(this.data);\n    var seriesGroups = [],\n      labelsGroup,\n      chartRect,\n      radius,\n      labelRadius,\n      totalDataSum,\n      startAngle = options.startAngle;\n\n    // Create SVG.js draw\n    this.svg = Chartist.createSvg(this.container, options.width, options.height,options.donut ? options.classNames.chartDonut : options.classNames.chartPie);\n    // Calculate charting rect\n    chartRect = Chartist.createChartRect(this.svg, options, defaultOptions.padding);\n    // Get biggest circle radius possible within chartRect\n    radius = Math.min(chartRect.width() / 2, chartRect.height() / 2);\n    // Calculate total of all series to get reference value or use total reference from optional options\n    totalDataSum = options.total || data.normalized.series.reduce(function(previousValue, currentValue) {\n      return previousValue + currentValue;\n    }, 0);\n\n    var donutWidth = Chartist.quantity(options.donutWidth);\n    if (donutWidth.unit === '%') {\n      donutWidth.value *= radius / 100;\n    }\n\n    // If this is a donut chart we need to adjust our radius to enable strokes to be drawn inside\n    // Unfortunately this is not possible with the current SVG Spec\n    // See this proposal for more details: http://lists.w3.org/Archives/Public/www-svg/2003Oct/0000.html\n    radius -= options.donut && !options.donutSolid ? donutWidth.value / 2  : 0;\n\n    // If labelPosition is set to `outside` or a donut chart is drawn then the label position is at the radius,\n    // if regular pie chart it's half of the radius\n    if(options.labelPosition === 'outside' || options.donut && !options.donutSolid) {\n      labelRadius = radius;\n    } else if(options.labelPosition === 'center') {\n      // If labelPosition is center we start with 0 and will later wait for the labelOffset\n      labelRadius = 0;\n    } else if(options.donutSolid) {\n      labelRadius = radius - donutWidth.value / 2;\n    } else {\n      // Default option is 'inside' where we use half the radius so the label will be placed in the center of the pie\n      // slice\n      labelRadius = radius / 2;\n    }\n    // Add the offset to the labelRadius where a negative offset means closed to the center of the chart\n    labelRadius += options.labelOffset;\n\n    // Calculate end angle based on total sum and current data value and offset with padding\n    var center = {\n      x: chartRect.x1 + chartRect.width() / 2,\n      y: chartRect.y2 + chartRect.height() / 2\n    };\n\n    // Check if there is only one non-zero value in the series array.\n    var hasSingleValInSeries = data.raw.series.filter(function(val) {\n      return val.hasOwnProperty('value') ? val.value !== 0 : val !== 0;\n    }).length === 1;\n\n    // Creating the series groups\n    data.raw.series.forEach(function(series, index) {\n      seriesGroups[index] = this.svg.elem('g', null, null);\n    }.bind(this));\n    //if we need to show labels we create the label group now\n    if(options.showLabel) {\n      labelsGroup = this.svg.elem('g', null, null);\n    }\n\n    // Draw the series\n    // initialize series groups\n    data.raw.series.forEach(function(series, index) {\n      // If current value is zero and we are ignoring empty values then skip to next value\n      if (data.normalized.series[index] === 0 && options.ignoreEmptyValues) return;\n\n      // If the series is an object and contains a name or meta data we add a custom attribute\n      seriesGroups[index].attr({\n        'ct:series-name': series.name\n      });\n\n      // Use series class from series data or if not set generate one\n      seriesGroups[index].addClass([\n        options.classNames.series,\n        (series.className || options.classNames.series + '-' + Chartist.alphaNumerate(index))\n      ].join(' '));\n\n      // If the whole dataset is 0 endAngle should be zero. Can't divide by 0.\n      var endAngle = (totalDataSum > 0 ? startAngle + data.normalized.series[index] / totalDataSum * 360 : 0);\n\n      // Use slight offset so there are no transparent hairline issues\n      var overlappigStartAngle = Math.max(0, startAngle - (index === 0 || hasSingleValInSeries ? 0 : 0.2));\n\n      // If we need to draw the arc for all 360 degrees we need to add a hack where we close the circle\n      // with Z and use 359.99 degrees\n      if(endAngle - overlappigStartAngle >= 359.99) {\n        endAngle = overlappigStartAngle + 359.99;\n      }\n\n      var start = Chartist.polarToCartesian(center.x, center.y, radius, overlappigStartAngle),\n        end = Chartist.polarToCartesian(center.x, center.y, radius, endAngle);\n\n      var innerStart,\n        innerEnd,\n        donutSolidRadius;\n\n      // Create a new path element for the pie chart. If this isn't a donut chart we should close the path for a correct stroke\n      var path = new Chartist.Svg.Path(!options.donut || options.donutSolid)\n        .move(end.x, end.y)\n        .arc(radius, radius, 0, endAngle - startAngle > 180, 0, start.x, start.y);\n\n      // If regular pie chart (no donut) we add a line to the center of the circle for completing the pie\n      if(!options.donut) {\n        path.line(center.x, center.y);\n      } else if (options.donutSolid) {\n        donutSolidRadius = radius - donutWidth.value;\n        innerStart = Chartist.polarToCartesian(center.x, center.y, donutSolidRadius, startAngle - (index === 0 || hasSingleValInSeries ? 0 : 0.2));\n        innerEnd = Chartist.polarToCartesian(center.x, center.y, donutSolidRadius, endAngle);\n        path.line(innerStart.x, innerStart.y);\n        path.arc(donutSolidRadius, donutSolidRadius, 0, endAngle - startAngle  > 180, 1, innerEnd.x, innerEnd.y);\n      }\n\n      // Create the SVG path\n      // If this is a donut chart we add the donut class, otherwise just a regular slice\n      var pathClassName = options.classNames.slicePie;\n      if (options.donut) {\n        pathClassName = options.classNames.sliceDonut;\n        if (options.donutSolid) {\n          pathClassName = options.classNames.sliceDonutSolid;\n        }\n      }\n      var pathElement = seriesGroups[index].elem('path', {\n        d: path.stringify()\n      }, pathClassName);\n\n      // Adding the pie series value to the path\n      pathElement.attr({\n        'ct:value': data.normalized.series[index],\n        'ct:meta': Chartist.serialize(series.meta)\n      });\n\n      // If this is a donut, we add the stroke-width as style attribute\n      if(options.donut && !options.donutSolid) {\n        pathElement._node.style.strokeWidth = donutWidth.value + 'px';\n      }\n\n      // Fire off draw event\n      this.eventEmitter.emit('draw', {\n        type: 'slice',\n        value: data.normalized.series[index],\n        totalDataSum: totalDataSum,\n        index: index,\n        meta: series.meta,\n        series: series,\n        group: seriesGroups[index],\n        element: pathElement,\n        path: path.clone(),\n        center: center,\n        radius: radius,\n        startAngle: startAngle,\n        endAngle: endAngle\n      });\n\n      // If we need to show labels we need to add the label for this slice now\n      if(options.showLabel) {\n        var labelPosition;\n        if(data.raw.series.length === 1) {\n          // If we have only 1 series, we can position the label in the center of the pie\n          labelPosition = {\n            x: center.x,\n            y: center.y\n          };\n        } else {\n          // Position at the labelRadius distance from center and between start and end angle\n          labelPosition = Chartist.polarToCartesian(\n            center.x,\n            center.y,\n            labelRadius,\n            startAngle + (endAngle - startAngle) / 2\n          );\n        }\n\n        var rawValue;\n        if(data.normalized.labels && !Chartist.isFalseyButZero(data.normalized.labels[index])) {\n          rawValue = data.normalized.labels[index];\n        } else {\n          rawValue = data.normalized.series[index];\n        }\n\n        var interpolatedValue = options.labelInterpolationFnc(rawValue, index);\n\n        if(interpolatedValue || interpolatedValue === 0) {\n          var labelElement = labelsGroup.elem('text', {\n            dx: labelPosition.x,\n            dy: labelPosition.y,\n            'text-anchor': determineAnchorPosition(center, labelPosition, options.labelDirection)\n          }, options.classNames.label).text('' + interpolatedValue);\n\n          // Fire off draw event\n          this.eventEmitter.emit('draw', {\n            type: 'label',\n            index: index,\n            group: labelsGroup,\n            element: labelElement,\n            text: '' + interpolatedValue,\n            x: labelPosition.x,\n            y: labelPosition.y\n          });\n        }\n      }\n\n      // Set next startAngle to current endAngle.\n      // (except for last slice)\n      startAngle = endAngle;\n    }.bind(this));\n\n    this.eventEmitter.emit('created', {\n      chartRect: chartRect,\n      svg: this.svg,\n      options: options\n    });\n  }\n\n  /**\n   * This method creates a new pie chart and returns an object that can be used to redraw the chart.\n   *\n   * @memberof Chartist.Pie\n   * @param {String|Node} query A selector query string or directly a DOM element\n   * @param {Object} data The data object in the pie chart needs to have a series property with a one dimensional data array. The values will be normalized against each other and don't necessarily need to be in percentage. The series property can also be an array of value objects that contain a value property and a className property to override the CSS class name for the series group.\n   * @param {Object} [options] The options object with options that override the default options. Check the examples for a detailed list.\n   * @param {Array} [responsiveOptions] Specify an array of responsive option arrays which are a media query and options object pair => [[mediaQueryString, optionsObject],[more...]]\n   * @return {Object} An object with a version and an update method to manually redraw the chart\n   *\n   * @example\n   * // Simple pie chart example with four series\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [10, 2, 4, 3]\n   * });\n   *\n   * @example\n   * // Drawing a donut chart\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [10, 2, 4, 3]\n   * }, {\n   *   donut: true\n   * });\n   *\n   * @example\n   * // Using donut, startAngle and total to draw a gauge chart\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [20, 10, 30, 40]\n   * }, {\n   *   donut: true,\n   *   donutWidth: 20,\n   *   startAngle: 270,\n   *   total: 200\n   * });\n   *\n   * @example\n   * // Drawing a pie chart with padding and labels that are outside the pie\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [20, 10, 30, 40]\n   * }, {\n   *   chartPadding: 30,\n   *   labelOffset: 50,\n   *   labelDirection: 'explode'\n   * });\n   *\n   * @example\n   * // Overriding the class names for individual series as well as a name and meta data.\n   * // The name will be written as ct:series-name attribute and the meta data will be serialized and written\n   * // to a ct:meta attribute.\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [{\n   *     value: 20,\n   *     name: 'Series 1',\n   *     className: 'my-custom-class-one',\n   *     meta: 'Meta One'\n   *   }, {\n   *     value: 10,\n   *     name: 'Series 2',\n   *     className: 'my-custom-class-two',\n   *     meta: 'Meta Two'\n   *   }, {\n   *     value: 70,\n   *     name: 'Series 3',\n   *     className: 'my-custom-class-three',\n   *     meta: 'Meta Three'\n   *   }]\n   * });\n   */\n  function Pie(query, data, options, responsiveOptions) {\n    Chartist.Pie.super.constructor.call(this,\n      query,\n      data,\n      defaultOptions,\n      Chartist.extend({}, defaultOptions, options),\n      responsiveOptions);\n  }\n\n  // Creating pie chart type in Chartist namespace\n  Chartist.Pie = Chartist.Base.extend({\n    constructor: Pie,\n    createChart: createChart,\n    determineAnchorPosition: determineAnchorPosition\n  });\n\n}(this || global, Chartist));\n\nreturn Chartist;\n\n}));\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","import { Subscriber } from '../Subscriber';\nexport function refCount() {\n    return function refCountOperatorFunction(source) {\n        return source.lift(new RefCountOperator(source));\n    };\n}\nclass RefCountOperator {\n    constructor(connectable) {\n        this.connectable = connectable;\n    }\n    call(subscriber, source) {\n        const { connectable } = this;\n        connectable._refCount++;\n        const refCounter = new RefCountSubscriber(subscriber, connectable);\n        const subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    }\n}\nclass RefCountSubscriber extends Subscriber {\n    constructor(destination, connectable) {\n        super(destination);\n        this.connectable = connectable;\n    }\n    _unsubscribe() {\n        const { connectable } = this;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        const refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        const { connection } = this;\n        const sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    }\n}\n//# sourceMappingURL=refCount.js.map","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { map } from '../operators/map';\nconst toString = (() => Object.prototype.toString)();\nexport function fromEvent(target, eventName, options, resultSelector) {\n    if (isFunction(options)) {\n        resultSelector = options;\n        options = undefined;\n    }\n    if (resultSelector) {\n        return fromEvent(target, eventName, options).pipe(map(args => isArray(args) ? resultSelector(...args) : resultSelector(args)));\n    }\n    return new Observable(subscriber => {\n        function handler(e) {\n            if (arguments.length > 1) {\n                subscriber.next(Array.prototype.slice.call(arguments));\n            }\n            else {\n                subscriber.next(e);\n            }\n        }\n        setupSubscription(target, eventName, handler, subscriber, options);\n    });\n}\nfunction setupSubscription(sourceObj, eventName, handler, subscriber, options) {\n    let unsubscribe;\n    if (isEventTarget(sourceObj)) {\n        const source = sourceObj;\n        sourceObj.addEventListener(eventName, handler, options);\n        unsubscribe = () => source.removeEventListener(eventName, handler, options);\n    }\n    else if (isJQueryStyleEventEmitter(sourceObj)) {\n        const source = sourceObj;\n        sourceObj.on(eventName, handler);\n        unsubscribe = () => source.off(eventName, handler);\n    }\n    else if (isNodeStyleEventEmitter(sourceObj)) {\n        const source = sourceObj;\n        sourceObj.addListener(eventName, handler);\n        unsubscribe = () => source.removeListener(eventName, handler);\n    }\n    else if (sourceObj && sourceObj.length) {\n        for (let i = 0, len = sourceObj.length; i < len; i++) {\n            setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n        }\n    }\n    else {\n        throw new TypeError('Invalid event target');\n    }\n    subscriber.add(unsubscribe);\n}\nfunction isNodeStyleEventEmitter(sourceObj) {\n    return sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\nfunction isJQueryStyleEventEmitter(sourceObj) {\n    return sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\nfunction isEventTarget(sourceObj) {\n    return sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n//# sourceMappingURL=fromEvent.js.map","import { Observable } from '../Observable';\nimport { subscribeToArray } from '../util/subscribeToArray';\nimport { scheduleArray } from '../scheduled/scheduleArray';\nexport function fromArray(input, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscribeToArray(input));\n    }\n    else {\n        return scheduleArray(input, scheduler);\n    }\n}\n//# sourceMappingURL=fromArray.js.map","export function isScheduler(value) {\n    return value && typeof value.schedule === 'function';\n}\n//# sourceMappingURL=isScheduler.js.map","import { Observable } from '../Observable';\nexport function throwError(error, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscriber => subscriber.error(error));\n    }\n    else {\n        return new Observable(subscriber => scheduler.schedule(dispatch, 0, { error, subscriber }));\n    }\n}\nfunction dispatch({ error, subscriber }) {\n    subscriber.error(error);\n}\n//# sourceMappingURL=throwError.js.map","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import setPrototypeOf from \"./setPrototypeOf\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import { multicast } from './multicast';\nimport { refCount } from './refCount';\nimport { Subject } from '../Subject';\nfunction shareSubjectFactory() {\n    return new Subject();\n}\nexport function share() {\n    return (source) => refCount()(multicast(shareSubjectFactory)(source));\n}\n//# sourceMappingURL=share.js.map","/**\n * @license Angular v10.0.11\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { Subject, Subscription, Observable, merge as merge$1 } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Convince closure compiler that the wrapped function has no side-effects.\n *\n * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n * It is important that the return value for the `noSideEffects` function be assigned\n * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n * compiler.\n */\nfunction noSideEffects(fn) {\n    return { toString: fn }.toString();\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ANNOTATIONS = '__annotations__';\nconst PARAMETERS = '__parameters__';\nconst PROP_METADATA = '__prop__metadata__';\n/**\n * @suppress {globalThis}\n */\nfunction makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n    return noSideEffects(() => {\n        const metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory(...args) {\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call(this, ...args);\n                return this;\n            }\n            const annotationInstance = new DecoratorFactory(...args);\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn(cls, ...args);\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                const annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    });\n}\nfunction makeMetadataCtor(props) {\n    return function ctor(...args) {\n        if (props) {\n            const values = props(...args);\n            for (const propName in values) {\n                this[propName] = values[propName];\n            }\n        }\n    };\n}\nfunction makeParamDecorator(name, props, parentClass) {\n    return noSideEffects(() => {\n        const metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory(...args) {\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            const annotationInstance = new ParamDecoratorFactory(...args);\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                const parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    });\n}\nfunction makePropDecorator(name, props, parentClass, additionalProcessing) {\n    return noSideEffects(() => {\n        const metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory(...args) {\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            const decoratorInstance = new PropDecoratorFactory(...args);\n            function PropDecorator(target, name) {\n                const constructor = target.constructor;\n                // Use of Object.defineProperty is important because it creates a non-enumerable property\n                // which prevents the property from being copied during subclassing.\n                const meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing(target, name, ...args);\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ɵ0 = (token) => ({ token });\n/**\n * Inject decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nconst Inject = makeParamDecorator('Inject', ɵ0);\n/**\n * Optional decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nconst Optional = makeParamDecorator('Optional');\n/**\n * Self decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nconst Self = makeParamDecorator('Self');\n/**\n * `SkipSelf` decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nconst SkipSelf = makeParamDecorator('SkipSelf');\n/**\n * Host decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nconst Host = makeParamDecorator('Host');\nconst ɵ1 = (attributeName) => ({ attributeName });\n/**\n * Attribute decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nconst Attribute = makeParamDecorator('Attribute', ɵ1);\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection flags for DI.\n *\n * @publicApi\n */\nvar InjectFlags;\n(function (InjectFlags) {\n    // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n    /** Check self and check parent injector if needed */\n    InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n    /**\n     * Specifies that an injector should retrieve a dependency from any injector until reaching the\n     * host element of the current component. (Only used with Element Injector)\n     */\n    InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n    /** Don't ascend to ancestors of the node requesting injection. */\n    InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n    /** Skip the node that is requesting injection. */\n    InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n    /** Inject `defaultValue` instead if token not found. */\n    InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n})(InjectFlags || (InjectFlags = {}));\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction getClosureSafeProperty(objWithPropertyToExtract) {\n    for (let key in objWithPropertyToExtract) {\n        if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n            return key;\n        }\n    }\n    throw Error('Could not find renamed property on target object.');\n}\n/**\n * Sets properties on a target object from a source object, but only if\n * the property doesn't already exist on the target object.\n * @param target The target to set properties on\n * @param source The source of the property keys and values to set\n */\nfunction fillProperties(target, source) {\n    for (const key in source) {\n        if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n            target[key] = source[key];\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n * in which injectors (if any) it will be available.\n *\n * This should be assigned to a static `ɵprov` field on a type, which will then be an\n * `InjectableType`.\n *\n * Options:\n * * `providedIn` determines which injectors will include the injectable, by either associating it\n *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n * * `factory` gives the zero argument function which will create an instance of the injectable.\n *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n *\n * @codeGenApi\n * @publicApi This instruction has been emitted by ViewEngine for some time and is deployed to npm.\n */\nfunction ɵɵdefineInjectable(opts) {\n    return {\n        token: opts.token,\n        providedIn: opts.providedIn || null,\n        factory: opts.factory,\n        value: undefined,\n    };\n}\n/**\n * @deprecated in v8, delete after v10. This API should be used only be generated code, and that\n * code should now use ɵɵdefineInjectable instead.\n * @publicApi\n */\nconst defineInjectable = ɵɵdefineInjectable;\n/**\n * Construct an `InjectorDef` which configures an injector.\n *\n * This should be assigned to a static injector def (`ɵinj`) field on a type, which will then be an\n * `InjectorType`.\n *\n * Options:\n *\n * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n *   create the type must be provided. If that factory function needs to inject arguments, it can\n *   use the `inject` function.\n * * `providers`: an optional array of providers to add to the injector. Each provider must\n *   either have a factory or point to a type which has a `ɵprov` static property (the\n *   type must be an `InjectableType`).\n * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n *   whose providers will also be added to the injector. Locally provided types will override\n *   providers from imports.\n *\n * @codeGenApi\n */\nfunction ɵɵdefineInjector(options) {\n    return {\n        factory: options.factory,\n        providers: options.providers || [],\n        imports: options.imports || [],\n    };\n}\n/**\n * Read the injectable def (`ɵprov`) for `type` in a way which is immune to accidentally reading\n * inherited value.\n *\n * @param type A type which may have its own (non-inherited) `ɵprov`.\n */\nfunction getInjectableDef(type) {\n    return getOwnDefinition(type, type[NG_PROV_DEF]) ||\n        getOwnDefinition(type, type[NG_INJECTABLE_DEF]);\n}\n/**\n * Return `def` only if it is defined directly on `type` and is not inherited from a base\n * class of `type`.\n *\n * The function `Object.hasOwnProperty` is not sufficient to distinguish this case because in older\n * browsers (e.g. IE10) static property inheritance is implemented by copying the properties.\n *\n * Instead, the definition's `token` is compared to the `type`, and if they don't match then the\n * property was not defined directly on the type itself, and was likely inherited. The definition\n * is only returned if the `type` matches the `def.token`.\n */\nfunction getOwnDefinition(type, def) {\n    return def && def.token === type ? def : null;\n}\n/**\n * Read the injectable def (`ɵprov`) for `type` or read the `ɵprov` from one of its ancestors.\n *\n * @param type A type which may have `ɵprov`, via inheritance.\n *\n * @deprecated Will be removed in a future version of Angular, where an error will occur in the\n *     scenario if we find the `ɵprov` on an ancestor only.\n */\nfunction getInheritedInjectableDef(type) {\n    // See `jit/injectable.ts#compileInjectable` for context on NG_PROV_DEF_FALLBACK.\n    const def = type &&\n        (type[NG_PROV_DEF] || type[NG_INJECTABLE_DEF] ||\n            (type[NG_PROV_DEF_FALLBACK] && type[NG_PROV_DEF_FALLBACK]()));\n    if (def) {\n        const typeName = getTypeName(type);\n        // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n        // ngDevMode &&\n        console.warn(`DEPRECATED: DI is instantiating a token \"${typeName}\" that inherits its @Injectable decorator but does not provide one itself.\\n` +\n            `This will become an error in a future version of Angular. Please add @Injectable() to the \"${typeName}\" class.`);\n        return def;\n    }\n    else {\n        return null;\n    }\n}\n/** Gets the name of a type, accounting for some cross-browser differences. */\nfunction getTypeName(type) {\n    // `Function.prototype.name` behaves differently between IE and other browsers. In most browsers\n    // it'll always return the name of the function itself, no matter how many other functions it\n    // inherits from. On IE the function doesn't have its own `name` property, but it takes it from\n    // the lowest level in the prototype chain. E.g. if we have `class Foo extends Parent` most\n    // browsers will evaluate `Foo.name` to `Foo` while IE will return `Parent`. We work around\n    // the issue by converting the function to a string and parsing its name out that way via a regex.\n    if (type.hasOwnProperty('name')) {\n        return type.name;\n    }\n    const match = ('' + type).match(/^function\\s*([^\\s(]+)/);\n    return match === null ? '' : match[1];\n}\n/**\n * Read the injector def type in a way which is immune to accidentally reading inherited value.\n *\n * @param type type which may have an injector def (`ɵinj`)\n */\nfunction getInjectorDef(type) {\n    return type && (type.hasOwnProperty(NG_INJ_DEF) || type.hasOwnProperty(NG_INJECTOR_DEF)) ?\n        type[NG_INJ_DEF] :\n        null;\n}\nconst NG_PROV_DEF = getClosureSafeProperty({ ɵprov: getClosureSafeProperty });\nconst NG_INJ_DEF = getClosureSafeProperty({ ɵinj: getClosureSafeProperty });\n// On IE10 properties defined via `defineProperty` won't be inherited by child classes,\n// which will break inheriting the injectable definition from a grandparent through an\n// undecorated parent class. We work around it by defining a fallback method which will be\n// used to retrieve the definition. This should only be a problem in JIT mode, because in\n// AOT TypeScript seems to have a workaround for static properties. When inheriting from an\n// undecorated parent is no longer supported in v10, this can safely be removed.\nconst NG_PROV_DEF_FALLBACK = getClosureSafeProperty({ ɵprovFallback: getClosureSafeProperty });\n// We need to keep these around so we can read off old defs if new defs are unavailable\nconst NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\nconst NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (Array.isArray(token)) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return `${token.overriddenName}`;\n    }\n    if (token.name) {\n        return `${token.name}`;\n    }\n    const res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    const newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n/**\n * Concatenates two strings with separator, allocating new strings only when necessary.\n *\n * @param before before string.\n * @param separator separator string.\n * @param after after string.\n * @returns concatenated string.\n */\nfunction concatStringsWithSpace(before, after) {\n    return (before == null || before === '') ?\n        (after === null ? '' : after) :\n        ((after == null || after === '') ? before : before + ' ' + after);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n/**\n * Allows to refer to references which are not yet defined.\n *\n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n * a query is not yet defined.\n *\n * @usageNotes\n * ### Example\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * @publicApi\n */\nfunction forwardRef(forwardRefFn) {\n    forwardRefFn.__forward_ref__ = forwardRef;\n    forwardRefFn.toString = function () {\n        return stringify(this());\n    };\n    return forwardRefFn;\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n *\n * Acts as the identity function when given a non-forward-ref value.\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n *\n * @see `forwardRef`\n * @publicApi\n */\nfunction resolveForwardRef(type) {\n    return isForwardRef(type) ? type() : type;\n}\n/** Checks whether a function is wrapped by a `forwardRef`. */\nfunction isForwardRef(fn) {\n    return typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n        fn.__forward_ref__ === forwardRef;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst __globalThis = typeof globalThis !== 'undefined' && globalThis;\nconst __window = typeof window !== 'undefined' && window;\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst __global = typeof global !== 'undefined' && global;\n// Always use __globalThis if available, which is the spec-defined global variable across all\n// environments, then fallback to __global first, because in Node tests both __global and\n// __window may be defined and _global should be __global in that case.\nconst _global = __globalThis || __global || __window || __self;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar R3ResolvedDependencyType;\n(function (R3ResolvedDependencyType) {\n    R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n    R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    R3ResolvedDependencyType[R3ResolvedDependencyType[\"ChangeDetectorRef\"] = 2] = \"ChangeDetectorRef\";\n    R3ResolvedDependencyType[R3ResolvedDependencyType[\"Invalid\"] = 3] = \"Invalid\";\n})(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\nvar R3FactoryTarget;\n(function (R3FactoryTarget) {\n    R3FactoryTarget[R3FactoryTarget[\"Directive\"] = 0] = \"Directive\";\n    R3FactoryTarget[R3FactoryTarget[\"Component\"] = 1] = \"Component\";\n    R3FactoryTarget[R3FactoryTarget[\"Injectable\"] = 2] = \"Injectable\";\n    R3FactoryTarget[R3FactoryTarget[\"Pipe\"] = 3] = \"Pipe\";\n    R3FactoryTarget[R3FactoryTarget[\"NgModule\"] = 4] = \"NgModule\";\n})(R3FactoryTarget || (R3FactoryTarget = {}));\nvar ViewEncapsulation;\n(function (ViewEncapsulation) {\n    ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n    ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n    ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n    ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n})(ViewEncapsulation || (ViewEncapsulation = {}));\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction getCompilerFacade() {\n    const globalNg = _global['ng'];\n    if (!globalNg || !globalNg.ɵcompilerFacade) {\n        throw new Error(`Angular JIT compilation failed: '@angular/compiler' not loaded!\\n` +\n            `  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n` +\n            `  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n` +\n            `  - Alternatively provide the compiler with 'import \"@angular/compiler\";' before bootstrapping.`);\n    }\n    return globalNg.ɵcompilerFacade;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst NG_COMP_DEF = getClosureSafeProperty({ ɵcmp: getClosureSafeProperty });\nconst NG_DIR_DEF = getClosureSafeProperty({ ɵdir: getClosureSafeProperty });\nconst NG_PIPE_DEF = getClosureSafeProperty({ ɵpipe: getClosureSafeProperty });\nconst NG_MOD_DEF = getClosureSafeProperty({ ɵmod: getClosureSafeProperty });\nconst NG_LOC_ID_DEF = getClosureSafeProperty({ ɵloc: getClosureSafeProperty });\nconst NG_FACTORY_DEF = getClosureSafeProperty({ ɵfac: getClosureSafeProperty });\n/**\n * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n * the key and the directive's unique ID as the value. This allows us to map directives to their\n * bloom filter bit for DI.\n */\n// TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\nconst NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction ngDevModeResetPerfCounters() {\n    const locationString = typeof location !== 'undefined' ? location.toString() : '';\n    const newCounters = {\n        namedConstructors: locationString.indexOf('ngDevMode=namedConstructors') != -1,\n        firstCreatePass: 0,\n        tNode: 0,\n        tView: 0,\n        rendererCreateTextNode: 0,\n        rendererSetText: 0,\n        rendererCreateElement: 0,\n        rendererAddEventListener: 0,\n        rendererSetAttribute: 0,\n        rendererRemoveAttribute: 0,\n        rendererSetProperty: 0,\n        rendererSetClassName: 0,\n        rendererAddClass: 0,\n        rendererRemoveClass: 0,\n        rendererSetStyle: 0,\n        rendererRemoveStyle: 0,\n        rendererDestroy: 0,\n        rendererDestroyNode: 0,\n        rendererMoveNode: 0,\n        rendererRemoveNode: 0,\n        rendererAppendChild: 0,\n        rendererInsertBefore: 0,\n        rendererCreateComment: 0,\n    };\n    // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n    const allowNgDevModeTrue = locationString.indexOf('ngDevMode=false') === -1;\n    _global['ngDevMode'] = allowNgDevModeTrue && newCounters;\n    return newCounters;\n}\n/**\n * This function checks to see if the `ngDevMode` has been set. If yes,\n * then we honor it, otherwise we default to dev mode with additional checks.\n *\n * The idea is that unless we are doing production build where we explicitly\n * set `ngDevMode == false` we should be helping the developer by providing\n * as much early warning and errors as possible.\n *\n * `ɵɵdefineComponent` is guaranteed to have been called before any component template functions\n * (and thus Ivy instructions), so a single initialization there is sufficient to ensure ngDevMode\n * is defined for the entire instruction set.\n *\n * When checking `ngDevMode` on toplevel, always init it before referencing it\n * (e.g. `((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode())`), otherwise you can\n *  get a `ReferenceError` like in https://github.com/angular/angular/issues/31595.\n *\n * Details on possible values for `ngDevMode` can be found on its docstring.\n *\n * NOTE:\n * - changes to the `ngDevMode` name must be synced with `compiler-cli/src/tooling.ts`.\n */\nfunction initNgDevMode() {\n    // The below checks are to ensure that calling `initNgDevMode` multiple times does not\n    // reset the counters.\n    // If the `ngDevMode` is not an object, then it means we have not created the perf counters\n    // yet.\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (typeof ngDevMode !== 'object') {\n            ngDevModeResetPerfCounters();\n        }\n        return !!ngDevMode;\n    }\n    return false;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parameterized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n * application's root injector. If the factory function, which takes zero arguments, needs to inject\n * dependencies, it can do so using the `inject` function. See below for an example.\n *\n * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n * mentioned above, `'root'` is the default value for `providedIn`.\n *\n * @usageNotes\n * ### Basic Example\n *\n * ### Plain InjectionToken\n *\n * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n * ### Tree-shakable InjectionToken\n *\n * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n *\n *\n * @publicApi\n */\nclass InjectionToken {\n    constructor(_desc, options) {\n        this._desc = _desc;\n        /** @internal */\n        this.ngMetadataName = 'InjectionToken';\n        this.ɵprov = undefined;\n        if (typeof options == 'number') {\n            // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n            // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n            // We are using it to assign `-1` which is used to identify `Injector`.\n            this.__NG_ELEMENT_ID__ = options;\n        }\n        else if (options !== undefined) {\n            this.ɵprov = ɵɵdefineInjectable({\n                token: this,\n                providedIn: options.providedIn || 'root',\n                factory: options.factory,\n            });\n        }\n    }\n    toString() {\n        return `InjectionToken ${this._desc}`;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n *\n * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n * project.\n *\n * @publicApi\n */\nconst INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n);\nconst _THROW_IF_NOT_FOUND = {};\nconst THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\nconst NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\nconst NG_TOKEN_PATH = 'ngTokenPath';\nconst NEW_LINE = /\\n/gm;\nconst NO_NEW_LINE = 'ɵ';\nconst SOURCE = '__source';\nconst ɵ0$1 = getClosureSafeProperty;\nconst USE_VALUE = getClosureSafeProperty({ provide: String, useValue: ɵ0$1 });\n/**\n * Current injector value used by `inject`.\n * - `undefined`: it is an error to call `inject`\n * - `null`: `inject` can be called but there is no injector (limp-mode).\n * - Injector instance: Use the injector for resolution.\n */\nlet _currentInjector = undefined;\nfunction setCurrentInjector(injector) {\n    const former = _currentInjector;\n    _currentInjector = injector;\n    return former;\n}\n/**\n * Current implementation of inject.\n *\n * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n * way for two reasons:\n *  1. `Injector` should not depend on ivy logic.\n *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n */\nlet _injectImplementation;\n/**\n * Sets the current inject implementation.\n */\nfunction setInjectImplementation(impl) {\n    const previous = _injectImplementation;\n    _injectImplementation = impl;\n    return previous;\n}\nfunction injectInjectorOnly(token, flags = InjectFlags.Default) {\n    if (_currentInjector === undefined) {\n        throw new Error(`inject() must be called from an injection context`);\n    }\n    else if (_currentInjector === null) {\n        return injectRootLimpMode(token, undefined, flags);\n    }\n    else {\n        return _currentInjector.get(token, flags & InjectFlags.Optional ? null : undefined, flags);\n    }\n}\nfunction ɵɵinject(token, flags = InjectFlags.Default) {\n    return (_injectImplementation || injectInjectorOnly)(resolveForwardRef(token), flags);\n}\n/**\n * Throws an error indicating that a factory function could not be generated by the compiler for a\n * particular class.\n *\n * This instruction allows the actual error message to be optimized away when ngDevMode is turned\n * off, saving bytes of generated code while still providing a good experience in dev mode.\n *\n * The name of the class is not mentioned here, but will be in the generated factory function name\n * and thus in the stack trace.\n *\n * @codeGenApi\n */\nfunction ɵɵinvalidFactoryDep(index) {\n    const msg = ngDevMode ?\n        `This constructor is not compatible with Angular Dependency Injection because its dependency at index ${index} of the parameter list is invalid.\nThis can happen if the dependency type is a primitive like a string or if an ancestor of this class is missing an Angular decorator.\n\nPlease check that 1) the type for the parameter at index ${index} is correct and 2) the correct Angular decorators are defined for this class and its ancestors.` :\n        'invalid';\n    throw new Error(msg);\n}\n/**\n * Injects a token from the currently active injector.\n *\n * Must be used in the context of a factory function such as one defined for an\n * `InjectionToken`. Throws an error if not called from such a context.\n *\n * Within such a factory function, using this function to request injection of a dependency\n * is faster and more type-safe than providing an additional array of dependencies\n * (as has been common with `useFactory` providers).\n *\n * @param token The injection token for the dependency to be injected.\n * @param flags Optional flags that control how injection is executed.\n * The flags correspond to injection strategies that can be specified with\n * parameter decorators `@Host`, `@Self`, `@SkipSef`, and `@Optional`.\n * @returns True if injection is successful, null otherwise.\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n *\n * @publicApi\n */\nconst inject = ɵɵinject;\n/**\n * Injects `root` tokens in limp mode.\n *\n * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n * `InjectableDef`.\n */\nfunction injectRootLimpMode(token, notFoundValue, flags) {\n    const injectableDef = getInjectableDef(token);\n    if (injectableDef && injectableDef.providedIn == 'root') {\n        return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n            injectableDef.value;\n    }\n    if (flags & InjectFlags.Optional)\n        return null;\n    if (notFoundValue !== undefined)\n        return notFoundValue;\n    throw new Error(`Injector: NOT_FOUND [${stringify(token)}]`);\n}\nfunction injectArgs(types) {\n    const args = [];\n    for (let i = 0; i < types.length; i++) {\n        const arg = resolveForwardRef(types[i]);\n        if (Array.isArray(arg)) {\n            if (arg.length === 0) {\n                throw new Error('Arguments array must have arguments.');\n            }\n            let type = undefined;\n            let flags = InjectFlags.Default;\n            for (let j = 0; j < arg.length; j++) {\n                const meta = arg[j];\n                if (meta instanceof Optional || meta.ngMetadataName === 'Optional' || meta === Optional) {\n                    flags |= InjectFlags.Optional;\n                }\n                else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf' || meta === SkipSelf) {\n                    flags |= InjectFlags.SkipSelf;\n                }\n                else if (meta instanceof Self || meta.ngMetadataName === 'Self' || meta === Self) {\n                    flags |= InjectFlags.Self;\n                }\n                else if (meta instanceof Inject || meta === Inject) {\n                    type = meta.token;\n                }\n                else {\n                    type = meta;\n                }\n            }\n            args.push(ɵɵinject(type, flags));\n        }\n        else {\n            args.push(ɵɵinject(arg));\n        }\n    }\n    return args;\n}\nclass NullInjector {\n    get(token, notFoundValue = THROW_IF_NOT_FOUND) {\n        if (notFoundValue === THROW_IF_NOT_FOUND) {\n            // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n            // reason why correctly written application should cause this exception.\n            // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n            // if (ngDevMode) debugger;\n            const error = new Error(`NullInjectorError: No provider for ${stringify(token)}!`);\n            error.name = 'NullInjectorError';\n            throw error;\n        }\n        return notFoundValue;\n    }\n}\nfunction catchInjectorError(e, token, injectorErrorName, source) {\n    const tokenPath = e[NG_TEMP_TOKEN_PATH];\n    if (token[SOURCE]) {\n        tokenPath.unshift(token[SOURCE]);\n    }\n    e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n    e[NG_TOKEN_PATH] = tokenPath;\n    e[NG_TEMP_TOKEN_PATH] = null;\n    throw e;\n}\nfunction formatError(text, obj, injectorErrorName, source = null) {\n    text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n    let context = stringify(obj);\n    if (Array.isArray(obj)) {\n        context = obj.map(stringify).join(' -> ');\n    }\n    else if (typeof obj === 'object') {\n        let parts = [];\n        for (let key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                let value = obj[key];\n                parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n            }\n        }\n        context = `{${parts.join(', ')}}`;\n    }\n    return `${injectorErrorName}${source ? '(' + source + ')' : ''}[${context}]: ${text.replace(NEW_LINE, '\\n  ')}`;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n *\n * This should be kept up to date with the public exports of @angular/core.\n */\nconst angularCoreDiEnv = {\n    'ɵɵdefineInjectable': ɵɵdefineInjectable,\n    'ɵɵdefineInjector': ɵɵdefineInjector,\n    'ɵɵinject': ɵɵinject,\n    'ɵɵgetFactoryOf': getFactoryOf,\n    'ɵɵinvalidFactoryDep': ɵɵinvalidFactoryDep,\n};\nfunction getFactoryOf(type) {\n    const typeAny = type;\n    if (isForwardRef(type)) {\n        return (() => {\n            const factory = getFactoryOf(resolveForwardRef(typeAny));\n            return factory ? factory() : null;\n        });\n    }\n    const def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n    if (!def || def.factory === undefined) {\n        return null;\n    }\n    return def.factory;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an instance of an `NgModule` created by an `NgModuleFactory`.\n * Provides access to the `NgModule` instance and related objects.\n *\n * @publicApi\n */\nclass NgModuleRef {\n}\n/**\n * @publicApi\n */\nclass NgModuleFactory {\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction assertNumber(actual, msg) {\n    if (!(typeof actual === 'number')) {\n        throwError(msg, typeof actual, 'number', '===');\n    }\n}\nfunction assertNumberInRange(actual, minInclusive, maxInclusive) {\n    assertNumber(actual, 'Expected a number');\n    assertLessThanOrEqual(actual, maxInclusive, 'Expected number to be less than or equal to');\n    assertGreaterThanOrEqual(actual, minInclusive, 'Expected number to be greater than or equal to');\n}\nfunction assertString(actual, msg) {\n    if (!(typeof actual === 'string')) {\n        throwError(msg, actual === null ? 'null' : typeof actual, 'string', '===');\n    }\n}\nfunction assertEqual(actual, expected, msg) {\n    if (!(actual == expected)) {\n        throwError(msg, actual, expected, '==');\n    }\n}\nfunction assertNotEqual(actual, expected, msg) {\n    if (!(actual != expected)) {\n        throwError(msg, actual, expected, '!=');\n    }\n}\nfunction assertSame(actual, expected, msg) {\n    if (!(actual === expected)) {\n        throwError(msg, actual, expected, '===');\n    }\n}\nfunction assertNotSame(actual, expected, msg) {\n    if (!(actual !== expected)) {\n        throwError(msg, actual, expected, '!==');\n    }\n}\nfunction assertLessThan(actual, expected, msg) {\n    if (!(actual < expected)) {\n        throwError(msg, actual, expected, '<');\n    }\n}\nfunction assertLessThanOrEqual(actual, expected, msg) {\n    if (!(actual <= expected)) {\n        throwError(msg, actual, expected, '<=');\n    }\n}\nfunction assertGreaterThan(actual, expected, msg) {\n    if (!(actual > expected)) {\n        throwError(msg, actual, expected, '>');\n    }\n}\nfunction assertGreaterThanOrEqual(actual, expected, msg) {\n    if (!(actual >= expected)) {\n        throwError(msg, actual, expected, '>=');\n    }\n}\nfunction assertNotDefined(actual, msg) {\n    if (actual != null) {\n        throwError(msg, actual, null, '==');\n    }\n}\nfunction assertDefined(actual, msg) {\n    if (actual == null) {\n        throwError(msg, actual, null, '!=');\n    }\n}\nfunction throwError(msg, actual, expected, comparison) {\n    throw new Error(`ASSERTION ERROR: ${msg}` +\n        (comparison == null ? '' : ` [Expected=> ${expected} ${comparison} ${actual} <=Actual]`));\n}\nfunction assertDomNode(node) {\n    // If we're in a worker, `Node` will not be defined.\n    assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n        (typeof node === 'object' && node != null &&\n            node.constructor.name === 'WebWorkerRenderNode'), true, `The provided value must be an instance of a DOM Node but got ${stringify(node)}`);\n}\nfunction assertIndexInRange(arr, index) {\n    const maxLen = arr ? arr.length : 0;\n    assertLessThan(index, maxLen, `Index expected to be less than ${maxLen} but got ${index}`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Equivalent to ES6 spread, add each item to an array.\n *\n * @param items The items to add\n * @param arr The array to which you want to add the items\n */\nfunction addAllToArray(items, arr) {\n    for (let i = 0; i < items.length; i++) {\n        arr.push(items[i]);\n    }\n}\n/**\n * Flattens an array.\n */\nfunction flatten(list, dst) {\n    if (dst === undefined)\n        dst = list;\n    for (let i = 0; i < list.length; i++) {\n        let item = list[i];\n        if (Array.isArray(item)) {\n            // we need to inline it.\n            if (dst === list) {\n                // Our assumption that the list was already flat was wrong and\n                // we need to clone flat since we need to write to it.\n                dst = list.slice(0, i);\n            }\n            flatten(item, dst);\n        }\n        else if (dst !== list) {\n            dst.push(item);\n        }\n    }\n    return dst;\n}\nfunction deepForEach(input, fn) {\n    input.forEach(value => Array.isArray(value) ? deepForEach(value, fn) : fn(value));\n}\nfunction addToArray(arr, index, value) {\n    // perf: array.push is faster than array.splice!\n    if (index >= arr.length) {\n        arr.push(value);\n    }\n    else {\n        arr.splice(index, 0, value);\n    }\n}\nfunction removeFromArray(arr, index) {\n    // perf: array.pop is faster than array.splice!\n    if (index >= arr.length - 1) {\n        return arr.pop();\n    }\n    else {\n        return arr.splice(index, 1)[0];\n    }\n}\nfunction newArray(size, value) {\n    const list = [];\n    for (let i = 0; i < size; i++) {\n        list.push(value);\n    }\n    return list;\n}\n/**\n * Remove item from array (Same as `Array.splice()` but faster.)\n *\n * `Array.splice()` is not as fast because it has to allocate an array for the elements which were\n * removed. This causes memory pressure and slows down code when most of the time we don't\n * care about the deleted items array.\n *\n * https://jsperf.com/fast-array-splice (About 20x faster)\n *\n * @param array Array to splice\n * @param index Index of element in array to remove.\n * @param count Number of items to remove.\n */\nfunction arraySplice(array, index, count) {\n    const length = array.length - count;\n    while (index < length) {\n        array[index] = array[index + count];\n        index++;\n    }\n    while (count--) {\n        array.pop(); // shrink the array\n    }\n}\n/**\n * Same as `Array.splice(index, 0, value)` but faster.\n *\n * `Array.splice()` is not fast because it has to allocate an array for the elements which were\n * removed. This causes memory pressure and slows down code when most of the time we don't\n * care about the deleted items array.\n *\n * @param array Array to splice.\n * @param index Index in array where the `value` should be added.\n * @param value Value to add to array.\n */\nfunction arrayInsert(array, index, value) {\n    ngDevMode && assertLessThanOrEqual(index, array.length, 'Can\\'t insert past array end.');\n    let end = array.length;\n    while (end > index) {\n        const previousEnd = end - 1;\n        array[end] = array[previousEnd];\n        end = previousEnd;\n    }\n    array[index] = value;\n}\n/**\n * Same as `Array.splice2(index, 0, value1, value2)` but faster.\n *\n * `Array.splice()` is not fast because it has to allocate an array for the elements which were\n * removed. This causes memory pressure and slows down code when most of the time we don't\n * care about the deleted items array.\n *\n * @param array Array to splice.\n * @param index Index in array where the `value` should be added.\n * @param value1 Value to add to array.\n * @param value2 Value to add to array.\n */\nfunction arrayInsert2(array, index, value1, value2) {\n    ngDevMode && assertLessThanOrEqual(index, array.length, 'Can\\'t insert past array end.');\n    let end = array.length;\n    if (end == index) {\n        // inserting at the end.\n        array.push(value1, value2);\n    }\n    else if (end === 1) {\n        // corner case when we have less items in array than we have items to insert.\n        array.push(value2, array[0]);\n        array[0] = value1;\n    }\n    else {\n        end--;\n        array.push(array[end - 1], array[end]);\n        while (end > index) {\n            const previousEnd = end - 2;\n            array[end] = array[previousEnd];\n            end--;\n        }\n        array[index] = value1;\n        array[index + 1] = value2;\n    }\n}\n/**\n * Insert a `value` into an `array` so that the array remains sorted.\n *\n * NOTE:\n * - Duplicates are not allowed, and are ignored.\n * - This uses binary search algorithm for fast inserts.\n *\n * @param array A sorted array to insert into.\n * @param value The value to insert.\n * @returns index of the inserted value.\n */\nfunction arrayInsertSorted(array, value) {\n    let index = arrayIndexOfSorted(array, value);\n    if (index < 0) {\n        // if we did not find it insert it.\n        index = ~index;\n        arrayInsert(array, index, value);\n    }\n    return index;\n}\n/**\n * Remove `value` from a sorted `array`.\n *\n * NOTE:\n * - This uses binary search algorithm for fast removals.\n *\n * @param array A sorted array to remove from.\n * @param value The value to remove.\n * @returns index of the removed value.\n *   - positive index if value found and removed.\n *   - negative index if value not found. (`~index` to get the value where it should have been\n *     inserted)\n */\nfunction arrayRemoveSorted(array, value) {\n    const index = arrayIndexOfSorted(array, value);\n    if (index >= 0) {\n        arraySplice(array, index, 1);\n    }\n    return index;\n}\n/**\n * Get an index of an `value` in a sorted `array`.\n *\n * NOTE:\n * - This uses binary search algorithm for fast removals.\n *\n * @param array A sorted array to binary search.\n * @param value The value to look for.\n * @returns index of the value.\n *   - positive index if value found.\n *   - negative index if value not found. (`~index` to get the value where it should have been\n *     located)\n */\nfunction arrayIndexOfSorted(array, value) {\n    return _arrayIndexOfSorted(array, value, 0);\n}\n/**\n * Set a `value` for a `key`.\n *\n * @param keyValueArray to modify.\n * @param key The key to locate or create.\n * @param value The value to set for a `key`.\n * @returns index (always even) of where the value vas set.\n */\nfunction keyValueArraySet(keyValueArray, key, value) {\n    let index = keyValueArrayIndexOf(keyValueArray, key);\n    if (index >= 0) {\n        // if we found it set it.\n        keyValueArray[index | 1] = value;\n    }\n    else {\n        index = ~index;\n        arrayInsert2(keyValueArray, index, key, value);\n    }\n    return index;\n}\n/**\n * Retrieve a `value` for a `key` (on `undefined` if not found.)\n *\n * @param keyValueArray to search.\n * @param key The key to locate.\n * @return The `value` stored at the `key` location or `undefined if not found.\n */\nfunction keyValueArrayGet(keyValueArray, key) {\n    const index = keyValueArrayIndexOf(keyValueArray, key);\n    if (index >= 0) {\n        // if we found it retrieve it.\n        return keyValueArray[index | 1];\n    }\n    return undefined;\n}\n/**\n * Retrieve a `key` index value in the array or `-1` if not found.\n *\n * @param keyValueArray to search.\n * @param key The key to locate.\n * @returns index of where the key is (or should have been.)\n *   - positive (even) index if key found.\n *   - negative index if key not found. (`~index` (even) to get the index where it should have\n *     been inserted.)\n */\nfunction keyValueArrayIndexOf(keyValueArray, key) {\n    return _arrayIndexOfSorted(keyValueArray, key, 1);\n}\n/**\n * Delete a `key` (and `value`) from the `KeyValueArray`.\n *\n * @param keyValueArray to modify.\n * @param key The key to locate or delete (if exist).\n * @returns index of where the key was (or should have been.)\n *   - positive (even) index if key found and deleted.\n *   - negative index if key not found. (`~index` (even) to get the index where it should have\n *     been.)\n */\nfunction keyValueArrayDelete(keyValueArray, key) {\n    const index = keyValueArrayIndexOf(keyValueArray, key);\n    if (index >= 0) {\n        // if we found it remove it.\n        arraySplice(keyValueArray, index, 2);\n    }\n    return index;\n}\n/**\n * INTERNAL: Get an index of an `value` in a sorted `array` by grouping search by `shift`.\n *\n * NOTE:\n * - This uses binary search algorithm for fast removals.\n *\n * @param array A sorted array to binary search.\n * @param value The value to look for.\n * @param shift grouping shift.\n *   - `0` means look at every location\n *   - `1` means only look at every other (even) location (the odd locations are to be ignored as\n *         they are values.)\n * @returns index of the value.\n *   - positive index if value found.\n *   - negative index if value not found. (`~index` to get the value where it should have been\n * inserted)\n */\nfunction _arrayIndexOfSorted(array, value, shift) {\n    ngDevMode && assertEqual(Array.isArray(array), true, 'Expecting an array');\n    let start = 0;\n    let end = array.length >> shift;\n    while (end !== start) {\n        const middle = start + ((end - start) >> 1); // find the middle.\n        const current = array[middle << shift];\n        if (value === current) {\n            return (middle << shift);\n        }\n        else if (current > value) {\n            end = middle;\n        }\n        else {\n            start = middle + 1; // We already searched middle so make it non-inclusive by adding 1\n        }\n    }\n    return ~(end << shift);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The strategy that the default change detector uses to detect changes.\n * When set, takes effect the next time change detection is triggered.\n *\n * @see {@link ChangeDetectorRef#usage-notes Change detection usage}\n *\n * @publicApi\n */\nvar ChangeDetectionStrategy;\n(function (ChangeDetectionStrategy) {\n    /**\n     * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n     * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n     * Change detection can still be explicitly invoked.\n     * This strategy applies to all child directives and cannot be overridden.\n     */\n    ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n    /**\n     * Use the default `CheckAlways` strategy, in which change detection is automatic until\n     * explicitly deactivated.\n     */\n    ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n})(ChangeDetectionStrategy || (ChangeDetectionStrategy = {}));\n/**\n * Defines the possible states of the default change detector.\n * @see `ChangeDetectorRef`\n */\nvar ChangeDetectorStatus;\n(function (ChangeDetectorStatus) {\n    /**\n     * A state in which, after calling `detectChanges()`, the change detector\n     * state becomes `Checked`, and must be explicitly invoked or reactivated.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n    /**\n     * A state in which change detection is skipped until the change detector mode\n     * becomes `CheckOnce`.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n    /**\n     * A state in which change detection continues automatically until explicitly\n     * deactivated.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n    /**\n     * A state in which a change detector sub tree is not a part of the main tree and\n     * should be skipped.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n    /**\n     * Indicates that the change detector encountered an error checking a binding\n     * or calling a directive lifecycle method and is now in an inconsistent state. Change\n     * detectors in this state do not detect changes.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n    /**\n     * Indicates that the change detector has been destroyed.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n})(ChangeDetectorStatus || (ChangeDetectorStatus = {}));\n/**\n * Reports whether a given strategy is currently the default for change detection.\n * @param changeDetectionStrategy The strategy to check.\n * @returns True if the given strategy is the current default, false otherwise.\n * @see `ChangeDetectorStatus`\n * @see `ChangeDetectorRef`\n */\nfunction isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n    return changeDetectionStrategy == null ||\n        changeDetectionStrategy === ChangeDetectionStrategy.Default;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines template and style encapsulation options available for Component's {@link Component}.\n *\n * See {@link Component#encapsulation encapsulation}.\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/ts/metadata/encapsulation.ts region='longform'}\n *\n * @publicApi\n */\nvar ViewEncapsulation$1;\n(function (ViewEncapsulation) {\n    /**\n     * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n     * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n     * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n     * selectors.\n     *\n     * This is the default option.\n     */\n    ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n    /**\n     * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n     * Use the native encapsulation mechanism of the renderer.\n     *\n     * For the DOM this means using the deprecated [Shadow DOM\n     * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n     * creating a ShadowRoot for Component's Host Element.\n     */\n    ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n    /**\n     * Don't provide any template or style encapsulation.\n     */\n    ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n    /**\n     * Use Shadow DOM to encapsulate styles.\n     *\n     * For the DOM this means using modern [Shadow\n     * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n     * creating a ShadowRoot for Component's Host Element.\n     */\n    ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n})(ViewEncapsulation$1 || (ViewEncapsulation$1 = {}));\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This file contains reuseable \"empty\" symbols that can be used as default return values\n * in different parts of the rendering code. Because the same symbols are returned, this\n * allows for identity checks against these values to be consistently used by the framework\n * code.\n */\nconst EMPTY_OBJ = {};\nconst EMPTY_ARRAY = [];\n// freezing the values prevents any code from accidentally inserting new values in\nif ((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode()) {\n    // These property accesses can be ignored because ngDevMode will be set to false\n    // when optimizing code and the whole if statement will be dropped.\n    // tslint:disable-next-line:no-toplevel-property-access\n    Object.freeze(EMPTY_OBJ);\n    // tslint:disable-next-line:no-toplevel-property-access\n    Object.freeze(EMPTY_ARRAY);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet _renderCompCount = 0;\n/**\n * Create a component definition object.\n *\n *\n * # Example\n * ```\n * class MyDirective {\n *   // Generated by Angular Template Compiler\n *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n *   static ɵcmp = defineComponent({\n *     ...\n *   });\n * }\n * ```\n * @codeGenApi\n */\nfunction ɵɵdefineComponent(componentDefinition) {\n    return noSideEffects(() => {\n        // Initialize ngDevMode. This must be the first statement in ɵɵdefineComponent.\n        // See the `initNgDevMode` docstring for more information.\n        (typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode();\n        const type = componentDefinition.type;\n        const typePrototype = type.prototype;\n        const declaredInputs = {};\n        const def = {\n            type: type,\n            providersResolver: null,\n            decls: componentDefinition.decls,\n            vars: componentDefinition.vars,\n            factory: null,\n            template: componentDefinition.template || null,\n            consts: componentDefinition.consts || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            hostVars: componentDefinition.hostVars || 0,\n            hostAttrs: componentDefinition.hostAttrs || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onPush: componentDefinition.changeDetection === ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors || EMPTY_ARRAY,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used\n            // directly in the next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || ViewEncapsulation$1.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n            setInput: null,\n            schemas: componentDefinition.schemas || null,\n            tView: null,\n        };\n        const directiveTypes = componentDefinition.directives;\n        const feature = componentDefinition.features;\n        const pipeTypes = componentDefinition.pipes;\n        def.id += _renderCompCount++;\n        def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n            def.outputs = invertObject(componentDefinition.outputs),\n            feature && feature.forEach((fn) => fn(def));\n        def.directiveDefs = directiveTypes ?\n            () => (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                .map(extractDirectiveDef) :\n            null;\n        def.pipeDefs = pipeTypes ?\n            () => (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef) :\n            null;\n        return def;\n    });\n}\n/**\n * @codeGenApi\n */\nfunction ɵɵsetComponentScope(type, directives, pipes) {\n    const def = type.ɵcmp;\n    def.directiveDefs = () => directives.map(extractDirectiveDef);\n    def.pipeDefs = () => pipes.map(extractPipeDef);\n}\nfunction extractDirectiveDef(type) {\n    const def = getComponentDef(type) || getDirectiveDef(type);\n    if (ngDevMode && !def) {\n        throw new Error(`'${type.name}' is neither 'ComponentType' or 'DirectiveType'.`);\n    }\n    return def;\n}\nfunction extractPipeDef(type) {\n    const def = getPipeDef(type);\n    if (ngDevMode && !def) {\n        throw new Error(`'${type.name}' is not a 'PipeType'.`);\n    }\n    return def;\n}\nconst autoRegisterModuleById = {};\n/**\n * @codeGenApi\n */\nfunction ɵɵdefineNgModule(def) {\n    const res = {\n        type: def.type,\n        bootstrap: def.bootstrap || EMPTY_ARRAY,\n        declarations: def.declarations || EMPTY_ARRAY,\n        imports: def.imports || EMPTY_ARRAY,\n        exports: def.exports || EMPTY_ARRAY,\n        transitiveCompileScopes: null,\n        schemas: def.schemas || null,\n        id: def.id || null,\n    };\n    if (def.id != null) {\n        noSideEffects(() => {\n            autoRegisterModuleById[def.id] = def.type;\n        });\n    }\n    return res;\n}\n/**\n * Adds the module metadata that is necessary to compute the module's transitive scope to an\n * existing module definition.\n *\n * Scope metadata of modules is not used in production builds, so calls to this function can be\n * marked pure to tree-shake it from the bundle, allowing for all referenced declarations\n * to become eligible for tree-shaking as well.\n *\n * @codeGenApi\n */\nfunction ɵɵsetNgModuleScope(type, scope) {\n    return noSideEffects(() => {\n        const ngModuleDef = getNgModuleDef(type, true);\n        ngModuleDef.declarations = scope.declarations || EMPTY_ARRAY;\n        ngModuleDef.imports = scope.imports || EMPTY_ARRAY;\n        ngModuleDef.exports = scope.exports || EMPTY_ARRAY;\n    });\n}\n/**\n * Inverts an inputs or outputs lookup such that the keys, which were the\n * minified keys, are part of the values, and the values are parsed so that\n * the publicName of the property is the new key\n *\n * e.g. for\n *\n * ```\n * class Comp {\n *   @Input()\n *   propName1: string;\n *\n *   @Input('publicName2')\n *   declaredPropName2: number;\n * }\n * ```\n *\n * will be serialized as\n *\n * ```\n * {\n *   propName1: 'propName1',\n *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n * }\n * ```\n *\n * which is than translated by the minifier as:\n *\n * ```\n * {\n *   minifiedPropName1: 'propName1',\n *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n * }\n * ```\n *\n * becomes: (public name => minifiedName)\n *\n * ```\n * {\n *  'propName1': 'minifiedPropName1',\n *  'publicName2': 'minifiedPropName2',\n * }\n * ```\n *\n * Optionally the function can take `secondary` which will result in: (public name => declared name)\n *\n * ```\n * {\n *  'propName1': 'propName1',\n *  'publicName2': 'declaredPropName2',\n * }\n * ```\n *\n\n */\nfunction invertObject(obj, secondary) {\n    if (obj == null)\n        return EMPTY_OBJ;\n    const newLookup = {};\n    for (const minifiedKey in obj) {\n        if (obj.hasOwnProperty(minifiedKey)) {\n            let publicName = obj[minifiedKey];\n            let declaredName = publicName;\n            if (Array.isArray(publicName)) {\n                declaredName = publicName[1];\n                publicName = publicName[0];\n            }\n            newLookup[publicName] = minifiedKey;\n            if (secondary) {\n                (secondary[publicName] = declaredName);\n            }\n        }\n    }\n    return newLookup;\n}\n/**\n * Create a directive definition object.\n *\n * # Example\n * ```ts\n * class MyDirective {\n *   // Generated by Angular Template Compiler\n *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n *   static ɵdir = ɵɵdefineDirective({\n *     ...\n *   });\n * }\n * ```\n *\n * @codeGenApi\n */\nconst ɵɵdefineDirective = ɵɵdefineComponent;\n/**\n * Create a pipe definition object.\n *\n * # Example\n * ```\n * class MyPipe implements PipeTransform {\n *   // Generated by Angular Template Compiler\n *   static ɵpipe = definePipe({\n *     ...\n *   });\n * }\n * ```\n * @param pipeDef Pipe definition generated by the compiler\n *\n * @codeGenApi\n */\nfunction ɵɵdefinePipe(pipeDef) {\n    return {\n        type: pipeDef.type,\n        name: pipeDef.name,\n        factory: null,\n        pure: pipeDef.pure !== false,\n        onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n    };\n}\n/**\n * The following getter methods retrieve the definition form the type. Currently the retrieval\n * honors inheritance, but in the future we may change the rule to require that definitions are\n * explicit. This would require some sort of migration strategy.\n */\nfunction getComponentDef(type) {\n    return type[NG_COMP_DEF] || null;\n}\nfunction getDirectiveDef(type) {\n    return type[NG_DIR_DEF] || null;\n}\nfunction getPipeDef(type) {\n    return type[NG_PIPE_DEF] || null;\n}\nfunction getFactoryDef(type, throwNotFound) {\n    const hasFactoryDef = type.hasOwnProperty(NG_FACTORY_DEF);\n    if (!hasFactoryDef && throwNotFound === true && ngDevMode) {\n        throw new Error(`Type ${stringify(type)} does not have 'ɵfac' property.`);\n    }\n    return hasFactoryDef ? type[NG_FACTORY_DEF] : null;\n}\nfunction getNgModuleDef(type, throwNotFound) {\n    const ngModuleDef = type[NG_MOD_DEF] || null;\n    if (!ngModuleDef && throwNotFound === true) {\n        throw new Error(`Type ${stringify(type)} does not have 'ɵmod' property.`);\n    }\n    return ngModuleDef;\n}\nfunction getNgLocaleIdDef(type) {\n    return type[NG_LOC_ID_DEF] || null;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Below are constants for LView indices to help us look up LView members\n// without having to remember the specific indices.\n// Uglify will inline these when minifying so there shouldn't be a cost.\nconst HOST = 0;\nconst TVIEW = 1;\nconst FLAGS = 2;\nconst PARENT = 3;\nconst NEXT = 4;\nconst TRANSPLANTED_VIEWS_TO_REFRESH = 5;\nconst T_HOST = 6;\nconst CLEANUP = 7;\nconst CONTEXT = 8;\nconst INJECTOR$1 = 9;\nconst RENDERER_FACTORY = 10;\nconst RENDERER = 11;\nconst SANITIZER = 12;\nconst CHILD_HEAD = 13;\nconst CHILD_TAIL = 14;\nconst DECLARATION_VIEW = 15;\nconst DECLARATION_COMPONENT_VIEW = 16;\nconst DECLARATION_LCONTAINER = 17;\nconst PREORDER_HOOK_FLAGS = 18;\nconst QUERIES = 19;\n/** Size of LView's header. Necessary to adjust for it when setting slots.  */\nconst HEADER_OFFSET = 20;\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\nconst unusedValueExportToPlacateAjd = 1;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Special location which allows easy identification of type. If we have an array which was\n * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is\n * `LContainer`.\n */\nconst TYPE = 1;\n/**\n * Below are constants for LContainer indices to help us look up LContainer members\n * without having to remember the specific indices.\n * Uglify will inline these when minifying so there shouldn't be a cost.\n */\n/**\n * Flag to signify that this `LContainer` may have transplanted views which need to be change\n * detected. (see: `LView[DECLARATION_COMPONENT_VIEW])`.\n *\n * This flag, once set, is never unset for the `LContainer`. This means that when unset we can skip\n * a lot of work in `refreshEmbeddedViews`. But when set we still need to verify\n * that the `MOVED_VIEWS` are transplanted and on-push.\n */\nconst HAS_TRANSPLANTED_VIEWS = 2;\n// PARENT, NEXT, TRANSPLANTED_VIEWS_TO_REFRESH are indices 3, 4, and 5\n// As we already have these constants in LView, we don't need to re-create them.\n// T_HOST is index 6\n// We already have this constants in LView, we don't need to re-create it.\nconst NATIVE = 7;\nconst VIEW_REFS = 8;\nconst MOVED_VIEWS = 9;\n/**\n * Size of LContainer's header. Represents the index after which all views in the\n * container will be inserted. We need to keep a record of current views so we know\n * which views are already in the DOM (and don't need to be re-added) and so we can\n * remove views from the DOM when they are no longer required.\n */\nconst CONTAINER_HEADER_OFFSET = 10;\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\nconst unusedValueExportToPlacateAjd$1 = 1;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * True if `value` is `LView`.\n * @param value wrapped value of `RNode`, `LView`, `LContainer`\n */\nfunction isLView(value) {\n    return Array.isArray(value) && typeof value[TYPE] === 'object';\n}\n/**\n * True if `value` is `LContainer`.\n * @param value wrapped value of `RNode`, `LView`, `LContainer`\n */\nfunction isLContainer(value) {\n    return Array.isArray(value) && value[TYPE] === true;\n}\nfunction isContentQueryHost(tNode) {\n    return (tNode.flags & 8 /* hasContentQuery */) !== 0;\n}\nfunction isComponentHost(tNode) {\n    return (tNode.flags & 2 /* isComponentHost */) === 2 /* isComponentHost */;\n}\nfunction isDirectiveHost(tNode) {\n    return (tNode.flags & 1 /* isDirectiveHost */) === 1 /* isDirectiveHost */;\n}\nfunction isComponentDef(def) {\n    return def.template !== null;\n}\nfunction isRootView(target) {\n    return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// [Assert functions do not constraint type when they are guarded by a truthy\n// expression.](https://github.com/microsoft/TypeScript/issues/37295)\nfunction assertTNodeForLView(tNode, lView) {\n    tNode.hasOwnProperty('tView_') &&\n        assertEqual(tNode.tView_, lView[TVIEW], 'This TNode does not belong to this LView.');\n}\nfunction assertComponentType(actual, msg = 'Type passed in is not ComponentType, it does not have \\'ɵcmp\\' property.') {\n    if (!getComponentDef(actual)) {\n        throwError(msg);\n    }\n}\nfunction assertNgModuleType(actual, msg = 'Type passed in is not NgModuleType, it does not have \\'ɵmod\\' property.') {\n    if (!getNgModuleDef(actual)) {\n        throwError(msg);\n    }\n}\nfunction assertPreviousIsParent(isParent) {\n    assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n}\nfunction assertHasParent(tNode) {\n    assertDefined(tNode, 'previousOrParentTNode should exist!');\n    assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n}\nfunction assertDataNext(lView, index, arr) {\n    if (arr == null)\n        arr = lView;\n    assertEqual(arr.length, index, `index ${index} expected to be at the end of arr (length ${arr.length})`);\n}\nfunction assertLContainer(value) {\n    assertDefined(value, 'LContainer must be defined');\n    assertEqual(isLContainer(value), true, 'Expecting LContainer');\n}\nfunction assertLViewOrUndefined(value) {\n    value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n}\nfunction assertLView(value) {\n    assertDefined(value, 'LView must be defined');\n    assertEqual(isLView(value), true, 'Expecting LView');\n}\nfunction assertFirstCreatePass(tView, errMessage) {\n    assertEqual(tView.firstCreatePass, true, errMessage || 'Should only be called in first create pass.');\n}\nfunction assertFirstUpdatePass(tView, errMessage) {\n    assertEqual(tView.firstUpdatePass, true, errMessage || 'Should only be called in first update pass.');\n}\n/**\n * This is a basic sanity check that an object is probably a directive def. DirectiveDef is\n * an interface, so we can't do a direct instanceof check.\n */\nfunction assertDirectiveDef(obj) {\n    if (obj.type === undefined || obj.selectors == undefined || obj.inputs === undefined) {\n        throwError(`Expected a DirectiveDef/ComponentDef and this object does not seem to have the expected shape.`);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents a basic change from a previous to a new value for a single\n * property on a directive instance. Passed as a value in a\n * {@link SimpleChanges} object to the `ngOnChanges` hook.\n *\n * @see `OnChanges`\n *\n * @publicApi\n */\nclass SimpleChange {\n    constructor(previousValue, currentValue, firstChange) {\n        this.previousValue = previousValue;\n        this.currentValue = currentValue;\n        this.firstChange = firstChange;\n    }\n    /**\n     * Check whether the new value is the first value assigned.\n     */\n    isFirstChange() {\n        return this.firstChange;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n * lifecycle hook, so it should be included in any component that implements\n * that hook.\n *\n * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n * inherited properties will not be propagated to the ngOnChanges lifecycle\n * hook.\n *\n * Example usage:\n *\n * ```\n * static ɵcmp = defineComponent({\n *   ...\n *   inputs: {name: 'publicName'},\n *   features: [NgOnChangesFeature]\n * });\n * ```\n *\n * @codeGenApi\n */\nfunction ɵɵNgOnChangesFeature() {\n    return NgOnChangesFeatureImpl;\n}\nfunction NgOnChangesFeatureImpl(definition) {\n    if (definition.type.prototype.ngOnChanges) {\n        definition.setInput = ngOnChangesSetInput;\n    }\n    return rememberChangeHistoryAndInvokeOnChangesHook;\n}\n// This option ensures that the ngOnChanges lifecycle hook will be inherited\n// from superclasses (in InheritDefinitionFeature).\n/** @nocollapse */\n// tslint:disable-next-line:no-toplevel-property-access\nɵɵNgOnChangesFeature.ngInherit = true;\n/**\n * This is a synthetic lifecycle hook which gets inserted into `TView.preOrderHooks` to simulate\n * `ngOnChanges`.\n *\n * The hook reads the `NgSimpleChangesStore` data from the component instance and if changes are\n * found it invokes `ngOnChanges` on the component instance.\n *\n * @param this Component instance. Because this function gets inserted into `TView.preOrderHooks`,\n *     it is guaranteed to be called with component instance.\n */\nfunction rememberChangeHistoryAndInvokeOnChangesHook() {\n    const simpleChangesStore = getSimpleChangesStore(this);\n    const current = simpleChangesStore === null || simpleChangesStore === void 0 ? void 0 : simpleChangesStore.current;\n    if (current) {\n        const previous = simpleChangesStore.previous;\n        if (previous === EMPTY_OBJ) {\n            simpleChangesStore.previous = current;\n        }\n        else {\n            // New changes are copied to the previous store, so that we don't lose history for inputs\n            // which were not changed this time\n            for (let key in current) {\n                previous[key] = current[key];\n            }\n        }\n        simpleChangesStore.current = null;\n        this.ngOnChanges(current);\n    }\n}\nfunction ngOnChangesSetInput(instance, value, publicName, privateName) {\n    const simpleChangesStore = getSimpleChangesStore(instance) ||\n        setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n    const current = simpleChangesStore.current || (simpleChangesStore.current = {});\n    const previous = simpleChangesStore.previous;\n    const declaredName = this.declaredInputs[publicName];\n    const previousChange = previous[declaredName];\n    current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n    instance[privateName] = value;\n}\nconst SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\nfunction getSimpleChangesStore(instance) {\n    return instance[SIMPLE_CHANGES_STORE] || null;\n}\nfunction setSimpleChangesStore(instance, store) {\n    return instance[SIMPLE_CHANGES_STORE] = store;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\nconst MATH_ML_NAMESPACE = 'http://www.w3.org/1998/MathML/';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This property will be monkey-patched on elements, components and directives\n */\nconst MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Most of the use of `document` in Angular is from within the DI system so it is possible to simply\n * inject the `DOCUMENT` token and are done.\n *\n * Ivy is special because it does not rely upon the DI and must get hold of the document some other\n * way.\n *\n * The solution is to define `getDocument()` and `setDocument()` top-level functions for ivy.\n * Wherever ivy needs the global document, it calls `getDocument()` instead.\n *\n * When running ivy outside of a browser environment, it is necessary to call `setDocument()` to\n * tell ivy what the global `document` is.\n *\n * Angular does this for us in each of the standard platforms (`Browser`, `Server`, and `WebWorker`)\n * by calling `setDocument()` when providing the `DOCUMENT` token.\n */\nlet DOCUMENT = undefined;\n/**\n * Tell ivy what the `document` is for this platform.\n *\n * It is only necessary to call this if the current platform is not a browser.\n *\n * @param document The object representing the global `document` in this environment.\n */\nfunction setDocument(document) {\n    DOCUMENT = document;\n}\n/**\n * Access the object that represents the `document` for this platform.\n *\n * Ivy calls this whenever it needs to access the `document` object.\n * For example to create the renderer or to do sanitization.\n */\nfunction getDocument() {\n    if (DOCUMENT !== undefined) {\n        return DOCUMENT;\n    }\n    else if (typeof document !== 'undefined') {\n        return document;\n    }\n    // No \"document\" can be found. This should only happen if we are running ivy outside Angular and\n    // the current platform is not a browser. Since this is not a supported scenario at the moment\n    // this should not happen in Angular apps.\n    // Once we support running ivy outside of Angular we will need to publish `setDocument()` as a\n    // public API. Meanwhile we just return `undefined` and let the application fail.\n    return undefined;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO: cleanup once the code is merged in angular/angular\nvar RendererStyleFlags3;\n(function (RendererStyleFlags3) {\n    RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n    RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n})(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n/** Returns whether the `renderer` is a `ProceduralRenderer3` */\nfunction isProceduralRenderer(renderer) {\n    return !!(renderer.listen);\n}\nconst ɵ0$2 = (hostElement, rendererType) => {\n    return getDocument();\n};\nconst domRendererFactory3 = {\n    createRenderer: ɵ0$2\n};\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\nconst unusedValueExportToPlacateAjd$2 = 1;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`)\n * in same location in `LView`. This is because we don't want to pre-allocate space for it\n * because the storage is sparse. This file contains utilities for dealing with such data types.\n *\n * How do we know what is stored at a given location in `LView`.\n * - `Array.isArray(value) === false` => `RNode` (The normal storage value)\n * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.\n *   - `typeof value[TYPE] === 'object'` => `LView`\n *      - This happens when we have a component at a given location\n *   - `typeof value[TYPE] === true` => `LContainer`\n *      - This happens when we have `LContainer` binding at a given location.\n *\n *\n * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.\n */\n/**\n * Returns `RNode`.\n * @param value wrapped value of `RNode`, `LView`, `LContainer`\n */\nfunction unwrapRNode(value) {\n    while (Array.isArray(value)) {\n        value = value[HOST];\n    }\n    return value;\n}\n/**\n * Returns `LView` or `null` if not found.\n * @param value wrapped value of `RNode`, `LView`, `LContainer`\n */\nfunction unwrapLView(value) {\n    while (Array.isArray(value)) {\n        // This check is same as `isLView()` but we don't call at as we don't want to call\n        // `Array.isArray()` twice and give JITer more work for inlining.\n        if (typeof value[TYPE] === 'object')\n            return value;\n        value = value[HOST];\n    }\n    return null;\n}\n/**\n * Returns `LContainer` or `null` if not found.\n * @param value wrapped value of `RNode`, `LView`, `LContainer`\n */\nfunction unwrapLContainer(value) {\n    while (Array.isArray(value)) {\n        // This check is same as `isLContainer()` but we don't call at as we don't want to call\n        // `Array.isArray()` twice and give JITer more work for inlining.\n        if (value[TYPE] === true)\n            return value;\n        value = value[HOST];\n    }\n    return null;\n}\n/**\n * Retrieves an element value from the provided `viewData`, by unwrapping\n * from any containers, component views, or style contexts.\n */\nfunction getNativeByIndex(index, lView) {\n    return unwrapRNode(lView[index + HEADER_OFFSET]);\n}\n/**\n * Retrieve an `RNode` for a given `TNode` and `LView`.\n *\n * This function guarantees in dev mode to retrieve a non-null `RNode`.\n *\n * @param tNode\n * @param lView\n */\nfunction getNativeByTNode(tNode, lView) {\n    ngDevMode && assertTNodeForLView(tNode, lView);\n    ngDevMode && assertIndexInRange(lView, tNode.index);\n    const node = unwrapRNode(lView[tNode.index]);\n    ngDevMode && !isProceduralRenderer(lView[RENDERER]) && assertDomNode(node);\n    return node;\n}\n/**\n * Retrieve an `RNode` or `null` for a given `TNode` and `LView`.\n *\n * Some `TNode`s don't have associated `RNode`s. For example `Projection`\n *\n * @param tNode\n * @param lView\n */\nfunction getNativeByTNodeOrNull(tNode, lView) {\n    const index = tNode.index;\n    if (index !== -1) {\n        ngDevMode && assertTNodeForLView(tNode, lView);\n        const node = unwrapRNode(lView[index]);\n        ngDevMode && node !== null && !isProceduralRenderer(lView[RENDERER]) && assertDomNode(node);\n        return node;\n    }\n    return null;\n}\nfunction getTNode(tView, index) {\n    ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n    ngDevMode && assertLessThan(index, tView.data.length, 'wrong index for TNode');\n    return tView.data[index + HEADER_OFFSET];\n}\n/** Retrieves a value from any `LView` or `TData`. */\nfunction load(view, index) {\n    ngDevMode && assertIndexInRange(view, index + HEADER_OFFSET);\n    return view[index + HEADER_OFFSET];\n}\nfunction getComponentLViewByIndex(nodeIndex, hostView) {\n    // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n    ngDevMode && assertIndexInRange(hostView, nodeIndex);\n    const slotValue = hostView[nodeIndex];\n    const lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n    return lView;\n}\n/**\n * Returns the monkey-patch value data present on the target (which could be\n * a component, directive or a DOM node).\n */\nfunction readPatchedData(target) {\n    ngDevMode && assertDefined(target, 'Target expected');\n    return target[MONKEY_PATCH_KEY_NAME] || null;\n}\nfunction readPatchedLView(target) {\n    const value = readPatchedData(target);\n    if (value) {\n        return Array.isArray(value) ? value : value.lView;\n    }\n    return null;\n}\n/** Checks whether a given view is in creation mode */\nfunction isCreationMode(view) {\n    return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n}\n/**\n * Returns a boolean for whether the view is attached to the change detection tree.\n *\n * Note: This determines whether a view should be checked, not whether it's inserted\n * into a container. For that, you'll want `viewAttachedToContainer` below.\n */\nfunction viewAttachedToChangeDetector(view) {\n    return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n}\n/** Returns a boolean for whether the view is attached to a container. */\nfunction viewAttachedToContainer(view) {\n    return isLContainer(view[PARENT]);\n}\n/** Returns a constant from `TConstants` instance. */\nfunction getConstant(consts, index) {\n    return consts === null || index == null ? null : consts[index];\n}\n/**\n * Resets the pre-order hook flags of the view.\n * @param lView the LView on which the flags are reset\n */\nfunction resetPreOrderHookFlags(lView) {\n    lView[PREORDER_HOOK_FLAGS] = 0;\n}\n/**\n * Updates the `TRANSPLANTED_VIEWS_TO_REFRESH` counter on the `LContainer` as well as the parents\n * whose\n *  1. counter goes from 0 to 1, indicating that there is a new child that has a view to refresh\n *  or\n *  2. counter goes from 1 to 0, indicating there are no more descendant views to refresh\n */\nfunction updateTransplantedViewCount(lContainer, amount) {\n    lContainer[TRANSPLANTED_VIEWS_TO_REFRESH] += amount;\n    let viewOrContainer = lContainer;\n    let parent = lContainer[PARENT];\n    while (parent !== null &&\n        ((amount === 1 && viewOrContainer[TRANSPLANTED_VIEWS_TO_REFRESH] === 1) ||\n            (amount === -1 && viewOrContainer[TRANSPLANTED_VIEWS_TO_REFRESH] === 0))) {\n        parent[TRANSPLANTED_VIEWS_TO_REFRESH] += amount;\n        viewOrContainer = parent;\n        parent = parent[PARENT];\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst instructionState = {\n    lFrame: createLFrame(null),\n    bindingsEnabled: true,\n    checkNoChangesMode: false,\n};\nfunction getElementDepthCount() {\n    return instructionState.lFrame.elementDepthCount;\n}\nfunction increaseElementDepthCount() {\n    instructionState.lFrame.elementDepthCount++;\n}\nfunction decreaseElementDepthCount() {\n    instructionState.lFrame.elementDepthCount--;\n}\nfunction getBindingsEnabled() {\n    return instructionState.bindingsEnabled;\n}\n/**\n * Enables directive matching on elements.\n *\n *  * Example:\n * ```\n * <my-comp my-directive>\n *   Should match component / directive.\n * </my-comp>\n * <div ngNonBindable>\n *   <!-- ɵɵdisableBindings() -->\n *   <my-comp my-directive>\n *     Should not match component / directive because we are in ngNonBindable.\n *   </my-comp>\n *   <!-- ɵɵenableBindings() -->\n * </div>\n * ```\n *\n * @codeGenApi\n */\nfunction ɵɵenableBindings() {\n    instructionState.bindingsEnabled = true;\n}\n/**\n * Disables directive matching on element.\n *\n *  * Example:\n * ```\n * <my-comp my-directive>\n *   Should match component / directive.\n * </my-comp>\n * <div ngNonBindable>\n *   <!-- ɵɵdisableBindings() -->\n *   <my-comp my-directive>\n *     Should not match component / directive because we are in ngNonBindable.\n *   </my-comp>\n *   <!-- ɵɵenableBindings() -->\n * </div>\n * ```\n *\n * @codeGenApi\n */\nfunction ɵɵdisableBindings() {\n    instructionState.bindingsEnabled = false;\n}\n/**\n * Return the current `LView`.\n */\nfunction getLView() {\n    return instructionState.lFrame.lView;\n}\n/**\n * Return the current `TView`.\n */\nfunction getTView() {\n    return instructionState.lFrame.tView;\n}\n/**\n * Restores `contextViewData` to the given OpaqueViewState instance.\n *\n * Used in conjunction with the getCurrentView() instruction to save a snapshot\n * of the current view and restore it when listeners are invoked. This allows\n * walking the declaration view tree in listeners to get vars from parent views.\n *\n * @param viewToRestore The OpaqueViewState instance to restore.\n *\n * @codeGenApi\n */\nfunction ɵɵrestoreView(viewToRestore) {\n    instructionState.lFrame.contextLView = viewToRestore;\n}\nfunction getPreviousOrParentTNode() {\n    return instructionState.lFrame.previousOrParentTNode;\n}\nfunction setPreviousOrParentTNode(tNode, isParent) {\n    instructionState.lFrame.previousOrParentTNode = tNode;\n    instructionState.lFrame.isParent = isParent;\n}\nfunction getIsParent() {\n    return instructionState.lFrame.isParent;\n}\nfunction setIsNotParent() {\n    instructionState.lFrame.isParent = false;\n}\nfunction setIsParent() {\n    instructionState.lFrame.isParent = true;\n}\nfunction getContextLView() {\n    return instructionState.lFrame.contextLView;\n}\nfunction getCheckNoChangesMode() {\n    // TODO(misko): remove this from the LView since it is ngDevMode=true mode only.\n    return instructionState.checkNoChangesMode;\n}\nfunction setCheckNoChangesMode(mode) {\n    instructionState.checkNoChangesMode = mode;\n}\n// top level variables should not be exported for performance reasons (PERF_NOTES.md)\nfunction getBindingRoot() {\n    const lFrame = instructionState.lFrame;\n    let index = lFrame.bindingRootIndex;\n    if (index === -1) {\n        index = lFrame.bindingRootIndex = lFrame.tView.bindingStartIndex;\n    }\n    return index;\n}\nfunction getBindingIndex() {\n    return instructionState.lFrame.bindingIndex;\n}\nfunction setBindingIndex(value) {\n    return instructionState.lFrame.bindingIndex = value;\n}\nfunction nextBindingIndex() {\n    return instructionState.lFrame.bindingIndex++;\n}\nfunction incrementBindingIndex(count) {\n    const lFrame = instructionState.lFrame;\n    const index = lFrame.bindingIndex;\n    lFrame.bindingIndex = lFrame.bindingIndex + count;\n    return index;\n}\n/**\n * Set a new binding root index so that host template functions can execute.\n *\n * Bindings inside the host template are 0 index. But because we don't know ahead of time\n * how many host bindings we have we can't pre-compute them. For this reason they are all\n * 0 index and we just shift the root so that they match next available location in the LView.\n *\n * @param bindingRootIndex Root index for `hostBindings`\n * @param currentDirectiveIndex `TData[currentDirectiveIndex]` will point to the current directive\n *        whose `hostBindings` are being processed.\n */\nfunction setBindingRootForHostBindings(bindingRootIndex, currentDirectiveIndex) {\n    const lFrame = instructionState.lFrame;\n    lFrame.bindingIndex = lFrame.bindingRootIndex = bindingRootIndex;\n    setCurrentDirectiveIndex(currentDirectiveIndex);\n}\n/**\n * When host binding is executing this points to the directive index.\n * `TView.data[getCurrentDirectiveIndex()]` is `DirectiveDef`\n * `LView[getCurrentDirectiveIndex()]` is directive instance.\n */\nfunction getCurrentDirectiveIndex() {\n    return instructionState.lFrame.currentDirectiveIndex;\n}\n/**\n * Sets an index of a directive whose `hostBindings` are being processed.\n *\n * @param currentDirectiveIndex `TData` index where current directive instance can be found.\n */\nfunction setCurrentDirectiveIndex(currentDirectiveIndex) {\n    instructionState.lFrame.currentDirectiveIndex = currentDirectiveIndex;\n}\n/**\n * Retrieve the current `DirectiveDef` which is active when `hostBindings` instruction is being\n * executed.\n *\n * @param tData Current `TData` where the `DirectiveDef` will be looked up at.\n */\nfunction getCurrentDirectiveDef(tData) {\n    const currentDirectiveIndex = instructionState.lFrame.currentDirectiveIndex;\n    return currentDirectiveIndex === -1 ? null : tData[currentDirectiveIndex];\n}\nfunction getCurrentQueryIndex() {\n    return instructionState.lFrame.currentQueryIndex;\n}\nfunction setCurrentQueryIndex(value) {\n    instructionState.lFrame.currentQueryIndex = value;\n}\n/**\n * This is a light weight version of the `enterView` which is needed by the DI system.\n * @param newView\n * @param tNode\n */\nfunction enterDI(newView, tNode) {\n    ngDevMode && assertLViewOrUndefined(newView);\n    const newLFrame = allocLFrame();\n    instructionState.lFrame = newLFrame;\n    newLFrame.previousOrParentTNode = tNode;\n    newLFrame.lView = newView;\n}\n/**\n * Swap the current lView with a new lView.\n *\n * For performance reasons we store the lView in the top level of the module.\n * This way we minimize the number of properties to read. Whenever a new view\n * is entered we have to store the lView for later, and when the view is\n * exited the state has to be restored\n *\n * @param newView New lView to become active\n * @param tNode Element to which the View is a child of\n * @returns the previously active lView;\n */\nfunction enterView(newView, tNode) {\n    ngDevMode && assertLViewOrUndefined(newView);\n    const newLFrame = allocLFrame();\n    if (ngDevMode) {\n        assertEqual(newLFrame.isParent, true, 'Expected clean LFrame');\n        assertEqual(newLFrame.lView, null, 'Expected clean LFrame');\n        assertEqual(newLFrame.tView, null, 'Expected clean LFrame');\n        assertEqual(newLFrame.selectedIndex, 0, 'Expected clean LFrame');\n        assertEqual(newLFrame.elementDepthCount, 0, 'Expected clean LFrame');\n        assertEqual(newLFrame.currentDirectiveIndex, -1, 'Expected clean LFrame');\n        assertEqual(newLFrame.currentNamespace, null, 'Expected clean LFrame');\n        assertEqual(newLFrame.bindingRootIndex, -1, 'Expected clean LFrame');\n        assertEqual(newLFrame.currentQueryIndex, 0, 'Expected clean LFrame');\n    }\n    const tView = newView[TVIEW];\n    instructionState.lFrame = newLFrame;\n    newLFrame.previousOrParentTNode = tNode;\n    newLFrame.lView = newView;\n    newLFrame.tView = tView;\n    newLFrame.contextLView = newView;\n    newLFrame.bindingIndex = tView.bindingStartIndex;\n}\n/**\n * Allocates next free LFrame. This function tries to reuse the `LFrame`s to lower memory pressure.\n */\nfunction allocLFrame() {\n    const currentLFrame = instructionState.lFrame;\n    const childLFrame = currentLFrame === null ? null : currentLFrame.child;\n    const newLFrame = childLFrame === null ? createLFrame(currentLFrame) : childLFrame;\n    return newLFrame;\n}\nfunction createLFrame(parent) {\n    const lFrame = {\n        previousOrParentTNode: null,\n        isParent: true,\n        lView: null,\n        tView: null,\n        selectedIndex: 0,\n        contextLView: null,\n        elementDepthCount: 0,\n        currentNamespace: null,\n        currentDirectiveIndex: -1,\n        bindingRootIndex: -1,\n        bindingIndex: -1,\n        currentQueryIndex: 0,\n        parent: parent,\n        child: null,\n    };\n    parent !== null && (parent.child = lFrame); // link the new LFrame for reuse.\n    return lFrame;\n}\n/**\n * A lightweight version of leave which is used with DI.\n *\n * This function only resets `previousOrParentTNode` and `LView` as those are the only properties\n * used with DI (`enterDI()`).\n *\n * NOTE: This function is reexported as `leaveDI`. However `leaveDI` has return type of `void` where\n * as `leaveViewLight` has `LFrame`. This is so that `leaveViewLight` can be used in `leaveView`.\n */\nfunction leaveViewLight() {\n    const oldLFrame = instructionState.lFrame;\n    instructionState.lFrame = oldLFrame.parent;\n    oldLFrame.previousOrParentTNode = null;\n    oldLFrame.lView = null;\n    return oldLFrame;\n}\n/**\n * This is a lightweight version of the `leaveView` which is needed by the DI system.\n *\n * NOTE: this function is an alias so that we can change the type of the function to have `void`\n * return type.\n */\nconst leaveDI = leaveViewLight;\n/**\n * Leave the current `LView`\n *\n * This pops the `LFrame` with the associated `LView` from the stack.\n *\n * IMPORTANT: We must zero out the `LFrame` values here otherwise they will be retained. This is\n * because for performance reasons we don't release `LFrame` but rather keep it for next use.\n */\nfunction leaveView() {\n    const oldLFrame = leaveViewLight();\n    oldLFrame.isParent = true;\n    oldLFrame.tView = null;\n    oldLFrame.selectedIndex = 0;\n    oldLFrame.contextLView = null;\n    oldLFrame.elementDepthCount = 0;\n    oldLFrame.currentDirectiveIndex = -1;\n    oldLFrame.currentNamespace = null;\n    oldLFrame.bindingRootIndex = -1;\n    oldLFrame.bindingIndex = -1;\n    oldLFrame.currentQueryIndex = 0;\n}\nfunction nextContextImpl(level) {\n    const contextLView = instructionState.lFrame.contextLView =\n        walkUpViews(level, instructionState.lFrame.contextLView);\n    return contextLView[CONTEXT];\n}\nfunction walkUpViews(nestingLevel, currentView) {\n    while (nestingLevel > 0) {\n        ngDevMode &&\n            assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n        currentView = currentView[DECLARATION_VIEW];\n        nestingLevel--;\n    }\n    return currentView;\n}\n/**\n * Gets the currently selected element index.\n *\n * Used with {@link property} instruction (and more in the future) to identify the index in the\n * current `LView` to act on.\n */\nfunction getSelectedIndex() {\n    return instructionState.lFrame.selectedIndex;\n}\n/**\n * Sets the most recent index passed to {@link select}\n *\n * Used with {@link property} instruction (and more in the future) to identify the index in the\n * current `LView` to act on.\n *\n * (Note that if an \"exit function\" was set earlier (via `setElementExitFn()`) then that will be\n * run if and when the provided `index` value is different from the current selected index value.)\n */\nfunction setSelectedIndex(index) {\n    instructionState.lFrame.selectedIndex = index;\n}\n/**\n * Gets the `tNode` that represents currently selected element.\n */\nfunction getSelectedTNode() {\n    const lFrame = instructionState.lFrame;\n    return getTNode(lFrame.tView, lFrame.selectedIndex);\n}\n/**\n * Sets the namespace used to create elements to `'http://www.w3.org/2000/svg'` in global state.\n *\n * @codeGenApi\n */\nfunction ɵɵnamespaceSVG() {\n    instructionState.lFrame.currentNamespace = SVG_NAMESPACE;\n}\n/**\n * Sets the namespace used to create elements to `'http://www.w3.org/1998/MathML/'` in global state.\n *\n * @codeGenApi\n */\nfunction ɵɵnamespaceMathML() {\n    instructionState.lFrame.currentNamespace = MATH_ML_NAMESPACE;\n}\n/**\n * Sets the namespace used to create elements to `null`, which forces element creation to use\n * `createElement` rather than `createElementNS`.\n *\n * @codeGenApi\n */\nfunction ɵɵnamespaceHTML() {\n    namespaceHTMLInternal();\n}\n/**\n * Sets the namespace used to create elements to `null`, which forces element creation to use\n * `createElement` rather than `createElementNS`.\n */\nfunction namespaceHTMLInternal() {\n    instructionState.lFrame.currentNamespace = null;\n}\nfunction getNamespace() {\n    return instructionState.lFrame.currentNamespace;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n *\n * Must be run *only* on the first template pass.\n *\n * Sets up the pre-order hooks on the provided `tView`,\n * see {@link HookData} for details about the data structure.\n *\n * @param directiveIndex The index of the directive in LView\n * @param directiveDef The definition containing the hooks to setup in tView\n * @param tView The current TView\n */\nfunction registerPreOrderHooks(directiveIndex, directiveDef, tView) {\n    ngDevMode && assertFirstCreatePass(tView);\n    const { ngOnChanges, ngOnInit, ngDoCheck } = directiveDef.type.prototype;\n    if (ngOnChanges) {\n        const wrappedOnChanges = NgOnChangesFeatureImpl(directiveDef);\n        (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, wrappedOnChanges);\n        (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = []))\n            .push(directiveIndex, wrappedOnChanges);\n    }\n    if (ngOnInit) {\n        (tView.preOrderHooks || (tView.preOrderHooks = [])).push(0 - directiveIndex, ngOnInit);\n    }\n    if (ngDoCheck) {\n        (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, ngDoCheck);\n        (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, ngDoCheck);\n    }\n}\n/**\n *\n * Loops through the directives on the provided `tNode` and queues hooks to be\n * run that are not initialization hooks.\n *\n * Should be executed during `elementEnd()` and similar to\n * preserve hook execution order. Content, view, and destroy hooks for projected\n * components and directives must be called *before* their hosts.\n *\n * Sets up the content, view, and destroy hooks on the provided `tView`,\n * see {@link HookData} for details about the data structure.\n *\n * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n * separately at `elementStart`.\n *\n * @param tView The current TView\n * @param tNode The TNode whose directives are to be searched for hooks to queue\n */\nfunction registerPostOrderHooks(tView, tNode) {\n    ngDevMode && assertFirstCreatePass(tView);\n    // It's necessary to loop through the directives at elementEnd() (rather than processing in\n    // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n    // hooks for projected components and directives must be called *before* their hosts.\n    for (let i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n        const directiveDef = tView.data[i];\n        const lifecycleHooks = directiveDef.type.prototype;\n        const { ngAfterContentInit, ngAfterContentChecked, ngAfterViewInit, ngAfterViewChecked, ngOnDestroy } = lifecycleHooks;\n        if (ngAfterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(-i, ngAfterContentInit);\n        }\n        if (ngAfterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, ngAfterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, ngAfterContentChecked);\n        }\n        if (ngAfterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(-i, ngAfterViewInit);\n        }\n        if (ngAfterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, ngAfterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, ngAfterViewChecked);\n        }\n        if (ngOnDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, ngOnDestroy);\n        }\n    }\n}\n/**\n * Executing hooks requires complex logic as we need to deal with 2 constraints.\n *\n * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only\n * once, across many change detection cycles. This must be true even if some hooks throw, or if\n * some recursively trigger a change detection cycle.\n * To solve that, it is required to track the state of the execution of these init hooks.\n * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},\n * and the index within that phase. They can be seen as a cursor in the following structure:\n * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]\n * They are are stored as flags in LView[FLAGS].\n *\n * 2. Pre-order hooks can be executed in batches, because of the select instruction.\n * To be able to pause and resume their execution, we also need some state about the hook's array\n * that is being processed:\n * - the index of the next hook to be executed\n * - the number of init hooks already found in the processed part of the  array\n * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].\n */\n/**\n * Executes pre-order check hooks ( OnChanges, DoChanges) given a view where all the init hooks were\n * executed once. This is a light version of executeInitAndCheckPreOrderHooks where we can skip read\n * / write of the init-hooks related flags.\n * @param lView The LView where hooks are defined\n * @param hooks Hooks to be run\n * @param nodeIndex 3 cases depending on the value:\n * - undefined: all hooks from the array should be executed (post-order case)\n * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n * flushing the remaining hooks)\n * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n * case, when executing select(number))\n */\nfunction executeCheckHooks(lView, hooks, nodeIndex) {\n    callHooks(lView, hooks, 3 /* InitPhaseCompleted */, nodeIndex);\n}\n/**\n * Executes post-order init and check hooks (one of AfterContentInit, AfterContentChecked,\n * AfterViewInit, AfterViewChecked) given a view where there are pending init hooks to be executed.\n * @param lView The LView where hooks are defined\n * @param hooks Hooks to be run\n * @param initPhase A phase for which hooks should be run\n * @param nodeIndex 3 cases depending on the value:\n * - undefined: all hooks from the array should be executed (post-order case)\n * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n * flushing the remaining hooks)\n * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n * case, when executing select(number))\n */\nfunction executeInitAndCheckHooks(lView, hooks, initPhase, nodeIndex) {\n    ngDevMode &&\n        assertNotEqual(initPhase, 3 /* InitPhaseCompleted */, 'Init pre-order hooks should not be called more than once');\n    if ((lView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n        callHooks(lView, hooks, initPhase, nodeIndex);\n    }\n}\nfunction incrementInitPhaseFlags(lView, initPhase) {\n    ngDevMode &&\n        assertNotEqual(initPhase, 3 /* InitPhaseCompleted */, 'Init hooks phase should not be incremented after all init hooks have been run.');\n    let flags = lView[FLAGS];\n    if ((flags & 3 /* InitPhaseStateMask */) === initPhase) {\n        flags &= 2047 /* IndexWithinInitPhaseReset */;\n        flags += 1 /* InitPhaseStateIncrementer */;\n        lView[FLAGS] = flags;\n    }\n}\n/**\n * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n * the first LView pass\n *\n * @param currentView The current view\n * @param arr The array in which the hooks are found\n * @param initPhaseState the current state of the init phase\n * @param currentNodeIndex 3 cases depending on the value:\n * - undefined: all hooks from the array should be executed (post-order case)\n * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n * flushing the remaining hooks)\n * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n * case, when executing select(number))\n */\nfunction callHooks(currentView, arr, initPhase, currentNodeIndex) {\n    ngDevMode &&\n        assertEqual(getCheckNoChangesMode(), false, 'Hooks should never be run in the check no changes mode.');\n    const startIndex = currentNodeIndex !== undefined ?\n        (currentView[PREORDER_HOOK_FLAGS] & 65535 /* IndexOfTheNextPreOrderHookMaskMask */) :\n        0;\n    const nodeIndexLimit = currentNodeIndex != null ? currentNodeIndex : -1;\n    let lastNodeIndexFound = 0;\n    for (let i = startIndex; i < arr.length; i++) {\n        const hook = arr[i + 1];\n        if (typeof hook === 'number') {\n            lastNodeIndexFound = arr[i];\n            if (currentNodeIndex != null && lastNodeIndexFound >= currentNodeIndex) {\n                break;\n            }\n        }\n        else {\n            const isInitHook = arr[i] < 0;\n            if (isInitHook)\n                currentView[PREORDER_HOOK_FLAGS] += 65536 /* NumberOfInitHooksCalledIncrementer */;\n            if (lastNodeIndexFound < nodeIndexLimit || nodeIndexLimit == -1) {\n                callHook(currentView, initPhase, arr, i);\n                currentView[PREORDER_HOOK_FLAGS] =\n                    (currentView[PREORDER_HOOK_FLAGS] & 4294901760 /* NumberOfInitHooksCalledMask */) + i +\n                        2;\n            }\n            i++;\n        }\n    }\n}\n/**\n * Execute one hook against the current `LView`.\n *\n * @param currentView The current view\n * @param initPhaseState the current state of the init phase\n * @param arr The array in which the hooks are found\n * @param i The current index within the hook data array\n */\nfunction callHook(currentView, initPhase, arr, i) {\n    const isInitHook = arr[i] < 0;\n    const hook = arr[i + 1];\n    const directiveIndex = isInitHook ? -arr[i] : arr[i];\n    const directive = currentView[directiveIndex];\n    if (isInitHook) {\n        const indexWithintInitPhase = currentView[FLAGS] >> 11 /* IndexWithinInitPhaseShift */;\n        // The init phase state must be always checked here as it may have been recursively\n        // updated\n        if (indexWithintInitPhase <\n            (currentView[PREORDER_HOOK_FLAGS] >> 16 /* NumberOfInitHooksCalledShift */) &&\n            (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n            currentView[FLAGS] += 2048 /* IndexWithinInitPhaseIncrementer */;\n            hook.call(directive);\n        }\n    }\n    else {\n        hook.call(directive);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst TNODE = 8;\nconst PARENT_INJECTOR = 8;\nconst INJECTOR_BLOOM_PARENT_SIZE = 9;\nconst NO_PARENT_INJECTOR = -1;\n/**\n * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n * `TView.data`. This allows us to store information about the current node's tokens (which\n * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n * shared, so they live in `LView`).\n *\n * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n * determines whether a directive is available on the associated node or not. This prevents us\n * from searching the directives array at this level unless it's probable the directive is in it.\n *\n * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n *\n * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n * will differ based on where it is flattened into the main array, so it's not possible to know\n * the indices ahead of time and save their types here. The interfaces are still included here\n * for documentation purposes.\n *\n * export interface LInjector extends Array<any> {\n *\n *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n *    [0]: number;\n *\n *    // Cumulative bloom for directive IDs 32-63\n *    [1]: number;\n *\n *    // Cumulative bloom for directive IDs 64-95\n *    [2]: number;\n *\n *    // Cumulative bloom for directive IDs 96-127\n *    [3]: number;\n *\n *    // Cumulative bloom for directive IDs 128-159\n *    [4]: number;\n *\n *    // Cumulative bloom for directive IDs 160 - 191\n *    [5]: number;\n *\n *    // Cumulative bloom for directive IDs 192 - 223\n *    [6]: number;\n *\n *    // Cumulative bloom for directive IDs 224 - 255\n *    [7]: number;\n *\n *    // We need to store a reference to the injector's parent so DI can keep looking up\n *    // the injector tree until it finds the dependency it's looking for.\n *    [PARENT_INJECTOR]: number;\n * }\n *\n * export interface TInjector extends Array<any> {\n *\n *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n *    [0]: number;\n *\n *    // Shared node bloom for directive IDs 32-63\n *    [1]: number;\n *\n *    // Shared node bloom for directive IDs 64-95\n *    [2]: number;\n *\n *    // Shared node bloom for directive IDs 96-127\n *    [3]: number;\n *\n *    // Shared node bloom for directive IDs 128-159\n *    [4]: number;\n *\n *    // Shared node bloom for directive IDs 160 - 191\n *    [5]: number;\n *\n *    // Shared node bloom for directive IDs 192 - 223\n *    [6]: number;\n *\n *    // Shared node bloom for directive IDs 224 - 255\n *    [7]: number;\n *\n *    // Necessary to find directive indices for a particular node.\n *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n *  }\n */\n/**\n * Factory for creating instances of injectors in the NodeInjector.\n *\n * This factory is complicated by the fact that it can resolve `multi` factories as well.\n *\n * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n * - One without `multi` support (most common)\n * - One with `multi` values, (rare).\n *\n * Since VMs can cache up to 4 inline hidden classes this is OK.\n *\n * - Single factory: Only `resolving` and `factory` is defined.\n * - `providers` factory: `componentProviders` is a number and `index = -1`.\n * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n */\nclass NodeInjectorFactory {\n    constructor(\n    /**\n     * Factory to invoke in order to create a new instance.\n     */\n    factory, \n    /**\n     * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n     */\n    isViewProvider, injectImplementation) {\n        this.factory = factory;\n        /**\n         * Marker set to true during factory invocation to see if we get into recursive loop.\n         * Recursive loop causes an error to be displayed.\n         */\n        this.resolving = false;\n        this.canSeeViewProviders = isViewProvider;\n        this.injectImpl = injectImplementation;\n    }\n}\nfunction isFactory(obj) {\n    return obj instanceof NodeInjectorFactory;\n}\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\nconst unusedValueExportToPlacateAjd$3 = 1;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction assertNodeType(tNode, type) {\n    assertDefined(tNode, 'should be called with a TNode');\n    assertEqual(tNode.type, type, `should be a ${typeName(type)}`);\n}\nfunction assertNodeOfPossibleTypes(tNode, types, message) {\n    assertDefined(tNode, 'should be called with a TNode');\n    const found = types.some(type => tNode.type === type);\n    assertEqual(found, true, message !== null && message !== void 0 ? message : `Should be one of ${types.map(typeName).join(', ')} but got ${typeName(tNode.type)}`);\n}\nfunction assertNodeNotOfTypes(tNode, types, message) {\n    assertDefined(tNode, 'should be called with a TNode');\n    const found = types.some(type => tNode.type === type);\n    assertEqual(found, false, message !== null && message !== void 0 ? message : `Should not be one of ${types.map(typeName).join(', ')} but got ${typeName(tNode.type)}`);\n}\nfunction typeName(type) {\n    if (type == 1 /* Projection */)\n        return 'Projection';\n    if (type == 0 /* Container */)\n        return 'Container';\n    if (type == 5 /* IcuContainer */)\n        return 'IcuContainer';\n    if (type == 2 /* View */)\n        return 'View';\n    if (type == 3 /* Element */)\n        return 'Element';\n    if (type == 4 /* ElementContainer */)\n        return 'ElementContainer';\n    return '<unknown>';\n}\n\n/**\n * Assigns all attribute values to the provided element via the inferred renderer.\n *\n * This function accepts two forms of attribute entries:\n *\n * default: (key, value):\n *  attrs = [key1, value1, key2, value2]\n *\n * namespaced: (NAMESPACE_MARKER, uri, name, value)\n *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n *\n * The `attrs` array can contain a mix of both the default and namespaced entries.\n * The \"default\" values are set without a marker, but if the function comes across\n * a marker value then it will attempt to set a namespaced value. If the marker is\n * not of a namespaced value then the function will quit and return the index value\n * where it stopped during the iteration of the attrs array.\n *\n * See [AttributeMarker] to understand what the namespace marker value is.\n *\n * Note that this instruction does not support assigning style and class values to\n * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n * are applied to an element.\n * @param renderer The renderer to be used\n * @param native The element that the attributes will be assigned to\n * @param attrs The attribute array of values that will be assigned to the element\n * @returns the index value that was last accessed in the attributes array\n */\nfunction setUpAttributes(renderer, native, attrs) {\n    const isProc = isProceduralRenderer(renderer);\n    let i = 0;\n    while (i < attrs.length) {\n        const value = attrs[i];\n        if (typeof value === 'number') {\n            // only namespaces are supported. Other value types (such as style/class\n            // entries) are not supported in this function.\n            if (value !== 0 /* NamespaceURI */) {\n                break;\n            }\n            // we just landed on the marker value ... therefore\n            // we should skip to the next entry\n            i++;\n            const namespaceURI = attrs[i++];\n            const attrName = attrs[i++];\n            const attrVal = attrs[i++];\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            isProc ?\n                renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                native.setAttributeNS(namespaceURI, attrName, attrVal);\n        }\n        else {\n            // attrName is string;\n            const attrName = value;\n            const attrVal = attrs[++i];\n            // Standard attributes\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            if (isAnimationProp(attrName)) {\n                if (isProc) {\n                    renderer.setProperty(native, attrName, attrVal);\n                }\n            }\n            else {\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal) :\n                    native.setAttribute(attrName, attrVal);\n            }\n            i++;\n        }\n    }\n    // another piece of code may iterate over the same attributes array. Therefore\n    // it may be helpful to return the exact spot where the attributes array exited\n    // whether by running into an unsupported marker or if all the static values were\n    // iterated over.\n    return i;\n}\n/**\n * Test whether the given value is a marker that indicates that the following\n * attribute values in a `TAttributes` array are only the names of attributes,\n * and not name-value pairs.\n * @param marker The attribute marker to test.\n * @returns true if the marker is a \"name-only\" marker (e.g. `Bindings`, `Template` or `I18n`).\n */\nfunction isNameOnlyAttributeMarker(marker) {\n    return marker === 3 /* Bindings */ || marker === 4 /* Template */ ||\n        marker === 6 /* I18n */;\n}\nfunction isAnimationProp(name) {\n    // Perf note: accessing charCodeAt to check for the first character of a string is faster as\n    // compared to accessing a character at index 0 (ex. name[0]). The main reason for this is that\n    // charCodeAt doesn't allocate memory to return a substring.\n    return name.charCodeAt(0) === 64 /* AT_SIGN */;\n}\n/**\n * Merges `src` `TAttributes` into `dst` `TAttributes` removing any duplicates in the process.\n *\n * This merge function keeps the order of attrs same.\n *\n * @param dst Location of where the merged `TAttributes` should end up.\n * @param src `TAttributes` which should be appended to `dst`\n */\nfunction mergeHostAttrs(dst, src) {\n    if (src === null || src.length === 0) {\n        // do nothing\n    }\n    else if (dst === null || dst.length === 0) {\n        // We have source, but dst is empty, just make a copy.\n        dst = src.slice();\n    }\n    else {\n        let srcMarker = -1 /* ImplicitAttributes */;\n        for (let i = 0; i < src.length; i++) {\n            const item = src[i];\n            if (typeof item === 'number') {\n                srcMarker = item;\n            }\n            else {\n                if (srcMarker === 0 /* NamespaceURI */) {\n                    // Case where we need to consume `key1`, `key2`, `value` items.\n                }\n                else if (srcMarker === -1 /* ImplicitAttributes */ ||\n                    srcMarker === 2 /* Styles */) {\n                    // Case where we have to consume `key1` and `value` only.\n                    mergeHostAttribute(dst, srcMarker, item, null, src[++i]);\n                }\n                else {\n                    // Case where we have to consume `key1` only.\n                    mergeHostAttribute(dst, srcMarker, item, null, null);\n                }\n            }\n        }\n    }\n    return dst;\n}\n/**\n * Append `key`/`value` to existing `TAttributes` taking region marker and duplicates into account.\n *\n * @param dst `TAttributes` to append to.\n * @param marker Region where the `key`/`value` should be added.\n * @param key1 Key to add to `TAttributes`\n * @param key2 Key to add to `TAttributes` (in case of `AttributeMarker.NamespaceURI`)\n * @param value Value to add or to overwrite to `TAttributes` Only used if `marker` is not Class.\n */\nfunction mergeHostAttribute(dst, marker, key1, key2, value) {\n    let i = 0;\n    // Assume that new markers will be inserted at the end.\n    let markerInsertPosition = dst.length;\n    // scan until correct type.\n    if (marker === -1 /* ImplicitAttributes */) {\n        markerInsertPosition = -1;\n    }\n    else {\n        while (i < dst.length) {\n            const dstValue = dst[i++];\n            if (typeof dstValue === 'number') {\n                if (dstValue === marker) {\n                    markerInsertPosition = -1;\n                    break;\n                }\n                else if (dstValue > marker) {\n                    // We need to save this as we want the markers to be inserted in specific order.\n                    markerInsertPosition = i - 1;\n                    break;\n                }\n            }\n        }\n    }\n    // search until you find place of insertion\n    while (i < dst.length) {\n        const item = dst[i];\n        if (typeof item === 'number') {\n            // since `i` started as the index after the marker, we did not find it if we are at the next\n            // marker\n            break;\n        }\n        else if (item === key1) {\n            // We already have same token\n            if (key2 === null) {\n                if (value !== null) {\n                    dst[i + 1] = value;\n                }\n                return;\n            }\n            else if (key2 === dst[i + 1]) {\n                dst[i + 2] = value;\n                return;\n            }\n        }\n        // Increment counter.\n        i++;\n        if (key2 !== null)\n            i++;\n        if (value !== null)\n            i++;\n    }\n    // insert at location.\n    if (markerInsertPosition !== -1) {\n        dst.splice(markerInsertPosition, 0, marker);\n        i = markerInsertPosition + 1;\n    }\n    dst.splice(i++, 0, key1);\n    if (key2 !== null) {\n        dst.splice(i++, 0, key2);\n    }\n    if (value !== null) {\n        dst.splice(i++, 0, value);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/// Parent Injector Utils ///////////////////////////////////////////////////////////////\nfunction hasParentInjector(parentLocation) {\n    return parentLocation !== NO_PARENT_INJECTOR;\n}\nfunction getParentInjectorIndex(parentLocation) {\n    return parentLocation & 32767 /* InjectorIndexMask */;\n}\nfunction getParentInjectorViewOffset(parentLocation) {\n    return parentLocation >> 16 /* ViewOffsetShift */;\n}\n/**\n * Unwraps a parent injector location number to find the view offset from the current injector,\n * then walks up the declaration view tree until the view is found that contains the parent\n * injector.\n *\n * @param location The location of the parent injector, which contains the view offset\n * @param startView The LView instance from which to start walking up the view tree\n * @returns The LView instance that contains the parent injector\n */\nfunction getParentInjectorView(location, startView) {\n    let viewOffset = getParentInjectorViewOffset(location);\n    let parentView = startView;\n    // For most cases, the parent injector can be found on the host node (e.g. for component\n    // or container), but we must keep the loop here to support the rarer case of deeply nested\n    // <ng-template> tags or inline views, where the parent injector might live many views\n    // above the child injector.\n    while (viewOffset > 0) {\n        parentView = parentView[DECLARATION_VIEW];\n        viewOffset--;\n    }\n    return parentView;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used for stringify render output in Ivy.\n * Important! This function is very performance-sensitive and we should\n * be extra careful not to introduce megamorphic reads in it.\n */\nfunction renderStringify(value) {\n    if (typeof value === 'string')\n        return value;\n    if (value == null)\n        return '';\n    return '' + value;\n}\n/**\n * Used to stringify a value so that it can be displayed in an error message.\n * Important! This function contains a megamorphic read and should only be\n * used for error messages.\n */\nfunction stringifyForError(value) {\n    if (typeof value === 'function')\n        return value.name || value.toString();\n    if (typeof value === 'object' && value != null && typeof value.type === 'function') {\n        return value.type.name || value.type.toString();\n    }\n    return renderStringify(value);\n}\nconst ɵ0$3 = () => (typeof requestAnimationFrame !== 'undefined' &&\n    requestAnimationFrame || // browser only\n    setTimeout // everything else\n)\n    .bind(_global);\nconst defaultScheduler = (ɵ0$3)();\n/**\n *\n * @codeGenApi\n */\nfunction ɵɵresolveWindow(element) {\n    return { name: 'window', target: element.ownerDocument.defaultView };\n}\n/**\n *\n * @codeGenApi\n */\nfunction ɵɵresolveDocument(element) {\n    return { name: 'document', target: element.ownerDocument };\n}\n/**\n *\n * @codeGenApi\n */\nfunction ɵɵresolveBody(element) {\n    return { name: 'body', target: element.ownerDocument.body };\n}\n/**\n * The special delimiter we use to separate property names, prefixes, and suffixes\n * in property binding metadata. See storeBindingMetadata().\n *\n * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n * because it is a very uncommon character that is unlikely to be part of a user's\n * property names or interpolation strings. If it is in fact used in a property\n * binding, DebugElement.properties will not return the correct value for that\n * binding. However, there should be no runtime effect for real applications.\n *\n * This character is typically rendered as a question mark inside of a diamond.\n * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n *\n */\nconst INTERPOLATION_DELIMITER = `�`;\n/**\n * Unwrap a value which might be behind a closure (for forward declaration reasons).\n */\nfunction maybeUnwrapFn(value) {\n    if (value instanceof Function) {\n        return value();\n    }\n    else {\n        return value;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines if the call to `inject` should include `viewProviders` in its resolution.\n *\n * This is set to true when we try to instantiate a component. This value is reset in\n * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n * instantiated. This is done so that if we are injecting a token which was declared outside of\n * `viewProviders` we don't accidentally pull `viewProviders` in.\n *\n * Example:\n *\n * ```\n * @Injectable()\n * class MyService {\n *   constructor(public value: String) {}\n * }\n *\n * @Component({\n *   providers: [\n *     MyService,\n *     {provide: String, value: 'providers' }\n *   ]\n *   viewProviders: [\n *     {provide: String, value: 'viewProviders'}\n *   ]\n * })\n * class MyComponent {\n *   constructor(myService: MyService, value: String) {\n *     // We expect that Component can see into `viewProviders`.\n *     expect(value).toEqual('viewProviders');\n *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n *     expect(myService.value).toEqual('providers');\n *   }\n * }\n *\n * ```\n */\nlet includeViewProviders = true;\nfunction setIncludeViewProviders(v) {\n    const oldValue = includeViewProviders;\n    includeViewProviders = v;\n    return oldValue;\n}\n/**\n * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n * directives that will share slots, and thus, the fewer false positives when checking for\n * the existence of a directive.\n */\nconst BLOOM_SIZE = 256;\nconst BLOOM_MASK = BLOOM_SIZE - 1;\n/** Counter used to generate unique IDs for directives. */\nlet nextNgElementId = 0;\n/**\n * Registers this directive as present in its node's injector by flipping the directive's\n * corresponding bit in the injector's bloom filter.\n *\n * @param injectorIndex The index of the node injector where this token should be registered\n * @param tView The TView for the injector's bloom filters\n * @param type The directive token to register\n */\nfunction bloomAdd(injectorIndex, tView, type) {\n    ngDevMode && assertEqual(tView.firstCreatePass, true, 'expected firstCreatePass to be true');\n    let id;\n    if (typeof type === 'string') {\n        id = type.charCodeAt(0) || 0;\n    }\n    else if (type.hasOwnProperty(NG_ELEMENT_ID)) {\n        id = type[NG_ELEMENT_ID];\n    }\n    // Set a unique ID on the directive type, so if something tries to inject the directive,\n    // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n    if (id == null) {\n        id = type[NG_ELEMENT_ID] = nextNgElementId++;\n    }\n    // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n    // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n    const bloomBit = id & BLOOM_MASK;\n    // Create a mask that targets the specific bit associated with the directive.\n    // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n    // to bit positions 0 - 31 in a 32 bit integer.\n    const mask = 1 << bloomBit;\n    // Use the raw bloomBit number to determine which bloom filter bucket we should check\n    // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n    const b7 = bloomBit & 0x80;\n    const b6 = bloomBit & 0x40;\n    const b5 = bloomBit & 0x20;\n    const tData = tView.data;\n    if (b7) {\n        b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n            (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n    }\n    else {\n        b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n            (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n    }\n}\n/**\n * Creates (or gets an existing) injector for a given element or container.\n *\n * @param tNode for which an injector should be retrieved / created.\n * @param hostView View where the node is stored\n * @returns Node injector\n */\nfunction getOrCreateNodeInjectorForNode(tNode, hostView) {\n    const existingInjectorIndex = getInjectorIndex(tNode, hostView);\n    if (existingInjectorIndex !== -1) {\n        return existingInjectorIndex;\n    }\n    const tView = hostView[TVIEW];\n    if (tView.firstCreatePass) {\n        tNode.injectorIndex = hostView.length;\n        insertBloom(tView.data, tNode); // foundation for node bloom\n        insertBloom(hostView, null); // foundation for cumulative bloom\n        insertBloom(tView.blueprint, null);\n    }\n    const parentLoc = getParentInjectorLocation(tNode, hostView);\n    const injectorIndex = tNode.injectorIndex;\n    // If a parent injector can't be found, its location is set to -1.\n    // In that case, we don't need to set up a cumulative bloom\n    if (hasParentInjector(parentLoc)) {\n        const parentIndex = getParentInjectorIndex(parentLoc);\n        const parentLView = getParentInjectorView(parentLoc, hostView);\n        const parentData = parentLView[TVIEW].data;\n        // Creates a cumulative bloom filter that merges the parent's bloom filter\n        // and its own cumulative bloom (which contains tokens for all ancestors)\n        for (let i = 0; i < 8; i++) {\n            hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n        }\n    }\n    hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n    return injectorIndex;\n}\nfunction insertBloom(arr, footer) {\n    arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n}\nfunction getInjectorIndex(tNode, hostView) {\n    if (tNode.injectorIndex === -1 ||\n        // If the injector index is the same as its parent's injector index, then the index has been\n        // copied down from the parent node. No injector has been created yet on this node.\n        (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n        // After the first template pass, the injector index might exist but the parent values\n        // might not have been calculated yet for this instance\n        hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n        return -1;\n    }\n    else {\n        return tNode.injectorIndex;\n    }\n}\n/**\n * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n * parent injector initially.\n *\n * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n */\nfunction getParentInjectorLocation(tNode, view) {\n    if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n        return tNode.parent.injectorIndex; // ViewOffset is 0\n    }\n    // For most cases, the parent injector index can be found on the host node (e.g. for component\n    // or container), so this loop will be skipped, but we must keep the loop here to support\n    // the rarer case of deeply nested <ng-template> tags or inline views.\n    let hostTNode = view[T_HOST];\n    let viewOffset = 1;\n    while (hostTNode && hostTNode.injectorIndex === -1) {\n        view = view[DECLARATION_VIEW];\n        hostTNode = view ? view[T_HOST] : null;\n        viewOffset++;\n    }\n    return hostTNode ?\n        hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n        -1;\n}\n/**\n * Makes a type or an injection token public to the DI system by adding it to an\n * injector's bloom filter.\n *\n * @param di The node injector in which a directive will be added\n * @param token The type or the injection token to be made public\n */\nfunction diPublicInInjector(injectorIndex, tView, token) {\n    bloomAdd(injectorIndex, tView, token);\n}\n/**\n * Inject static attribute value into directive constructor.\n *\n * This method is used with `factory` functions which are generated as part of\n * `defineDirective` or `defineComponent`. The method retrieves the static value\n * of an attribute. (Dynamic attributes are not supported since they are not resolved\n *  at the time of injection and can change over time.)\n *\n * # Example\n * Given:\n * ```\n * @Component(...)\n * class MyComponent {\n *   constructor(@Attribute('title') title: string) { ... }\n * }\n * ```\n * When instantiated with\n * ```\n * <my-component title=\"Hello\"></my-component>\n * ```\n *\n * Then factory method generated is:\n * ```\n * MyComponent.ɵcmp = defineComponent({\n *   factory: () => new MyComponent(injectAttribute('title'))\n *   ...\n * })\n * ```\n *\n * @publicApi\n */\nfunction injectAttributeImpl(tNode, attrNameToInject) {\n    ngDevMode &&\n        assertNodeOfPossibleTypes(tNode, [0 /* Container */, 3 /* Element */, 4 /* ElementContainer */]);\n    ngDevMode && assertDefined(tNode, 'expecting tNode');\n    if (attrNameToInject === 'class') {\n        return tNode.classes;\n    }\n    if (attrNameToInject === 'style') {\n        return tNode.styles;\n    }\n    const attrs = tNode.attrs;\n    if (attrs) {\n        const attrsLength = attrs.length;\n        let i = 0;\n        while (i < attrsLength) {\n            const value = attrs[i];\n            // If we hit a `Bindings` or `Template` marker then we are done.\n            if (isNameOnlyAttributeMarker(value))\n                break;\n            // Skip namespaced attributes\n            if (value === 0 /* NamespaceURI */) {\n                // we skip the next two values\n                // as namespaced attributes looks like\n                // [..., AttributeMarker.NamespaceURI, 'http://someuri.com/test', 'test:exist',\n                // 'existValue', ...]\n                i = i + 2;\n            }\n            else if (typeof value === 'number') {\n                // Skip to the first value of the marked attribute.\n                i++;\n                while (i < attrsLength && typeof attrs[i] === 'string') {\n                    i++;\n                }\n            }\n            else if (value === attrNameToInject) {\n                return attrs[i + 1];\n            }\n            else {\n                i = i + 2;\n            }\n        }\n    }\n    return null;\n}\n/**\n * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n *\n * Look for the injector providing the token by walking up the node injector tree and then\n * the module injector tree.\n *\n * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n * filter. Negative values are reserved for special objects.\n *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n *\n * @param tNode The Node where the search for the injector should start\n * @param lView The `LView` that contains the `tNode`\n * @param token The token to look for\n * @param flags Injection flags\n * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n */\nfunction getOrCreateInjectable(tNode, lView, token, flags = InjectFlags.Default, notFoundValue) {\n    if (tNode !== null) {\n        const bloomHash = bloomHashBitOrFactory(token);\n        // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n        // so just call the factory function to create it.\n        if (typeof bloomHash === 'function') {\n            enterDI(lView, tNode);\n            try {\n                const value = bloomHash();\n                if (value == null && !(flags & InjectFlags.Optional)) {\n                    throw new Error(`No provider for ${stringifyForError(token)}!`);\n                }\n                else {\n                    return value;\n                }\n            }\n            finally {\n                leaveDI();\n            }\n        }\n        else if (typeof bloomHash == 'number') {\n            if (bloomHash === -1) {\n                // `-1` is a special value used to identify `Injector` types.\n                return new NodeInjector(tNode, lView);\n            }\n            // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n            // A reference to the previous injector TView that was found while climbing the element\n            // injector tree. This is used to know if viewProviders can be accessed on the current\n            // injector.\n            let previousTView = null;\n            let injectorIndex = getInjectorIndex(tNode, lView);\n            let parentLocation = NO_PARENT_INJECTOR;\n            let hostTElementNode = flags & InjectFlags.Host ? lView[DECLARATION_COMPONENT_VIEW][T_HOST] : null;\n            // If we should skip this injector, or if there is no injector on this node, start by\n            // searching\n            // the parent injector.\n            if (injectorIndex === -1 || flags & InjectFlags.SkipSelf) {\n                parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                    lView[injectorIndex + PARENT_INJECTOR];\n                if (!shouldSearchParent(flags, false)) {\n                    injectorIndex = -1;\n                }\n                else {\n                    previousTView = lView[TVIEW];\n                    injectorIndex = getParentInjectorIndex(parentLocation);\n                    lView = getParentInjectorView(parentLocation, lView);\n                }\n            }\n            // Traverse up the injector tree until we find a potential match or until we know there\n            // *isn't* a match.\n            while (injectorIndex !== -1) {\n                parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                // Check the current injector. If it matches, see if it contains token.\n                const tView = lView[TVIEW];\n                if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                    // At this point, we have an injector which *may* contain the token, so we step through\n                    // the providers and directives associated with the injector's corresponding node to get\n                    // the instance.\n                    const instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                    if (instance !== NOT_FOUND) {\n                        return instance;\n                    }\n                }\n                if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                    bloomHasToken(bloomHash, injectorIndex, lView)) {\n                    // The def wasn't found anywhere on this node, so it was a false positive.\n                    // Traverse up the tree and continue searching.\n                    previousTView = tView;\n                    injectorIndex = getParentInjectorIndex(parentLocation);\n                    lView = getParentInjectorView(parentLocation, lView);\n                }\n                else {\n                    // If we should not search parent OR If the ancestor bloom filter value does not have the\n                    // bit corresponding to the directive we can give up on traversing up to find the specific\n                    // injector.\n                    injectorIndex = -1;\n                }\n            }\n        }\n    }\n    if (flags & InjectFlags.Optional && notFoundValue === undefined) {\n        // This must be set or the NullInjector will throw for optional deps\n        notFoundValue = null;\n    }\n    if ((flags & (InjectFlags.Self | InjectFlags.Host)) === 0) {\n        const moduleInjector = lView[INJECTOR$1];\n        // switch to `injectInjectorOnly` implementation for module injector, since module injector\n        // should not have access to Component/Directive DI scope (that may happen through\n        // `directiveInject` implementation)\n        const previousInjectImplementation = setInjectImplementation(undefined);\n        try {\n            if (moduleInjector) {\n                return moduleInjector.get(token, notFoundValue, flags & InjectFlags.Optional);\n            }\n            else {\n                return injectRootLimpMode(token, notFoundValue, flags & InjectFlags.Optional);\n            }\n        }\n        finally {\n            setInjectImplementation(previousInjectImplementation);\n        }\n    }\n    if (flags & InjectFlags.Optional) {\n        return notFoundValue;\n    }\n    else {\n        throw new Error(`NodeInjector: NOT_FOUND [${stringifyForError(token)}]`);\n    }\n}\nconst NOT_FOUND = {};\nfunction searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n    const currentTView = lView[TVIEW];\n    const tNode = currentTView.data[injectorIndex + TNODE];\n    // First, we need to determine if view providers can be accessed by the starting element.\n    // There are two possibities\n    const canAccessViewProviders = previousTView == null ?\n        // 1) This is the first invocation `previousTView == null` which means that we are at the\n        // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n        // to look into the ViewProviders is if:\n        // - we are on a component\n        // - AND the injector set `includeViewProviders` to true (implying that the token can see\n        // ViewProviders because it is the Component or a Service which itself was declared in\n        // ViewProviders)\n        (isComponentHost(tNode) && includeViewProviders) :\n        // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n        // In such a case we are only allowed to look into the ViewProviders if:\n        // - We just crossed from child View to Parent View `previousTView != currentTView`\n        // - AND the parent TNode is an Element.\n        // This means that we just came from the Component's View and therefore are allowed to see\n        // into the ViewProviders.\n        (previousTView != currentTView && (tNode.type === 3 /* Element */));\n    // This special case happens when there is a @host on the inject and when we are searching\n    // on the host element node.\n    const isHostSpecialCase = (flags & InjectFlags.Host) && hostTElementNode === tNode;\n    const injectableIdx = locateDirectiveOrProvider(tNode, currentTView, token, canAccessViewProviders, isHostSpecialCase);\n    if (injectableIdx !== null) {\n        return getNodeInjectable(lView, currentTView, injectableIdx, tNode);\n    }\n    else {\n        return NOT_FOUND;\n    }\n}\n/**\n * Searches for the given token among the node's directives and providers.\n *\n * @param tNode TNode on which directives are present.\n * @param tView The tView we are currently processing\n * @param token Provider token or type of a directive to look for.\n * @param canAccessViewProviders Whether view providers should be considered.\n * @param isHostSpecialCase Whether the host special case applies.\n * @returns Index of a found directive or provider, or null when none found.\n */\nfunction locateDirectiveOrProvider(tNode, tView, token, canAccessViewProviders, isHostSpecialCase) {\n    const nodeProviderIndexes = tNode.providerIndexes;\n    const tInjectables = tView.data;\n    const injectablesStart = nodeProviderIndexes & 1048575 /* ProvidersStartIndexMask */;\n    const directivesStart = tNode.directiveStart;\n    const directiveEnd = tNode.directiveEnd;\n    const cptViewProvidersCount = nodeProviderIndexes >> 20 /* CptViewProvidersCountShift */;\n    const startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n    // When the host special case applies, only the viewProviders and the component are visible\n    const endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n    for (let i = startingIndex; i < endIndex; i++) {\n        const providerTokenOrDef = tInjectables[i];\n        if (i < directivesStart && token === providerTokenOrDef ||\n            i >= directivesStart && providerTokenOrDef.type === token) {\n            return i;\n        }\n    }\n    if (isHostSpecialCase) {\n        const dirDef = tInjectables[directivesStart];\n        if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n            return directivesStart;\n        }\n    }\n    return null;\n}\n/**\n * Retrieve or instantiate the injectable from the `LView` at particular `index`.\n *\n * This function checks to see if the value has already been instantiated and if so returns the\n * cached `injectable`. Otherwise if it detects that the value is still a factory it\n * instantiates the `injectable` and caches the value.\n */\nfunction getNodeInjectable(lView, tView, index, tNode) {\n    let value = lView[index];\n    const tData = tView.data;\n    if (isFactory(value)) {\n        const factory = value;\n        if (factory.resolving) {\n            throw new Error(`Circular dep for ${stringifyForError(tData[index])}`);\n        }\n        const previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n        factory.resolving = true;\n        let previousInjectImplementation;\n        if (factory.injectImpl) {\n            previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n        }\n        enterDI(lView, tNode);\n        try {\n            value = lView[index] = factory.factory(undefined, tData, lView, tNode);\n            // This code path is hit for both directives and providers.\n            // For perf reasons, we want to avoid searching for hooks on providers.\n            // It does no harm to try (the hooks just won't exist), but the extra\n            // checks are unnecessary and this is a hot path. So we check to see\n            // if the index of the dependency is in the directive range for this\n            // tNode. If it's not, we know it's a provider and skip hook registration.\n            if (tView.firstCreatePass && index >= tNode.directiveStart) {\n                ngDevMode && assertDirectiveDef(tData[index]);\n                registerPreOrderHooks(index, tData[index], tView);\n            }\n        }\n        finally {\n            if (factory.injectImpl)\n                setInjectImplementation(previousInjectImplementation);\n            setIncludeViewProviders(previousIncludeViewProviders);\n            factory.resolving = false;\n            leaveDI();\n        }\n    }\n    return value;\n}\n/**\n * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n * the directive might be provided by the injector.\n *\n * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n * is returned as the node injector can not possibly provide that token.\n *\n * @param token the injection token\n * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n *   When the returned value is negative then it represents special values such as `Injector`.\n */\nfunction bloomHashBitOrFactory(token) {\n    ngDevMode && assertDefined(token, 'token must be defined');\n    if (typeof token === 'string') {\n        return token.charCodeAt(0) || 0;\n    }\n    const tokenId = \n    // First check with `hasOwnProperty` so we don't get an inherited ID.\n    token.hasOwnProperty(NG_ELEMENT_ID) ? token[NG_ELEMENT_ID] : undefined;\n    // Negative token IDs are used for special objects such as `Injector`\n    return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n}\nfunction bloomHasToken(bloomHash, injectorIndex, injectorView) {\n    // Create a mask that targets the specific bit associated with the directive we're looking for.\n    // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n    // to bit positions 0 - 31 in a 32 bit integer.\n    const mask = 1 << bloomHash;\n    const b7 = bloomHash & 0x80;\n    const b6 = bloomHash & 0x40;\n    const b5 = bloomHash & 0x20;\n    // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n    // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n    // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n    let value;\n    if (b7) {\n        value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n            (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n    }\n    else {\n        value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n            (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n    }\n    // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n    // this injector is a potential match.\n    return !!(value & mask);\n}\n/** Returns true if flags prevent parent injector from being searched for tokens */\nfunction shouldSearchParent(flags, isFirstHostTNode) {\n    return !(flags & InjectFlags.Self) && !(flags & InjectFlags.Host && isFirstHostTNode);\n}\nclass NodeInjector {\n    constructor(_tNode, _lView) {\n        this._tNode = _tNode;\n        this._lView = _lView;\n    }\n    get(token, notFoundValue) {\n        return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n    }\n}\n/**\n * @codeGenApi\n */\nfunction ɵɵgetFactoryOf(type) {\n    const typeAny = type;\n    if (isForwardRef(type)) {\n        return (() => {\n            const factory = ɵɵgetFactoryOf(resolveForwardRef(typeAny));\n            return factory ? factory() : null;\n        });\n    }\n    let factory = getFactoryDef(typeAny);\n    if (factory === null) {\n        const injectorDef = getInjectorDef(typeAny);\n        factory = injectorDef && injectorDef.factory;\n    }\n    return factory || null;\n}\n/**\n * @codeGenApi\n */\nfunction ɵɵgetInheritedFactory(type) {\n    return noSideEffects(() => {\n        const ownConstructor = type.prototype.constructor;\n        const ownFactory = ownConstructor[NG_FACTORY_DEF] || ɵɵgetFactoryOf(ownConstructor);\n        const objectPrototype = Object.prototype;\n        let parent = Object.getPrototypeOf(type.prototype).constructor;\n        // Go up the prototype until we hit `Object`.\n        while (parent && parent !== objectPrototype) {\n            const factory = parent[NG_FACTORY_DEF] || ɵɵgetFactoryOf(parent);\n            // If we hit something that has a factory and the factory isn't the same as the type,\n            // we've found the inherited factory. Note the check that the factory isn't the type's\n            // own factory is redundant in most cases, but if the user has custom decorators on the\n            // class, this lookup will start one level down in the prototype chain, causing us to\n            // find the own factory first and potentially triggering an infinite loop downstream.\n            if (factory && factory !== ownFactory) {\n                return factory;\n            }\n            parent = Object.getPrototypeOf(parent);\n        }\n        // There is no factory defined. Either this was improper usage of inheritance\n        // (no Angular decorator on the superclass) or there is no constructor at all\n        // in the inheritance chain. Since the two cases cannot be distinguished, the\n        // latter has to be assumed.\n        return t => new t();\n    });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ERROR_TYPE = 'ngType';\nconst ERROR_DEBUG_CONTEXT = 'ngDebugContext';\nconst ERROR_ORIGINAL_ERROR = 'ngOriginalError';\nconst ERROR_LOGGER = 'ngErrorLogger';\nfunction wrappedError(message, originalError) {\n    const msg = `${message} caused by: ${originalError instanceof Error ? originalError.message : originalError}`;\n    const error = Error(msg);\n    error[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction getType(error) {\n    return error[ERROR_TYPE];\n}\nfunction getDebugContext(error) {\n    return error[ERROR_DEBUG_CONTEXT];\n}\nfunction getOriginalError(error) {\n    return error[ERROR_ORIGINAL_ERROR];\n}\nfunction getErrorLogger(error) {\n    return error[ERROR_LOGGER] || defaultErrorLogger;\n}\nfunction defaultErrorLogger(console, ...values) {\n    console.error(...values);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides a hook for centralized exception handling.\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * @NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n *\n * @publicApi\n */\nclass ErrorHandler {\n    constructor() {\n        /**\n         * @internal\n         */\n        this._console = console;\n    }\n    handleError(error) {\n        const originalError = this._findOriginalError(error);\n        const context = this._findContext(error);\n        // Note: Browser consoles show the place from where console.error was called.\n        // We can use this to give users additional information about the error.\n        const errorLogger = getErrorLogger(error);\n        errorLogger(this._console, `ERROR`, error);\n        if (originalError) {\n            errorLogger(this._console, `ORIGINAL ERROR`, originalError);\n        }\n        if (context) {\n            errorLogger(this._console, 'ERROR CONTEXT', context);\n        }\n    }\n    /** @internal */\n    _findContext(error) {\n        if (error) {\n            return getDebugContext(error) ? getDebugContext(error) :\n                this._findContext(getOriginalError(error));\n        }\n        return null;\n    }\n    /** @internal */\n    _findOriginalError(error) {\n        let e = getOriginalError(error);\n        while (e && getOriginalError(e)) {\n            e = getOriginalError(e);\n        }\n        return e;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines a schema that allows an NgModule to contain the following:\n * - Non-Angular elements named with dash case (`-`).\n * - Element properties named with dash case (`-`).\n * Dash case is the naming convention for custom elements.\n *\n * @publicApi\n */\nconst CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\n/**\n * Defines a schema that allows any property on any element.\n *\n * @publicApi\n */\nconst NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass SafeValueImpl {\n    constructor(changingThisBreaksApplicationSecurity) {\n        this.changingThisBreaksApplicationSecurity = changingThisBreaksApplicationSecurity;\n    }\n    toString() {\n        return `SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity}` +\n            ` (see http://g.co/ng/security#xss)`;\n    }\n}\nclass SafeHtmlImpl extends SafeValueImpl {\n    getTypeName() {\n        return \"HTML\" /* Html */;\n    }\n}\nclass SafeStyleImpl extends SafeValueImpl {\n    getTypeName() {\n        return \"Style\" /* Style */;\n    }\n}\nclass SafeScriptImpl extends SafeValueImpl {\n    getTypeName() {\n        return \"Script\" /* Script */;\n    }\n}\nclass SafeUrlImpl extends SafeValueImpl {\n    getTypeName() {\n        return \"URL\" /* Url */;\n    }\n}\nclass SafeResourceUrlImpl extends SafeValueImpl {\n    getTypeName() {\n        return \"ResourceURL\" /* ResourceUrl */;\n    }\n}\nfunction unwrapSafeValue(value) {\n    return value instanceof SafeValueImpl ? value.changingThisBreaksApplicationSecurity :\n        value;\n}\nfunction allowSanitizationBypassAndThrow(value, type) {\n    const actualType = getSanitizationBypassType(value);\n    if (actualType != null && actualType !== type) {\n        // Allow ResourceURLs in URL contexts, they are strictly more trusted.\n        if (actualType === \"ResourceURL\" /* ResourceUrl */ && type === \"URL\" /* Url */)\n            return true;\n        throw new Error(`Required a safe ${type}, got a ${actualType} (see http://g.co/ng/security#xss)`);\n    }\n    return actualType === type;\n}\nfunction getSanitizationBypassType(value) {\n    return value instanceof SafeValueImpl && value.getTypeName() || null;\n}\n/**\n * Mark `html` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n *\n * @param trustedHtml `html` string which needs to be implicitly trusted.\n * @returns a `html` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustHtml(trustedHtml) {\n    return new SafeHtmlImpl(trustedHtml);\n}\n/**\n * Mark `style` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link styleSanitizer} to be trusted implicitly.\n *\n * @param trustedStyle `style` string which needs to be implicitly trusted.\n * @returns a `style` hich has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustStyle(trustedStyle) {\n    return new SafeStyleImpl(trustedStyle);\n}\n/**\n * Mark `script` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n *\n * @param trustedScript `script` string which needs to be implicitly trusted.\n * @returns a `script` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustScript(trustedScript) {\n    return new SafeScriptImpl(trustedScript);\n}\n/**\n * Mark `url` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link urlSanitizer} to be trusted implicitly.\n *\n * @param trustedUrl `url` string which needs to be implicitly trusted.\n * @returns a `url`  which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustUrl(trustedUrl) {\n    return new SafeUrlImpl(trustedUrl);\n}\n/**\n * Mark `url` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n *\n * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n * @returns a `url` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n    return new SafeResourceUrlImpl(trustedResourceUrl);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n *\n * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n * please see [BAZEL.md](./docs/BAZEL.md).\n */\nlet _devMode = true;\nlet _runModeLocked = false;\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n *\n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n *\n * @publicApi\n */\nfunction isDevMode() {\n    _runModeLocked = true;\n    return _devMode;\n}\n/**\n * Disable Angular's development mode, which turns off assertions and other\n * checks within the framework.\n *\n * One important assertion this disables verifies that a change detection pass\n * does not result in additional changes to any bindings (also known as\n * unidirectional data flow).\n *\n * @publicApi\n */\nfunction enableProdMode() {\n    if (_runModeLocked) {\n        throw new Error('Cannot enable prod mode after platform setup.');\n    }\n    _devMode = false;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This helper is used to get hold of an inert tree of DOM elements containing dirty HTML\n * that needs sanitizing.\n * Depending upon browser support we use one of two strategies for doing this.\n * Default: DOMParser strategy\n * Fallback: InertDocument strategy\n */\nfunction getInertBodyHelper(defaultDoc) {\n    return isDOMParserAvailable() ? new DOMParserHelper() : new InertDocumentHelper(defaultDoc);\n}\n/**\n * Uses DOMParser to create and fill an inert body element.\n * This is the default strategy used in browsers that support it.\n */\nclass DOMParserHelper {\n    getInertBodyElement(html) {\n        // We add these extra elements to ensure that the rest of the content is parsed as expected\n        // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n        // `<head>` tag.\n        html = '<body><remove></remove>' + html + '</body>';\n        try {\n            const body = new window.DOMParser().parseFromString(html, 'text/html').body;\n            body.removeChild(body.firstChild);\n            return body;\n        }\n        catch (_a) {\n            return null;\n        }\n    }\n}\n/**\n * Use an HTML5 `template` element, if supported, or an inert body element created via\n * `createHtmlDocument` to create and fill an inert DOM element.\n * This is the fallback strategy if the browser does not support DOMParser.\n */\nclass InertDocumentHelper {\n    constructor(defaultDoc) {\n        this.defaultDoc = defaultDoc;\n        this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n        if (this.inertDocument.body == null) {\n            // usually there should be only one body element in the document, but IE doesn't have any, so\n            // we need to create one.\n            const inertHtml = this.inertDocument.createElement('html');\n            this.inertDocument.appendChild(inertHtml);\n            const inertBodyElement = this.inertDocument.createElement('body');\n            inertHtml.appendChild(inertBodyElement);\n        }\n    }\n    getInertBodyElement(html) {\n        // Prefer using <template> element if supported.\n        const templateEl = this.inertDocument.createElement('template');\n        if ('content' in templateEl) {\n            templateEl.innerHTML = html;\n            return templateEl;\n        }\n        // Note that previously we used to do something like `this.inertDocument.body.innerHTML = html`\n        // and we returned the inert `body` node. This was changed, because IE seems to treat setting\n        // `innerHTML` on an inserted element differently, compared to one that hasn't been inserted\n        // yet. In particular, IE appears to split some of the text into multiple text nodes rather\n        // than keeping them in a single one which ends up messing with Ivy's i18n parsing further\n        // down the line. This has been worked around by creating a new inert `body` and using it as\n        // the root node in which we insert the HTML.\n        const inertBody = this.inertDocument.createElement('body');\n        inertBody.innerHTML = html;\n        // Support: IE 9-11 only\n        // strip custom-namespaced attributes on IE<=11\n        if (this.defaultDoc.documentMode) {\n            this.stripCustomNsAttrs(inertBody);\n        }\n        return inertBody;\n    }\n    /**\n     * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n     * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n     * 'ns1:xlink:foo').\n     *\n     * This is undesirable since we don't want to allow any of these custom attributes. This method\n     * strips them all.\n     */\n    stripCustomNsAttrs(el) {\n        const elAttrs = el.attributes;\n        // loop backwards so that we can support removals.\n        for (let i = elAttrs.length - 1; 0 < i; i--) {\n            const attrib = elAttrs.item(i);\n            const attrName = attrib.name;\n            if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                el.removeAttribute(attrName);\n            }\n        }\n        let childNode = el.firstChild;\n        while (childNode) {\n            if (childNode.nodeType === Node.ELEMENT_NODE)\n                this.stripCustomNsAttrs(childNode);\n            childNode = childNode.nextSibling;\n        }\n    }\n}\n/**\n * We need to determine whether the DOMParser exists in the global context and\n * supports parsing HTML; HTML parsing support is not as wide as other formats, see\n * https://developer.mozilla.org/en-US/docs/Web/API/DOMParser#Browser_compatibility.\n *\n * @suppress {uselessCode}\n */\nfunction isDOMParserAvailable() {\n    try {\n        return !!new window.DOMParser().parseFromString('', 'text/html');\n    }\n    catch (_a) {\n        return false;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A pattern that recognizes a commonly useful subset of URLs that are safe.\n *\n * This regular expression matches a subset of URLs that will not cause script\n * execution if used in URL context within a HTML document. Specifically, this\n * regular expression matches if (comment from here on and regex copied from\n * Soy's EscapingConventions):\n * (1) Either an allowed protocol (http, https, mailto or ftp).\n * (2) or no protocol.  A protocol must be followed by a colon. The below\n *     allows that by allowing colons only after one of the characters [/?#].\n *     A colon after a hash (#) must be in the fragment.\n *     Otherwise, a colon after a (?) must be in a query.\n *     Otherwise, a colon after a single solidus (/) must be in a path.\n *     Otherwise, a colon after a double solidus (//) must be in the authority\n *     (before port).\n *\n * The pattern disallows &, used in HTML entity declarations before\n * one of the characters in [/?#]. This disallows HTML entities used in the\n * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n * It also disallows HTML entities in the first path part of a relative path,\n * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n * that. More importantly, it disallows masking of a colon,\n * e.g. \"javascript&#58;...\".\n *\n * This regular expression was taken from the Closure sanitization library.\n */\nconst SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n/* A pattern that matches safe srcset values */\nconst SAFE_SRCSET_PATTERN = /^(?:(?:https?|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n/** A pattern that matches safe data URLs. Only matches image, video and audio types. */\nconst DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\nfunction _sanitizeUrl(url) {\n    url = String(url);\n    if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n        return url;\n    if (isDevMode()) {\n        console.warn(`WARNING: sanitizing unsafe URL value ${url} (see http://g.co/ng/security#xss)`);\n    }\n    return 'unsafe:' + url;\n}\nfunction sanitizeSrcset(srcset) {\n    srcset = String(srcset);\n    return srcset.split(',').map((srcset) => _sanitizeUrl(srcset.trim())).join(', ');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction tagSet(tags) {\n    const res = {};\n    for (const t of tags.split(','))\n        res[t] = true;\n    return res;\n}\nfunction merge(...sets) {\n    const res = {};\n    for (const s of sets) {\n        for (const v in s) {\n            if (s.hasOwnProperty(v))\n                res[v] = true;\n        }\n    }\n    return res;\n}\n// Good source of info about elements and attributes\n// http://dev.w3.org/html5/spec/Overview.html#semantics\n// http://simon.html5.org/html-elements\n// Safe Void Elements - HTML5\n// http://dev.w3.org/html5/spec/Overview.html#void-elements\nconst VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n// Elements that you can, intentionally, leave open (and which close themselves)\n// http://dev.w3.org/html5/spec/Overview.html#optional-tags\nconst OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\nconst OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\nconst OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n// Safe Block Elements - HTML5\nconst BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n    'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n    'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n// Inline Elements - HTML5\nconst INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n    'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n    'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\nconst VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n// Attributes that have href and hence need to be sanitized\nconst URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n// Attributes that have special href set hence need to be sanitized\nconst SRCSET_ATTRS = tagSet('srcset');\nconst HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n    'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n    'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n    'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n    'valign,value,vspace,width');\n// Accessibility attributes as per WAI-ARIA 1.1 (W3C Working Draft 14 December 2018)\nconst ARIA_ATTRS = tagSet('aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,' +\n    'aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,' +\n    'aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,' +\n    'aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,' +\n    'aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,' +\n    'aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,' +\n    'aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext');\n// NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n// issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n// innerHTML is required, SVG attributes should be added here.\n// NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n// can be sanitized, but they increase security surface area without a legitimate use case, so they\n// are left out here.\nconst VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS, ARIA_ATTRS);\n// Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n//\n// Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n// `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n// don't want to preserve the content, if the elements themselves are going to be removed.\nconst SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n/**\n * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n * attributes.\n */\nclass SanitizingHtmlSerializer {\n    constructor() {\n        // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n        // because characters were re-encoded.\n        this.sanitizedSomething = false;\n        this.buf = [];\n    }\n    sanitizeChildren(el) {\n        // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n        // However this code never accesses properties off of `document` before deleting its contents\n        // again, so it shouldn't be vulnerable to DOM clobbering.\n        let current = el.firstChild;\n        let traverseContent = true;\n        while (current) {\n            if (current.nodeType === Node.ELEMENT_NODE) {\n                traverseContent = this.startElement(current);\n            }\n            else if (current.nodeType === Node.TEXT_NODE) {\n                this.chars(current.nodeValue);\n            }\n            else {\n                // Strip non-element, non-text nodes.\n                this.sanitizedSomething = true;\n            }\n            if (traverseContent && current.firstChild) {\n                current = current.firstChild;\n                continue;\n            }\n            while (current) {\n                // Leaving the element. Walk up and to the right, closing tags as we go.\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.endElement(current);\n                }\n                let next = this.checkClobberedElement(current, current.nextSibling);\n                if (next) {\n                    current = next;\n                    break;\n                }\n                current = this.checkClobberedElement(current, current.parentNode);\n            }\n        }\n        return this.buf.join('');\n    }\n    /**\n     * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n     * be traversed. Element content must always be traversed (even if the element itself is not\n     * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n     *\n     * @param element The element to sanitize.\n     * @return True if the element's contents should be traversed.\n     */\n    startElement(element) {\n        const tagName = element.nodeName.toLowerCase();\n        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n            this.sanitizedSomething = true;\n            return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n        }\n        this.buf.push('<');\n        this.buf.push(tagName);\n        const elAttrs = element.attributes;\n        for (let i = 0; i < elAttrs.length; i++) {\n            const elAttr = elAttrs.item(i);\n            const attrName = elAttr.name;\n            const lower = attrName.toLowerCase();\n            if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                this.sanitizedSomething = true;\n                continue;\n            }\n            let value = elAttr.value;\n            // TODO(martinprobst): Special case image URIs for data:image/...\n            if (URI_ATTRS[lower])\n                value = _sanitizeUrl(value);\n            if (SRCSET_ATTRS[lower])\n                value = sanitizeSrcset(value);\n            this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n        }\n        this.buf.push('>');\n        return true;\n    }\n    endElement(current) {\n        const tagName = current.nodeName.toLowerCase();\n        if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n            this.buf.push('</');\n            this.buf.push(tagName);\n            this.buf.push('>');\n        }\n    }\n    chars(chars) {\n        this.buf.push(encodeEntities(chars));\n    }\n    checkClobberedElement(node, nextNode) {\n        if (nextNode &&\n            (node.compareDocumentPosition(nextNode) &\n                Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n            throw new Error(`Failed to sanitize html because the element is clobbered: ${node.outerHTML}`);\n        }\n        return nextNode;\n    }\n}\n// Regular Expressions for parsing tags and attributes\nconst SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n// ! to ~ is the ASCII range.\nconst NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n/**\n * Escapes all potentially dangerous characters, so that the\n * resulting string can be safely inserted into attribute or\n * element text.\n * @param value\n */\nfunction encodeEntities(value) {\n    return value.replace(/&/g, '&amp;')\n        .replace(SURROGATE_PAIR_REGEXP, function (match) {\n        const hi = match.charCodeAt(0);\n        const low = match.charCodeAt(1);\n        return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n    })\n        .replace(NON_ALPHANUMERIC_REGEXP, function (match) {\n        return '&#' + match.charCodeAt(0) + ';';\n    })\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;');\n}\nlet inertBodyHelper;\n/**\n * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n * the DOM in a browser environment.\n */\nfunction _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n    let inertBodyElement = null;\n    try {\n        inertBodyHelper = inertBodyHelper || getInertBodyHelper(defaultDoc);\n        // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n        let unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n        inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n        // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n        let mXSSAttempts = 5;\n        let parsedHtml = unsafeHtml;\n        do {\n            if (mXSSAttempts === 0) {\n                throw new Error('Failed to sanitize html because the input is unstable');\n            }\n            mXSSAttempts--;\n            unsafeHtml = parsedHtml;\n            parsedHtml = inertBodyElement.innerHTML;\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        } while (unsafeHtml !== parsedHtml);\n        const sanitizer = new SanitizingHtmlSerializer();\n        const safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n        if (isDevMode() && sanitizer.sanitizedSomething) {\n            console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n        }\n        return safeHtml;\n    }\n    finally {\n        // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n        if (inertBodyElement) {\n            const parent = getTemplateContent(inertBodyElement) || inertBodyElement;\n            while (parent.firstChild) {\n                parent.removeChild(parent.firstChild);\n            }\n        }\n    }\n}\nfunction getTemplateContent(el) {\n    return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n        el.content :\n        null;\n}\nfunction isTemplateElement(el) {\n    return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A SecurityContext marks a location that has dangerous security implications, e.g. a DOM property\n * like `innerHTML` that could cause Cross Site Scripting (XSS) security bugs when improperly\n * handled.\n *\n * See DomSanitizer for more details on security in Angular applications.\n *\n * @publicApi\n */\nvar SecurityContext;\n(function (SecurityContext) {\n    SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n    SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n    SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n    SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n    SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n    SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n})(SecurityContext || (SecurityContext = {}));\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n * dangerous content.\n *\n * This method parses the `html` and locates potentially dangerous content (such as urls and\n * javascript) and removes it.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n *\n * @param unsafeHtml untrusted `html`, typically from the user.\n * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n * and urls have been removed.\n *\n * @codeGenApi\n */\nfunction ɵɵsanitizeHtml(unsafeHtml) {\n    const sanitizer = getSanitizer();\n    if (sanitizer) {\n        return sanitizer.sanitize(SecurityContext.HTML, unsafeHtml) || '';\n    }\n    if (allowSanitizationBypassAndThrow(unsafeHtml, \"HTML\" /* Html */)) {\n        return unwrapSafeValue(unsafeHtml);\n    }\n    return _sanitizeHtml(getDocument(), renderStringify(unsafeHtml));\n}\n/**\n * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n * dangerous content.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n *\n * @param unsafeStyle untrusted `style`, typically from the user.\n * @returns `style` string which is safe to bind to the `style` properties.\n *\n * @codeGenApi\n */\nfunction ɵɵsanitizeStyle(unsafeStyle) {\n    const sanitizer = getSanitizer();\n    if (sanitizer) {\n        return sanitizer.sanitize(SecurityContext.STYLE, unsafeStyle) || '';\n    }\n    if (allowSanitizationBypassAndThrow(unsafeStyle, \"Style\" /* Style */)) {\n        return unwrapSafeValue(unsafeStyle);\n    }\n    return renderStringify(unsafeStyle);\n}\n/**\n * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n * dangerous\n * content.\n *\n * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n * removes it.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n *\n * @param unsafeUrl untrusted `url`, typically from the user.\n * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n * all of the dangerous javascript has been removed.\n *\n * @codeGenApi\n */\nfunction ɵɵsanitizeUrl(unsafeUrl) {\n    const sanitizer = getSanitizer();\n    if (sanitizer) {\n        return sanitizer.sanitize(SecurityContext.URL, unsafeUrl) || '';\n    }\n    if (allowSanitizationBypassAndThrow(unsafeUrl, \"URL\" /* Url */)) {\n        return unwrapSafeValue(unsafeUrl);\n    }\n    return _sanitizeUrl(renderStringify(unsafeUrl));\n}\n/**\n * A `url` sanitizer which only lets trusted `url`s through.\n *\n * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n *\n * @param unsafeResourceUrl untrusted `url`, typically from the user.\n * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n * only trusted `url`s have been allowed to pass.\n *\n * @codeGenApi\n */\nfunction ɵɵsanitizeResourceUrl(unsafeResourceUrl) {\n    const sanitizer = getSanitizer();\n    if (sanitizer) {\n        return sanitizer.sanitize(SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n    }\n    if (allowSanitizationBypassAndThrow(unsafeResourceUrl, \"ResourceURL\" /* ResourceUrl */)) {\n        return unwrapSafeValue(unsafeResourceUrl);\n    }\n    throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n}\n/**\n * A `script` sanitizer which only lets trusted javascript through.\n *\n * This passes only `script`s marked trusted by calling {@link\n * bypassSanitizationTrustScript}.\n *\n * @param unsafeScript untrusted `script`, typically from the user.\n * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n * because only trusted `scripts` have been allowed to pass.\n *\n * @codeGenApi\n */\nfunction ɵɵsanitizeScript(unsafeScript) {\n    const sanitizer = getSanitizer();\n    if (sanitizer) {\n        return sanitizer.sanitize(SecurityContext.SCRIPT, unsafeScript) || '';\n    }\n    if (allowSanitizationBypassAndThrow(unsafeScript, \"Script\" /* Script */)) {\n        return unwrapSafeValue(unsafeScript);\n    }\n    throw new Error('unsafe value used in a script context');\n}\n/**\n * Detects which sanitizer to use for URL property, based on tag name and prop name.\n *\n * The rules are based on the RESOURCE_URL context config from\n * `packages/compiler/src/schema/dom_security_schema.ts`.\n * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n */\nfunction getUrlSanitizer(tag, prop) {\n    if ((prop === 'src' &&\n        (tag === 'embed' || tag === 'frame' || tag === 'iframe' || tag === 'media' ||\n            tag === 'script')) ||\n        (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n        return ɵɵsanitizeResourceUrl;\n    }\n    return ɵɵsanitizeUrl;\n}\n/**\n * Sanitizes URL, selecting sanitizer function based on tag and property names.\n *\n * This function is used in case we can't define security context at compile time, when only prop\n * name is available. This happens when we generate host bindings for Directives/Components. The\n * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n * runtime.\n *\n * @param unsafeUrl untrusted `url`, typically from the user.\n * @param tag target element tag name.\n * @param prop name of the property that contains the value.\n * @returns `url` string which is safe to bind.\n *\n * @codeGenApi\n */\nfunction ɵɵsanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n    return getUrlSanitizer(tag, prop)(unsafeUrl);\n}\nfunction validateAgainstEventProperties(name) {\n    if (name.toLowerCase().startsWith('on')) {\n        const msg = `Binding to event property '${name}' is disallowed for security reasons, ` +\n            `please use (${name.slice(2)})=...` +\n            `\\nIf '${name}' is a directive input, make sure the directive is imported by the` +\n            ` current module.`;\n        throw new Error(msg);\n    }\n}\nfunction validateAgainstEventAttributes(name) {\n    if (name.toLowerCase().startsWith('on')) {\n        const msg = `Binding to event attribute '${name}' is disallowed for security reasons, ` +\n            `please use (${name.slice(2)})=...`;\n        throw new Error(msg);\n    }\n}\nfunction getSanitizer() {\n    const lView = getLView();\n    return lView && lView[SANITIZER];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * THIS FILE CONTAINS CODE WHICH SHOULD BE TREE SHAKEN AND NEVER CALLED FROM PRODUCTION CODE!!!\n */\n/**\n * Creates an `Array` construction with a given name. This is useful when\n * looking for memory consumption to see what time of array it is.\n *\n *\n * @param name Name to give to the constructor\n * @returns A subclass of `Array` if possible. This can only be done in\n *          environments which support `class` construct.\n */\nfunction createNamedArrayType(name) {\n    // This should never be called in prod mode, so let's verify that is the case.\n    if (ngDevMode) {\n        try {\n            // We need to do it this way so that TypeScript does not down-level the below code.\n            const FunctionConstructor = createNamedArrayType.constructor;\n            return (new FunctionConstructor('Array', `return class ${name} extends Array{}`))(Array);\n        }\n        catch (e) {\n            // If it does not work just give up and fall back to regular Array.\n            return Array;\n        }\n    }\n    else {\n        throw new Error('Looks like we are in \\'prod mode\\', but we are creating a named Array type, which is wrong! Check your code');\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction normalizeDebugBindingName(name) {\n    // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n    name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n    return `ng-reflect-${name}`;\n}\nconst CAMEL_CASE_REGEXP = /([A-Z])/g;\nfunction camelCaseToDashCase(input) {\n    return input.replace(CAMEL_CASE_REGEXP, (...m) => '-' + m[1].toLowerCase());\n}\nfunction normalizeDebugBindingValue(value) {\n    try {\n        // Limit the size of the value as otherwise the DOM just gets polluted.\n        return value != null ? value.toString().slice(0, 30) : value;\n    }\n    catch (e) {\n        return '[ERROR] Exception while trying to serialize the value';\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns the matching `LContext` data for a given DOM node, directive or component instance.\n *\n * This function will examine the provided DOM element, component, or directive instance\\'s\n * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n * value will be that of the newly created `LContext`.\n *\n * If the monkey-patched value is the `LView` instance then the context value for that\n * target will be created and the monkey-patch reference will be updated. Therefore when this\n * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n * directive\\'s monkey-patch values.\n *\n * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n * is found which contains a monkey-patch reference. When that occurs then the provided element\n * will be updated with a new context (which is then returned). If the monkey-patch value is not\n * detected for a component/directive instance then it will throw an error (all components and\n * directives should be automatically monkey-patched by ivy).\n *\n * @param target Component, Directive or DOM Node.\n */\nfunction getLContext(target) {\n    let mpValue = readPatchedData(target);\n    if (mpValue) {\n        // only when it's an array is it considered an LView instance\n        // ... otherwise it's an already constructed LContext instance\n        if (Array.isArray(mpValue)) {\n            const lView = mpValue;\n            let nodeIndex;\n            let component = undefined;\n            let directives = undefined;\n            if (isComponentInstance(target)) {\n                nodeIndex = findViaComponent(lView, target);\n                if (nodeIndex == -1) {\n                    throw new Error('The provided component was not found in the application');\n                }\n                component = target;\n            }\n            else if (isDirectiveInstance(target)) {\n                nodeIndex = findViaDirective(lView, target);\n                if (nodeIndex == -1) {\n                    throw new Error('The provided directive was not found in the application');\n                }\n                directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n            }\n            else {\n                nodeIndex = findViaNativeElement(lView, target);\n                if (nodeIndex == -1) {\n                    return null;\n                }\n            }\n            // the goal is not to fill the entire context full of data because the lookups\n            // are expensive. Instead, only the target data (the element, component, container, ICU\n            // expression or directive details) are filled into the context. If called multiple times\n            // with different target values then the missing target data will be filled in.\n            const native = unwrapRNode(lView[nodeIndex]);\n            const existingCtx = readPatchedData(native);\n            const context = (existingCtx && !Array.isArray(existingCtx)) ?\n                existingCtx :\n                createLContext(lView, nodeIndex, native);\n            // only when the component has been discovered then update the monkey-patch\n            if (component && context.component === undefined) {\n                context.component = component;\n                attachPatchData(context.component, context);\n            }\n            // only when the directives have been discovered then update the monkey-patch\n            if (directives && context.directives === undefined) {\n                context.directives = directives;\n                for (let i = 0; i < directives.length; i++) {\n                    attachPatchData(directives[i], context);\n                }\n            }\n            attachPatchData(context.native, context);\n            mpValue = context;\n        }\n    }\n    else {\n        const rElement = target;\n        ngDevMode && assertDomNode(rElement);\n        // if the context is not found then we need to traverse upwards up the DOM\n        // to find the nearest element that has already been monkey patched with data\n        let parent = rElement;\n        while (parent = parent.parentNode) {\n            const parentContext = readPatchedData(parent);\n            if (parentContext) {\n                let lView;\n                if (Array.isArray(parentContext)) {\n                    lView = parentContext;\n                }\n                else {\n                    lView = parentContext.lView;\n                }\n                // the edge of the app was also reached here through another means\n                // (maybe because the DOM was changed manually).\n                if (!lView) {\n                    return null;\n                }\n                const index = findViaNativeElement(lView, rElement);\n                if (index >= 0) {\n                    const native = unwrapRNode(lView[index]);\n                    const context = createLContext(lView, index, native);\n                    attachPatchData(native, context);\n                    mpValue = context;\n                    break;\n                }\n            }\n        }\n    }\n    return mpValue || null;\n}\n/**\n * Creates an empty instance of a `LContext` context\n */\nfunction createLContext(lView, nodeIndex, native) {\n    return {\n        lView,\n        nodeIndex,\n        native,\n        component: undefined,\n        directives: undefined,\n        localRefs: undefined,\n    };\n}\n/**\n * Takes a component instance and returns the view for that component.\n *\n * @param componentInstance\n * @returns The component's view\n */\nfunction getComponentViewByInstance(componentInstance) {\n    let lView = readPatchedData(componentInstance);\n    let view;\n    if (Array.isArray(lView)) {\n        const nodeIndex = findViaComponent(lView, componentInstance);\n        view = getComponentLViewByIndex(nodeIndex, lView);\n        const context = createLContext(lView, nodeIndex, view[HOST]);\n        context.component = componentInstance;\n        attachPatchData(componentInstance, context);\n        attachPatchData(context.native, context);\n    }\n    else {\n        const context = lView;\n        view = getComponentLViewByIndex(context.nodeIndex, context.lView);\n    }\n    return view;\n}\n/**\n * Assigns the given data to the given target (which could be a component,\n * directive or DOM node instance) using monkey-patching.\n */\nfunction attachPatchData(target, data) {\n    target[MONKEY_PATCH_KEY_NAME] = data;\n}\nfunction isComponentInstance(instance) {\n    return instance && instance.constructor && instance.constructor.ɵcmp;\n}\nfunction isDirectiveInstance(instance) {\n    return instance && instance.constructor && instance.constructor.ɵdir;\n}\n/**\n * Locates the element within the given LView and returns the matching index\n */\nfunction findViaNativeElement(lView, target) {\n    let tNode = lView[TVIEW].firstChild;\n    while (tNode) {\n        const native = getNativeByTNodeOrNull(tNode, lView);\n        if (native === target) {\n            return tNode.index;\n        }\n        tNode = traverseNextElement(tNode);\n    }\n    return -1;\n}\n/**\n * Locates the next tNode (child, sibling or parent).\n */\nfunction traverseNextElement(tNode) {\n    if (tNode.child) {\n        return tNode.child;\n    }\n    else if (tNode.next) {\n        return tNode.next;\n    }\n    else {\n        // Let's take the following template: <div><span>text</span></div><component/>\n        // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n        // in this case the parent `div`, so that we can find the component.\n        while (tNode.parent && !tNode.parent.next) {\n            tNode = tNode.parent;\n        }\n        return tNode.parent && tNode.parent.next;\n    }\n}\n/**\n * Locates the component within the given LView and returns the matching index\n */\nfunction findViaComponent(lView, componentInstance) {\n    const componentIndices = lView[TVIEW].components;\n    if (componentIndices) {\n        for (let i = 0; i < componentIndices.length; i++) {\n            const elementComponentIndex = componentIndices[i];\n            const componentView = getComponentLViewByIndex(elementComponentIndex, lView);\n            if (componentView[CONTEXT] === componentInstance) {\n                return elementComponentIndex;\n            }\n        }\n    }\n    else {\n        const rootComponentView = getComponentLViewByIndex(HEADER_OFFSET, lView);\n        const rootComponent = rootComponentView[CONTEXT];\n        if (rootComponent === componentInstance) {\n            // we are dealing with the root element here therefore we know that the\n            // element is the very first element after the HEADER data in the lView\n            return HEADER_OFFSET;\n        }\n    }\n    return -1;\n}\n/**\n * Locates the directive within the given LView and returns the matching index\n */\nfunction findViaDirective(lView, directiveInstance) {\n    // if a directive is monkey patched then it will (by default)\n    // have a reference to the LView of the current view. The\n    // element bound to the directive being search lives somewhere\n    // in the view data. We loop through the nodes and check their\n    // list of directives for the instance.\n    let tNode = lView[TVIEW].firstChild;\n    while (tNode) {\n        const directiveIndexStart = tNode.directiveStart;\n        const directiveIndexEnd = tNode.directiveEnd;\n        for (let i = directiveIndexStart; i < directiveIndexEnd; i++) {\n            if (lView[i] === directiveInstance) {\n                return tNode.index;\n            }\n        }\n        tNode = traverseNextElement(tNode);\n    }\n    return -1;\n}\n/**\n * Returns a list of directives extracted from the given view based on the\n * provided list of directive index values.\n *\n * @param nodeIndex The node index\n * @param lView The target view data\n * @param includeComponents Whether or not to include components in returned directives\n */\nfunction getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n    const tNode = lView[TVIEW].data[nodeIndex];\n    let directiveStartIndex = tNode.directiveStart;\n    if (directiveStartIndex == 0)\n        return EMPTY_ARRAY;\n    const directiveEndIndex = tNode.directiveEnd;\n    if (!includeComponents && tNode.flags & 2 /* isComponentHost */)\n        directiveStartIndex++;\n    return lView.slice(directiveStartIndex, directiveEndIndex);\n}\nfunction getComponentAtNodeIndex(nodeIndex, lView) {\n    const tNode = lView[TVIEW].data[nodeIndex];\n    let directiveStartIndex = tNode.directiveStart;\n    return tNode.flags & 2 /* isComponentHost */ ? lView[directiveStartIndex] : null;\n}\n/**\n * Returns a map of local references (local reference name => element or directive instance) that\n * exist on a given element.\n */\nfunction discoverLocalRefs(lView, nodeIndex) {\n    const tNode = lView[TVIEW].data[nodeIndex];\n    if (tNode && tNode.localNames) {\n        const result = {};\n        let localIndex = tNode.index + 1;\n        for (let i = 0; i < tNode.localNames.length; i += 2) {\n            result[tNode.localNames[i]] = lView[localIndex];\n            localIndex++;\n        }\n        return result;\n    }\n    return null;\n}\n\n/** Called when directives inject each other (creating a circular dependency) */\nfunction throwCyclicDependencyError(token) {\n    throw new Error(`Cannot instantiate cyclic dependency! ${token}`);\n}\n/** Called when there are multiple component selectors that match a given node */\nfunction throwMultipleComponentError(tNode) {\n    throw new Error(`Multiple components match node with tagname ${tNode.tagName}`);\n}\nfunction throwMixedMultiProviderError() {\n    throw new Error(`Cannot mix multi providers and regular providers`);\n}\nfunction throwInvalidProviderError(ngModuleType, providers, provider) {\n    let ngModuleDetail = '';\n    if (ngModuleType && providers) {\n        const providerDetail = providers.map(v => v == provider ? '?' + provider + '?' : '...');\n        ngModuleDetail =\n            ` - only instances of Provider and Type are allowed, got: [${providerDetail.join(', ')}]`;\n    }\n    throw new Error(`Invalid provider for the NgModule '${stringify(ngModuleType)}'` + ngModuleDetail);\n}\n/** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\nfunction throwErrorIfNoChangesMode(creationMode, oldValue, currValue, propName) {\n    const field = propName ? ` for '${propName}'` : '';\n    let msg = `ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value${field}: '${oldValue}'. Current value: '${currValue}'.`;\n    if (creationMode) {\n        msg +=\n            ` It seems like the view has been created after its parent and its children have been dirty checked.` +\n                ` Has it been created in a change detection hook?`;\n    }\n    // TODO: include debug context, see `viewDebugError` function in\n    // `packages/core/src/view/errors.ts` for reference.\n    throw new Error(msg);\n}\nfunction constructDetailsForInterpolation(lView, rootIndex, expressionIndex, meta, changedValue) {\n    const [propName, prefix, ...chunks] = meta.split(INTERPOLATION_DELIMITER);\n    let oldValue = prefix, newValue = prefix;\n    for (let i = 0; i < chunks.length; i++) {\n        const slotIdx = rootIndex + i;\n        oldValue += `${lView[slotIdx]}${chunks[i]}`;\n        newValue += `${slotIdx === expressionIndex ? changedValue : lView[slotIdx]}${chunks[i]}`;\n    }\n    return { propName, oldValue, newValue };\n}\n/**\n * Constructs an object that contains details for the ExpressionChangedAfterItHasBeenCheckedError:\n * - property name (for property bindings or interpolations)\n * - old and new values, enriched using information from metadata\n *\n * More information on the metadata storage format can be found in `storePropertyBindingMetadata`\n * function description.\n */\nfunction getExpressionChangedErrorDetails(lView, bindingIndex, oldValue, newValue) {\n    const tData = lView[TVIEW].data;\n    const metadata = tData[bindingIndex];\n    if (typeof metadata === 'string') {\n        // metadata for property interpolation\n        if (metadata.indexOf(INTERPOLATION_DELIMITER) > -1) {\n            return constructDetailsForInterpolation(lView, bindingIndex, bindingIndex, metadata, newValue);\n        }\n        // metadata for property binding\n        return { propName: metadata, oldValue, newValue };\n    }\n    // metadata is not available for this expression, check if this expression is a part of the\n    // property interpolation by going from the current binding index left and look for a string that\n    // contains INTERPOLATION_DELIMITER, the layout in tView.data for this case will look like this:\n    // [..., 'id�Prefix � and � suffix', null, null, null, ...]\n    if (metadata === null) {\n        let idx = bindingIndex - 1;\n        while (typeof tData[idx] !== 'string' && tData[idx + 1] === null) {\n            idx--;\n        }\n        const meta = tData[idx];\n        if (typeof meta === 'string') {\n            const matches = meta.match(new RegExp(INTERPOLATION_DELIMITER, 'g'));\n            // first interpolation delimiter separates property name from interpolation parts (in case of\n            // property interpolations), so we subtract one from total number of found delimiters\n            if (matches && (matches.length - 1) > bindingIndex - idx) {\n                return constructDetailsForInterpolation(lView, idx, bindingIndex, meta, newValue);\n            }\n        }\n    }\n    return { propName: undefined, oldValue, newValue };\n}\n\n/**\n * Converts `TNodeType` into human readable text.\n * Make sure this matches with `TNodeType`\n */\nconst TNodeTypeAsString = [\n    'Container',\n    'Projection',\n    'View',\n    'Element',\n    'ElementContainer',\n    'IcuContainer' // 5\n];\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\nconst unusedValueExportToPlacateAjd$4 = 1;\n/**\n * Returns `true` if the `TNode` has a directive which has `@Input()` for `class` binding.\n *\n * ```\n * <div my-dir [class]=\"exp\"></div>\n * ```\n * and\n * ```\n * @Directive({\n * })\n * class MyDirective {\n *   @Input()\n *   class: string;\n * }\n * ```\n *\n * In the above case it is necessary to write the reconciled styling information into the\n * directive's input.\n *\n * @param tNode\n */\nfunction hasClassInput(tNode) {\n    return (tNode.flags & 16 /* hasClassInput */) !== 0;\n}\n/**\n * Returns `true` if the `TNode` has a directive which has `@Input()` for `style` binding.\n *\n * ```\n * <div my-dir [style]=\"exp\"></div>\n * ```\n * and\n * ```\n * @Directive({\n * })\n * class MyDirective {\n *   @Input()\n *   class: string;\n * }\n * ```\n *\n * In the above case it is necessary to write the reconciled styling information into the\n * directive's input.\n *\n * @param tNode\n */\nfunction hasStyleInput(tNode) {\n    return (tNode.flags & 32 /* hasStyleInput */) !== 0;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\nconst unusedValueExportToPlacateAjd$5 = 1;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an index of `classToSearch` in `className` taking token boundaries into account.\n *\n * `classIndexOf('AB A', 'A', 0)` will be 3 (not 0 since `AB!==A`)\n *\n * @param className A string containing classes (whitespace separated)\n * @param classToSearch A class name to locate\n * @param startingIndex Starting location of search\n * @returns an index of the located class (or -1 if not found)\n */\nfunction classIndexOf(className, classToSearch, startingIndex) {\n    ngDevMode && assertNotEqual(classToSearch, '', 'can not look for \"\" string.');\n    let end = className.length;\n    while (true) {\n        const foundIndex = className.indexOf(classToSearch, startingIndex);\n        if (foundIndex === -1)\n            return foundIndex;\n        if (foundIndex === 0 || className.charCodeAt(foundIndex - 1) <= 32 /* SPACE */) {\n            // Ensure that it has leading whitespace\n            const length = classToSearch.length;\n            if (foundIndex + length === end ||\n                className.charCodeAt(foundIndex + length) <= 32 /* SPACE */) {\n                // Ensure that it has trailing whitespace\n                return foundIndex;\n            }\n        }\n        // False positive, keep searching from where we left off.\n        startingIndex = foundIndex + 1;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst unusedValueToPlacateAjd = unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5;\nconst NG_TEMPLATE_SELECTOR = 'ng-template';\n/**\n * Search the `TAttributes` to see if it contains `cssClassToMatch` (case insensitive)\n *\n * @param attrs `TAttributes` to search through.\n * @param cssClassToMatch class to match (lowercase)\n * @param isProjectionMode Whether or not class matching should look into the attribute `class` in\n *    addition to the `AttributeMarker.Classes`.\n */\nfunction isCssClassMatching(attrs, cssClassToMatch, isProjectionMode) {\n    // TODO(misko): The fact that this function needs to know about `isProjectionMode` seems suspect.\n    // It is strange to me that sometimes the class information comes in form of `class` attribute\n    // and sometimes in form of `AttributeMarker.Classes`. Some investigation is needed to determine\n    // if that is the right behavior.\n    ngDevMode &&\n        assertEqual(cssClassToMatch, cssClassToMatch.toLowerCase(), 'Class name expected to be lowercase.');\n    let i = 0;\n    while (i < attrs.length) {\n        let item = attrs[i++];\n        if (isProjectionMode && item === 'class') {\n            item = attrs[i];\n            if (classIndexOf(item.toLowerCase(), cssClassToMatch, 0) !== -1) {\n                return true;\n            }\n        }\n        else if (item === 1 /* Classes */) {\n            // We found the classes section. Start searching for the class.\n            while (i < attrs.length && typeof (item = attrs[i++]) == 'string') {\n                // while we have strings\n                if (item.toLowerCase() === cssClassToMatch)\n                    return true;\n            }\n            return false;\n        }\n    }\n    return false;\n}\n/**\n * Checks whether the `tNode` represents an inline template (e.g. `*ngFor`).\n *\n * @param tNode current TNode\n */\nfunction isInlineTemplate(tNode) {\n    return tNode.type === 0 /* Container */ && tNode.tagName !== NG_TEMPLATE_SELECTOR;\n}\n/**\n * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n *\n * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular\n * directive matching mode:\n * - in the \"directive matching\" mode we do _not_ take TContainer's tagName into account if it is\n * different from NG_TEMPLATE_SELECTOR (value different from NG_TEMPLATE_SELECTOR indicates that a\n * tag name was extracted from * syntax so we would match the same directive twice);\n * - in the \"projection\" mode, we use a tag name potentially extracted from the * syntax processing\n * (applicable to TNodeType.Container only).\n */\nfunction hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n    const tagNameToCompare = tNode.type === 0 /* Container */ && !isProjectionMode ?\n        NG_TEMPLATE_SELECTOR :\n        tNode.tagName;\n    return currentSelector === tagNameToCompare;\n}\n/**\n * A utility function to match an Ivy node static data against a simple CSS selector\n *\n * @param node static data of the node to match\n * @param selector The selector to try matching against the node.\n * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing\n * directive matching.\n * @returns true if node matches the selector.\n */\nfunction isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n    ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n    let mode = 4 /* ELEMENT */;\n    const nodeAttrs = tNode.attrs || [];\n    // Find the index of first attribute that has no value, only a name.\n    const nameOnlyMarkerIdx = getNameOnlyMarkerIndex(nodeAttrs);\n    // When processing \":not\" selectors, we skip to the next \":not\" if the\n    // current one doesn't match\n    let skipToNextSelector = false;\n    for (let i = 0; i < selector.length; i++) {\n        const current = selector[i];\n        if (typeof current === 'number') {\n            // If we finish processing a :not selector and it hasn't failed, return false\n            if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                return false;\n            }\n            // If we are skipping to the next :not() and this mode flag is positive,\n            // it's a part of the current :not() selector, and we should keep skipping\n            if (skipToNextSelector && isPositive(current))\n                continue;\n            skipToNextSelector = false;\n            mode = current | (mode & 1 /* NOT */);\n            continue;\n        }\n        if (skipToNextSelector)\n            continue;\n        if (mode & 4 /* ELEMENT */) {\n            mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n            if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                current === '' && selector.length === 1) {\n                if (isPositive(mode))\n                    return false;\n                skipToNextSelector = true;\n            }\n        }\n        else {\n            const selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n            // special case for matching against classes when a tNode has been instantiated with\n            // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n            if ((mode & 8 /* CLASS */) && tNode.attrs !== null) {\n                if (!isCssClassMatching(tNode.attrs, selectorAttrValue, isProjectionMode)) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n                continue;\n            }\n            const attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n            const attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs, isInlineTemplate(tNode), isProjectionMode);\n            if (attrIndexInNode === -1) {\n                if (isPositive(mode))\n                    return false;\n                skipToNextSelector = true;\n                continue;\n            }\n            if (selectorAttrValue !== '') {\n                let nodeAttrValue;\n                if (attrIndexInNode > nameOnlyMarkerIdx) {\n                    nodeAttrValue = '';\n                }\n                else {\n                    ngDevMode &&\n                        assertNotEqual(nodeAttrs[attrIndexInNode], 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                    // we lowercase the attribute value to be able to match\n                    // selectors without case-sensitivity\n                    // (selectors are already in lowercase when generated)\n                    nodeAttrValue = nodeAttrs[attrIndexInNode + 1].toLowerCase();\n                }\n                const compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                if (compareAgainstClassName &&\n                    classIndexOf(compareAgainstClassName, selectorAttrValue, 0) !== -1 ||\n                    mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n        }\n    }\n    return isPositive(mode) || skipToNextSelector;\n}\nfunction isPositive(mode) {\n    return (mode & 1 /* NOT */) === 0;\n}\n/**\n * Examines the attribute's definition array for a node to find the index of the\n * attribute that matches the given `name`.\n *\n * NOTE: This will not match namespaced attributes.\n *\n * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.\n * The following table summarizes which types of attributes we attempt to match:\n *\n * ===========================================================================================================\n * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes | I18n\n * Attributes\n * ===========================================================================================================\n * Inline + Projection     | YES               | YES                 | NO                  | YES\n * -----------------------------------------------------------------------------------------------------------\n * Inline + Directive      | NO                | NO                  | YES                 | NO\n * -----------------------------------------------------------------------------------------------------------\n * Non-inline + Projection | YES               | YES                 | NO                  | YES\n * -----------------------------------------------------------------------------------------------------------\n * Non-inline + Directive  | YES               | YES                 | NO                  | YES\n * ===========================================================================================================\n *\n * @param name the name of the attribute to find\n * @param attrs the attribute array to examine\n * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)\n * rather than a manually expanded template node (e.g `<ng-template>`).\n * @param isProjectionMode true if we are matching against content projection otherwise we are\n * matching against directives.\n */\nfunction findAttrIndexInNode(name, attrs, isInlineTemplate, isProjectionMode) {\n    if (attrs === null)\n        return -1;\n    let i = 0;\n    if (isProjectionMode || !isInlineTemplate) {\n        let bindingsMode = false;\n        while (i < attrs.length) {\n            const maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 3 /* Bindings */ || maybeAttrName === 6 /* I18n */) {\n                bindingsMode = true;\n            }\n            else if (maybeAttrName === 1 /* Classes */ || maybeAttrName === 2 /* Styles */) {\n                let value = attrs[++i];\n                // We should skip classes here because we have a separate mechanism for\n                // matching classes in projection mode.\n                while (typeof value === 'string') {\n                    value = attrs[++i];\n                }\n                continue;\n            }\n            else if (maybeAttrName === 4 /* Template */) {\n                // We do not care about Template attributes in this scenario.\n                break;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // Skip the whole namespaced attribute and value. This is by design.\n                i += 4;\n                continue;\n            }\n            // In binding mode there are only names, rather than name-value pairs.\n            i += bindingsMode ? 1 : 2;\n        }\n        // We did not match the attribute\n        return -1;\n    }\n    else {\n        return matchTemplateAttribute(attrs, name);\n    }\n}\nfunction isNodeMatchingSelectorList(tNode, selector, isProjectionMode = false) {\n    for (let i = 0; i < selector.length; i++) {\n        if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction getProjectAsAttrValue(tNode) {\n    const nodeAttrs = tNode.attrs;\n    if (nodeAttrs != null) {\n        const ngProjectAsAttrIdx = nodeAttrs.indexOf(5 /* ProjectAs */);\n        // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n        // (attribute names are stored at even indexes)\n        if ((ngProjectAsAttrIdx & 1) === 0) {\n            return nodeAttrs[ngProjectAsAttrIdx + 1];\n        }\n    }\n    return null;\n}\nfunction getNameOnlyMarkerIndex(nodeAttrs) {\n    for (let i = 0; i < nodeAttrs.length; i++) {\n        const nodeAttr = nodeAttrs[i];\n        if (isNameOnlyAttributeMarker(nodeAttr)) {\n            return i;\n        }\n    }\n    return nodeAttrs.length;\n}\nfunction matchTemplateAttribute(attrs, name) {\n    let i = attrs.indexOf(4 /* Template */);\n    if (i > -1) {\n        i++;\n        while (i < attrs.length) {\n            const attr = attrs[i];\n            // Return in case we checked all template attrs and are switching to the next section in the\n            // attrs array (that starts with a number that represents an attribute marker).\n            if (typeof attr === 'number')\n                return -1;\n            if (attr === name)\n                return i;\n            i++;\n        }\n    }\n    return -1;\n}\n/**\n * Checks whether a selector is inside a CssSelectorList\n * @param selector Selector to be checked.\n * @param list List in which to look for the selector.\n */\nfunction isSelectorInSelectorList(selector, list) {\n    selectorListLoop: for (let i = 0; i < list.length; i++) {\n        const currentSelectorInList = list[i];\n        if (selector.length !== currentSelectorInList.length) {\n            continue;\n        }\n        for (let j = 0; j < selector.length; j++) {\n            if (selector[j] !== currentSelectorInList[j]) {\n                continue selectorListLoop;\n            }\n        }\n        return true;\n    }\n    return false;\n}\nfunction maybeWrapInNotSelector(isNegativeMode, chunk) {\n    return isNegativeMode ? ':not(' + chunk.trim() + ')' : chunk;\n}\nfunction stringifyCSSSelector(selector) {\n    let result = selector[0];\n    let i = 1;\n    let mode = 2 /* ATTRIBUTE */;\n    let currentChunk = '';\n    let isNegativeMode = false;\n    while (i < selector.length) {\n        let valueOrMarker = selector[i];\n        if (typeof valueOrMarker === 'string') {\n            if (mode & 2 /* ATTRIBUTE */) {\n                const attrValue = selector[++i];\n                currentChunk +=\n                    '[' + valueOrMarker + (attrValue.length > 0 ? '=\"' + attrValue + '\"' : '') + ']';\n            }\n            else if (mode & 8 /* CLASS */) {\n                currentChunk += '.' + valueOrMarker;\n            }\n            else if (mode & 4 /* ELEMENT */) {\n                currentChunk += ' ' + valueOrMarker;\n            }\n        }\n        else {\n            //\n            // Append current chunk to the final result in case we come across SelectorFlag, which\n            // indicates that the previous section of a selector is over. We need to accumulate content\n            // between flags to make sure we wrap the chunk later in :not() selector if needed, e.g.\n            // ```\n            //  ['', Flags.CLASS, '.classA', Flags.CLASS | Flags.NOT, '.classB', '.classC']\n            // ```\n            // should be transformed to `.classA :not(.classB .classC)`.\n            //\n            // Note: for negative selector part, we accumulate content between flags until we find the\n            // next negative flag. This is needed to support a case where `:not()` rule contains more than\n            // one chunk, e.g. the following selector:\n            // ```\n            //  ['', Flags.ELEMENT | Flags.NOT, 'p', Flags.CLASS, 'foo', Flags.CLASS | Flags.NOT, 'bar']\n            // ```\n            // should be stringified to `:not(p.foo) :not(.bar)`\n            //\n            if (currentChunk !== '' && !isPositive(valueOrMarker)) {\n                result += maybeWrapInNotSelector(isNegativeMode, currentChunk);\n                currentChunk = '';\n            }\n            mode = valueOrMarker;\n            // According to CssSelector spec, once we come across `SelectorFlags.NOT` flag, the negative\n            // mode is maintained for remaining chunks of a selector.\n            isNegativeMode = isNegativeMode || !isPositive(mode);\n        }\n        i++;\n    }\n    if (currentChunk !== '') {\n        result += maybeWrapInNotSelector(isNegativeMode, currentChunk);\n    }\n    return result;\n}\n/**\n * Generates string representation of CSS selector in parsed form.\n *\n * ComponentDef and DirectiveDef are generated with the selector in parsed form to avoid doing\n * additional parsing at runtime (for example, for directive matching). However in some cases (for\n * example, while bootstrapping a component), a string version of the selector is required to query\n * for the host element on the page. This function takes the parsed form of a selector and returns\n * its string representation.\n *\n * @param selectorList selector in parsed form\n * @returns string representation of a given selector\n */\nfunction stringifyCSSSelectorList(selectorList) {\n    return selectorList.map(stringifyCSSSelector).join(',');\n}\n/**\n * Extracts attributes and classes information from a given CSS selector.\n *\n * This function is used while creating a component dynamically. In this case, the host element\n * (that is created dynamically) should contain attributes and classes specified in component's CSS\n * selector.\n *\n * @param selector CSS selector in parsed form (in a form of array)\n * @returns object with `attrs` and `classes` fields that contain extracted information\n */\nfunction extractAttrsAndClassesFromSelector(selector) {\n    const attrs = [];\n    const classes = [];\n    let i = 1;\n    let mode = 2 /* ATTRIBUTE */;\n    while (i < selector.length) {\n        let valueOrMarker = selector[i];\n        if (typeof valueOrMarker === 'string') {\n            if (mode === 2 /* ATTRIBUTE */) {\n                if (valueOrMarker !== '') {\n                    attrs.push(valueOrMarker, selector[++i]);\n                }\n            }\n            else if (mode === 8 /* CLASS */) {\n                classes.push(valueOrMarker);\n            }\n        }\n        else {\n            // According to CssSelector spec, once we come across `SelectorFlags.NOT` flag, the negative\n            // mode is maintained for remaining chunks of a selector. Since attributes and classes are\n            // extracted only for \"positive\" part of the selector, we can stop here.\n            if (!isPositive(mode))\n                break;\n            mode = valueOrMarker;\n        }\n        i++;\n    }\n    return { attrs, classes };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** A special value which designates that a value has not changed. */\nconst NO_CHANGE = (typeof ngDevMode === 'undefined' || ngDevMode) ? { __brand__: 'NO_CHANGE' } : {};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n * that LContainer, which is an LView\n * @param lView the lView whose parent to get\n */\nfunction getLViewParent(lView) {\n    ngDevMode && assertLView(lView);\n    const parent = lView[PARENT];\n    return isLContainer(parent) ? parent[PARENT] : parent;\n}\n/**\n * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n * reaching the root `LView`.\n *\n * @param componentOrLView any component or `LView`\n */\nfunction getRootView(componentOrLView) {\n    ngDevMode && assertDefined(componentOrLView, 'component');\n    let lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n    while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n        lView = getLViewParent(lView);\n    }\n    ngDevMode && assertLView(lView);\n    return lView;\n}\n/**\n * Returns the `RootContext` instance that is associated with\n * the application where the target is situated. It does this by walking the parent views until it\n * gets to the root view, then getting the context off of that.\n *\n * @param viewOrComponent the `LView` or component to get the root context for.\n */\nfunction getRootContext(viewOrComponent) {\n    const rootView = getRootView(viewOrComponent);\n    ngDevMode &&\n        assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n    return rootView[CONTEXT];\n}\n/**\n * Gets the first `LContainer` in the LView or `null` if none exists.\n */\nfunction getFirstLContainer(lView) {\n    return getNearestLContainer(lView[CHILD_HEAD]);\n}\n/**\n * Gets the next `LContainer` that is a sibling of the given container.\n */\nfunction getNextLContainer(container) {\n    return getNearestLContainer(container[NEXT]);\n}\nfunction getNearestLContainer(viewOrContainer) {\n    while (viewOrContainer !== null && !isLContainer(viewOrContainer)) {\n        viewOrContainer = viewOrContainer[NEXT];\n    }\n    return viewOrContainer;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Advances to an element for later binding instructions.\n *\n * Used in conjunction with instructions like {@link property} to act on elements with specified\n * indices, for example those created with {@link element} or {@link elementStart}.\n *\n * ```ts\n * (rf: RenderFlags, ctx: any) => {\n *   if (rf & 1) {\n *     text(0, 'Hello');\n *     text(1, 'Goodbye')\n *     element(2, 'div');\n *   }\n *   if (rf & 2) {\n *     advance(2); // Advance twice to the <div>.\n *     property('title', 'test');\n *   }\n *  }\n * ```\n * @param delta Number of elements to advance forwards by.\n *\n * @codeGenApi\n */\nfunction ɵɵadvance(delta) {\n    ngDevMode && assertGreaterThan(delta, 0, 'Can only advance forward');\n    selectIndexInternal(getTView(), getLView(), getSelectedIndex() + delta, getCheckNoChangesMode());\n}\n/**\n * Selects an element for later binding instructions.\n * @deprecated No longer being generated, but still used in unit tests.\n * @codeGenApi\n */\nfunction ɵɵselect(index) {\n    // TODO(misko): Remove this function as it is no longer being used.\n    selectIndexInternal(getTView(), getLView(), index, getCheckNoChangesMode());\n}\nfunction selectIndexInternal(tView, lView, index, checkNoChangesMode) {\n    ngDevMode && assertGreaterThan(index, -1, 'Invalid index');\n    ngDevMode && assertIndexInRange(lView, index + HEADER_OFFSET);\n    // Flush the initial hooks for elements in the view that have been added up to this point.\n    // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n    if (!checkNoChangesMode) {\n        const hooksInitPhaseCompleted = (lView[FLAGS] & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n        if (hooksInitPhaseCompleted) {\n            const preOrderCheckHooks = tView.preOrderCheckHooks;\n            if (preOrderCheckHooks !== null) {\n                executeCheckHooks(lView, preOrderCheckHooks, index);\n            }\n        }\n        else {\n            const preOrderHooks = tView.preOrderHooks;\n            if (preOrderHooks !== null) {\n                executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, index);\n            }\n        }\n    }\n    // We must set the selected index *after* running the hooks, because hooks may have side-effects\n    // that cause other template functions to run, thus updating the selected index, which is global\n    // state. If we run `setSelectedIndex` *before* we run the hooks, in some cases the selected index\n    // will be altered by the time we leave the `ɵɵadvance` instruction.\n    setSelectedIndex(index);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction toTStylingRange(prev, next) {\n    ngDevMode && assertNumberInRange(prev, 0, 32767 /* UNSIGNED_MASK */);\n    ngDevMode && assertNumberInRange(next, 0, 32767 /* UNSIGNED_MASK */);\n    return (prev << 17 /* PREV_SHIFT */ | next << 2 /* NEXT_SHIFT */);\n}\nfunction getTStylingRangePrev(tStylingRange) {\n    ngDevMode && assertNumber(tStylingRange, 'expected number');\n    return (tStylingRange >> 17 /* PREV_SHIFT */) & 32767 /* UNSIGNED_MASK */;\n}\nfunction getTStylingRangePrevDuplicate(tStylingRange) {\n    ngDevMode && assertNumber(tStylingRange, 'expected number');\n    return (tStylingRange & 2 /* PREV_DUPLICATE */) ==\n        2 /* PREV_DUPLICATE */;\n}\nfunction setTStylingRangePrev(tStylingRange, previous) {\n    ngDevMode && assertNumber(tStylingRange, 'expected number');\n    ngDevMode && assertNumberInRange(previous, 0, 32767 /* UNSIGNED_MASK */);\n    return ((tStylingRange & ~4294836224 /* PREV_MASK */) |\n        (previous << 17 /* PREV_SHIFT */));\n}\nfunction setTStylingRangePrevDuplicate(tStylingRange) {\n    ngDevMode && assertNumber(tStylingRange, 'expected number');\n    return (tStylingRange | 2 /* PREV_DUPLICATE */);\n}\nfunction getTStylingRangeNext(tStylingRange) {\n    ngDevMode && assertNumber(tStylingRange, 'expected number');\n    return (tStylingRange & 131068 /* NEXT_MASK */) >> 2 /* NEXT_SHIFT */;\n}\nfunction setTStylingRangeNext(tStylingRange, next) {\n    ngDevMode && assertNumber(tStylingRange, 'expected number');\n    ngDevMode && assertNumberInRange(next, 0, 32767 /* UNSIGNED_MASK */);\n    return ((tStylingRange & ~131068 /* NEXT_MASK */) | //\n        next << 2 /* NEXT_SHIFT */);\n}\nfunction getTStylingRangeNextDuplicate(tStylingRange) {\n    ngDevMode && assertNumber(tStylingRange, 'expected number');\n    return (tStylingRange & 1 /* NEXT_DUPLICATE */) ===\n        1 /* NEXT_DUPLICATE */;\n}\nfunction setTStylingRangeNextDuplicate(tStylingRange) {\n    ngDevMode && assertNumber(tStylingRange, 'expected number');\n    return (tStylingRange | 1 /* NEXT_DUPLICATE */);\n}\nfunction getTStylingRangeTail(tStylingRange) {\n    ngDevMode && assertNumber(tStylingRange, 'expected number');\n    const next = getTStylingRangeNext(tStylingRange);\n    return next === 0 ? getTStylingRangePrev(tStylingRange) : next;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Patch a `debug` property on top of the existing object.\n *\n * NOTE: always call this method with `ngDevMode && attachDebugObject(...)`\n *\n * @param obj Object to patch\n * @param debug Value to patch\n */\nfunction attachDebugObject(obj, debug) {\n    if (ngDevMode) {\n        Object.defineProperty(obj, 'debug', { value: debug, enumerable: false });\n    }\n    else {\n        throw new Error('This method should be guarded with `ngDevMode` so that it can be tree shaken in production!');\n    }\n}\n/**\n * Patch a `debug` property getter on top of the existing object.\n *\n * NOTE: always call this method with `ngDevMode && attachDebugObject(...)`\n *\n * @param obj Object to patch\n * @param debugGetter Getter returning a value to patch\n */\nfunction attachDebugGetter(obj, debugGetter) {\n    if (ngDevMode) {\n        Object.defineProperty(obj, 'debug', { get: debugGetter, enumerable: false });\n    }\n    else {\n        throw new Error('This method should be guarded with `ngDevMode` so that it can be tree shaken in production!');\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst NG_DEV_MODE = ((typeof ngDevMode === 'undefined' || !!ngDevMode) && initNgDevMode());\n/*\n * This file contains conditionally attached classes which provide human readable (debug) level\n * information for `LView`, `LContainer` and other internal data structures. These data structures\n * are stored internally as array which makes it very difficult during debugging to reason about the\n * current state of the system.\n *\n * Patching the array with extra property does change the array's hidden class' but it does not\n * change the cost of access, therefore this patching should not have significant if any impact in\n * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)\n *\n * So instead of seeing:\n * ```\n * Array(30) [Object, 659, null, …]\n * ```\n *\n * You get to see:\n * ```\n * LViewDebug {\n *   views: [...],\n *   flags: {attached: true, ...}\n *   nodes: [\n *     {html: '<div id=\"123\">', ..., nodes: [\n *       {html: '<span>', ..., nodes: null}\n *     ]}\n *   ]\n * }\n * ```\n */\nlet LVIEW_COMPONENT_CACHE;\nlet LVIEW_EMBEDDED_CACHE;\nlet LVIEW_ROOT;\n/**\n * This function clones a blueprint and creates LView.\n *\n * Simple slice will keep the same type, and we need it to be LView\n */\nfunction cloneToLViewFromTViewBlueprint(tView) {\n    const debugTView = tView;\n    const lView = getLViewToClone(debugTView.type, tView.template && tView.template.name);\n    return lView.concat(tView.blueprint);\n}\nfunction getLViewToClone(type, name) {\n    switch (type) {\n        case 0 /* Root */:\n            if (LVIEW_ROOT === undefined)\n                LVIEW_ROOT = new (createNamedArrayType('LRootView'))();\n            return LVIEW_ROOT;\n        case 1 /* Component */:\n            if (LVIEW_COMPONENT_CACHE === undefined)\n                LVIEW_COMPONENT_CACHE = new Map();\n            let componentArray = LVIEW_COMPONENT_CACHE.get(name);\n            if (componentArray === undefined) {\n                componentArray = new (createNamedArrayType('LComponentView' + nameSuffix(name)))();\n                LVIEW_COMPONENT_CACHE.set(name, componentArray);\n            }\n            return componentArray;\n        case 2 /* Embedded */:\n            if (LVIEW_EMBEDDED_CACHE === undefined)\n                LVIEW_EMBEDDED_CACHE = new Map();\n            let embeddedArray = LVIEW_EMBEDDED_CACHE.get(name);\n            if (embeddedArray === undefined) {\n                embeddedArray = new (createNamedArrayType('LEmbeddedView' + nameSuffix(name)))();\n                LVIEW_EMBEDDED_CACHE.set(name, embeddedArray);\n            }\n            return embeddedArray;\n    }\n    throw new Error('unreachable code');\n}\nfunction nameSuffix(text) {\n    if (text == null)\n        return '';\n    const index = text.lastIndexOf('_Template');\n    return '_' + (index === -1 ? text : text.substr(0, index));\n}\n/**\n * This class is a debug version of Object literal so that we can have constructor name show up\n * in\n * debug tools in ngDevMode.\n */\nconst TViewConstructor = class TView {\n    constructor(type, //\n    id, //\n    blueprint, //\n    template, //\n    queries, //\n    viewQuery, //\n    node, //\n    data, //\n    bindingStartIndex, //\n    expandoStartIndex, //\n    expandoInstructions, //\n    firstCreatePass, //\n    firstUpdatePass, //\n    staticViewQueries, //\n    staticContentQueries, //\n    preOrderHooks, //\n    preOrderCheckHooks, //\n    contentHooks, //\n    contentCheckHooks, //\n    viewHooks, //\n    viewCheckHooks, //\n    destroyHooks, //\n    cleanup, //\n    contentQueries, //\n    components, //\n    directiveRegistry, //\n    pipeRegistry, //\n    firstChild, //\n    schemas, //\n    consts, //\n    incompleteFirstPass, //\n    _decls, //\n    _vars) {\n        this.type = type;\n        this.id = id;\n        this.blueprint = blueprint;\n        this.template = template;\n        this.queries = queries;\n        this.viewQuery = viewQuery;\n        this.node = node;\n        this.data = data;\n        this.bindingStartIndex = bindingStartIndex;\n        this.expandoStartIndex = expandoStartIndex;\n        this.expandoInstructions = expandoInstructions;\n        this.firstCreatePass = firstCreatePass;\n        this.firstUpdatePass = firstUpdatePass;\n        this.staticViewQueries = staticViewQueries;\n        this.staticContentQueries = staticContentQueries;\n        this.preOrderHooks = preOrderHooks;\n        this.preOrderCheckHooks = preOrderCheckHooks;\n        this.contentHooks = contentHooks;\n        this.contentCheckHooks = contentCheckHooks;\n        this.viewHooks = viewHooks;\n        this.viewCheckHooks = viewCheckHooks;\n        this.destroyHooks = destroyHooks;\n        this.cleanup = cleanup;\n        this.contentQueries = contentQueries;\n        this.components = components;\n        this.directiveRegistry = directiveRegistry;\n        this.pipeRegistry = pipeRegistry;\n        this.firstChild = firstChild;\n        this.schemas = schemas;\n        this.consts = consts;\n        this.incompleteFirstPass = incompleteFirstPass;\n        this._decls = _decls;\n        this._vars = _vars;\n    }\n    get template_() {\n        const buf = [];\n        processTNodeChildren(this.firstChild, buf);\n        return buf.join('');\n    }\n};\nclass TNode {\n    constructor(tView_, //\n    type, //\n    index, //\n    injectorIndex, //\n    directiveStart, //\n    directiveEnd, //\n    directiveStylingLast, //\n    propertyBindings, //\n    flags, //\n    providerIndexes, //\n    tagName, //\n    attrs, //\n    mergedAttrs, //\n    localNames, //\n    initialInputs, //\n    inputs, //\n    outputs, //\n    tViews, //\n    next, //\n    projectionNext, //\n    child, //\n    parent, //\n    projection, //\n    styles, //\n    stylesWithoutHost, //\n    residualStyles, //\n    classes, //\n    classesWithoutHost, //\n    residualClasses, //\n    classBindings, //\n    styleBindings) {\n        this.tView_ = tView_;\n        this.type = type;\n        this.index = index;\n        this.injectorIndex = injectorIndex;\n        this.directiveStart = directiveStart;\n        this.directiveEnd = directiveEnd;\n        this.directiveStylingLast = directiveStylingLast;\n        this.propertyBindings = propertyBindings;\n        this.flags = flags;\n        this.providerIndexes = providerIndexes;\n        this.tagName = tagName;\n        this.attrs = attrs;\n        this.mergedAttrs = mergedAttrs;\n        this.localNames = localNames;\n        this.initialInputs = initialInputs;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.tViews = tViews;\n        this.next = next;\n        this.projectionNext = projectionNext;\n        this.child = child;\n        this.parent = parent;\n        this.projection = projection;\n        this.styles = styles;\n        this.stylesWithoutHost = stylesWithoutHost;\n        this.residualStyles = residualStyles;\n        this.classes = classes;\n        this.classesWithoutHost = classesWithoutHost;\n        this.residualClasses = residualClasses;\n        this.classBindings = classBindings;\n        this.styleBindings = styleBindings;\n    }\n    get type_() {\n        switch (this.type) {\n            case 0 /* Container */:\n                return 'TNodeType.Container';\n            case 3 /* Element */:\n                return 'TNodeType.Element';\n            case 4 /* ElementContainer */:\n                return 'TNodeType.ElementContainer';\n            case 5 /* IcuContainer */:\n                return 'TNodeType.IcuContainer';\n            case 1 /* Projection */:\n                return 'TNodeType.Projection';\n            case 2 /* View */:\n                return 'TNodeType.View';\n            default:\n                return 'TNodeType.???';\n        }\n    }\n    get flags_() {\n        const flags = [];\n        if (this.flags & 16 /* hasClassInput */)\n            flags.push('TNodeFlags.hasClassInput');\n        if (this.flags & 8 /* hasContentQuery */)\n            flags.push('TNodeFlags.hasContentQuery');\n        if (this.flags & 32 /* hasStyleInput */)\n            flags.push('TNodeFlags.hasStyleInput');\n        if (this.flags & 128 /* hasHostBindings */)\n            flags.push('TNodeFlags.hasHostBindings');\n        if (this.flags & 2 /* isComponentHost */)\n            flags.push('TNodeFlags.isComponentHost');\n        if (this.flags & 1 /* isDirectiveHost */)\n            flags.push('TNodeFlags.isDirectiveHost');\n        if (this.flags & 64 /* isDetached */)\n            flags.push('TNodeFlags.isDetached');\n        if (this.flags & 4 /* isProjected */)\n            flags.push('TNodeFlags.isProjected');\n        return flags.join('|');\n    }\n    get template_() {\n        const buf = [];\n        buf.push('<', this.tagName || this.type_);\n        if (this.attrs) {\n            for (let i = 0; i < this.attrs.length;) {\n                const attrName = this.attrs[i++];\n                if (typeof attrName == 'number') {\n                    break;\n                }\n                const attrValue = this.attrs[i++];\n                buf.push(' ', attrName, '=\"', attrValue, '\"');\n            }\n        }\n        buf.push('>');\n        processTNodeChildren(this.child, buf);\n        buf.push('</', this.tagName || this.type_, '>');\n        return buf.join('');\n    }\n    get styleBindings_() {\n        return toDebugStyleBinding(this, false);\n    }\n    get classBindings_() {\n        return toDebugStyleBinding(this, true);\n    }\n}\nconst TNodeDebug = TNode;\nfunction toDebugStyleBinding(tNode, isClassBased) {\n    const tData = tNode.tView_.data;\n    const bindings = [];\n    const range = isClassBased ? tNode.classBindings : tNode.styleBindings;\n    const prev = getTStylingRangePrev(range);\n    const next = getTStylingRangeNext(range);\n    let isTemplate = next !== 0;\n    let cursor = isTemplate ? next : prev;\n    while (cursor !== 0) {\n        const itemKey = tData[cursor];\n        const itemRange = tData[cursor + 1];\n        bindings.unshift({\n            key: itemKey,\n            index: cursor,\n            isTemplate: isTemplate,\n            prevDuplicate: getTStylingRangePrevDuplicate(itemRange),\n            nextDuplicate: getTStylingRangeNextDuplicate(itemRange),\n            nextIndex: getTStylingRangeNext(itemRange),\n            prevIndex: getTStylingRangePrev(itemRange),\n        });\n        if (cursor === prev)\n            isTemplate = false;\n        cursor = getTStylingRangePrev(itemRange);\n    }\n    bindings.push((isClassBased ? tNode.residualClasses : tNode.residualStyles) || null);\n    return bindings;\n}\nfunction processTNodeChildren(tNode, buf) {\n    while (tNode) {\n        buf.push(tNode.template_);\n        tNode = tNode.next;\n    }\n}\nconst TViewData = NG_DEV_MODE && createNamedArrayType('TViewData') || null;\nlet TVIEWDATA_EMPTY; // can't initialize here or it will not be tree shaken, because\n// `LView` constructor could have side-effects.\n/**\n * This function clones a blueprint and creates TData.\n *\n * Simple slice will keep the same type, and we need it to be TData\n */\nfunction cloneToTViewData(list) {\n    if (TVIEWDATA_EMPTY === undefined)\n        TVIEWDATA_EMPTY = new TViewData();\n    return TVIEWDATA_EMPTY.concat(list);\n}\nconst LViewBlueprint = NG_DEV_MODE && createNamedArrayType('LViewBlueprint') || null;\nconst MatchesArray = NG_DEV_MODE && createNamedArrayType('MatchesArray') || null;\nconst TViewComponents = NG_DEV_MODE && createNamedArrayType('TViewComponents') || null;\nconst TNodeLocalNames = NG_DEV_MODE && createNamedArrayType('TNodeLocalNames') || null;\nconst TNodeInitialInputs = NG_DEV_MODE && createNamedArrayType('TNodeInitialInputs') || null;\nconst TNodeInitialData = NG_DEV_MODE && createNamedArrayType('TNodeInitialData') || null;\nconst LCleanup = NG_DEV_MODE && createNamedArrayType('LCleanup') || null;\nconst TCleanup = NG_DEV_MODE && createNamedArrayType('TCleanup') || null;\nfunction attachLViewDebug(lView) {\n    attachDebugObject(lView, new LViewDebug(lView));\n}\nfunction attachLContainerDebug(lContainer) {\n    attachDebugObject(lContainer, new LContainerDebug(lContainer));\n}\nfunction toDebug(obj) {\n    if (obj) {\n        const debug = obj.debug;\n        assertDefined(debug, 'Object does not have a debug representation.');\n        return debug;\n    }\n    else {\n        return obj;\n    }\n}\n/**\n * Use this method to unwrap a native element in `LView` and convert it into HTML for easier\n * reading.\n *\n * @param value possibly wrapped native DOM node.\n * @param includeChildren If `true` then the serialized HTML form will include child elements\n * (same\n * as `outerHTML`). If `false` then the serialized HTML form will only contain the element\n * itself\n * (will not serialize child elements).\n */\nfunction toHtml(value, includeChildren = false) {\n    const node = unwrapRNode(value);\n    if (node) {\n        switch (node.nodeType) {\n            case Node.TEXT_NODE:\n                return node.textContent;\n            case Node.COMMENT_NODE:\n                return `<!--${node.textContent}-->`;\n            case Node.ELEMENT_NODE:\n                const outerHTML = node.outerHTML;\n                if (includeChildren) {\n                    return outerHTML;\n                }\n                else {\n                    const innerHTML = '>' + node.innerHTML + '<';\n                    return (outerHTML.split(innerHTML)[0]) + '>';\n                }\n        }\n    }\n    return null;\n}\nclass LViewDebug {\n    constructor(_raw_lView) {\n        this._raw_lView = _raw_lView;\n    }\n    /**\n     * Flags associated with the `LView` unpacked into a more readable state.\n     */\n    get flags() {\n        const flags = this._raw_lView[FLAGS];\n        return {\n            __raw__flags__: flags,\n            initPhaseState: flags & 3 /* InitPhaseStateMask */,\n            creationMode: !!(flags & 4 /* CreationMode */),\n            firstViewPass: !!(flags & 8 /* FirstLViewPass */),\n            checkAlways: !!(flags & 16 /* CheckAlways */),\n            dirty: !!(flags & 64 /* Dirty */),\n            attached: !!(flags & 128 /* Attached */),\n            destroyed: !!(flags & 256 /* Destroyed */),\n            isRoot: !!(flags & 512 /* IsRoot */),\n            indexWithinInitPhase: flags >> 11 /* IndexWithinInitPhaseShift */,\n        };\n    }\n    get parent() {\n        return toDebug(this._raw_lView[PARENT]);\n    }\n    get hostHTML() {\n        return toHtml(this._raw_lView[HOST], true);\n    }\n    get html() {\n        return (this.nodes || []).map(node => toHtml(node.native, true)).join('');\n    }\n    get context() {\n        return this._raw_lView[CONTEXT];\n    }\n    /**\n     * The tree of nodes associated with the current `LView`. The nodes have been normalized into\n     * a tree structure with relevant details pulled out for readability.\n     */\n    get nodes() {\n        const lView = this._raw_lView;\n        const tNode = lView[TVIEW].firstChild;\n        return toDebugNodes(tNode, lView);\n    }\n    get tView() {\n        return this._raw_lView[TVIEW];\n    }\n    get cleanup() {\n        return this._raw_lView[CLEANUP];\n    }\n    get injector() {\n        return this._raw_lView[INJECTOR$1];\n    }\n    get rendererFactory() {\n        return this._raw_lView[RENDERER_FACTORY];\n    }\n    get renderer() {\n        return this._raw_lView[RENDERER];\n    }\n    get sanitizer() {\n        return this._raw_lView[SANITIZER];\n    }\n    get childHead() {\n        return toDebug(this._raw_lView[CHILD_HEAD]);\n    }\n    get next() {\n        return toDebug(this._raw_lView[NEXT]);\n    }\n    get childTail() {\n        return toDebug(this._raw_lView[CHILD_TAIL]);\n    }\n    get declarationView() {\n        return toDebug(this._raw_lView[DECLARATION_VIEW]);\n    }\n    get queries() {\n        return this._raw_lView[QUERIES];\n    }\n    get tHost() {\n        return this._raw_lView[T_HOST];\n    }\n    get decls() {\n        const tView = this.tView;\n        const start = HEADER_OFFSET;\n        return toLViewRange(this.tView, this._raw_lView, start, start + tView._decls);\n    }\n    get vars() {\n        const tView = this.tView;\n        const start = HEADER_OFFSET + tView._decls;\n        return toLViewRange(this.tView, this._raw_lView, start, start + tView._vars);\n    }\n    get i18n() {\n        const tView = this.tView;\n        const start = HEADER_OFFSET + tView._decls + tView._vars;\n        return toLViewRange(this.tView, this._raw_lView, start, this.tView.expandoStartIndex);\n    }\n    get expando() {\n        const tView = this.tView;\n        return toLViewRange(this.tView, this._raw_lView, this.tView.expandoStartIndex, this._raw_lView.length);\n    }\n    /**\n     * Normalized view of child views (and containers) attached at this location.\n     */\n    get childViews() {\n        const childViews = [];\n        let child = this.childHead;\n        while (child) {\n            childViews.push(child);\n            child = child.next;\n        }\n        return childViews;\n    }\n}\nfunction toLViewRange(tView, lView, start, end) {\n    let content = [];\n    for (let index = start; index < end; index++) {\n        content.push({ index: index, t: tView.data[index], l: lView[index] });\n    }\n    return { start: start, end: end, length: end - start, content: content };\n}\n/**\n * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.\n *\n * @param tNode\n * @param lView\n */\nfunction toDebugNodes(tNode, lView) {\n    if (tNode) {\n        const debugNodes = [];\n        let tNodeCursor = tNode;\n        while (tNodeCursor) {\n            debugNodes.push(buildDebugNode(tNodeCursor, lView, tNodeCursor.index));\n            tNodeCursor = tNodeCursor.next;\n        }\n        return debugNodes;\n    }\n    else {\n        return [];\n    }\n}\nfunction buildDebugNode(tNode, lView, nodeIndex) {\n    const rawValue = lView[nodeIndex];\n    const native = unwrapRNode(rawValue);\n    return {\n        html: toHtml(native),\n        type: TNodeTypeAsString[tNode.type],\n        native: native,\n        children: toDebugNodes(tNode.child, lView),\n    };\n}\nclass LContainerDebug {\n    constructor(_raw_lContainer) {\n        this._raw_lContainer = _raw_lContainer;\n    }\n    get hasTransplantedViews() {\n        return this._raw_lContainer[HAS_TRANSPLANTED_VIEWS];\n    }\n    get views() {\n        return this._raw_lContainer.slice(CONTAINER_HEADER_OFFSET)\n            .map(toDebug);\n    }\n    get parent() {\n        return toDebug(this._raw_lContainer[PARENT]);\n    }\n    get movedViews() {\n        return this._raw_lContainer[MOVED_VIEWS];\n    }\n    get host() {\n        return this._raw_lContainer[HOST];\n    }\n    get native() {\n        return this._raw_lContainer[NATIVE];\n    }\n    get next() {\n        return toDebug(this._raw_lContainer[NEXT]);\n    }\n}\n/**\n * Return an `LView` value if found.\n *\n * @param value `LView` if any\n */\nfunction readLViewValue(value) {\n    while (Array.isArray(value)) {\n        // This check is not quite right, as it does not take into account `StylingContext`\n        // This is why it is in debug, not in util.ts\n        if (value.length >= HEADER_OFFSET - 1)\n            return value;\n        value = value[HOST];\n    }\n    return null;\n}\n\nconst ɵ0$4 = () => Promise.resolve(null);\n/**\n * A permanent marker promise which signifies that the current CD tree is\n * clean.\n */\nconst _CLEAN_PROMISE = (ɵ0$4)();\n/**\n * Process the `TView.expandoInstructions`. (Execute the `hostBindings`.)\n *\n * @param tView `TView` containing the `expandoInstructions`\n * @param lView `LView` associated with the `TView`\n */\nfunction setHostBindingsByExecutingExpandoInstructions(tView, lView) {\n    ngDevMode && assertSame(tView, lView[TVIEW], '`LView` is not associated with the `TView`!');\n    try {\n        const expandoInstructions = tView.expandoInstructions;\n        if (expandoInstructions !== null) {\n            let bindingRootIndex = tView.expandoStartIndex;\n            let currentDirectiveIndex = -1;\n            let currentElementIndex = -1;\n            // TODO(misko): PERF It is possible to get here with `TView.expandoInstructions` containing no\n            // functions to execute. This is wasteful as there is no work to be done, but we still need\n            // to iterate over the instructions.\n            // In example of this is in this test: `host_binding_spec.ts`\n            // `fit('should not cause problems if detectChanges is called when a property updates', ...`\n            // In the above test we get here with expando [0, 0, 1] which requires a lot of processing but\n            // there is no function to execute.\n            for (let i = 0; i < expandoInstructions.length; i++) {\n                const instruction = expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        // Important: In JS `-x` and `0-x` is not the same! If `x===0` then `-x` will produce\n                        // `-0` which requires non standard math arithmetic and it can prevent VM optimizations.\n                        // `0-0` will always produce `0` and will not cause a potential deoptimization in VM.\n                        // TODO(misko): PERF This should be refactored to use `~instruction` as that does not\n                        // suffer from `-0` and it is faster/more compact.\n                        currentElementIndex = 0 - instruction;\n                        setSelectedIndex(currentElementIndex);\n                        // Injector block and providers are taken into account.\n                        const providerCount = expandoInstructions[++i];\n                        bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    if (instruction !== null) {\n                        ngDevMode &&\n                            assertLessThan(currentDirectiveIndex, 1048576 /* CptViewProvidersCountShifter */, 'Reached the max number of host bindings');\n                        setBindingRootForHostBindings(bindingRootIndex, currentDirectiveIndex);\n                        const hostCtx = lView[currentDirectiveIndex];\n                        instruction(2 /* Update */, hostCtx);\n                    }\n                    // TODO(misko): PERF Relying on incrementing the `currentDirectiveIndex` here is\n                    // sub-optimal. The implications are that if we have a lot of directives but none of them\n                    // have host bindings we nevertheless need to iterate over the expando instructions to\n                    // update the counter. It would be much better if we could encode the\n                    // `currentDirectiveIndex` into the `expandoInstruction` array so that we only need to\n                    // iterate over those directives which actually have `hostBindings`.\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    finally {\n        setSelectedIndex(-1);\n    }\n}\n/** Refreshes all content queries declared by directives in a given view */\nfunction refreshContentQueries(tView, lView) {\n    const contentQueries = tView.contentQueries;\n    if (contentQueries !== null) {\n        for (let i = 0; i < contentQueries.length; i += 2) {\n            const queryStartIdx = contentQueries[i];\n            const directiveDefIdx = contentQueries[i + 1];\n            if (directiveDefIdx !== -1) {\n                const directiveDef = tView.data[directiveDefIdx];\n                ngDevMode &&\n                    assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                setCurrentQueryIndex(queryStartIdx);\n                directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n            }\n        }\n    }\n}\n/** Refreshes child components in the current view (update mode). */\nfunction refreshChildComponents(hostLView, components) {\n    for (let i = 0; i < components.length; i++) {\n        refreshComponent(hostLView, components[i]);\n    }\n}\n/** Renders child components in the current view (creation mode). */\nfunction renderChildComponents(hostLView, components) {\n    for (let i = 0; i < components.length; i++) {\n        renderComponent(hostLView, components[i]);\n    }\n}\n/**\n * Creates a native element from a tag name, using a renderer.\n * @param name the tag name\n * @param renderer A renderer to use\n * @returns the element created\n */\nfunction elementCreate(name, renderer, namespace) {\n    if (isProceduralRenderer(renderer)) {\n        return renderer.createElement(name, namespace);\n    }\n    else {\n        return namespace === null ? renderer.createElement(name) :\n            renderer.createElementNS(namespace, name);\n    }\n}\nfunction createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n    const lView = ngDevMode ? cloneToLViewFromTViewBlueprint(tView) : tView.blueprint.slice();\n    lView[HOST] = host;\n    lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n    resetPreOrderHookFlags(lView);\n    lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n    lView[CONTEXT] = context;\n    lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n    ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n    lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n    ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n    lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n    lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n    lView[T_HOST] = tHostNode;\n    ngDevMode &&\n        assertEqual(tView.type == 2 /* Embedded */ ? parentLView !== null : true, true, 'Embedded views must have parentLView');\n    lView[DECLARATION_COMPONENT_VIEW] =\n        tView.type == 2 /* Embedded */ ? parentLView[DECLARATION_COMPONENT_VIEW] : lView;\n    ngDevMode && attachLViewDebug(lView);\n    return lView;\n}\nfunction getOrCreateTNode(tView, tHostNode, index, type, name, attrs) {\n    // Keep this function short, so that the VM will inline it.\n    const adjustedIndex = index + HEADER_OFFSET;\n    const tNode = tView.data[adjustedIndex] ||\n        createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs);\n    setPreviousOrParentTNode(tNode, true);\n    return tNode;\n}\nfunction createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs) {\n    const previousOrParentTNode = getPreviousOrParentTNode();\n    const isParent = getIsParent();\n    const parent = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n    // Parents cannot cross component boundaries because components will be used in multiple places,\n    // so it's only set if the view is the same.\n    const parentInSameView = parent && parent !== tHostNode;\n    const tParentNode = parentInSameView ? parent : null;\n    const tNode = tView.data[adjustedIndex] =\n        createTNode(tView, tParentNode, type, adjustedIndex, name, attrs);\n    // Assign a pointer to the first child node of a given view. The first node is not always the one\n    // at index 0, in case of i18n, index 0 can be the instruction `i18nStart` and the first node has\n    // the index 1 or more, so we can't just check node index.\n    if (tView.firstChild === null) {\n        tView.firstChild = tNode;\n    }\n    if (previousOrParentTNode) {\n        if (isParent && previousOrParentTNode.child == null &&\n            (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n            // We are in the same view, which means we are adding content node to the parent view.\n            previousOrParentTNode.child = tNode;\n        }\n        else if (!isParent) {\n            previousOrParentTNode.next = tNode;\n        }\n    }\n    return tNode;\n}\nfunction assignTViewNodeToLView(tView, tParentNode, index, lView) {\n    // View nodes are not stored in data because they can be added / removed at runtime (which\n    // would cause indices to change). Their TNodes are instead stored in tView.node.\n    let tNode = tView.node;\n    if (tNode == null) {\n        ngDevMode && tParentNode &&\n            assertNodeOfPossibleTypes(tParentNode, [3 /* Element */, 0 /* Container */]);\n        tView.node = tNode = createTNode(tView, tParentNode, //\n        2 /* View */, index, null, null);\n    }\n    lView[T_HOST] = tNode;\n}\n/**\n * When elements are created dynamically after a view blueprint is created (e.g. through\n * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n * template passes.\n *\n * @param tView `TView` associated with `LView`\n * @param view The `LView` containing the blueprint to adjust\n * @param numSlotsToAlloc The number of slots to alloc in the LView, should be >0\n */\nfunction allocExpando(tView, lView, numSlotsToAlloc) {\n    ngDevMode &&\n        assertGreaterThan(numSlotsToAlloc, 0, 'The number of slots to alloc should be greater than 0');\n    if (numSlotsToAlloc > 0) {\n        if (tView.firstCreatePass) {\n            for (let i = 0; i < numSlotsToAlloc; i++) {\n                tView.blueprint.push(null);\n                tView.data.push(null);\n                lView.push(null);\n            }\n            // We should only increment the expando start index if there aren't already directives\n            // and injectors saved in the \"expando\" section\n            if (!tView.expandoInstructions) {\n                tView.expandoStartIndex += numSlotsToAlloc;\n            }\n            else {\n                // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                // bindings know that they should skip x slots\n                tView.expandoInstructions.push(numSlotsToAlloc);\n            }\n        }\n    }\n}\n//////////////////////////\n//// Render\n//////////////////////////\n/**\n * Processes a view in the creation mode. This includes a number of steps in a specific order:\n * - creating view query functions (if any);\n * - executing a template function in the creation mode;\n * - updating static queries (if any);\n * - creating child components defined in a given view.\n */\nfunction renderView(tView, lView, context) {\n    ngDevMode && assertEqual(isCreationMode(lView), true, 'Should be run in creation mode');\n    enterView(lView, lView[T_HOST]);\n    try {\n        const viewQuery = tView.viewQuery;\n        if (viewQuery !== null) {\n            executeViewQueryFn(1 /* Create */, viewQuery, context);\n        }\n        // Execute a template associated with this view, if it exists. A template function might not be\n        // defined for the root component views.\n        const templateFn = tView.template;\n        if (templateFn !== null) {\n            executeTemplate(tView, lView, templateFn, 1 /* Create */, context);\n        }\n        // This needs to be set before children are processed to support recursive components.\n        // This must be set to false immediately after the first creation run because in an\n        // ngFor loop, all the views will be created together before update mode runs and turns\n        // off firstCreatePass. If we don't set it here, instances will perform directive\n        // matching, etc again and again.\n        if (tView.firstCreatePass) {\n            tView.firstCreatePass = false;\n        }\n        // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n        // content queries are resolved during change detection (i.e. update mode), after embedded\n        // views are refreshed (see block above).\n        if (tView.staticContentQueries) {\n            refreshContentQueries(tView, lView);\n        }\n        // We must materialize query results before child components are processed\n        // in case a child component has projected a container. The LContainer needs\n        // to exist so the embedded views are properly attached by the container.\n        if (tView.staticViewQueries) {\n            executeViewQueryFn(2 /* Update */, tView.viewQuery, context);\n        }\n        // Render child component views.\n        const components = tView.components;\n        if (components !== null) {\n            renderChildComponents(lView, components);\n        }\n    }\n    catch (error) {\n        // If we didn't manage to get past the first template pass due to\n        // an error, mark the view as corrupted so we can try to recover.\n        if (tView.firstCreatePass) {\n            tView.incompleteFirstPass = true;\n        }\n        throw error;\n    }\n    finally {\n        lView[FLAGS] &= ~4 /* CreationMode */;\n        leaveView();\n    }\n}\n/**\n * Processes a view in update mode. This includes a number of steps in a specific order:\n * - executing a template function in update mode;\n * - executing hooks;\n * - refreshing queries;\n * - setting host bindings;\n * - refreshing child (embedded and component) views.\n */\nfunction refreshView(tView, lView, templateFn, context) {\n    ngDevMode && assertEqual(isCreationMode(lView), false, 'Should be run in update mode');\n    const flags = lView[FLAGS];\n    if ((flags & 256 /* Destroyed */) === 256 /* Destroyed */)\n        return;\n    enterView(lView, lView[T_HOST]);\n    const checkNoChangesMode = getCheckNoChangesMode();\n    try {\n        resetPreOrderHookFlags(lView);\n        setBindingIndex(tView.bindingStartIndex);\n        if (templateFn !== null) {\n            executeTemplate(tView, lView, templateFn, 2 /* Update */, context);\n        }\n        const hooksInitPhaseCompleted = (flags & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n        // execute pre-order hooks (OnInit, OnChanges, DoCheck)\n        // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n        if (!checkNoChangesMode) {\n            if (hooksInitPhaseCompleted) {\n                const preOrderCheckHooks = tView.preOrderCheckHooks;\n                if (preOrderCheckHooks !== null) {\n                    executeCheckHooks(lView, preOrderCheckHooks, null);\n                }\n            }\n            else {\n                const preOrderHooks = tView.preOrderHooks;\n                if (preOrderHooks !== null) {\n                    executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, null);\n                }\n                incrementInitPhaseFlags(lView, 0 /* OnInitHooksToBeRun */);\n            }\n        }\n        // First mark transplanted views that are declared in this lView as needing a refresh at their\n        // insertion points. This is needed to avoid the situation where the template is defined in this\n        // `LView` but its declaration appears after the insertion component.\n        markTransplantedViewsForRefresh(lView);\n        refreshEmbeddedViews(lView);\n        // Content query results must be refreshed before content hooks are called.\n        if (tView.contentQueries !== null) {\n            refreshContentQueries(tView, lView);\n        }\n        // execute content hooks (AfterContentInit, AfterContentChecked)\n        // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n        if (!checkNoChangesMode) {\n            if (hooksInitPhaseCompleted) {\n                const contentCheckHooks = tView.contentCheckHooks;\n                if (contentCheckHooks !== null) {\n                    executeCheckHooks(lView, contentCheckHooks);\n                }\n            }\n            else {\n                const contentHooks = tView.contentHooks;\n                if (contentHooks !== null) {\n                    executeInitAndCheckHooks(lView, contentHooks, 1 /* AfterContentInitHooksToBeRun */);\n                }\n                incrementInitPhaseFlags(lView, 1 /* AfterContentInitHooksToBeRun */);\n            }\n        }\n        setHostBindingsByExecutingExpandoInstructions(tView, lView);\n        // Refresh child component views.\n        const components = tView.components;\n        if (components !== null) {\n            refreshChildComponents(lView, components);\n        }\n        // View queries must execute after refreshing child components because a template in this view\n        // could be inserted in a child component. If the view query executes before child component\n        // refresh, the template might not yet be inserted.\n        const viewQuery = tView.viewQuery;\n        if (viewQuery !== null) {\n            executeViewQueryFn(2 /* Update */, viewQuery, context);\n        }\n        // execute view hooks (AfterViewInit, AfterViewChecked)\n        // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n        if (!checkNoChangesMode) {\n            if (hooksInitPhaseCompleted) {\n                const viewCheckHooks = tView.viewCheckHooks;\n                if (viewCheckHooks !== null) {\n                    executeCheckHooks(lView, viewCheckHooks);\n                }\n            }\n            else {\n                const viewHooks = tView.viewHooks;\n                if (viewHooks !== null) {\n                    executeInitAndCheckHooks(lView, viewHooks, 2 /* AfterViewInitHooksToBeRun */);\n                }\n                incrementInitPhaseFlags(lView, 2 /* AfterViewInitHooksToBeRun */);\n            }\n        }\n        if (tView.firstUpdatePass === true) {\n            // We need to make sure that we only flip the flag on successful `refreshView` only\n            // Don't do this in `finally` block.\n            // If we did this in `finally` block then an exception could block the execution of styling\n            // instructions which in turn would be unable to insert themselves into the styling linked\n            // list. The result of this would be that if the exception would not be throw on subsequent CD\n            // the styling would be unable to process it data and reflect to the DOM.\n            tView.firstUpdatePass = false;\n        }\n        // Do not reset the dirty state when running in check no changes mode. We don't want components\n        // to behave differently depending on whether check no changes is enabled or not. For example:\n        // Marking an OnPush component as dirty from within the `ngAfterViewInit` hook in order to\n        // refresh a `NgClass` binding should work. If we would reset the dirty state in the check\n        // no changes cycle, the component would be not be dirty for the next update pass. This would\n        // be different in production mode where the component dirty state is not reset.\n        if (!checkNoChangesMode) {\n            lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n        }\n        if (lView[FLAGS] & 1024 /* RefreshTransplantedView */) {\n            lView[FLAGS] &= ~1024 /* RefreshTransplantedView */;\n            updateTransplantedViewCount(lView[PARENT], -1);\n        }\n    }\n    finally {\n        leaveView();\n    }\n}\nfunction renderComponentOrTemplate(tView, lView, templateFn, context) {\n    const rendererFactory = lView[RENDERER_FACTORY];\n    const normalExecutionPath = !getCheckNoChangesMode();\n    const creationModeIsActive = isCreationMode(lView);\n    try {\n        if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n            rendererFactory.begin();\n        }\n        if (creationModeIsActive) {\n            renderView(tView, lView, context);\n        }\n        refreshView(tView, lView, templateFn, context);\n    }\n    finally {\n        if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n            rendererFactory.end();\n        }\n    }\n}\nfunction executeTemplate(tView, lView, templateFn, rf, context) {\n    const prevSelectedIndex = getSelectedIndex();\n    try {\n        setSelectedIndex(-1);\n        if (rf & 2 /* Update */ && lView.length > HEADER_OFFSET) {\n            // When we're updating, inherently select 0 so we don't\n            // have to generate that instruction for most update blocks.\n            selectIndexInternal(tView, lView, 0, getCheckNoChangesMode());\n        }\n        templateFn(rf, context);\n    }\n    finally {\n        setSelectedIndex(prevSelectedIndex);\n    }\n}\n//////////////////////////\n//// Element\n//////////////////////////\nfunction executeContentQueries(tView, tNode, lView) {\n    if (isContentQueryHost(tNode)) {\n        const start = tNode.directiveStart;\n        const end = tNode.directiveEnd;\n        for (let directiveIndex = start; directiveIndex < end; directiveIndex++) {\n            const def = tView.data[directiveIndex];\n            if (def.contentQueries) {\n                def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n            }\n        }\n    }\n}\n/**\n * Creates directive instances.\n */\nfunction createDirectivesInstances(tView, lView, tNode) {\n    if (!getBindingsEnabled())\n        return;\n    instantiateAllDirectives(tView, lView, tNode, getNativeByTNode(tNode, lView));\n    if ((tNode.flags & 128 /* hasHostBindings */) === 128 /* hasHostBindings */) {\n        invokeDirectivesHostBindings(tView, lView, tNode);\n    }\n}\n/**\n * Takes a list of local names and indices and pushes the resolved local variable values\n * to LView in the same order as they are loaded in the template with load().\n */\nfunction saveResolvedLocalsInData(viewData, tNode, localRefExtractor = getNativeByTNode) {\n    const localNames = tNode.localNames;\n    if (localNames !== null) {\n        let localIndex = tNode.index + 1;\n        for (let i = 0; i < localNames.length; i += 2) {\n            const index = localNames[i + 1];\n            const value = index === -1 ?\n                localRefExtractor(tNode, viewData) :\n                viewData[index];\n            viewData[localIndex++] = value;\n        }\n    }\n}\n/**\n * Gets TView from a template function or creates a new TView\n * if it doesn't already exist.\n *\n * @param def ComponentDef\n * @returns TView\n */\nfunction getOrCreateTComponentView(def) {\n    const tView = def.tView;\n    // Create a TView if there isn't one, or recreate it if the first create pass didn't\n    // complete successfuly since we can't know for sure whether it's in a usable shape.\n    if (tView === null || tView.incompleteFirstPass) {\n        return def.tView = createTView(1 /* Component */, -1, def.template, def.decls, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas, def.consts);\n    }\n    return tView;\n}\n/**\n * Creates a TView instance\n *\n * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n * @param templateFn Template function\n * @param decls The number of nodes, local refs, and pipes in this template\n * @param directives Registry of directives for this view\n * @param pipes Registry of pipes for this view\n * @param viewQuery View queries for this view\n * @param schemas Schemas for this view\n * @param consts Constants for this view\n */\nfunction createTView(type, viewIndex, templateFn, decls, vars, directives, pipes, viewQuery, schemas, consts) {\n    ngDevMode && ngDevMode.tView++;\n    const bindingStartIndex = HEADER_OFFSET + decls;\n    // This length does not yet contain host bindings from child directives because at this point,\n    // we don't know which directives are active on this template. As soon as a directive is matched\n    // that has a host binding, we will update the blueprint with that def's hostVars count.\n    const initialViewLength = bindingStartIndex + vars;\n    const blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n    const tView = blueprint[TVIEW] = ngDevMode ?\n        new TViewConstructor(type, viewIndex, // id: number,\n        blueprint, // blueprint: LView,\n        templateFn, // template: ComponentTemplate<{}>|null,\n        null, // queries: TQueries|null\n        viewQuery, // viewQuery: ViewQueriesFunction<{}>|null,\n        null, // node: TViewNode|TElementNode|null,\n        cloneToTViewData(blueprint).fill(null, bindingStartIndex), // data: TData,\n        bindingStartIndex, // bindingStartIndex: number,\n        initialViewLength, // expandoStartIndex: number,\n        null, // expandoInstructions: ExpandoInstructions|null,\n        true, // firstCreatePass: boolean,\n        true, // firstUpdatePass: boolean,\n        false, // staticViewQueries: boolean,\n        false, // staticContentQueries: boolean,\n        null, // preOrderHooks: HookData|null,\n        null, // preOrderCheckHooks: HookData|null,\n        null, // contentHooks: HookData|null,\n        null, // contentCheckHooks: HookData|null,\n        null, // viewHooks: HookData|null,\n        null, // viewCheckHooks: HookData|null,\n        null, // destroyHooks: DestroyHookData|null,\n        null, // cleanup: any[]|null,\n        null, // contentQueries: number[]|null,\n        null, // components: number[]|null,\n        typeof directives === 'function' ?\n            directives() :\n            directives, // directiveRegistry: DirectiveDefList|null,\n        typeof pipes === 'function' ? pipes() : pipes, // pipeRegistry: PipeDefList|null,\n        null, // firstChild: TNode|null,\n        schemas, // schemas: SchemaMetadata[]|null,\n        consts, // consts: TConstants|null\n        false, // incompleteFirstPass: boolean\n        decls, // ngDevMode only: decls\n        vars) :\n        {\n            type: type,\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            queries: null,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice().fill(null, bindingStartIndex),\n            bindingStartIndex: bindingStartIndex,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstCreatePass: true,\n            firstUpdatePass: true,\n            staticViewQueries: false,\n            staticContentQueries: false,\n            preOrderHooks: null,\n            preOrderCheckHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n            schemas: schemas,\n            consts: consts,\n            incompleteFirstPass: false\n        };\n    if (ngDevMode) {\n        // For performance reasons it is important that the tView retains the same shape during runtime.\n        // (To make sure that all of the code is monomorphic.) For this reason we seal the object to\n        // prevent class transitions.\n        Object.seal(tView);\n    }\n    return tView;\n}\nfunction createViewBlueprint(bindingStartIndex, initialViewLength) {\n    const blueprint = ngDevMode ? new LViewBlueprint() : [];\n    for (let i = 0; i < initialViewLength; i++) {\n        blueprint.push(i < bindingStartIndex ? null : NO_CHANGE);\n    }\n    return blueprint;\n}\nfunction createError(text, token) {\n    return new Error(`Renderer: ${text} [${stringifyForError(token)}]`);\n}\nfunction assertHostNodeExists(rElement, elementOrSelector) {\n    if (!rElement) {\n        if (typeof elementOrSelector === 'string') {\n            throw createError('Host node with selector not found:', elementOrSelector);\n        }\n        else {\n            throw createError('Host node is required:', elementOrSelector);\n        }\n    }\n}\n/**\n * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n *\n * @param rendererFactory Factory function to create renderer instance.\n * @param elementOrSelector Render element or CSS selector to locate the element.\n * @param encapsulation View Encapsulation defined for component that requests host element.\n */\nfunction locateHostElement(renderer, elementOrSelector, encapsulation) {\n    if (isProceduralRenderer(renderer)) {\n        // When using native Shadow DOM, do not clear host element to allow native slot projection\n        const preserveContent = encapsulation === ViewEncapsulation$1.ShadowDom;\n        return renderer.selectRootElement(elementOrSelector, preserveContent);\n    }\n    let rElement = typeof elementOrSelector === 'string' ?\n        renderer.querySelector(elementOrSelector) :\n        elementOrSelector;\n    ngDevMode && assertHostNodeExists(rElement, elementOrSelector);\n    // Always clear host element's content when Renderer3 is in use. For procedural renderer case we\n    // make it depend on whether ShadowDom encapsulation is used (in which case the content should be\n    // preserved to allow native slot projection). ShadowDom encapsulation requires procedural\n    // renderer, and procedural renderer case is handled above.\n    rElement.textContent = '';\n    return rElement;\n}\n/**\n * Saves context for this cleanup function in LView.cleanupInstances.\n *\n * On the first template pass, saves in TView:\n * - Cleanup function\n * - Index of context we just saved in LView.cleanupInstances\n */\nfunction storeCleanupWithContext(tView, lView, context, cleanupFn) {\n    const lCleanup = getLCleanup(lView);\n    lCleanup.push(context);\n    if (tView.firstCreatePass) {\n        getTViewCleanup(tView).push(cleanupFn, lCleanup.length - 1);\n    }\n}\n/**\n * Constructs a TNode object from the arguments.\n *\n * @param tView `TView` to which this `TNode` belongs (used only in `ngDevMode`)\n * @param type The type of the node\n * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n * @param tagName The tag name of the node\n * @param attrs The attributes defined on this node\n * @param tViews Any TViews attached to this node\n * @returns the TNode object\n */\nfunction createTNode(tView, tParent, type, adjustedIndex, tagName, attrs) {\n    ngDevMode && ngDevMode.tNode++;\n    let injectorIndex = tParent ? tParent.injectorIndex : -1;\n    const tNode = ngDevMode ?\n        new TNodeDebug(tView, // tView_: TView\n        type, // type: TNodeType\n        adjustedIndex, // index: number\n        injectorIndex, // injectorIndex: number\n        -1, // directiveStart: number\n        -1, // directiveEnd: number\n        -1, // directiveStylingLast: number\n        null, // propertyBindings: number[]|null\n        0, // flags: TNodeFlags\n        0, // providerIndexes: TNodeProviderIndexes\n        tagName, // tagName: string|null\n        attrs, // attrs: (string|AttributeMarker|(string|SelectorFlags)[])[]|null\n        null, // mergedAttrs\n        null, // localNames: (string|number)[]|null\n        undefined, // initialInputs: (string[]|null)[]|null|undefined\n        null, // inputs: PropertyAliases|null\n        null, // outputs: PropertyAliases|null\n        null, // tViews: ITView|ITView[]|null\n        null, // next: ITNode|null\n        null, // projectionNext: ITNode|null\n        null, // child: ITNode|null\n        tParent, // parent: TElementNode|TContainerNode|null\n        null, // projection: number|(ITNode|RNode[])[]|null\n        null, // styles: string|null\n        null, // stylesWithoutHost: string|null\n        undefined, // residualStyles: string|null\n        null, // classes: string|null\n        null, // classesWithoutHost: string|null\n        undefined, // residualClasses: string|null\n        0, // classBindings: TStylingRange;\n        0) :\n        {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: injectorIndex,\n            directiveStart: -1,\n            directiveEnd: -1,\n            directiveStylingLast: -1,\n            propertyBindings: null,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            mergedAttrs: null,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: null,\n            outputs: null,\n            tViews: null,\n            next: null,\n            projectionNext: null,\n            child: null,\n            parent: tParent,\n            projection: null,\n            styles: null,\n            stylesWithoutHost: null,\n            residualStyles: undefined,\n            classes: null,\n            classesWithoutHost: null,\n            residualClasses: undefined,\n            classBindings: 0,\n            styleBindings: 0,\n        };\n    if (ngDevMode) {\n        // For performance reasons it is important that the tNode retains the same shape during runtime.\n        // (To make sure that all of the code is monomorphic.) For this reason we seal the object to\n        // prevent class transitions.\n        Object.seal(tNode);\n    }\n    return tNode;\n}\nfunction generatePropertyAliases(inputAliasMap, directiveDefIdx, propStore) {\n    for (let publicName in inputAliasMap) {\n        if (inputAliasMap.hasOwnProperty(publicName)) {\n            propStore = propStore === null ? {} : propStore;\n            const internalName = inputAliasMap[publicName];\n            if (propStore.hasOwnProperty(publicName)) {\n                propStore[publicName].push(directiveDefIdx, internalName);\n            }\n            else {\n                (propStore[publicName] = [directiveDefIdx, internalName]);\n            }\n        }\n    }\n    return propStore;\n}\n/**\n * Initializes data structures required to work with directive outputs and outputs.\n * Initialization is done for all directives matched on a given TNode.\n */\nfunction initializeInputAndOutputAliases(tView, tNode) {\n    ngDevMode && assertFirstCreatePass(tView);\n    const start = tNode.directiveStart;\n    const end = tNode.directiveEnd;\n    const defs = tView.data;\n    const tNodeAttrs = tNode.attrs;\n    const inputsFromAttrs = ngDevMode ? new TNodeInitialInputs() : [];\n    let inputsStore = null;\n    let outputsStore = null;\n    for (let i = start; i < end; i++) {\n        const directiveDef = defs[i];\n        const directiveInputs = directiveDef.inputs;\n        // Do not use unbound attributes as inputs to structural directives, since structural\n        // directive inputs can only be set using microsyntax (e.g. `<div *dir=\"exp\">`).\n        // TODO(FW-1930): microsyntax expressions may also contain unbound/static attributes, which\n        // should be set for inline templates.\n        const initialInputs = (tNodeAttrs !== null && !isInlineTemplate(tNode)) ?\n            generateInitialInputs(directiveInputs, tNodeAttrs) :\n            null;\n        inputsFromAttrs.push(initialInputs);\n        inputsStore = generatePropertyAliases(directiveInputs, i, inputsStore);\n        outputsStore = generatePropertyAliases(directiveDef.outputs, i, outputsStore);\n    }\n    if (inputsStore !== null) {\n        if (inputsStore.hasOwnProperty('class')) {\n            tNode.flags |= 16 /* hasClassInput */;\n        }\n        if (inputsStore.hasOwnProperty('style')) {\n            tNode.flags |= 32 /* hasStyleInput */;\n        }\n    }\n    tNode.initialInputs = inputsFromAttrs;\n    tNode.inputs = inputsStore;\n    tNode.outputs = outputsStore;\n}\n/**\n * Mapping between attributes names that don't correspond to their element property names.\n *\n * Performance note: this function is written as a series of if checks (instead of, say, a property\n * object lookup) for performance reasons - the series of `if` checks seems to be the fastest way of\n * mapping property names. Do NOT change without benchmarking.\n *\n * Note: this mapping has to be kept in sync with the equally named mapping in the template\n * type-checking machinery of ngtsc.\n */\nfunction mapPropName(name) {\n    if (name === 'class')\n        return 'className';\n    if (name === 'for')\n        return 'htmlFor';\n    if (name === 'formaction')\n        return 'formAction';\n    if (name === 'innerHtml')\n        return 'innerHTML';\n    if (name === 'readonly')\n        return 'readOnly';\n    if (name === 'tabindex')\n        return 'tabIndex';\n    return name;\n}\nfunction elementPropertyInternal(tView, tNode, lView, propName, value, renderer, sanitizer, nativeOnly) {\n    ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n    const element = getNativeByTNode(tNode, lView);\n    let inputData = tNode.inputs;\n    let dataValue;\n    if (!nativeOnly && inputData != null && (dataValue = inputData[propName])) {\n        setInputsForProperty(tView, lView, dataValue, propName, value);\n        if (isComponentHost(tNode))\n            markDirtyIfOnPush(lView, tNode.index);\n        if (ngDevMode) {\n            setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n        }\n    }\n    else if (tNode.type === 3 /* Element */) {\n        propName = mapPropName(propName);\n        if (ngDevMode) {\n            validateAgainstEventProperties(propName);\n            if (!validateProperty(tView, element, propName, tNode)) {\n                // Return here since we only log warnings for unknown properties.\n                logUnknownPropertyError(propName, tNode);\n                return;\n            }\n            ngDevMode.rendererSetProperty++;\n        }\n        // It is assumed that the sanitizer is only added when the compiler determines that the\n        // property is risky, so sanitization can be done without further checks.\n        value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n        if (isProceduralRenderer(renderer)) {\n            renderer.setProperty(element, propName, value);\n        }\n        else if (!isAnimationProp(propName)) {\n            element.setProperty ? element.setProperty(propName, value) :\n                element[propName] = value;\n        }\n    }\n    else if (tNode.type === 0 /* Container */ || tNode.type === 4 /* ElementContainer */) {\n        // If the node is a container and the property didn't\n        // match any of the inputs or schemas we should throw.\n        if (ngDevMode && !matchingSchemas(tView, tNode.tagName)) {\n            logUnknownPropertyError(propName, tNode);\n        }\n    }\n}\n/** If node is an OnPush component, marks its LView dirty. */\nfunction markDirtyIfOnPush(lView, viewIndex) {\n    ngDevMode && assertLView(lView);\n    const childComponentLView = getComponentLViewByIndex(viewIndex, lView);\n    if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n        childComponentLView[FLAGS] |= 64 /* Dirty */;\n    }\n}\nfunction setNgReflectProperty(lView, element, type, attrName, value) {\n    const renderer = lView[RENDERER];\n    attrName = normalizeDebugBindingName(attrName);\n    const debugValue = normalizeDebugBindingValue(value);\n    if (type === 3 /* Element */) {\n        if (value == null) {\n            isProceduralRenderer(renderer) ? renderer.removeAttribute(element, attrName) :\n                element.removeAttribute(attrName);\n        }\n        else {\n            isProceduralRenderer(renderer) ?\n                renderer.setAttribute(element, attrName, debugValue) :\n                element.setAttribute(attrName, debugValue);\n        }\n    }\n    else {\n        const textContent = `bindings=${JSON.stringify({ [attrName]: debugValue }, null, 2)}`;\n        if (isProceduralRenderer(renderer)) {\n            renderer.setValue(element, textContent);\n        }\n        else {\n            element.textContent = textContent;\n        }\n    }\n}\nfunction setNgReflectProperties(lView, element, type, dataValue, value) {\n    if (type === 3 /* Element */ || type === 0 /* Container */) {\n        /**\n         * dataValue is an array containing runtime input or output names for the directives:\n         * i+0: directive instance index\n         * i+1: privateName\n         *\n         * e.g. [0, 'change', 'change-minified']\n         * we want to set the reflected property with the privateName: dataValue[i+1]\n         */\n        for (let i = 0; i < dataValue.length; i += 2) {\n            setNgReflectProperty(lView, element, type, dataValue[i + 1], value);\n        }\n    }\n}\nfunction validateProperty(tView, element, propName, tNode) {\n    // If `schemas` is set to `null`, that's an indication that this Component was compiled in AOT\n    // mode where this check happens at compile time. In JIT mode, `schemas` is always present and\n    // defined as an array (as an empty array in case `schemas` field is not defined) and we should\n    // execute the check below.\n    if (tView.schemas === null)\n        return true;\n    // The property is considered valid if the element matches the schema, it exists on the element\n    // or it is synthetic, and we are in a browser context (web worker nodes should be skipped).\n    if (matchingSchemas(tView, tNode.tagName) || propName in element || isAnimationProp(propName)) {\n        return true;\n    }\n    // Note: `typeof Node` returns 'function' in most browsers, but on IE it is 'object' so we\n    // need to account for both here, while being careful for `typeof null` also returning 'object'.\n    return typeof Node === 'undefined' || Node === null || !(element instanceof Node);\n}\nfunction matchingSchemas(tView, tagName) {\n    const schemas = tView.schemas;\n    if (schemas !== null) {\n        for (let i = 0; i < schemas.length; i++) {\n            const schema = schemas[i];\n            if (schema === NO_ERRORS_SCHEMA ||\n                schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/**\n * Logs an error that a property is not supported on an element.\n * @param propName Name of the invalid property.\n * @param tNode Node on which we encountered the property.\n */\nfunction logUnknownPropertyError(propName, tNode) {\n    console.error(`Can't bind to '${propName}' since it isn't a known property of '${tNode.tagName}'.`);\n}\n/**\n * Instantiate a root component.\n */\nfunction instantiateRootComponent(tView, lView, def) {\n    const rootTNode = getPreviousOrParentTNode();\n    if (tView.firstCreatePass) {\n        if (def.providersResolver)\n            def.providersResolver(def);\n        generateExpandoInstructionBlock(tView, rootTNode, 1);\n        baseResolveDirective(tView, lView, def);\n    }\n    const directive = getNodeInjectable(lView, tView, lView.length - 1, rootTNode);\n    attachPatchData(directive, lView);\n    const native = getNativeByTNode(rootTNode, lView);\n    if (native) {\n        attachPatchData(native, lView);\n    }\n    return directive;\n}\n/**\n * Resolve the matched directives on a node.\n */\nfunction resolveDirectives(tView, lView, tNode, localRefs) {\n    // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in\n    // tsickle.\n    ngDevMode && assertFirstCreatePass(tView);\n    let hasDirectives = false;\n    if (getBindingsEnabled()) {\n        const directiveDefs = findDirectiveDefMatches(tView, lView, tNode);\n        const exportsMap = localRefs === null ? null : { '': -1 };\n        if (directiveDefs !== null) {\n            let totalDirectiveHostVars = 0;\n            hasDirectives = true;\n            initTNodeFlags(tNode, tView.data.length, directiveDefs.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (let i = 0; i < directiveDefs.length; i++) {\n                const def = directiveDefs[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directiveDefs.length);\n            let preOrderHooksFound = false;\n            let preOrderCheckHooksFound = false;\n            for (let i = 0; i < directiveDefs.length; i++) {\n                const def = directiveDefs[i];\n                // Merge the attrs in the order of matches. This assumes that the first directive is the\n                // component itself, so that the component has the least priority.\n                tNode.mergedAttrs = mergeHostAttrs(tNode.mergedAttrs, def.hostAttrs);\n                baseResolveDirective(tView, lView, def);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                if (def.contentQueries !== null)\n                    tNode.flags |= 8 /* hasContentQuery */;\n                if (def.hostBindings !== null || def.hostAttrs !== null || def.hostVars !== 0)\n                    tNode.flags |= 128 /* hasHostBindings */;\n                const lifeCycleHooks = def.type.prototype;\n                // Only push a node index into the preOrderHooks array if this is the first\n                // pre-order hook found on this node.\n                if (!preOrderHooksFound &&\n                    (lifeCycleHooks.ngOnChanges || lifeCycleHooks.ngOnInit || lifeCycleHooks.ngDoCheck)) {\n                    // We will push the actual hook function into this array later during dir instantiation.\n                    // We cannot do it now because we must ensure hooks are registered in the same\n                    // order that directives are created (i.e. injection order).\n                    (tView.preOrderHooks || (tView.preOrderHooks = [])).push(tNode.index - HEADER_OFFSET);\n                    preOrderHooksFound = true;\n                }\n                if (!preOrderCheckHooksFound && (lifeCycleHooks.ngOnChanges || lifeCycleHooks.ngDoCheck)) {\n                    (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = []))\n                        .push(tNode.index - HEADER_OFFSET);\n                    preOrderCheckHooksFound = true;\n                }\n                addHostBindingsToExpandoInstructions(tView, def);\n                totalDirectiveHostVars += def.hostVars;\n            }\n            initializeInputAndOutputAliases(tView, tNode);\n            growHostVarsSpace(tView, lView, totalDirectiveHostVars);\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    // Merge the template attrs last so that they have the highest priority.\n    tNode.mergedAttrs = mergeHostAttrs(tNode.mergedAttrs, tNode.attrs);\n    return hasDirectives;\n}\n/**\n * Add `hostBindings` to the `TView.expandoInstructions`.\n *\n * @param tView `TView` to which the `hostBindings` should be added.\n * @param def `ComponentDef`/`DirectiveDef`, which contains the `hostVars`/`hostBindings` to add.\n */\nfunction addHostBindingsToExpandoInstructions(tView, def) {\n    ngDevMode && assertFirstCreatePass(tView);\n    const expando = tView.expandoInstructions;\n    // TODO(misko): PERF we are adding `hostBindings` even if there is nothing to add! This is\n    // suboptimal for performance. `def.hostBindings` may be null,\n    // but we still need to push null to the array as a placeholder\n    // to ensure the directive counter is incremented (so host\n    // binding functions always line up with the corrective directive).\n    // This is suboptimal for performance. See `currentDirectiveIndex`\n    //  comment in `setHostBindingsByExecutingExpandoInstructions` for more\n    // details.  expando.push(def.hostBindings);\n    expando.push(def.hostBindings);\n    const hostVars = def.hostVars;\n    if (hostVars !== 0) {\n        expando.push(def.hostVars);\n    }\n}\n/**\n * Grow the `LView`, blueprint and `TView.data` to accommodate the `hostBindings`.\n *\n * To support locality we don't know ahead of time how many `hostVars` of the containing directives\n * we need to allocate. For this reason we allow growing these data structures as we discover more\n * directives to accommodate them.\n *\n * @param tView `TView` which needs to be grown.\n * @param lView `LView` which needs to be grown.\n * @param count Size by which we need to grow the data structures.\n */\nfunction growHostVarsSpace(tView, lView, count) {\n    ngDevMode && assertFirstCreatePass(tView);\n    ngDevMode && assertSame(tView, lView[TVIEW], '`LView` must be associated with `TView`!');\n    for (let i = 0; i < count; i++) {\n        lView.push(NO_CHANGE);\n        tView.blueprint.push(NO_CHANGE);\n        tView.data.push(null);\n    }\n}\n/**\n * Instantiate all the directives that were previously resolved on the current node.\n */\nfunction instantiateAllDirectives(tView, lView, tNode, native) {\n    const start = tNode.directiveStart;\n    const end = tNode.directiveEnd;\n    if (!tView.firstCreatePass) {\n        getOrCreateNodeInjectorForNode(tNode, lView);\n    }\n    attachPatchData(native, lView);\n    const initialInputs = tNode.initialInputs;\n    for (let i = start; i < end; i++) {\n        const def = tView.data[i];\n        const isComponent = isComponentDef(def);\n        if (isComponent) {\n            ngDevMode && assertNodeOfPossibleTypes(tNode, [3 /* Element */]);\n            addComponentLogic(lView, tNode, def);\n        }\n        const directive = getNodeInjectable(lView, tView, i, tNode);\n        attachPatchData(directive, lView);\n        if (initialInputs !== null) {\n            setInputsFromAttrs(lView, i - start, directive, def, tNode, initialInputs);\n        }\n        if (isComponent) {\n            const componentView = getComponentLViewByIndex(tNode.index, lView);\n            componentView[CONTEXT] = directive;\n        }\n    }\n}\nfunction invokeDirectivesHostBindings(tView, lView, tNode) {\n    const start = tNode.directiveStart;\n    const end = tNode.directiveEnd;\n    const expando = tView.expandoInstructions;\n    const firstCreatePass = tView.firstCreatePass;\n    const elementIndex = tNode.index - HEADER_OFFSET;\n    const currentDirectiveIndex = getCurrentDirectiveIndex();\n    try {\n        setSelectedIndex(elementIndex);\n        for (let dirIndex = start; dirIndex < end; dirIndex++) {\n            const def = tView.data[dirIndex];\n            const directive = lView[dirIndex];\n            setCurrentDirectiveIndex(dirIndex);\n            if (def.hostBindings !== null || def.hostVars !== 0 || def.hostAttrs !== null) {\n                invokeHostBindingsInCreationMode(def, directive);\n            }\n            else if (firstCreatePass) {\n                expando.push(null);\n            }\n        }\n    }\n    finally {\n        setSelectedIndex(-1);\n        setCurrentDirectiveIndex(currentDirectiveIndex);\n    }\n}\n/**\n * Invoke the host bindings in creation mode.\n *\n * @param def `DirectiveDef` which may contain the `hostBindings` function.\n * @param directive Instance of directive.\n */\nfunction invokeHostBindingsInCreationMode(def, directive) {\n    if (def.hostBindings !== null) {\n        def.hostBindings(1 /* Create */, directive);\n    }\n}\n/**\n * Generates a new block in TView.expandoInstructions for this node.\n *\n * Each expando block starts with the element index (turned negative so we can distinguish\n * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n */\nfunction generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n    ngDevMode &&\n        assertEqual(tView.firstCreatePass, true, 'Expando block should only be generated on first create pass.');\n    // Important: In JS `-x` and `0-x` is not the same! If `x===0` then `-x` will produce `-0` which\n    // requires non standard math arithmetic and it can prevent VM optimizations.\n    // `0-0` will always produce `0` and will not cause a potential deoptimization in VM.\n    const elementIndex = HEADER_OFFSET - tNode.index;\n    const providerStartIndex = tNode.providerIndexes & 1048575 /* ProvidersStartIndexMask */;\n    const providerCount = tView.data.length - providerStartIndex;\n    (tView.expandoInstructions || (tView.expandoInstructions = []))\n        .push(elementIndex, providerCount, directiveCount);\n}\n/**\n * Matches the current node against all available selectors.\n * If a component is matched (at most one), it is returned in first position in the array.\n */\nfunction findDirectiveDefMatches(tView, viewData, tNode) {\n    ngDevMode && assertFirstCreatePass(tView);\n    ngDevMode &&\n        assertNodeOfPossibleTypes(tNode, [3 /* Element */, 4 /* ElementContainer */, 0 /* Container */]);\n    const registry = tView.directiveRegistry;\n    let matches = null;\n    if (registry) {\n        for (let i = 0; i < registry.length; i++) {\n            const def = registry[i];\n            if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                matches || (matches = ngDevMode ? new MatchesArray() : []);\n                diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, viewData), tView, def.type);\n                if (isComponentDef(def)) {\n                    ngDevMode &&\n                        assertNodeOfPossibleTypes(tNode, [3 /* Element */], `\"${tNode.tagName}\" tags cannot be used as component hosts. ` +\n                            `Please use a different tag to activate the ${stringify(def.type)} component.`);\n                    if (tNode.flags & 2 /* isComponentHost */)\n                        throwMultipleComponentError(tNode);\n                    markAsComponentHost(tView, tNode);\n                    // The component is always stored first with directives after.\n                    matches.unshift(def);\n                }\n                else {\n                    matches.push(def);\n                }\n            }\n        }\n    }\n    return matches;\n}\n/**\n * Marks a given TNode as a component's host. This consists of:\n * - setting appropriate TNode flags;\n * - storing index of component's host element so it will be queued for view refresh during CD.\n */\nfunction markAsComponentHost(tView, hostTNode) {\n    ngDevMode && assertFirstCreatePass(tView);\n    hostTNode.flags |= 2 /* isComponentHost */;\n    (tView.components || (tView.components = ngDevMode ? new TViewComponents() : []))\n        .push(hostTNode.index);\n}\n/** Caches local names and their matching directive indices for query and template lookups. */\nfunction cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n    if (localRefs) {\n        const localNames = tNode.localNames = ngDevMode ? new TNodeLocalNames() : [];\n        // Local names must be stored in tNode in the same order that localRefs are defined\n        // in the template to ensure the data is loaded in the same slots as their refs\n        // in the template (for template queries).\n        for (let i = 0; i < localRefs.length; i += 2) {\n            const index = exportsMap[localRefs[i + 1]];\n            if (index == null)\n                throw new Error(`Export of name '${localRefs[i + 1]}' not found!`);\n            localNames.push(localRefs[i], index);\n        }\n    }\n}\n/**\n * Builds up an export map as directives are created, so local refs can be quickly mapped\n * to their directive instances.\n */\nfunction saveNameToExportMap(index, def, exportsMap) {\n    if (exportsMap) {\n        if (def.exportAs) {\n            for (let i = 0; i < def.exportAs.length; i++) {\n                exportsMap[def.exportAs[i]] = index;\n            }\n        }\n        if (isComponentDef(def))\n            exportsMap[''] = index;\n    }\n}\n/**\n * Initializes the flags on the current node, setting all indices to the initial index,\n * the directive count to 0, and adding the isComponent flag.\n * @param index the initial index\n */\nfunction initTNodeFlags(tNode, index, numberOfDirectives) {\n    ngDevMode &&\n        assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n    tNode.flags |= 1 /* isDirectiveHost */;\n    // When the first directive is created on a node, save the index\n    tNode.directiveStart = index;\n    tNode.directiveEnd = index + numberOfDirectives;\n    tNode.providerIndexes = index;\n}\nfunction baseResolveDirective(tView, viewData, def) {\n    tView.data.push(def);\n    const directiveFactory = def.factory || (def.factory = getFactoryDef(def.type, true));\n    const nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n    tView.blueprint.push(nodeInjectorFactory);\n    viewData.push(nodeInjectorFactory);\n}\nfunction addComponentLogic(lView, hostTNode, def) {\n    const native = getNativeByTNode(hostTNode, lView);\n    const tView = getOrCreateTComponentView(def);\n    // Only component views should be added to the view tree directly. Embedded views are\n    // accessed through their containers because they may be removed / re-added later.\n    const rendererFactory = lView[RENDERER_FACTORY];\n    const componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, native, hostTNode, rendererFactory, rendererFactory.createRenderer(native, def)));\n    // Component view will always be created before any injected LContainers,\n    // so this is a regular element, wrap it with the component view\n    lView[hostTNode.index] = componentView;\n}\nfunction elementAttributeInternal(tNode, lView, name, value, sanitizer, namespace) {\n    if (ngDevMode) {\n        assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        validateAgainstEventAttributes(name);\n        assertNodeNotOfTypes(tNode, [0 /* Container */, 4 /* ElementContainer */], `Attempted to set attribute \\`${name}\\` on a container node. ` +\n            `Host bindings are not valid on ng-container or ng-template.`);\n    }\n    const element = getNativeByTNode(tNode, lView);\n    const renderer = lView[RENDERER];\n    if (value == null) {\n        ngDevMode && ngDevMode.rendererRemoveAttribute++;\n        isProceduralRenderer(renderer) ? renderer.removeAttribute(element, name, namespace) :\n            element.removeAttribute(name);\n    }\n    else {\n        ngDevMode && ngDevMode.rendererSetAttribute++;\n        const strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n        if (isProceduralRenderer(renderer)) {\n            renderer.setAttribute(element, name, strValue, namespace);\n        }\n        else {\n            namespace ? element.setAttributeNS(namespace, name, strValue) :\n                element.setAttribute(name, strValue);\n        }\n    }\n}\n/**\n * Sets initial input properties on directive instances from attribute data\n *\n * @param lView Current LView that is being processed.\n * @param directiveIndex Index of the directive in directives array\n * @param instance Instance of the directive on which to set the initial inputs\n * @param def The directive def that contains the list of inputs\n * @param tNode The static data for this node\n */\nfunction setInputsFromAttrs(lView, directiveIndex, instance, def, tNode, initialInputData) {\n    const initialInputs = initialInputData[directiveIndex];\n    if (initialInputs !== null) {\n        const setInput = def.setInput;\n        for (let i = 0; i < initialInputs.length;) {\n            const publicName = initialInputs[i++];\n            const privateName = initialInputs[i++];\n            const value = initialInputs[i++];\n            if (setInput !== null) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n            if (ngDevMode) {\n                const nativeElement = getNativeByTNode(tNode, lView);\n                setNgReflectProperty(lView, nativeElement, tNode.type, privateName, value);\n            }\n        }\n    }\n}\n/**\n * Generates initialInputData for a node and stores it in the template's static storage\n * so subsequent template invocations don't have to recalculate it.\n *\n * initialInputData is an array containing values that need to be set as input properties\n * for directives on this node, but only once on creation. We need this array to support\n * the case where you set an @Input property of a directive using attribute-like syntax.\n * e.g. if you have a `name` @Input, you can set it once like this:\n *\n * <my-component name=\"Bess\"></my-component>\n *\n * @param inputs The list of inputs from the directive def\n * @param attrs The static attrs on this node\n */\nfunction generateInitialInputs(inputs, attrs) {\n    let inputsToStore = null;\n    let i = 0;\n    while (i < attrs.length) {\n        const attrName = attrs[i];\n        if (attrName === 0 /* NamespaceURI */) {\n            // We do not allow inputs on namespaced attributes.\n            i += 4;\n            continue;\n        }\n        else if (attrName === 5 /* ProjectAs */) {\n            // Skip over the `ngProjectAs` value.\n            i += 2;\n            continue;\n        }\n        // If we hit any other attribute markers, we're done anyway. None of those are valid inputs.\n        if (typeof attrName === 'number')\n            break;\n        if (inputs.hasOwnProperty(attrName)) {\n            if (inputsToStore === null)\n                inputsToStore = [];\n            inputsToStore.push(attrName, inputs[attrName], attrs[i + 1]);\n        }\n        i += 2;\n    }\n    return inputsToStore;\n}\n//////////////////////////\n//// ViewContainer & View\n//////////////////////////\n// Not sure why I need to do `any` here but TS complains later.\nconst LContainerArray = ((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode()) &&\n    createNamedArrayType('LContainer');\n/**\n * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n *\n * @param hostNative The host element for the LContainer\n * @param hostTNode The host TNode for the LContainer\n * @param currentView The parent view of the LContainer\n * @param native The native comment element\n * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n * @returns LContainer\n */\nfunction createLContainer(hostNative, currentView, native, tNode) {\n    ngDevMode && assertLView(currentView);\n    ngDevMode && !isProceduralRenderer(currentView[RENDERER]) && assertDomNode(native);\n    // https://jsperf.com/array-literal-vs-new-array-really\n    const lContainer = new (ngDevMode ? LContainerArray : Array)(hostNative, // host native\n    true, // Boolean `true` in this position signifies that this is an `LContainer`\n    false, // has transplanted views\n    currentView, // parent\n    null, // next\n    0, // transplanted views to refresh count\n    tNode, // t_host\n    native, // native,\n    null, // view refs\n    null);\n    ngDevMode &&\n        assertEqual(lContainer.length, CONTAINER_HEADER_OFFSET, 'Should allocate correct number of slots for LContainer header.');\n    ngDevMode && attachLContainerDebug(lContainer);\n    return lContainer;\n}\n/**\n * Goes over embedded views (ones created through ViewContainerRef APIs) and refreshes\n * them by executing an associated template function.\n */\nfunction refreshEmbeddedViews(lView) {\n    for (let lContainer = getFirstLContainer(lView); lContainer !== null; lContainer = getNextLContainer(lContainer)) {\n        for (let i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            const embeddedLView = lContainer[i];\n            const embeddedTView = embeddedLView[TVIEW];\n            ngDevMode && assertDefined(embeddedTView, 'TView must be allocated');\n            if (viewAttachedToChangeDetector(embeddedLView)) {\n                refreshView(embeddedTView, embeddedLView, embeddedTView.template, embeddedLView[CONTEXT]);\n            }\n        }\n    }\n}\n/**\n * Mark transplanted views as needing to be refreshed at their insertion points.\n *\n * @param lView The `LView` that may have transplanted views.\n */\nfunction markTransplantedViewsForRefresh(lView) {\n    for (let lContainer = getFirstLContainer(lView); lContainer !== null; lContainer = getNextLContainer(lContainer)) {\n        if (!lContainer[HAS_TRANSPLANTED_VIEWS])\n            continue;\n        const movedViews = lContainer[MOVED_VIEWS];\n        ngDevMode && assertDefined(movedViews, 'Transplanted View flags set but missing MOVED_VIEWS');\n        for (let i = 0; i < movedViews.length; i++) {\n            const movedLView = movedViews[i];\n            const insertionLContainer = movedLView[PARENT];\n            ngDevMode && assertLContainer(insertionLContainer);\n            // We don't want to increment the counter if the moved LView was already marked for\n            // refresh.\n            if ((movedLView[FLAGS] & 1024 /* RefreshTransplantedView */) === 0) {\n                updateTransplantedViewCount(insertionLContainer, 1);\n            }\n            // Note, it is possible that the `movedViews` is tracking views that are transplanted *and*\n            // those that aren't (declaration component === insertion component). In the latter case,\n            // it's fine to add the flag, as we will clear it immediately in\n            // `refreshEmbeddedViews` for the view currently being refreshed.\n            movedLView[FLAGS] |= 1024 /* RefreshTransplantedView */;\n        }\n    }\n}\n/////////////\n/**\n * Refreshes components by entering the component view and processing its bindings, queries, etc.\n *\n * @param componentHostIdx  Element index in LView[] (adjusted for HEADER_OFFSET)\n */\nfunction refreshComponent(hostLView, componentHostIdx) {\n    ngDevMode && assertEqual(isCreationMode(hostLView), false, 'Should be run in update mode');\n    const componentView = getComponentLViewByIndex(componentHostIdx, hostLView);\n    // Only attached components that are CheckAlways or OnPush and dirty should be refreshed\n    if (viewAttachedToChangeDetector(componentView)) {\n        const tView = componentView[TVIEW];\n        if (componentView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            refreshView(tView, componentView, tView.template, componentView[CONTEXT]);\n        }\n        else if (componentView[TRANSPLANTED_VIEWS_TO_REFRESH] > 0) {\n            // Only attached components that are CheckAlways or OnPush and dirty should be refreshed\n            refreshContainsDirtyView(componentView);\n        }\n    }\n}\n/**\n * Refreshes all transplanted views marked with `LViewFlags.RefreshTransplantedView` that are\n * children or descendants of the given lView.\n *\n * @param lView The lView which contains descendant transplanted views that need to be refreshed.\n */\nfunction refreshContainsDirtyView(lView) {\n    for (let lContainer = getFirstLContainer(lView); lContainer !== null; lContainer = getNextLContainer(lContainer)) {\n        for (let i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            const embeddedLView = lContainer[i];\n            if (embeddedLView[FLAGS] & 1024 /* RefreshTransplantedView */) {\n                const embeddedTView = embeddedLView[TVIEW];\n                ngDevMode && assertDefined(embeddedTView, 'TView must be allocated');\n                refreshView(embeddedTView, embeddedLView, embeddedTView.template, embeddedLView[CONTEXT]);\n            }\n            else if (embeddedLView[TRANSPLANTED_VIEWS_TO_REFRESH] > 0) {\n                refreshContainsDirtyView(embeddedLView);\n            }\n        }\n    }\n    const tView = lView[TVIEW];\n    // Refresh child component views.\n    const components = tView.components;\n    if (components !== null) {\n        for (let i = 0; i < components.length; i++) {\n            const componentView = getComponentLViewByIndex(components[i], lView);\n            // Only attached components that are CheckAlways or OnPush and dirty should be refreshed\n            if (viewAttachedToChangeDetector(componentView) &&\n                componentView[TRANSPLANTED_VIEWS_TO_REFRESH] > 0) {\n                refreshContainsDirtyView(componentView);\n            }\n        }\n    }\n}\nfunction renderComponent(hostLView, componentHostIdx) {\n    ngDevMode && assertEqual(isCreationMode(hostLView), true, 'Should be run in creation mode');\n    const componentView = getComponentLViewByIndex(componentHostIdx, hostLView);\n    const componentTView = componentView[TVIEW];\n    syncViewWithBlueprint(componentTView, componentView);\n    renderView(componentTView, componentView, componentView[CONTEXT]);\n}\n/**\n * Syncs an LView instance with its blueprint if they have gotten out of sync.\n *\n * Typically, blueprints and their view instances should always be in sync, so the loop here\n * will be skipped. However, consider this case of two components side-by-side:\n *\n * App template:\n * ```\n * <comp></comp>\n * <comp></comp>\n * ```\n *\n * The following will happen:\n * 1. App template begins processing.\n * 2. First <comp> is matched as a component and its LView is created.\n * 3. Second <comp> is matched as a component and its LView is created.\n * 4. App template completes processing, so it's time to check child templates.\n * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n * <comp> template, but its LView was created before this update, so it is out of sync.\n *\n * Note that embedded views inside ngFor loops will never be out of sync because these views\n * are processed as soon as they are created.\n *\n * @param tView The `TView` that contains the blueprint for syncing\n * @param lView The view to sync\n */\nfunction syncViewWithBlueprint(tView, lView) {\n    for (let i = lView.length; i < tView.blueprint.length; i++) {\n        lView.push(tView.blueprint[i]);\n    }\n}\n/**\n * Adds LView or LContainer to the end of the current view tree.\n *\n * This structure will be used to traverse through nested views to remove listeners\n * and call onDestroy callbacks.\n *\n * @param lView The view where LView or LContainer should be added\n * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n * @param lViewOrLContainer The LView or LContainer to add to the view tree\n * @returns The state passed in\n */\nfunction addToViewTree(lView, lViewOrLContainer) {\n    // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer\n    // to the end of the queue, which means if the developer retrieves the LContainers from RNodes out\n    // of order, the change detection will run out of order, as the act of retrieving the the\n    // LContainer from the RNode is what adds it to the queue.\n    if (lView[CHILD_HEAD]) {\n        lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n    }\n    else {\n        lView[CHILD_HEAD] = lViewOrLContainer;\n    }\n    lView[CHILD_TAIL] = lViewOrLContainer;\n    return lViewOrLContainer;\n}\n///////////////////////////////\n//// Change detection\n///////////////////////////////\n/**\n * Marks current view and all ancestors dirty.\n *\n * Returns the root view because it is found as a byproduct of marking the view tree\n * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n * change detection. Otherwise, such methods would need to traverse up the view tree\n * an additional time to get the root view and schedule a tick on it.\n *\n * @param lView The starting LView to mark dirty\n * @returns the root LView\n */\nfunction markViewDirty(lView) {\n    while (lView) {\n        lView[FLAGS] |= 64 /* Dirty */;\n        const parent = getLViewParent(lView);\n        // Stop traversing up as soon as you find a root view that wasn't attached to any container\n        if (isRootView(lView) && !parent) {\n            return lView;\n        }\n        // continue otherwise\n        lView = parent;\n    }\n    return null;\n}\n/**\n * Used to schedule change detection on the whole application.\n *\n * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n * It is usually called indirectly by calling `markDirty` when the view needs to be\n * re-rendered.\n *\n * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n * `scheduleTick` requests. The scheduling function can be overridden in\n * `renderComponent`'s `scheduler` option.\n */\nfunction scheduleTick(rootContext, flags) {\n    const nothingScheduled = rootContext.flags === 0 /* Empty */;\n    rootContext.flags |= flags;\n    if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n        let res;\n        rootContext.clean = new Promise((r) => res = r);\n        rootContext.scheduler(() => {\n            if (rootContext.flags & 1 /* DetectChanges */) {\n                rootContext.flags &= ~1 /* DetectChanges */;\n                tickRootContext(rootContext);\n            }\n            if (rootContext.flags & 2 /* FlushPlayers */) {\n                rootContext.flags &= ~2 /* FlushPlayers */;\n                const playerHandler = rootContext.playerHandler;\n                if (playerHandler) {\n                    playerHandler.flushPlayers();\n                }\n            }\n            rootContext.clean = _CLEAN_PROMISE;\n            res(null);\n        });\n    }\n}\nfunction tickRootContext(rootContext) {\n    for (let i = 0; i < rootContext.components.length; i++) {\n        const rootComponent = rootContext.components[i];\n        const lView = readPatchedLView(rootComponent);\n        const tView = lView[TVIEW];\n        renderComponentOrTemplate(tView, lView, tView.template, rootComponent);\n    }\n}\nfunction detectChangesInternal(tView, lView, context) {\n    const rendererFactory = lView[RENDERER_FACTORY];\n    if (rendererFactory.begin)\n        rendererFactory.begin();\n    try {\n        refreshView(tView, lView, tView.template, context);\n    }\n    catch (error) {\n        handleError(lView, error);\n        throw error;\n    }\n    finally {\n        if (rendererFactory.end)\n            rendererFactory.end();\n    }\n}\n/**\n * Synchronously perform change detection on a root view and its components.\n *\n * @param lView The view which the change detection should be performed on.\n */\nfunction detectChangesInRootView(lView) {\n    tickRootContext(lView[CONTEXT]);\n}\nfunction checkNoChangesInternal(tView, view, context) {\n    setCheckNoChangesMode(true);\n    try {\n        detectChangesInternal(tView, view, context);\n    }\n    finally {\n        setCheckNoChangesMode(false);\n    }\n}\n/**\n * Checks the change detector on a root view and its components, and throws if any changes are\n * detected.\n *\n * This is used in development mode to verify that running change detection doesn't\n * introduce other changes.\n *\n * @param lView The view which the change detection should be checked on.\n */\nfunction checkNoChangesInRootView(lView) {\n    setCheckNoChangesMode(true);\n    try {\n        detectChangesInRootView(lView);\n    }\n    finally {\n        setCheckNoChangesMode(false);\n    }\n}\nfunction executeViewQueryFn(flags, viewQueryFn, component) {\n    ngDevMode && assertDefined(viewQueryFn, 'View queries function to execute must be defined.');\n    setCurrentQueryIndex(0);\n    viewQueryFn(flags, component);\n}\n///////////////////////////////\n//// Bindings & interpolations\n///////////////////////////////\n/**\n * Stores meta-data for a property binding to be used by TestBed's `DebugElement.properties`.\n *\n * In order to support TestBed's `DebugElement.properties` we need to save, for each binding:\n * - a bound property name;\n * - a static parts of interpolated strings;\n *\n * A given property metadata is saved at the binding's index in the `TView.data` (in other words, a\n * property binding metadata will be stored in `TView.data` at the same index as a bound value in\n * `LView`). Metadata are represented as `INTERPOLATION_DELIMITER`-delimited string with the\n * following format:\n * - `propertyName` for bound properties;\n * - `propertyName�prefix�interpolation_static_part1�..interpolation_static_partN�suffix` for\n * interpolated properties.\n *\n * @param tData `TData` where meta-data will be saved;\n * @param tNode `TNode` that is a target of the binding;\n * @param propertyName bound property name;\n * @param bindingIndex binding index in `LView`\n * @param interpolationParts static interpolation parts (for property interpolations)\n */\nfunction storePropertyBindingMetadata(tData, tNode, propertyName, bindingIndex, ...interpolationParts) {\n    // Binding meta-data are stored only the first time a given property instruction is processed.\n    // Since we don't have a concept of the \"first update pass\" we need to check for presence of the\n    // binding meta-data to decide if one should be stored (or if was stored already).\n    if (tData[bindingIndex] === null) {\n        if (tNode.inputs == null || !tNode.inputs[propertyName]) {\n            const propBindingIdxs = tNode.propertyBindings || (tNode.propertyBindings = []);\n            propBindingIdxs.push(bindingIndex);\n            let bindingMetadata = propertyName;\n            if (interpolationParts.length > 0) {\n                bindingMetadata +=\n                    INTERPOLATION_DELIMITER + interpolationParts.join(INTERPOLATION_DELIMITER);\n            }\n            tData[bindingIndex] = bindingMetadata;\n        }\n    }\n}\nconst CLEAN_PROMISE = _CLEAN_PROMISE;\nfunction getLCleanup(view) {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return view[CLEANUP] || (view[CLEANUP] = ngDevMode ? new LCleanup() : []);\n}\nfunction getTViewCleanup(tView) {\n    return tView.cleanup || (tView.cleanup = ngDevMode ? new TCleanup() : []);\n}\n/**\n * There are cases where the sub component's renderer needs to be included\n * instead of the current renderer (see the componentSyntheticHost* instructions).\n */\nfunction loadComponentRenderer(currentDef, tNode, lView) {\n    // TODO(FW-2043): the `currentDef` is null when host bindings are invoked while creating root\n    // component (see packages/core/src/render3/component.ts). This is not consistent with the process\n    // of creating inner components, when current directive index is available in the state. In order\n    // to avoid relying on current def being `null` (thus special-casing root component creation), the\n    // process of creating root component should be unified with the process of creating inner\n    // components.\n    if (currentDef === null || isComponentDef(currentDef)) {\n        lView = unwrapLView(lView[tNode.index]);\n    }\n    return lView[RENDERER];\n}\n/** Handles an error thrown in an LView. */\nfunction handleError(lView, error) {\n    const injector = lView[INJECTOR$1];\n    const errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n    errorHandler && errorHandler.handleError(error);\n}\n/**\n * Set the inputs of directives at the current node to corresponding value.\n *\n * @param tView The current TView\n * @param lView the `LView` which contains the directives.\n * @param inputs mapping between the public \"input\" name and privately-known,\n *        possibly minified, property names to write to.\n * @param value Value to set.\n */\nfunction setInputsForProperty(tView, lView, inputs, publicName, value) {\n    for (let i = 0; i < inputs.length;) {\n        const index = inputs[i++];\n        const privateName = inputs[i++];\n        const instance = lView[index];\n        ngDevMode && assertIndexInRange(lView, index);\n        const def = tView.data[index];\n        if (def.setInput !== null) {\n            def.setInput(instance, value, publicName, privateName);\n        }\n        else {\n            instance[privateName] = value;\n        }\n    }\n}\n/**\n * Updates a text binding at a given index in a given LView.\n */\nfunction textBindingInternal(lView, index, value) {\n    ngDevMode && assertNotSame(value, NO_CHANGE, 'value should not be NO_CHANGE');\n    ngDevMode && assertIndexInRange(lView, index + HEADER_OFFSET);\n    const element = getNativeByIndex(index, lView);\n    ngDevMode && assertDefined(element, 'native element should exist');\n    ngDevMode && ngDevMode.rendererSetText++;\n    const renderer = lView[RENDERER];\n    isProceduralRenderer(renderer) ? renderer.setValue(element, value) : element.textContent = value;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst unusedValueToPlacateAjd$1 = unusedValueExportToPlacateAjd$1 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5 + unusedValueExportToPlacateAjd$2 + unusedValueExportToPlacateAjd;\nfunction getLContainer(tNode, embeddedView) {\n    ngDevMode && assertLView(embeddedView);\n    const container = embeddedView[PARENT];\n    if (tNode.index === -1) {\n        // This is a dynamically created view inside a dynamic container.\n        // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n        return isLContainer(container) ? container : null;\n    }\n    else {\n        ngDevMode && assertLContainer(container);\n        // This is a inline view node (e.g. embeddedViewStart)\n        return container;\n    }\n}\n/**\n * Retrieves render parent for a given view.\n * Might be null if a view is not yet attached to any container.\n */\nfunction getContainerRenderParent(tViewNode, view) {\n    const container = getLContainer(tViewNode, view);\n    return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n}\n/**\n * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n * being passed as an argument.\n */\nfunction applyToElementOrContainer(action, renderer, parent, lNodeToHandle, beforeNode) {\n    // If this slot was allocated for a text node dynamically created by i18n, the text node itself\n    // won't be created until i18nApply() in the update block, so this node should be skipped.\n    // For more info, see \"ICU expressions should work inside an ngTemplateOutlet inside an ngFor\"\n    // in `i18n_spec.ts`.\n    if (lNodeToHandle != null) {\n        let lContainer;\n        let isComponent = false;\n        // We are expecting an RNode, but in the case of a component or LContainer the `RNode` is\n        // wrapped in an array which needs to be unwrapped. We need to know if it is a component and if\n        // it has LContainer so that we can process all of those cases appropriately.\n        if (isLContainer(lNodeToHandle)) {\n            lContainer = lNodeToHandle;\n        }\n        else if (isLView(lNodeToHandle)) {\n            isComponent = true;\n            ngDevMode && assertDefined(lNodeToHandle[HOST], 'HOST must be defined for a component LView');\n            lNodeToHandle = lNodeToHandle[HOST];\n        }\n        const rNode = unwrapRNode(lNodeToHandle);\n        ngDevMode && !isProceduralRenderer(renderer) && assertDomNode(rNode);\n        if (action === 0 /* Create */ && parent !== null) {\n            if (beforeNode == null) {\n                nativeAppendChild(renderer, parent, rNode);\n            }\n            else {\n                nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n            }\n        }\n        else if (action === 1 /* Insert */ && parent !== null) {\n            nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n        }\n        else if (action === 2 /* Detach */) {\n            nativeRemoveNode(renderer, rNode, isComponent);\n        }\n        else if (action === 3 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(rNode);\n        }\n        if (lContainer != null) {\n            applyContainer(renderer, action, lContainer, parent, beforeNode);\n        }\n    }\n}\nfunction createTextNode(value, renderer) {\n    ngDevMode && ngDevMode.rendererCreateTextNode++;\n    ngDevMode && ngDevMode.rendererSetText++;\n    return isProceduralRenderer(renderer) ? renderer.createText(value) :\n        renderer.createTextNode(value);\n}\nfunction addRemoveViewFromContainer(tView, lView, insertMode, beforeNode) {\n    const renderParent = getContainerRenderParent(tView.node, lView);\n    ngDevMode && assertNodeType(tView.node, 2 /* View */);\n    if (renderParent) {\n        const renderer = lView[RENDERER];\n        const action = insertMode ? 1 /* Insert */ : 2 /* Detach */;\n        applyView(tView, lView, renderer, action, renderParent, beforeNode);\n    }\n}\n/**\n * Detach a `LView` from the DOM by detaching its nodes.\n *\n * @param tView The `TView' of the `LView` to be detached\n * @param lView the `LView` to be detached.\n */\nfunction renderDetachView(tView, lView) {\n    applyView(tView, lView, lView[RENDERER], 2 /* Detach */, null, null);\n}\n/**\n * Traverses down and up the tree of views and containers to remove listeners and\n * call onDestroy callbacks.\n *\n * Notes:\n *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n *  - Must process containers instead of their views to avoid splicing\n *  when views are destroyed and re-added.\n *  - Using a while loop because it's faster than recursion\n *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n *\n *  @param rootView The view to destroy\n */\nfunction destroyViewTree(rootView) {\n    // If the view has no children, we can clean it up and return early.\n    let lViewOrLContainer = rootView[CHILD_HEAD];\n    if (!lViewOrLContainer) {\n        return cleanUpView(rootView[TVIEW], rootView);\n    }\n    while (lViewOrLContainer) {\n        let next = null;\n        if (isLView(lViewOrLContainer)) {\n            // If LView, traverse down to child.\n            next = lViewOrLContainer[CHILD_HEAD];\n        }\n        else {\n            ngDevMode && assertLContainer(lViewOrLContainer);\n            // If container, traverse down to its first LView.\n            const firstView = lViewOrLContainer[CONTAINER_HEADER_OFFSET];\n            if (firstView)\n                next = firstView;\n        }\n        if (!next) {\n            // Only clean up view when moving to the side or up, as destroy hooks\n            // should be called in order from the bottom up.\n            while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                isLView(lViewOrLContainer) && cleanUpView(lViewOrLContainer[TVIEW], lViewOrLContainer);\n                lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n            }\n            if (lViewOrLContainer === null)\n                lViewOrLContainer = rootView;\n            isLView(lViewOrLContainer) && cleanUpView(lViewOrLContainer[TVIEW], lViewOrLContainer);\n            next = lViewOrLContainer && lViewOrLContainer[NEXT];\n        }\n        lViewOrLContainer = next;\n    }\n}\n/**\n * Inserts a view into a container.\n *\n * This adds the view to the container's array of active views in the correct\n * position. It also adds the view's elements to the DOM if the container isn't a\n * root node of another view (in that case, the view's elements will be added when\n * the container's parent view is added later).\n *\n * @param tView The `TView' of the `LView` to insert\n * @param lView The view to insert\n * @param lContainer The container into which the view should be inserted\n * @param index Which index in the container to insert the child view into\n */\nfunction insertView(tView, lView, lContainer, index) {\n    ngDevMode && assertLView(lView);\n    ngDevMode && assertLContainer(lContainer);\n    const indexInContainer = CONTAINER_HEADER_OFFSET + index;\n    const containerLength = lContainer.length;\n    if (index > 0) {\n        // This is a new view, we need to add it to the children.\n        lContainer[indexInContainer - 1][NEXT] = lView;\n    }\n    if (index < containerLength - CONTAINER_HEADER_OFFSET) {\n        lView[NEXT] = lContainer[indexInContainer];\n        addToArray(lContainer, CONTAINER_HEADER_OFFSET + index, lView);\n    }\n    else {\n        lContainer.push(lView);\n        lView[NEXT] = null;\n    }\n    lView[PARENT] = lContainer;\n    // track views where declaration and insertion points are different\n    const declarationLContainer = lView[DECLARATION_LCONTAINER];\n    if (declarationLContainer !== null && lContainer !== declarationLContainer) {\n        trackMovedView(declarationLContainer, lView);\n    }\n    // notify query that a new view has been added\n    const lQueries = lView[QUERIES];\n    if (lQueries !== null) {\n        lQueries.insertView(tView);\n    }\n    // Sets the attached flag\n    lView[FLAGS] |= 128 /* Attached */;\n}\n/**\n * Track views created from the declaration container (TemplateRef) and inserted into a\n * different LContainer.\n */\nfunction trackMovedView(declarationContainer, lView) {\n    ngDevMode && assertDefined(lView, 'LView required');\n    ngDevMode && assertLContainer(declarationContainer);\n    const movedViews = declarationContainer[MOVED_VIEWS];\n    const insertedLContainer = lView[PARENT];\n    ngDevMode && assertLContainer(insertedLContainer);\n    const insertedComponentLView = insertedLContainer[PARENT][DECLARATION_COMPONENT_VIEW];\n    ngDevMode && assertDefined(insertedComponentLView, 'Missing insertedComponentLView');\n    const declaredComponentLView = lView[DECLARATION_COMPONENT_VIEW];\n    ngDevMode && assertDefined(declaredComponentLView, 'Missing declaredComponentLView');\n    if (declaredComponentLView !== insertedComponentLView) {\n        // At this point the declaration-component is not same as insertion-component; this means that\n        // this is a transplanted view. Mark the declared lView as having transplanted views so that\n        // those views can participate in CD.\n        declarationContainer[HAS_TRANSPLANTED_VIEWS] = true;\n    }\n    if (movedViews === null) {\n        declarationContainer[MOVED_VIEWS] = [lView];\n    }\n    else {\n        movedViews.push(lView);\n    }\n}\nfunction detachMovedView(declarationContainer, lView) {\n    ngDevMode && assertLContainer(declarationContainer);\n    ngDevMode &&\n        assertDefined(declarationContainer[MOVED_VIEWS], 'A projected view should belong to a non-empty projected views collection');\n    const movedViews = declarationContainer[MOVED_VIEWS];\n    const declarationViewIndex = movedViews.indexOf(lView);\n    const insertionLContainer = lView[PARENT];\n    ngDevMode && assertLContainer(insertionLContainer);\n    // If the view was marked for refresh but then detached before it was checked (where the flag\n    // would be cleared and the counter decremented), we need to decrement the view counter here\n    // instead.\n    if (lView[FLAGS] & 1024 /* RefreshTransplantedView */) {\n        updateTransplantedViewCount(insertionLContainer, -1);\n    }\n    movedViews.splice(declarationViewIndex, 1);\n}\n/**\n * Detaches a view from a container.\n *\n * This method removes the view from the container's array of active views. It also\n * removes the view's elements from the DOM.\n *\n * @param lContainer The container from which to detach a view\n * @param removeIndex The index of the view to detach\n * @returns Detached LView instance.\n */\nfunction detachView(lContainer, removeIndex) {\n    if (lContainer.length <= CONTAINER_HEADER_OFFSET)\n        return;\n    const indexInContainer = CONTAINER_HEADER_OFFSET + removeIndex;\n    const viewToDetach = lContainer[indexInContainer];\n    if (viewToDetach) {\n        const declarationLContainer = viewToDetach[DECLARATION_LCONTAINER];\n        if (declarationLContainer !== null && declarationLContainer !== lContainer) {\n            detachMovedView(declarationLContainer, viewToDetach);\n        }\n        if (removeIndex > 0) {\n            lContainer[indexInContainer - 1][NEXT] = viewToDetach[NEXT];\n        }\n        const removedLView = removeFromArray(lContainer, CONTAINER_HEADER_OFFSET + removeIndex);\n        addRemoveViewFromContainer(viewToDetach[TVIEW], viewToDetach, false, null);\n        // notify query that a view has been removed\n        const lQueries = removedLView[QUERIES];\n        if (lQueries !== null) {\n            lQueries.detachView(removedLView[TVIEW]);\n        }\n        viewToDetach[PARENT] = null;\n        viewToDetach[NEXT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~128 /* Attached */;\n    }\n    return viewToDetach;\n}\n/**\n * A standalone function which destroys an LView,\n * conducting clean up (e.g. removing listeners, calling onDestroys).\n *\n * @param tView The `TView' of the `LView` to be destroyed\n * @param lView The view to be destroyed.\n */\nfunction destroyLView(tView, lView) {\n    if (!(lView[FLAGS] & 256 /* Destroyed */)) {\n        const renderer = lView[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            applyView(tView, lView, renderer, 3 /* Destroy */, null, null);\n        }\n        destroyViewTree(lView);\n    }\n}\n/**\n * Determines which LViewOrLContainer to jump to when traversing back up the\n * tree in destroyViewTree.\n *\n * Normally, the view's parent LView should be checked, but in the case of\n * embedded views, the container (which is the view node's parent, but not the\n * LView's parent) needs to be checked for a possible next property.\n *\n * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n * @param rootView The rootView, so we don't propagate too far up the view tree\n * @returns The correct parent LViewOrLContainer\n */\nfunction getParentState(lViewOrLContainer, rootView) {\n    let tNode;\n    if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n        tNode.type === 2 /* View */) {\n        // if it's an embedded view, the state needs to go up to the container, in case the\n        // container has a next\n        return getLContainer(tNode, lViewOrLContainer);\n    }\n    else {\n        // otherwise, use parent view for containers or component views\n        return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n    }\n}\n/**\n * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n * can be propagated to @Output listeners.\n *\n * @param tView `TView` for the `LView` to clean up.\n * @param lView The LView to clean up\n */\nfunction cleanUpView(tView, lView) {\n    if (!(lView[FLAGS] & 256 /* Destroyed */)) {\n        // Usually the Attached flag is removed when the view is detached from its parent, however\n        // if it's a root view, the flag won't be unset hence why we're also removing on destroy.\n        lView[FLAGS] &= ~128 /* Attached */;\n        // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n        // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n        // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n        // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n        // really more of an \"afterDestroy\" hook if you think about it.\n        lView[FLAGS] |= 256 /* Destroyed */;\n        executeOnDestroys(tView, lView);\n        removeListeners(tView, lView);\n        const hostTNode = lView[T_HOST];\n        // For component views only, the local renderer is destroyed as clean up time.\n        if (hostTNode && hostTNode.type === 3 /* Element */ &&\n            isProceduralRenderer(lView[RENDERER])) {\n            ngDevMode && ngDevMode.rendererDestroy++;\n            lView[RENDERER].destroy();\n        }\n        const declarationContainer = lView[DECLARATION_LCONTAINER];\n        // we are dealing with an embedded view that is still inserted into a container\n        if (declarationContainer !== null && isLContainer(lView[PARENT])) {\n            // and this is a projected view\n            if (declarationContainer !== lView[PARENT]) {\n                detachMovedView(declarationContainer, lView);\n            }\n            // For embedded views still attached to a container: remove query result from this view.\n            const lQueries = lView[QUERIES];\n            if (lQueries !== null) {\n                lQueries.detachView(tView);\n            }\n        }\n    }\n}\n/** Removes listeners and unsubscribes from output subscriptions */\nfunction removeListeners(tView, lView) {\n    const tCleanup = tView.cleanup;\n    if (tCleanup !== null) {\n        const lCleanup = lView[CLEANUP];\n        for (let i = 0; i < tCleanup.length - 1; i += 2) {\n            if (typeof tCleanup[i] === 'string') {\n                // This is a native DOM listener\n                const idxOrTargetGetter = tCleanup[i + 1];\n                const target = typeof idxOrTargetGetter === 'function' ?\n                    idxOrTargetGetter(lView) :\n                    unwrapRNode(lView[idxOrTargetGetter]);\n                const listener = lCleanup[tCleanup[i + 2]];\n                const useCaptureOrSubIdx = tCleanup[i + 3];\n                if (typeof useCaptureOrSubIdx === 'boolean') {\n                    // native DOM listener registered with Renderer3\n                    target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                }\n                else {\n                    if (useCaptureOrSubIdx >= 0) {\n                        // unregister\n                        lCleanup[useCaptureOrSubIdx]();\n                    }\n                    else {\n                        // Subscription\n                        lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                    }\n                }\n                i += 2;\n            }\n            else {\n                // This is a cleanup function that is grouped with the index of its context\n                const context = lCleanup[tCleanup[i + 1]];\n                tCleanup[i].call(context);\n            }\n        }\n        lView[CLEANUP] = null;\n    }\n}\n/** Calls onDestroy hooks for this view */\nfunction executeOnDestroys(tView, lView) {\n    let destroyHooks;\n    if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n        for (let i = 0; i < destroyHooks.length; i += 2) {\n            const context = lView[destroyHooks[i]];\n            // Only call the destroy hook if the context has been requested.\n            if (!(context instanceof NodeInjectorFactory)) {\n                const toCall = destroyHooks[i + 1];\n                if (Array.isArray(toCall)) {\n                    for (let j = 0; j < toCall.length; j += 2) {\n                        toCall[j + 1].call(context[toCall[j]]);\n                    }\n                }\n                else {\n                    toCall.call(context);\n                }\n            }\n        }\n    }\n}\n/**\n * Returns a native element if a node can be inserted into the given parent.\n *\n * There are two reasons why we may not be able to insert a element immediately.\n * - Projection: When creating a child content element of a component, we have to skip the\n *   insertion because the content of a component will be projected.\n *   `<component><content>delayed due to projection</content></component>`\n * - Parent container is disconnected: This can happen when we are inserting a view into\n *   parent container, which itself is disconnected. For example the parent container is part\n *   of a View which has not be inserted or is made for projection but has not been inserted\n *   into destination.\n */\nfunction getRenderParent(tView, tNode, currentView) {\n    // Skip over element and ICU containers as those are represented by a comment node and\n    // can't be used as a render parent.\n    let parentTNode = tNode.parent;\n    while (parentTNode != null &&\n        (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */)) {\n        tNode = parentTNode;\n        parentTNode = tNode.parent;\n    }\n    // If the parent tNode is null, then we are inserting across views: either into an embedded view\n    // or a component view.\n    if (parentTNode == null) {\n        const hostTNode = currentView[T_HOST];\n        if (hostTNode.type === 2 /* View */) {\n            // We are inserting a root element of an embedded view We might delay insertion of children\n            // for a given view if it is disconnected. This might happen for 2 main reasons:\n            // - view is not inserted into any container(view was created but not inserted yet)\n            // - view is inserted into a container but the container itself is not inserted into the DOM\n            // (container might be part of projection or child of a view that is not inserted yet).\n            // In other words we can insert children of a given view if this view was inserted into a\n            // container and the container itself has its render parent determined.\n            return getContainerRenderParent(hostTNode, currentView);\n        }\n        else {\n            // We are inserting a root element of the component view into the component host element and\n            // it should always be eager.\n            ngDevMode && assertNodeOfPossibleTypes(hostTNode, [3 /* Element */]);\n            return currentView[HOST];\n        }\n    }\n    else {\n        const isIcuCase = tNode && tNode.type === 5 /* IcuContainer */;\n        // If the parent of this node is an ICU container, then it is represented by comment node and we\n        // need to use it as an anchor. If it is projected then it's direct parent node is the renderer.\n        if (isIcuCase && tNode.flags & 4 /* isProjected */) {\n            return getNativeByTNode(tNode, currentView).parentNode;\n        }\n        ngDevMode && assertNodeType(parentTNode, 3 /* Element */);\n        if (parentTNode.flags & 2 /* isComponentHost */) {\n            const tData = tView.data;\n            const tNode = tData[parentTNode.index];\n            const encapsulation = tData[tNode.directiveStart].encapsulation;\n            // We've got a parent which is an element in the current view. We just need to verify if the\n            // parent element is not a component. Component's content nodes are not inserted immediately\n            // because they will be projected, and so doing insert at this point would be wasteful.\n            // Since the projection would then move it to its final destination. Note that we can't\n            // make this assumption when using the Shadow DOM, because the native projection placeholders\n            // (<content> or <slot>) have to be in place as elements are being inserted.\n            if (encapsulation !== ViewEncapsulation$1.ShadowDom &&\n                encapsulation !== ViewEncapsulation$1.Native) {\n                return null;\n            }\n        }\n        return getNativeByTNode(parentTNode, currentView);\n    }\n}\n/**\n * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n * This is a utility function that can be used when native nodes were determined - it abstracts an\n * actual renderer being used.\n */\nfunction nativeInsertBefore(renderer, parent, child, beforeNode) {\n    ngDevMode && ngDevMode.rendererInsertBefore++;\n    if (isProceduralRenderer(renderer)) {\n        renderer.insertBefore(parent, child, beforeNode);\n    }\n    else {\n        parent.insertBefore(child, beforeNode, true);\n    }\n}\nfunction nativeAppendChild(renderer, parent, child) {\n    ngDevMode && ngDevMode.rendererAppendChild++;\n    ngDevMode && assertDefined(parent, 'parent node must be defined');\n    if (isProceduralRenderer(renderer)) {\n        renderer.appendChild(parent, child);\n    }\n    else {\n        parent.appendChild(child);\n    }\n}\nfunction nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n    if (beforeNode !== null) {\n        nativeInsertBefore(renderer, parent, child, beforeNode);\n    }\n    else {\n        nativeAppendChild(renderer, parent, child);\n    }\n}\n/** Removes a node from the DOM given its native parent. */\nfunction nativeRemoveChild(renderer, parent, child, isHostElement) {\n    if (isProceduralRenderer(renderer)) {\n        renderer.removeChild(parent, child, isHostElement);\n    }\n    else {\n        parent.removeChild(child);\n    }\n}\n/**\n * Returns a native parent of a given native node.\n */\nfunction nativeParentNode(renderer, node) {\n    return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n}\n/**\n * Returns a native sibling of a given native node.\n */\nfunction nativeNextSibling(renderer, node) {\n    return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n}\n/**\n * Finds a native \"anchor\" node for cases where we can't append a native child directly\n * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n * @param parentTNode\n * @param lView\n */\nfunction getNativeAnchorNode(parentTNode, lView) {\n    if (parentTNode.type === 2 /* View */) {\n        const lContainer = getLContainer(parentTNode, lView);\n        if (lContainer === null)\n            return null;\n        const index = lContainer.indexOf(lView, CONTAINER_HEADER_OFFSET) - CONTAINER_HEADER_OFFSET;\n        return getBeforeNodeForView(index, lContainer);\n    }\n    else if (parentTNode.type === 4 /* ElementContainer */ ||\n        parentTNode.type === 5 /* IcuContainer */) {\n        return getNativeByTNode(parentTNode, lView);\n    }\n    return null;\n}\n/**\n * Appends the `child` native node (or a collection of nodes) to the `parent`.\n *\n * The element insertion might be delayed {@link canInsertNativeNode}.\n *\n * @param tView The `TView' to be appended\n * @param lView The current LView\n * @param childEl The native child (or children) that should be appended\n * @param childTNode The TNode of the child element\n * @returns Whether or not the child was appended\n */\nfunction appendChild(tView, lView, childEl, childTNode) {\n    const renderParent = getRenderParent(tView, childTNode, lView);\n    if (renderParent != null) {\n        const renderer = lView[RENDERER];\n        const parentTNode = childTNode.parent || lView[T_HOST];\n        const anchorNode = getNativeAnchorNode(parentTNode, lView);\n        if (Array.isArray(childEl)) {\n            for (let i = 0; i < childEl.length; i++) {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl[i], anchorNode);\n            }\n        }\n        else {\n            nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n        }\n    }\n}\n/**\n * Returns the first native node for a given LView, starting from the provided TNode.\n *\n * Native nodes are returned in the order in which those appear in the native tree (DOM).\n */\nfunction getFirstNativeNode(lView, tNode) {\n    if (tNode !== null) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, [\n            3 /* Element */, 0 /* Container */, 4 /* ElementContainer */, 5 /* IcuContainer */,\n            1 /* Projection */\n        ]);\n        const tNodeType = tNode.type;\n        if (tNodeType === 3 /* Element */) {\n            return getNativeByTNode(tNode, lView);\n        }\n        else if (tNodeType === 0 /* Container */) {\n            return getBeforeNodeForView(-1, lView[tNode.index]);\n        }\n        else if (tNodeType === 4 /* ElementContainer */ || tNodeType === 5 /* IcuContainer */) {\n            const elIcuContainerChild = tNode.child;\n            if (elIcuContainerChild !== null) {\n                return getFirstNativeNode(lView, elIcuContainerChild);\n            }\n            else {\n                const rNodeOrLContainer = lView[tNode.index];\n                if (isLContainer(rNodeOrLContainer)) {\n                    return getBeforeNodeForView(-1, rNodeOrLContainer);\n                }\n                else {\n                    return unwrapRNode(rNodeOrLContainer);\n                }\n            }\n        }\n        else {\n            const componentView = lView[DECLARATION_COMPONENT_VIEW];\n            const componentHost = componentView[T_HOST];\n            const parentView = getLViewParent(componentView);\n            const firstProjectedTNode = componentHost.projection[tNode.projection];\n            if (firstProjectedTNode != null) {\n                return getFirstNativeNode(parentView, firstProjectedTNode);\n            }\n            else {\n                return getFirstNativeNode(lView, tNode.next);\n            }\n        }\n    }\n    return null;\n}\nfunction getBeforeNodeForView(viewIndexInContainer, lContainer) {\n    const nextViewIndex = CONTAINER_HEADER_OFFSET + viewIndexInContainer + 1;\n    if (nextViewIndex < lContainer.length) {\n        const lView = lContainer[nextViewIndex];\n        const firstTNodeOfView = lView[TVIEW].firstChild;\n        if (firstTNodeOfView !== null) {\n            return getFirstNativeNode(lView, firstTNodeOfView);\n        }\n    }\n    return lContainer[NATIVE];\n}\n/**\n * Removes a native node itself using a given renderer. To remove the node we are looking up its\n * parent from the native tree as not all platforms / browsers support the equivalent of\n * node.remove().\n *\n * @param renderer A renderer to be used\n * @param rNode The native node that should be removed\n * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n */\nfunction nativeRemoveNode(renderer, rNode, isHostElement) {\n    const nativeParent = nativeParentNode(renderer, rNode);\n    if (nativeParent) {\n        nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n    }\n}\n/**\n * Performs the operation of `action` on the node. Typically this involves inserting or removing\n * nodes on the LView or projection boundary.\n */\nfunction applyNodes(renderer, action, tNode, lView, renderParent, beforeNode, isProjection) {\n    while (tNode != null) {\n        ngDevMode && assertTNodeForLView(tNode, lView);\n        ngDevMode && assertNodeOfPossibleTypes(tNode, [\n            0 /* Container */, 3 /* Element */, 4 /* ElementContainer */, 1 /* Projection */,\n            5 /* IcuContainer */\n        ]);\n        const rawSlotValue = lView[tNode.index];\n        const tNodeType = tNode.type;\n        if (isProjection) {\n            if (action === 0 /* Create */) {\n                rawSlotValue && attachPatchData(unwrapRNode(rawSlotValue), lView);\n                tNode.flags |= 4 /* isProjected */;\n            }\n        }\n        if ((tNode.flags & 64 /* isDetached */) !== 64 /* isDetached */) {\n            if (tNodeType === 4 /* ElementContainer */ || tNodeType === 5 /* IcuContainer */) {\n                applyNodes(renderer, action, tNode.child, lView, renderParent, beforeNode, false);\n                applyToElementOrContainer(action, renderer, renderParent, rawSlotValue, beforeNode);\n            }\n            else if (tNodeType === 1 /* Projection */) {\n                applyProjectionRecursive(renderer, action, lView, tNode, renderParent, beforeNode);\n            }\n            else {\n                ngDevMode && assertNodeOfPossibleTypes(tNode, [3 /* Element */, 0 /* Container */]);\n                applyToElementOrContainer(action, renderer, renderParent, rawSlotValue, beforeNode);\n            }\n        }\n        tNode = isProjection ? tNode.projectionNext : tNode.next;\n    }\n}\n/**\n * `applyView` performs operation on the view as specified in `action` (insert, detach, destroy)\n *\n * Inserting a view without projection or containers at top level is simple. Just iterate over the\n * root nodes of the View, and for each node perform the `action`.\n *\n * Things get more complicated with containers and projections. That is because coming across:\n * - Container: implies that we have to insert/remove/destroy the views of that container as well\n *              which in turn can have their own Containers at the View roots.\n * - Projection: implies that we have to insert/remove/destroy the nodes of the projection. The\n *               complication is that the nodes we are projecting can themselves have Containers\n *               or other Projections.\n *\n * As you can see this is a very recursive problem. Yes recursion is not most efficient but the\n * code is complicated enough that trying to implemented with recursion becomes unmaintainable.\n *\n * @param tView The `TView' which needs to be inserted, detached, destroyed\n * @param lView The LView which needs to be inserted, detached, destroyed.\n * @param renderer Renderer to use\n * @param action action to perform (insert, detach, destroy)\n * @param renderParent parent DOM element for insertion/removal.\n * @param beforeNode Before which node the insertions should happen.\n */\nfunction applyView(tView, lView, renderer, action, renderParent, beforeNode) {\n    ngDevMode && assertNodeType(tView.node, 2 /* View */);\n    const viewRootTNode = tView.node.child;\n    applyNodes(renderer, action, viewRootTNode, lView, renderParent, beforeNode, false);\n}\n/**\n * `applyProjection` performs operation on the projection.\n *\n * Inserting a projection requires us to locate the projected nodes from the parent component. The\n * complication is that those nodes themselves could be re-projected from their parent component.\n *\n * @param tView The `TView` of `LView` which needs to be inserted, detached, destroyed\n * @param lView The `LView` which needs to be inserted, detached, destroyed.\n * @param tProjectionNode node to project\n */\nfunction applyProjection(tView, lView, tProjectionNode) {\n    const renderer = lView[RENDERER];\n    const renderParent = getRenderParent(tView, tProjectionNode, lView);\n    const parentTNode = tProjectionNode.parent || lView[T_HOST];\n    let beforeNode = getNativeAnchorNode(parentTNode, lView);\n    applyProjectionRecursive(renderer, 0 /* Create */, lView, tProjectionNode, renderParent, beforeNode);\n}\n/**\n * `applyProjectionRecursive` performs operation on the projection specified by `action` (insert,\n * detach, destroy)\n *\n * Inserting a projection requires us to locate the projected nodes from the parent component. The\n * complication is that those nodes themselves could be re-projected from their parent component.\n *\n * @param renderer Render to use\n * @param action action to perform (insert, detach, destroy)\n * @param lView The LView which needs to be inserted, detached, destroyed.\n * @param tProjectionNode node to project\n * @param renderParent parent DOM element for insertion/removal.\n * @param beforeNode Before which node the insertions should happen.\n */\nfunction applyProjectionRecursive(renderer, action, lView, tProjectionNode, renderParent, beforeNode) {\n    const componentLView = lView[DECLARATION_COMPONENT_VIEW];\n    const componentNode = componentLView[T_HOST];\n    ngDevMode &&\n        assertEqual(typeof tProjectionNode.projection, 'number', 'expecting projection index');\n    const nodeToProjectOrRNodes = componentNode.projection[tProjectionNode.projection];\n    if (Array.isArray(nodeToProjectOrRNodes)) {\n        // This should not exist, it is a bit of a hack. When we bootstrap a top level node and we\n        // need to support passing projectable nodes, so we cheat and put them in the TNode\n        // of the Host TView. (Yes we put instance info at the T Level). We can get away with it\n        // because we know that that TView is not shared and therefore it will not be a problem.\n        // This should be refactored and cleaned up.\n        for (let i = 0; i < nodeToProjectOrRNodes.length; i++) {\n            const rNode = nodeToProjectOrRNodes[i];\n            applyToElementOrContainer(action, renderer, renderParent, rNode, beforeNode);\n        }\n    }\n    else {\n        let nodeToProject = nodeToProjectOrRNodes;\n        const projectedComponentLView = componentLView[PARENT];\n        applyNodes(renderer, action, nodeToProject, projectedComponentLView, renderParent, beforeNode, true);\n    }\n}\n/**\n * `applyContainer` performs an operation on the container and its views as specified by\n * `action` (insert, detach, destroy)\n *\n * Inserting a Container is complicated by the fact that the container may have Views which\n * themselves have containers or projections.\n *\n * @param renderer Renderer to use\n * @param action action to perform (insert, detach, destroy)\n * @param lContainer The LContainer which needs to be inserted, detached, destroyed.\n * @param renderParent parent DOM element for insertion/removal.\n * @param beforeNode Before which node the insertions should happen.\n */\nfunction applyContainer(renderer, action, lContainer, renderParent, beforeNode) {\n    ngDevMode && assertLContainer(lContainer);\n    const anchor = lContainer[NATIVE]; // LContainer has its own before node.\n    const native = unwrapRNode(lContainer);\n    // An LContainer can be created dynamically on any node by injecting ViewContainerRef.\n    // Asking for a ViewContainerRef on an element will result in a creation of a separate anchor node\n    // (comment in the DOM) that will be different from the LContainer's host node. In this particular\n    // case we need to execute action on 2 nodes:\n    // - container's host node (this is done in the executeActionOnElementOrContainer)\n    // - container's host node (this is done here)\n    if (anchor !== native) {\n        // This is very strange to me (Misko). I would expect that the native is same as anchor. I don't\n        // see a reason why they should be different, but they are.\n        //\n        // If they are we need to process the second anchor as well.\n        applyToElementOrContainer(action, renderer, renderParent, anchor, beforeNode);\n    }\n    for (let i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n        const lView = lContainer[i];\n        applyView(lView[TVIEW], lView, renderer, action, renderParent, anchor);\n    }\n}\n/**\n * Writes class/style to element.\n *\n * @param renderer Renderer to use.\n * @param isClassBased `true` if it should be written to `class` (`false` to write to `style`)\n * @param rNode The Node to write to.\n * @param prop Property to write to. This would be the class/style name.\n * @param value Value to write. If `null`/`undefined`/`false` this is considered a remove (set/add\n *        otherwise).\n */\nfunction applyStyling(renderer, isClassBased, rNode, prop, value) {\n    const isProcedural = isProceduralRenderer(renderer);\n    if (isClassBased) {\n        // We actually want JS true/false here because any truthy value should add the class\n        if (!value) {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            if (isProcedural) {\n                renderer.removeClass(rNode, prop);\n            }\n            else {\n                rNode.classList.remove(prop);\n            }\n        }\n        else {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            if (isProcedural) {\n                renderer.addClass(rNode, prop);\n            }\n            else {\n                ngDevMode && assertDefined(rNode.classList, 'HTMLElement expected');\n                rNode.classList.add(prop);\n            }\n        }\n    }\n    else {\n        // TODO(misko): Can't import RendererStyleFlags2.DashCase as it causes imports to be resolved in\n        // different order which causes failures. Using direct constant as workaround for now.\n        const flags = prop.indexOf('-') == -1 ? undefined : 2 /* RendererStyleFlags2.DashCase */;\n        if (value == null /** || value === undefined */) {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            if (isProcedural) {\n                renderer.removeStyle(rNode, prop, flags);\n            }\n            else {\n                rNode.style.removeProperty(prop);\n            }\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            if (isProcedural) {\n                renderer.setStyle(rNode, prop, value, flags);\n            }\n            else {\n                ngDevMode && assertDefined(rNode.style, 'HTMLElement expected');\n                rNode.style.setProperty(prop, value);\n            }\n        }\n    }\n}\n/**\n * Write `cssText` to `RElement`.\n *\n * This function does direct write without any reconciliation. Used for writing initial values, so\n * that static styling values do not pull in the style parser.\n *\n * @param renderer Renderer to use\n * @param element The element which needs to be updated.\n * @param newValue The new class list to write.\n */\nfunction writeDirectStyle(renderer, element, newValue) {\n    ngDevMode && assertString(newValue, '\\'newValue\\' should be a string');\n    if (isProceduralRenderer(renderer)) {\n        renderer.setAttribute(element, 'style', newValue);\n    }\n    else {\n        element.style.cssText = newValue;\n    }\n    ngDevMode && ngDevMode.rendererSetStyle++;\n}\n/**\n * Write `className` to `RElement`.\n *\n * This function does direct write without any reconciliation. Used for writing initial values, so\n * that static styling values do not pull in the style parser.\n *\n * @param renderer Renderer to use\n * @param element The element which needs to be updated.\n * @param newValue The new class list to write.\n */\nfunction writeDirectClass(renderer, element, newValue) {\n    ngDevMode && assertString(newValue, '\\'newValue\\' should be a string');\n    if (isProceduralRenderer(renderer)) {\n        if (newValue === '') {\n            // There are tests in `google3` which expect `element.getAttribute('class')` to be `null`.\n            renderer.removeAttribute(element, 'class');\n        }\n        else {\n            renderer.setAttribute(element, 'class', newValue);\n        }\n    }\n    else {\n        element.className = newValue;\n    }\n    ngDevMode && ngDevMode.rendererSetClassName++;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * If `startTNode.parent` exists and has an injector, returns TNode for that injector.\n * Otherwise, unwraps a parent injector location number to find the view offset from the current\n * injector, then walks up the declaration view tree until the TNode of the parent injector is\n * found.\n *\n * @param location The location of the parent injector, which contains the view offset\n * @param startView The LView instance from which to start walking up the view tree\n * @param startTNode The TNode instance of the starting element\n * @returns The TNode of the parent injector\n */\nfunction getParentInjectorTNode(location, startView, startTNode) {\n    // If there is an injector on the parent TNode, retrieve the TNode for that injector.\n    if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n        // view offset is 0\n        const injectorIndex = startTNode.parent.injectorIndex;\n        let tNode = startTNode.parent;\n        // If tNode.injectorIndex === tNode.parent.injectorIndex, then the index belongs to a parent\n        // injector.\n        while (tNode.parent != null && injectorIndex == tNode.parent.injectorIndex) {\n            tNode = tNode.parent;\n        }\n        return tNode;\n    }\n    let viewOffset = getParentInjectorViewOffset(location);\n    // view offset is 1\n    let parentView = startView;\n    let parentTNode = startView[T_HOST];\n    // view offset is superior to 1\n    while (viewOffset > 1) {\n        parentView = parentView[DECLARATION_VIEW];\n        parentTNode = parentView[T_HOST];\n        viewOffset--;\n    }\n    return parentTNode;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ViewRef {\n    constructor(\n    /**\n     * This represents `LView` associated with the component when ViewRef is a ChangeDetectorRef.\n     *\n     * When ViewRef is created for a dynamic component, this also represents the `LView` for the\n     * component.\n     *\n     * For a \"regular\" ViewRef created for an embedded view, this is the `LView` for the embedded\n     * view.\n     *\n     * @internal\n     */\n    _lView, \n    /**\n     * This represents the `LView` associated with the point where `ChangeDetectorRef` was\n     * requested.\n     *\n     * This may be different from `_lView` if the `_cdRefInjectingView` is an embedded view.\n     */\n    _cdRefInjectingView) {\n        this._lView = _lView;\n        this._cdRefInjectingView = _cdRefInjectingView;\n        this._appRef = null;\n        this._viewContainerRef = null;\n    }\n    get rootNodes() {\n        const lView = this._lView;\n        if (lView[HOST] == null) {\n            const hostTView = lView[T_HOST];\n            return collectNativeNodes(lView[TVIEW], lView, hostTView.child, []);\n        }\n        return [];\n    }\n    get context() {\n        return this._lView[CONTEXT];\n    }\n    get destroyed() {\n        return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n    }\n    destroy() {\n        if (this._appRef) {\n            this._appRef.detachView(this);\n        }\n        else if (this._viewContainerRef) {\n            const index = this._viewContainerRef.indexOf(this);\n            if (index > -1) {\n                this._viewContainerRef.detach(index);\n            }\n            this._viewContainerRef = null;\n        }\n        destroyLView(this._lView[TVIEW], this._lView);\n    }\n    onDestroy(callback) {\n        storeCleanupWithContext(this._lView[TVIEW], this._lView, null, callback);\n    }\n    /**\n     * Marks a view and all of its ancestors dirty.\n     *\n     * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n     * multiple `markForCheck` calls to into one change detection run.\n     *\n     * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n     * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n     * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n     *\n     * <!-- TODO: Add a link to a chapter on OnPush components -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'my-app',\n     *   template: `Number of ticks: {{numberOfTicks}}`\n     *   changeDetection: ChangeDetectionStrategy.OnPush,\n     * })\n     * class AppComponent {\n     *   numberOfTicks = 0;\n     *\n     *   constructor(private ref: ChangeDetectorRef) {\n     *     setInterval(() => {\n     *       this.numberOfTicks++;\n     *       // the following is required, otherwise the view will not be updated\n     *       this.ref.markForCheck();\n     *     }, 1000);\n     *   }\n     * }\n     * ```\n     */\n    markForCheck() {\n        markViewDirty(this._cdRefInjectingView || this._lView);\n    }\n    /**\n     * Detaches the view from the change detection tree.\n     *\n     * Detached views will not be checked during change detection runs until they are\n     * re-attached, even if they are dirty. `detach` can be used in combination with\n     * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n     * detection checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds. We can do that by detaching\n     * the component's change detector and doing a local check every five seconds.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   // in a real application the returned data will be different every time\n     *   get data() {\n     *     return [1,2,3,4,5];\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'giant-list',\n     *   template: `\n     *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n     *   `,\n     * })\n     * class GiantList {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n     *     ref.detach();\n     *     setInterval(() => {\n     *       this.ref.detectChanges();\n     *     }, 5000);\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     <giant-list><giant-list>\n     *   `,\n     * })\n     * class App {\n     * }\n     * ```\n     */\n    detach() {\n        this._lView[FLAGS] &= ~128 /* Attached */;\n    }\n    /**\n     * Re-attaches a view to the change detection tree.\n     *\n     * This can be used to re-attach views that were previously detached from the tree\n     * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates a component displaying `live` data. The component will detach\n     * its change detector from the main change detector tree when the component's live property\n     * is set to false.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   data = 1;\n     *\n     *   constructor() {\n     *     setInterval(() => {\n     *       this.data = this.data * 2;\n     *     }, 500);\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'live-data',\n     *   inputs: ['live'],\n     *   template: 'Data: {{dataProvider.data}}'\n     * })\n     * class LiveData {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n     *\n     *   set live(value) {\n     *     if (value) {\n     *       this.ref.reattach();\n     *     } else {\n     *       this.ref.detach();\n     *     }\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'my-app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n     *     <live-data [live]=\"live\"><live-data>\n     *   `,\n     * })\n     * class AppComponent {\n     *   live = true;\n     * }\n     * ```\n     */\n    reattach() {\n        this._lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Checks the view and its children.\n     *\n     * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n     * local change detection checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine, the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds.\n     *\n     * We can do that by detaching the component's change detector and doing a local change detection\n     * check every five seconds.\n     *\n     * See {@link ChangeDetectorRef#detach detach} for more information.\n     */\n    detectChanges() {\n        detectChangesInternal(this._lView[TVIEW], this._lView, this.context);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    checkNoChanges() {\n        checkNoChangesInternal(this._lView[TVIEW], this._lView, this.context);\n    }\n    attachToViewContainerRef(vcRef) {\n        if (this._appRef) {\n            throw new Error('This view is already attached directly to the ApplicationRef!');\n        }\n        this._viewContainerRef = vcRef;\n    }\n    detachFromAppRef() {\n        this._appRef = null;\n        renderDetachView(this._lView[TVIEW], this._lView);\n    }\n    attachToAppRef(appRef) {\n        if (this._viewContainerRef) {\n            throw new Error('This view is already attached to a ViewContainer!');\n        }\n        this._appRef = appRef;\n    }\n}\n/** @internal */\nclass RootViewRef extends ViewRef {\n    constructor(_view) {\n        super(_view);\n        this._view = _view;\n    }\n    detectChanges() {\n        detectChangesInRootView(this._view);\n    }\n    checkNoChanges() {\n        checkNoChangesInRootView(this._view);\n    }\n    get context() {\n        return null;\n    }\n}\nfunction collectNativeNodes(tView, lView, tNode, result, isProjection = false) {\n    while (tNode !== null) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, [\n            3 /* Element */, 0 /* Container */, 1 /* Projection */, 4 /* ElementContainer */,\n            5 /* IcuContainer */\n        ]);\n        const lNode = lView[tNode.index];\n        if (lNode !== null) {\n            result.push(unwrapRNode(lNode));\n        }\n        // A given lNode can represent either a native node or a LContainer (when it is a host of a\n        // ViewContainerRef). When we find a LContainer we need to descend into it to collect root nodes\n        // from the views in this container.\n        if (isLContainer(lNode)) {\n            for (let i = CONTAINER_HEADER_OFFSET; i < lNode.length; i++) {\n                const lViewInAContainer = lNode[i];\n                const lViewFirstChildTNode = lViewInAContainer[TVIEW].firstChild;\n                if (lViewFirstChildTNode !== null) {\n                    collectNativeNodes(lViewInAContainer[TVIEW], lViewInAContainer, lViewFirstChildTNode, result);\n                }\n            }\n        }\n        const tNodeType = tNode.type;\n        if (tNodeType === 4 /* ElementContainer */ || tNodeType === 5 /* IcuContainer */) {\n            collectNativeNodes(tView, lView, tNode.child, result);\n        }\n        else if (tNodeType === 1 /* Projection */) {\n            const componentView = lView[DECLARATION_COMPONENT_VIEW];\n            const componentHost = componentView[T_HOST];\n            const slotIdx = tNode.projection;\n            ngDevMode &&\n                assertDefined(componentHost.projection, 'Components with projection nodes (<ng-content>) must have projection slots defined.');\n            const nodesInSlot = componentHost.projection[slotIdx];\n            if (Array.isArray(nodesInSlot)) {\n                result.push(...nodesInSlot);\n            }\n            else {\n                const parentView = getLViewParent(componentView);\n                ngDevMode &&\n                    assertDefined(parentView, 'Component views should always have a parent view (component\\'s host view)');\n                collectNativeNodes(parentView[TVIEW], parentView, nodesInSlot, result, true);\n            }\n        }\n        tNode = isProjection ? tNode.projectionNext : tNode.next;\n    }\n    return result;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates an ElementRef from the most recent node.\n *\n * @returns The ElementRef instance to use\n */\nfunction injectElementRef(ElementRefToken) {\n    return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n}\nlet R3ElementRef;\n/**\n * Creates an ElementRef given a node.\n *\n * @param ElementRefToken The ElementRef type\n * @param tNode The node for which you'd like an ElementRef\n * @param view The view to which the node belongs\n * @returns The ElementRef instance to use\n */\nfunction createElementRef(ElementRefToken, tNode, view) {\n    if (!R3ElementRef) {\n        R3ElementRef = class ElementRef extends ElementRefToken {\n        };\n    }\n    return new R3ElementRef(getNativeByTNode(tNode, view));\n}\nlet R3TemplateRef;\n/**\n * Creates a TemplateRef given a node.\n *\n * @returns The TemplateRef instance to use\n */\nfunction injectTemplateRef(TemplateRefToken, ElementRefToken) {\n    return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n}\n/**\n * Creates a TemplateRef and stores it on the injector.\n *\n * @param TemplateRefToken The TemplateRef type\n * @param ElementRefToken The ElementRef type\n * @param hostTNode The node on which a TemplateRef is requested\n * @param hostView The view to which the node belongs\n * @returns The TemplateRef instance or null if we can't create a TemplateRef on a given node type\n */\nfunction createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n    if (!R3TemplateRef) {\n        R3TemplateRef = class TemplateRef extends TemplateRefToken {\n            constructor(_declarationView, _declarationTContainer, elementRef) {\n                super();\n                this._declarationView = _declarationView;\n                this._declarationTContainer = _declarationTContainer;\n                this.elementRef = elementRef;\n            }\n            createEmbeddedView(context) {\n                const embeddedTView = this._declarationTContainer.tViews;\n                const embeddedLView = createLView(this._declarationView, embeddedTView, context, 16 /* CheckAlways */, null, embeddedTView.node);\n                const declarationLContainer = this._declarationView[this._declarationTContainer.index];\n                ngDevMode && assertLContainer(declarationLContainer);\n                embeddedLView[DECLARATION_LCONTAINER] = declarationLContainer;\n                const declarationViewLQueries = this._declarationView[QUERIES];\n                if (declarationViewLQueries !== null) {\n                    embeddedLView[QUERIES] = declarationViewLQueries.createEmbeddedView(embeddedTView);\n                }\n                renderView(embeddedTView, embeddedLView, context);\n                return new ViewRef(embeddedLView);\n            }\n        };\n    }\n    if (hostTNode.type === 0 /* Container */) {\n        ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n        return new R3TemplateRef(hostView, hostTNode, createElementRef(ElementRefToken, hostTNode, hostView));\n    }\n    else {\n        return null;\n    }\n}\nlet R3ViewContainerRef;\n/**\n * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n * already exists, retrieves the existing ViewContainerRef.\n *\n * @returns The ViewContainerRef instance to use\n */\nfunction injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n    const previousTNode = getPreviousOrParentTNode();\n    return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n}\n/**\n * Creates a ViewContainerRef and stores it on the injector.\n *\n * @param ViewContainerRefToken The ViewContainerRef type\n * @param ElementRefToken The ElementRef type\n * @param hostTNode The node that is requesting a ViewContainerRef\n * @param hostView The view to which the node belongs\n * @returns The ViewContainerRef instance to use\n */\nfunction createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n    if (!R3ViewContainerRef) {\n        R3ViewContainerRef = class ViewContainerRef extends ViewContainerRefToken {\n            constructor(_lContainer, _hostTNode, _hostView) {\n                super();\n                this._lContainer = _lContainer;\n                this._hostTNode = _hostTNode;\n                this._hostView = _hostView;\n            }\n            get element() {\n                return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n            }\n            get injector() {\n                return new NodeInjector(this._hostTNode, this._hostView);\n            }\n            /** @deprecated No replacement */\n            get parentInjector() {\n                const parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                const parentView = getParentInjectorView(parentLocation, this._hostView);\n                const parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                return !hasParentInjector(parentLocation) || parentTNode == null ?\n                    new NodeInjector(null, this._hostView) :\n                    new NodeInjector(parentTNode, parentView);\n            }\n            clear() {\n                while (this.length > 0) {\n                    this.remove(this.length - 1);\n                }\n            }\n            get(index) {\n                return this._lContainer[VIEW_REFS] !== null && this._lContainer[VIEW_REFS][index] || null;\n            }\n            get length() {\n                return this._lContainer.length - CONTAINER_HEADER_OFFSET;\n            }\n            createEmbeddedView(templateRef, context, index) {\n                const viewRef = templateRef.createEmbeddedView(context || {});\n                this.insert(viewRef, index);\n                return viewRef;\n            }\n            createComponent(componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                const contextInjector = injector || this.parentInjector;\n                if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                    // DO NOT REFACTOR. The code here used to have a `value || undefined` expression\n                    // which seems to cause internal google apps to fail. This is documented in the\n                    // following internal bug issue: go/b/142967802\n                    const result = contextInjector.get(NgModuleRef, null);\n                    if (result) {\n                        ngModuleRef = result;\n                    }\n                }\n                const componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                this.insert(componentRef.hostView, index);\n                return componentRef;\n            }\n            insert(viewRef, index) {\n                const lView = viewRef._lView;\n                const tView = lView[TVIEW];\n                if (viewRef.destroyed) {\n                    throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                }\n                this.allocateContainerIfNeeded();\n                if (viewAttachedToContainer(lView)) {\n                    // If view is already attached, detach it first so we clean up references appropriately.\n                    const prevIdx = this.indexOf(viewRef);\n                    // A view might be attached either to this or a different container. The `prevIdx` for\n                    // those cases will be:\n                    // equal to -1 for views attached to this ViewContainerRef\n                    // >= 0 for views attached to a different ViewContainerRef\n                    if (prevIdx !== -1) {\n                        this.detach(prevIdx);\n                    }\n                    else {\n                        const prevLContainer = lView[PARENT];\n                        ngDevMode &&\n                            assertEqual(isLContainer(prevLContainer), true, 'An attached view should have its PARENT point to a container.');\n                        // We need to re-create a R3ViewContainerRef instance since those are not stored on\n                        // LView (nor anywhere else).\n                        const prevVCRef = new R3ViewContainerRef(prevLContainer, prevLContainer[T_HOST], prevLContainer[PARENT]);\n                        prevVCRef.detach(prevVCRef.indexOf(viewRef));\n                    }\n                }\n                const adjustedIdx = this._adjustIndex(index);\n                insertView(tView, lView, this._lContainer, adjustedIdx);\n                const beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer);\n                addRemoveViewFromContainer(tView, lView, true, beforeNode);\n                viewRef.attachToViewContainerRef(this);\n                addToArray(this._lContainer[VIEW_REFS], adjustedIdx, viewRef);\n                return viewRef;\n            }\n            move(viewRef, newIndex) {\n                if (viewRef.destroyed) {\n                    throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                }\n                return this.insert(viewRef, newIndex);\n            }\n            indexOf(viewRef) {\n                const viewRefsArr = this._lContainer[VIEW_REFS];\n                return viewRefsArr !== null ? viewRefsArr.indexOf(viewRef) : -1;\n            }\n            remove(index) {\n                this.allocateContainerIfNeeded();\n                const adjustedIdx = this._adjustIndex(index, -1);\n                const detachedView = detachView(this._lContainer, adjustedIdx);\n                if (detachedView) {\n                    // Before destroying the view, remove it from the container's array of `ViewRef`s.\n                    // This ensures the view container length is updated before calling\n                    // `destroyLView`, which could recursively call view container methods that\n                    // rely on an accurate container length.\n                    // (e.g. a method on this view container being called by a child directive's OnDestroy\n                    // lifecycle hook)\n                    removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx);\n                    destroyLView(detachedView[TVIEW], detachedView);\n                }\n            }\n            detach(index) {\n                this.allocateContainerIfNeeded();\n                const adjustedIdx = this._adjustIndex(index, -1);\n                const view = detachView(this._lContainer, adjustedIdx);\n                const wasDetached = view && removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx) != null;\n                return wasDetached ? new ViewRef(view) : null;\n            }\n            _adjustIndex(index, shift = 0) {\n                if (index == null) {\n                    return this.length + shift;\n                }\n                if (ngDevMode) {\n                    assertGreaterThan(index, -1, `ViewRef index must be positive, got ${index}`);\n                    // +1 because it's legal to insert at the end.\n                    assertLessThan(index, this.length + 1 + shift, 'index');\n                }\n                return index;\n            }\n            allocateContainerIfNeeded() {\n                if (this._lContainer[VIEW_REFS] === null) {\n                    this._lContainer[VIEW_REFS] = [];\n                }\n            }\n        };\n    }\n    ngDevMode &&\n        assertNodeOfPossibleTypes(hostTNode, [0 /* Container */, 3 /* Element */, 4 /* ElementContainer */]);\n    let lContainer;\n    const slotValue = hostView[hostTNode.index];\n    if (isLContainer(slotValue)) {\n        // If the host is a container, we don't need to create a new LContainer\n        lContainer = slotValue;\n    }\n    else {\n        let commentNode;\n        // If the host is an element container, the native host element is guaranteed to be a\n        // comment and we can reuse that comment as anchor element for the new LContainer.\n        // The comment node in question is already part of the DOM structure so we don't need to append\n        // it again.\n        if (hostTNode.type === 4 /* ElementContainer */) {\n            commentNode = unwrapRNode(slotValue);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            // A `ViewContainerRef` can be injected by the root (topmost / bootstrapped) component. In\n            // this case we can't use TView / TNode data structures to insert container's marker node\n            // (both a parent of a comment node and the comment node itself are not part of any view). In\n            // this specific case we use low-level DOM manipulation to insert container's marker (comment)\n            // node.\n            if (isRootView(hostView)) {\n                const renderer = hostView[RENDERER];\n                const hostNative = getNativeByTNode(hostTNode, hostView);\n                const parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(hostView[TVIEW], hostView, commentNode, hostTNode);\n            }\n        }\n        hostView[hostTNode.index] = lContainer =\n            createLContainer(slotValue, hostView, commentNode, hostTNode);\n        addToViewTree(hostView, lContainer);\n    }\n    return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n}\n/** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\nfunction injectChangeDetectorRef(isPipe = false) {\n    return createViewRef(getPreviousOrParentTNode(), getLView(), isPipe);\n}\n/**\n * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n *\n * @param tNode The node that is requesting a ChangeDetectorRef\n * @param lView The view to which the node belongs\n * @param isPipe Whether the view is being injected into a pipe.\n * @returns The ChangeDetectorRef to use\n */\nfunction createViewRef(tNode, lView, isPipe) {\n    // `isComponentView` will be true for Component and Directives (but not for Pipes).\n    // See https://github.com/angular/angular/pull/33072 for proper fix\n    const isComponentView = !isPipe && isComponentHost(tNode);\n    if (isComponentView) {\n        // The LView represents the location where the component is declared.\n        // Instead we want the LView for the component View and so we need to look it up.\n        const componentView = getComponentLViewByIndex(tNode.index, lView); // look down\n        return new ViewRef(componentView, componentView);\n    }\n    else if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */ ||\n        tNode.type === 4 /* ElementContainer */ || tNode.type === 5 /* IcuContainer */) {\n        // The LView represents the location where the injection is requested from.\n        // We need to locate the containing LView (in case where the `lView` is an embedded view)\n        const hostComponentView = lView[DECLARATION_COMPONENT_VIEW]; // look up\n        return new ViewRef(hostComponentView, lView);\n    }\n    return null;\n}\n/** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\nfunction getOrCreateRenderer2(view) {\n    const renderer = view[RENDERER];\n    if (isProceduralRenderer(renderer)) {\n        return renderer;\n    }\n    else {\n        throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n    }\n}\n/** Injects a Renderer2 for the current component. */\nfunction injectRenderer2() {\n    // We need the Renderer to be based on the component that it's being injected into, however since\n    // DI happens before we've entered its view, `getLView` will return the parent view instead.\n    const lView = getLView();\n    const tNode = getPreviousOrParentTNode();\n    const nodeAtIndex = getComponentLViewByIndex(tNode.index, lView);\n    return getOrCreateRenderer2(isLView(nodeAtIndex) ? nodeAtIndex : lView);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class that provides change detection functionality.\n * A change-detection tree collects all views that are to be checked for changes.\n * Use the methods to add and remove views from the tree, initiate change-detection,\n * and explicitly mark views as _dirty_, meaning that they have changed and need to be re-rendered.\n *\n * @see [Using change detection hooks](guide/lifecycle-hooks#using-change-detection-hooks)\n * @see [Defining custom change detection](guide/lifecycle-hooks#defining-custom-change-detection)\n *\n * @usageNotes\n *\n * The following examples demonstrate how to modify default change-detection behavior\n * to perform explicit detection when needed.\n *\n * ### Use `markForCheck()` with `CheckOnce` strategy\n *\n * The following example sets the `OnPush` change-detection strategy for a component\n * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n *\n * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n * region=\"mark-for-check\"></code-example>\n *\n * ### Detach change detector to limit how often check occurs\n *\n * The following example defines a component with a large list of read-only data\n * that is expected to change constantly, many times per second.\n * To improve performance, we want to check and update the list\n * less often than the changes actually occur. To do that, we detach\n * the component's change detector and perform an explicit local check every five seconds.\n *\n * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n *\n *\n * ### Reattaching a detached component\n *\n * The following example creates a component displaying live data.\n * The component detaches its change detector from the main change detector tree\n * when the `live` property is set to false, and reattaches it when the property\n * becomes true.\n *\n * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n *\n * @publicApi\n */\nclass ChangeDetectorRef {\n}\n/**\n * @internal\n * @nocollapse\n */\nChangeDetectorRef.__NG_ELEMENT_ID__ = () => SWITCH_CHANGE_DETECTOR_REF_FACTORY();\nconst SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\nconst SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = (...args) => { };\nconst ɵ0$5 = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\nconst SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Represents a type that a Component or other object is instances of.\n *\n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is represented by\n * the `MyCustomComponent` constructor function.\n *\n * @publicApi\n */\nconst Type = Function;\nfunction isType(v) {\n    return typeof v === 'function';\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/*\n * #########################\n * Attention: These Regular expressions have to hold even if the code is minified!\n * ##########################\n */\n/**\n * Regular expression that detects pass-through constructors for ES5 output. This Regex\n * intends to capture the common delegation pattern emitted by TypeScript and Babel. Also\n * it intends to capture the pattern where existing constructors have been downleveled from\n * ES2015 to ES5 using TypeScript w/ downlevel iteration. e.g.\n *\n * ```\n *   function MyClass() {\n *     var _this = _super.apply(this, arguments) || this;\n * ```\n *\n * ```\n *   function MyClass() {\n *     var _this = _super.apply(this, __spread(arguments)) || this;\n * ```\n *\n * More details can be found in: https://github.com/angular/angular/issues/38453.\n */\nconst ES5_DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*(arguments|[^()]+\\(arguments\\))\\)/;\n/** Regular expression that detects ES2015 classes which extend from other classes. */\nconst ES2015_INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n/**\n * Regular expression that detects ES2015 classes which extend from other classes and\n * have an explicit constructor defined.\n */\nconst ES2015_INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n/**\n * Regular expression that detects ES2015 classes which extend from other classes\n * and inherit a constructor.\n */\nconst ES2015_INHERITED_CLASS_WITH_DELEGATE_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(\\)\\s*{\\s*super\\(\\.\\.\\.arguments\\)/;\n/**\n * Determine whether a stringified type is a class which delegates its constructor\n * to its parent.\n *\n * This is not trivial since compiled code can actually contain a constructor function\n * even if the original source code did not. For instance, when the child class contains\n * an initialized instance property.\n */\nfunction isDelegateCtor(typeStr) {\n    return ES5_DELEGATE_CTOR.test(typeStr) ||\n        ES2015_INHERITED_CLASS_WITH_DELEGATE_CTOR.test(typeStr) ||\n        (ES2015_INHERITED_CLASS.test(typeStr) && !ES2015_INHERITED_CLASS_WITH_CTOR.test(typeStr));\n}\nclass ReflectionCapabilities {\n    constructor(reflect) {\n        this._reflect = reflect || _global['Reflect'];\n    }\n    isReflectionEnabled() {\n        return true;\n    }\n    factory(t) {\n        return (...args) => new t(...args);\n    }\n    /** @internal */\n    _zipTypesAndAnnotations(paramTypes, paramAnnotations) {\n        let result;\n        if (typeof paramTypes === 'undefined') {\n            result = newArray(paramAnnotations.length);\n        }\n        else {\n            result = newArray(paramTypes.length);\n        }\n        for (let i = 0; i < result.length; i++) {\n            // TS outputs Object for parameters without types, while Traceur omits\n            // the annotations. For now we preserve the Traceur behavior to aid\n            // migration, but this can be revisited.\n            if (typeof paramTypes === 'undefined') {\n                result[i] = [];\n            }\n            else if (paramTypes[i] && paramTypes[i] != Object) {\n                result[i] = [paramTypes[i]];\n            }\n            else {\n                result[i] = [];\n            }\n            if (paramAnnotations && paramAnnotations[i] != null) {\n                result[i] = result[i].concat(paramAnnotations[i]);\n            }\n        }\n        return result;\n    }\n    _ownParameters(type, parentCtor) {\n        const typeStr = type.toString();\n        // If we have no decorators, we only have function.length as metadata.\n        // In that case, to detect whether a child class declared an own constructor or not,\n        // we need to look inside of that constructor to check whether it is\n        // just calling the parent.\n        // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n        // that sets 'design:paramtypes' to []\n        // if a class inherits from another class but has no ctor declared itself.\n        if (isDelegateCtor(typeStr)) {\n            return null;\n        }\n        // Prefer the direct API.\n        if (type.parameters && type.parameters !== parentCtor.parameters) {\n            return type.parameters;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        const tsickleCtorParams = type.ctorParameters;\n        if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n            // Newer tsickle uses a function closure\n            // Retain the non-function case for compatibility with older tsickle\n            const ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n            const paramTypes = ctorParameters.map((ctorParam) => ctorParam && ctorParam.type);\n            const paramAnnotations = ctorParameters.map((ctorParam) => ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators));\n            return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n        }\n        // API for metadata created by invoking the decorators.\n        const paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n        const paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n            this._reflect.getOwnMetadata('design:paramtypes', type);\n        if (paramTypes || paramAnnotations) {\n            return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n        }\n        // If a class has no decorators, at least create metadata\n        // based on function.length.\n        // Note: We know that this is a real constructor as we checked\n        // the content of the constructor above.\n        return newArray(type.length);\n    }\n    parameters(type) {\n        // Note: only report metadata if we have at least one class decorator\n        // to stay in sync with the static reflector.\n        if (!isType(type)) {\n            return [];\n        }\n        const parentCtor = getParentCtor(type);\n        let parameters = this._ownParameters(type, parentCtor);\n        if (!parameters && parentCtor !== Object) {\n            parameters = this.parameters(parentCtor);\n        }\n        return parameters || [];\n    }\n    _ownAnnotations(typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n            let annotations = typeOrFunc.annotations;\n            if (typeof annotations === 'function' && annotations.annotations) {\n                annotations = annotations.annotations;\n            }\n            return annotations;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n            return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n            return typeOrFunc[ANNOTATIONS];\n        }\n        return null;\n    }\n    annotations(typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return [];\n        }\n        const parentCtor = getParentCtor(typeOrFunc);\n        const ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n        const parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n        return parentAnnotations.concat(ownAnnotations);\n    }\n    _ownPropMetadata(typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if (typeOrFunc.propMetadata &&\n            typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n            let propMetadata = typeOrFunc.propMetadata;\n            if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                propMetadata = propMetadata.propMetadata;\n            }\n            return propMetadata;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if (typeOrFunc.propDecorators &&\n            typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n            const propDecorators = typeOrFunc.propDecorators;\n            const propMetadata = {};\n            Object.keys(propDecorators).forEach(prop => {\n                propMetadata[prop] = convertTsickleDecoratorIntoMetadata(propDecorators[prop]);\n            });\n            return propMetadata;\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n            return typeOrFunc[PROP_METADATA];\n        }\n        return null;\n    }\n    propMetadata(typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return {};\n        }\n        const parentCtor = getParentCtor(typeOrFunc);\n        const propMetadata = {};\n        if (parentCtor !== Object) {\n            const parentPropMetadata = this.propMetadata(parentCtor);\n            Object.keys(parentPropMetadata).forEach((propName) => {\n                propMetadata[propName] = parentPropMetadata[propName];\n            });\n        }\n        const ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n        if (ownPropMetadata) {\n            Object.keys(ownPropMetadata).forEach((propName) => {\n                const decorators = [];\n                if (propMetadata.hasOwnProperty(propName)) {\n                    decorators.push(...propMetadata[propName]);\n                }\n                decorators.push(...ownPropMetadata[propName]);\n                propMetadata[propName] = decorators;\n            });\n        }\n        return propMetadata;\n    }\n    ownPropMetadata(typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return {};\n        }\n        return this._ownPropMetadata(typeOrFunc, getParentCtor(typeOrFunc)) || {};\n    }\n    hasLifecycleHook(type, lcProperty) {\n        return type instanceof Type && lcProperty in type.prototype;\n    }\n    guards(type) {\n        return {};\n    }\n    getter(name) {\n        return new Function('o', 'return o.' + name + ';');\n    }\n    setter(name) {\n        return new Function('o', 'v', 'return o.' + name + ' = v;');\n    }\n    method(name) {\n        const functionBody = `if (!o.${name}) throw new Error('\"${name}\" is undefined');\n        return o.${name}.apply(o, args);`;\n        return new Function('o', 'args', functionBody);\n    }\n    // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n    importUri(type) {\n        // StaticSymbol\n        if (typeof type === 'object' && type['filePath']) {\n            return type['filePath'];\n        }\n        // Runtime type\n        return `./${stringify(type)}`;\n    }\n    resourceUri(type) {\n        return `./${stringify(type)}`;\n    }\n    resolveIdentifier(name, moduleUrl, members, runtime) {\n        return runtime;\n    }\n    resolveEnum(enumIdentifier, name) {\n        return enumIdentifier[name];\n    }\n}\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n    if (!decoratorInvocations) {\n        return [];\n    }\n    return decoratorInvocations.map(decoratorInvocation => {\n        const decoratorType = decoratorInvocation.type;\n        const annotationCls = decoratorType.annotationCls;\n        const annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n        return new annotationCls(...annotationArgs);\n    });\n}\nfunction getParentCtor(ctor) {\n    const parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n    const parentCtor = parentProto ? parentProto.constructor : null;\n    // Note: We always use `Object` as the null value\n    // to simplify checking later on.\n    return parentCtor || Object;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet _reflect = null;\nfunction getReflect() {\n    return (_reflect = _reflect || new ReflectionCapabilities());\n}\nfunction reflectDependencies(type) {\n    return convertDependencies(getReflect().parameters(type));\n}\nfunction convertDependencies(deps) {\n    const compiler = getCompilerFacade();\n    return deps.map(dep => reflectDependency(compiler, dep));\n}\nfunction reflectDependency(compiler, dep) {\n    const meta = {\n        token: null,\n        host: false,\n        optional: false,\n        resolved: compiler.R3ResolvedDependencyType.Token,\n        self: false,\n        skipSelf: false,\n    };\n    function setTokenAndResolvedType(token) {\n        meta.resolved = compiler.R3ResolvedDependencyType.Token;\n        meta.token = token;\n    }\n    if (Array.isArray(dep) && dep.length > 0) {\n        for (let j = 0; j < dep.length; j++) {\n            const param = dep[j];\n            if (param === undefined) {\n                // param may be undefined if type of dep is not set by ngtsc\n                continue;\n            }\n            const proto = Object.getPrototypeOf(param);\n            if (param instanceof Optional || proto.ngMetadataName === 'Optional') {\n                meta.optional = true;\n            }\n            else if (param instanceof SkipSelf || proto.ngMetadataName === 'SkipSelf') {\n                meta.skipSelf = true;\n            }\n            else if (param instanceof Self || proto.ngMetadataName === 'Self') {\n                meta.self = true;\n            }\n            else if (param instanceof Host || proto.ngMetadataName === 'Host') {\n                meta.host = true;\n            }\n            else if (param instanceof Inject) {\n                meta.token = param.token;\n            }\n            else if (param instanceof Attribute) {\n                if (param.attributeName === undefined) {\n                    throw new Error(`Attribute name must be defined.`);\n                }\n                meta.token = param.attributeName;\n                meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n            }\n            else if (param === ChangeDetectorRef) {\n                meta.token = param;\n                meta.resolved = compiler.R3ResolvedDependencyType.ChangeDetectorRef;\n            }\n            else {\n                setTokenAndResolvedType(param);\n            }\n        }\n    }\n    else if (dep === undefined || (Array.isArray(dep) && dep.length === 0)) {\n        meta.token = undefined;\n        meta.resolved = R3ResolvedDependencyType.Invalid;\n    }\n    else {\n        setTokenAndResolvedType(dep);\n    }\n    return meta;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n * injectable def (`ɵprov`) onto the injectable type.\n */\nfunction compileInjectable(type, srcMeta) {\n    let ngInjectableDef = null;\n    let ngFactoryDef = null;\n    // if NG_PROV_DEF is already defined on this class then don't overwrite it\n    if (!type.hasOwnProperty(NG_PROV_DEF)) {\n        Object.defineProperty(type, NG_PROV_DEF, {\n            get: () => {\n                if (ngInjectableDef === null) {\n                    ngInjectableDef = getCompilerFacade().compileInjectable(angularCoreDiEnv, `ng:///${type.name}/ɵprov.js`, getInjectableMetadata(type, srcMeta));\n                }\n                return ngInjectableDef;\n            },\n        });\n        // On IE10 properties defined via `defineProperty` won't be inherited by child classes,\n        // which will break inheriting the injectable definition from a grandparent through an\n        // undecorated parent class. We work around it by defining a method which should be used\n        // as a fallback. This should only be a problem in JIT mode, because in AOT TypeScript\n        // seems to have a workaround for static properties. When inheriting from an undecorated\n        // parent is no longer supported (v11 or later), this can safely be removed.\n        if (!type.hasOwnProperty(NG_PROV_DEF_FALLBACK)) {\n            type[NG_PROV_DEF_FALLBACK] = () => type[NG_PROV_DEF];\n        }\n    }\n    // if NG_FACTORY_DEF is already defined on this class then don't overwrite it\n    if (!type.hasOwnProperty(NG_FACTORY_DEF)) {\n        Object.defineProperty(type, NG_FACTORY_DEF, {\n            get: () => {\n                if (ngFactoryDef === null) {\n                    const metadata = getInjectableMetadata(type, srcMeta);\n                    const compiler = getCompilerFacade();\n                    ngFactoryDef = compiler.compileFactory(angularCoreDiEnv, `ng:///${type.name}/ɵfac.js`, {\n                        name: metadata.name,\n                        type: metadata.type,\n                        typeArgumentCount: metadata.typeArgumentCount,\n                        deps: reflectDependencies(type),\n                        injectFn: 'inject',\n                        target: compiler.R3FactoryTarget.Injectable\n                    });\n                }\n                return ngFactoryDef;\n            },\n            // Leave this configurable so that the factories from directives or pipes can take precedence.\n            configurable: true\n        });\n    }\n}\nconst ɵ0$6 = getClosureSafeProperty;\nconst USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: ɵ0$6 });\nfunction isUseClassProvider(meta) {\n    return meta.useClass !== undefined;\n}\nfunction isUseValueProvider(meta) {\n    return USE_VALUE$1 in meta;\n}\nfunction isUseFactoryProvider(meta) {\n    return meta.useFactory !== undefined;\n}\nfunction isUseExistingProvider(meta) {\n    return meta.useExisting !== undefined;\n}\nfunction getInjectableMetadata(type, srcMeta) {\n    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n    const meta = srcMeta || { providedIn: null };\n    const compilerMeta = {\n        name: type.name,\n        type: type,\n        typeArgumentCount: 0,\n        providedIn: meta.providedIn,\n        userDeps: undefined,\n    };\n    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n        compilerMeta.userDeps = convertDependencies(meta.deps);\n    }\n    if (isUseClassProvider(meta)) {\n        // The user explicitly specified useClass, and may or may not have provided deps.\n        compilerMeta.useClass = resolveForwardRef(meta.useClass);\n    }\n    else if (isUseValueProvider(meta)) {\n        // The user explicitly specified useValue.\n        compilerMeta.useValue = resolveForwardRef(meta.useValue);\n    }\n    else if (isUseFactoryProvider(meta)) {\n        // The user explicitly specified useFactory.\n        compilerMeta.useFactory = meta.useFactory;\n    }\n    else if (isUseExistingProvider(meta)) {\n        // The user explicitly specified useExisting.\n        compilerMeta.useExisting = resolveForwardRef(meta.useExisting);\n    }\n    return compilerMeta;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ɵ0$7 = getClosureSafeProperty;\nconst USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: ɵ0$7 });\nconst EMPTY_ARRAY$1 = [];\nfunction convertInjectableProviderToFactory(type, provider) {\n    if (!provider) {\n        const reflectionCapabilities = new ReflectionCapabilities();\n        const deps = reflectionCapabilities.parameters(type);\n        // TODO - convert to flags.\n        return () => new type(...injectArgs(deps));\n    }\n    if (USE_VALUE$2 in provider) {\n        const valueProvider = provider;\n        return () => valueProvider.useValue;\n    }\n    else if (provider.useExisting) {\n        const existingProvider = provider;\n        return () => ɵɵinject(resolveForwardRef(existingProvider.useExisting));\n    }\n    else if (provider.useFactory) {\n        const factoryProvider = provider;\n        return () => factoryProvider.useFactory(...injectArgs(factoryProvider.deps || EMPTY_ARRAY$1));\n    }\n    else if (provider.useClass) {\n        const classProvider = provider;\n        let deps = provider.deps;\n        if (!deps) {\n            const reflectionCapabilities = new ReflectionCapabilities();\n            deps = reflectionCapabilities.parameters(type);\n        }\n        return () => new (resolveForwardRef(classProvider.useClass))(...injectArgs(deps));\n    }\n    else {\n        let deps = provider.deps;\n        if (!deps) {\n            const reflectionCapabilities = new ReflectionCapabilities();\n            deps = reflectionCapabilities.parameters(type);\n        }\n        return () => new type(...injectArgs(deps));\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ɵ0$8 = (type, meta) => SWITCH_COMPILE_INJECTABLE(type, meta);\n/**\n * Injectable decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nconst Injectable = makeDecorator('Injectable', undefined, undefined, undefined, ɵ0$8);\n/**\n * Supports @Injectable() in JIT mode for Render2.\n */\nfunction render2CompileInjectable(injectableType, options) {\n    if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n        injectableType.ɵprov = ɵɵdefineInjectable({\n            token: injectableType,\n            providedIn: options.providedIn,\n            factory: convertInjectableProviderToFactory(injectableType, options),\n        });\n    }\n}\nconst SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\nconst SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\nconst SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An internal token whose presence in an injector indicates that the injector should treat itself\n * as a root scoped injector when processing requests for unknown tokens which may indicate\n * they are provided in the root scope.\n */\nconst INJECTOR_SCOPE = new InjectionToken('Set Injector scope.');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Marker which indicates that a value has not yet been created from the factory function.\n */\nconst NOT_YET = {};\n/**\n * Marker which indicates that the factory function for a token is in the process of being called.\n *\n * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n * injection of a dependency has recursively attempted to inject the original token, and there is\n * a circular dependency among the providers.\n */\nconst CIRCULAR = {};\nconst EMPTY_ARRAY$2 = [];\n/**\n * A lazily initialized NullInjector.\n */\nlet NULL_INJECTOR = undefined;\nfunction getNullInjector() {\n    if (NULL_INJECTOR === undefined) {\n        NULL_INJECTOR = new NullInjector();\n    }\n    return NULL_INJECTOR;\n}\n/**\n * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n *\n * @publicApi\n */\nfunction createInjector(defType, parent = null, additionalProviders = null, name) {\n    const injector = createInjectorWithoutInjectorInstances(defType, parent, additionalProviders, name);\n    injector._resolveInjectorDefTypes();\n    return injector;\n}\n/**\n * Creates a new injector without eagerly resolving its injector types. Can be used in places\n * where resolving the injector types immediately can lead to an infinite loop. The injector types\n * should be resolved at a later point by calling `_resolveInjectorDefTypes`.\n */\nfunction createInjectorWithoutInjectorInstances(defType, parent = null, additionalProviders = null, name) {\n    return new R3Injector(defType, additionalProviders, parent || getNullInjector(), name);\n}\nclass R3Injector {\n    constructor(def, additionalProviders, parent, source = null) {\n        this.parent = parent;\n        /**\n         * Map of tokens to records which contain the instances of those tokens.\n         * - `null` value implies that we don't have the record. Used by tree-shakable injectors\n         * to prevent further searches.\n         */\n        this.records = new Map();\n        /**\n         * The transitive set of `InjectorType`s which define this injector.\n         */\n        this.injectorDefTypes = new Set();\n        /**\n         * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n         */\n        this.onDestroy = new Set();\n        this._destroyed = false;\n        const dedupStack = [];\n        // Start off by creating Records for every provider declared in every InjectorType\n        // included transitively in additional providers then do the same for `def`. This order is\n        // important because `def` may include providers that override ones in additionalProviders.\n        additionalProviders &&\n            deepForEach(additionalProviders, provider => this.processProvider(provider, def, additionalProviders));\n        deepForEach([def], injectorDef => this.processInjectorType(injectorDef, [], dedupStack));\n        // Make sure the INJECTOR token provides this injector.\n        this.records.set(INJECTOR, makeRecord(undefined, this));\n        // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n        // any injectable scoped to APP_ROOT_SCOPE.\n        const record = this.records.get(INJECTOR_SCOPE);\n        this.scope = record != null ? record.value : null;\n        // Source name, used for debugging\n        this.source = source || (typeof def === 'object' ? null : stringify(def));\n    }\n    /**\n     * Flag indicating that this injector was previously destroyed.\n     */\n    get destroyed() {\n        return this._destroyed;\n    }\n    /**\n     * Destroy the injector and release references to every instance or provider associated with it.\n     *\n     * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n     * hook was found.\n     */\n    destroy() {\n        this.assertNotDestroyed();\n        // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n        this._destroyed = true;\n        try {\n            // Call all the lifecycle hooks.\n            this.onDestroy.forEach(service => service.ngOnDestroy());\n        }\n        finally {\n            // Release all references.\n            this.records.clear();\n            this.onDestroy.clear();\n            this.injectorDefTypes.clear();\n        }\n    }\n    get(token, notFoundValue = THROW_IF_NOT_FOUND, flags = InjectFlags.Default) {\n        this.assertNotDestroyed();\n        // Set the injection context.\n        const previousInjector = setCurrentInjector(this);\n        try {\n            // Check for the SkipSelf flag.\n            if (!(flags & InjectFlags.SkipSelf)) {\n                // SkipSelf isn't set, check if the record belongs to this injector.\n                let record = this.records.get(token);\n                if (record === undefined) {\n                    // No record, but maybe the token is scoped to this injector. Look for an injectable\n                    // def with a scope matching this injector.\n                    const def = couldBeInjectableType(token) && getInjectableDef(token);\n                    if (def && this.injectableDefInScope(def)) {\n                        // Found an injectable def and it's scoped to this injector. Pretend as if it was here\n                        // all along.\n                        record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                    }\n                    else {\n                        record = null;\n                    }\n                    this.records.set(token, record);\n                }\n                // If a record was found, get the instance for it and return it.\n                if (record != null /* NOT null || undefined */) {\n                    return this.hydrate(token, record);\n                }\n            }\n            // Select the next injector based on the Self flag - if self is set, the next injector is\n            // the NullInjector, otherwise it's the parent.\n            const nextInjector = !(flags & InjectFlags.Self) ? this.parent : getNullInjector();\n            // Set the notFoundValue based on the Optional flag - if optional is set and notFoundValue\n            // is undefined, the value is null, otherwise it's the notFoundValue.\n            notFoundValue = (flags & InjectFlags.Optional) && notFoundValue === THROW_IF_NOT_FOUND ?\n                null :\n                notFoundValue;\n            return nextInjector.get(token, notFoundValue);\n        }\n        catch (e) {\n            if (e.name === 'NullInjectorError') {\n                const path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                path.unshift(stringify(token));\n                if (previousInjector) {\n                    // We still have a parent injector, keep throwing\n                    throw e;\n                }\n                else {\n                    // Format & throw the final error message when we don't have any previous injector\n                    return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                }\n            }\n            else {\n                throw e;\n            }\n        }\n        finally {\n            // Lastly, clean up the state by restoring the previous injector.\n            setCurrentInjector(previousInjector);\n        }\n    }\n    /** @internal */\n    _resolveInjectorDefTypes() {\n        this.injectorDefTypes.forEach(defType => this.get(defType));\n    }\n    toString() {\n        const tokens = [], records = this.records;\n        records.forEach((v, token) => tokens.push(stringify(token)));\n        return `R3Injector[${tokens.join(', ')}]`;\n    }\n    assertNotDestroyed() {\n        if (this._destroyed) {\n            throw new Error('Injector has already been destroyed.');\n        }\n    }\n    /**\n     * Add an `InjectorType` or `InjectorTypeWithProviders` and all of its transitive providers\n     * to this injector.\n     *\n     * If an `InjectorTypeWithProviders` that declares providers besides the type is specified,\n     * the function will return \"true\" to indicate that the providers of the type definition need\n     * to be processed. This allows us to process providers of injector types after all imports of\n     * an injector definition are processed. (following View Engine semantics: see FW-1349)\n     */\n    processInjectorType(defOrWrappedDef, parents, dedupStack) {\n        defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n        if (!defOrWrappedDef)\n            return false;\n        // Either the defOrWrappedDef is an InjectorType (with injector def) or an\n        // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n        // read, so care is taken to only do the read once.\n        // First attempt to read the injector def (`ɵinj`).\n        let def = getInjectorDef(defOrWrappedDef);\n        // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n        const ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n        // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n        // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n        // is the `ngModule`.\n        const defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n        // Check for circular dependencies.\n        if (ngDevMode && parents.indexOf(defType) !== -1) {\n            const defName = stringify(defType);\n            throw new Error(`Circular dependency in DI detected for type ${defName}. Dependency path: ${parents.map(defType => stringify(defType)).join(' > ')} > ${defName}.`);\n        }\n        // Check for multiple imports of the same module\n        const isDuplicate = dedupStack.indexOf(defType) !== -1;\n        // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n        // `InjectorDef` is on its `ngModule`.\n        if (ngModule !== undefined) {\n            def = getInjectorDef(ngModule);\n        }\n        // If no definition was found, it might be from exports. Remove it.\n        if (def == null) {\n            return false;\n        }\n        // Add providers in the same way that @NgModule resolution did:\n        // First, include providers from any imports.\n        if (def.imports != null && !isDuplicate) {\n            // Before processing defType's imports, add it to the set of parents. This way, if it ends\n            // up deeply importing itself, this can be detected.\n            ngDevMode && parents.push(defType);\n            // Add it to the set of dedups. This way we can detect multiple imports of the same module\n            dedupStack.push(defType);\n            let importTypesWithProviders;\n            try {\n                deepForEach(def.imports, imported => {\n                    if (this.processInjectorType(imported, parents, dedupStack)) {\n                        if (importTypesWithProviders === undefined)\n                            importTypesWithProviders = [];\n                        // If the processed import is an injector type with providers, we store it in the\n                        // list of import types with providers, so that we can process those afterwards.\n                        importTypesWithProviders.push(imported);\n                    }\n                });\n            }\n            finally {\n                // Remove it from the parents set when finished.\n                ngDevMode && parents.pop();\n            }\n            // Imports which are declared with providers (TypeWithProviders) need to be processed\n            // after all imported modules are processed. This is similar to how View Engine\n            // processes/merges module imports in the metadata resolver. See: FW-1349.\n            if (importTypesWithProviders !== undefined) {\n                for (let i = 0; i < importTypesWithProviders.length; i++) {\n                    const { ngModule, providers } = importTypesWithProviders[i];\n                    deepForEach(providers, provider => this.processProvider(provider, ngModule, providers || EMPTY_ARRAY$2));\n                }\n            }\n        }\n        // Track the InjectorType and add a provider for it. It's important that this is done after the\n        // def's imports.\n        this.injectorDefTypes.add(defType);\n        this.records.set(defType, makeRecord(def.factory, NOT_YET));\n        // Next, include providers listed on the definition itself.\n        const defProviders = def.providers;\n        if (defProviders != null && !isDuplicate) {\n            const injectorType = defOrWrappedDef;\n            deepForEach(defProviders, provider => this.processProvider(provider, injectorType, defProviders));\n        }\n        return (ngModule !== undefined &&\n            defOrWrappedDef.providers !== undefined);\n    }\n    /**\n     * Process a `SingleProvider` and add it.\n     */\n    processProvider(provider, ngModuleType, providers) {\n        // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n        // property.\n        provider = resolveForwardRef(provider);\n        let token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n        // Construct a `Record` for the provider.\n        const record = providerToRecord(provider, ngModuleType, providers);\n        if (!isTypeProvider(provider) && provider.multi === true) {\n            // If the provider indicates that it's a multi-provider, process it specially.\n            // First check whether it's been defined already.\n            let multiRecord = this.records.get(token);\n            if (multiRecord) {\n                // It has. Throw a nice error if\n                if (multiRecord.multi === undefined) {\n                    throwMixedMultiProviderError();\n                }\n            }\n            else {\n                multiRecord = makeRecord(undefined, NOT_YET, true);\n                multiRecord.factory = () => injectArgs(multiRecord.multi);\n                this.records.set(token, multiRecord);\n            }\n            token = provider;\n            multiRecord.multi.push(provider);\n        }\n        else {\n            const existing = this.records.get(token);\n            if (existing && existing.multi !== undefined) {\n                throwMixedMultiProviderError();\n            }\n        }\n        this.records.set(token, record);\n    }\n    hydrate(token, record) {\n        if (record.value === CIRCULAR) {\n            throwCyclicDependencyError(stringify(token));\n        }\n        else if (record.value === NOT_YET) {\n            record.value = CIRCULAR;\n            record.value = record.factory();\n        }\n        if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n            this.onDestroy.add(record.value);\n        }\n        return record.value;\n    }\n    injectableDefInScope(def) {\n        if (!def.providedIn) {\n            return false;\n        }\n        else if (typeof def.providedIn === 'string') {\n            return def.providedIn === 'any' || (def.providedIn === this.scope);\n        }\n        else {\n            return this.injectorDefTypes.has(def.providedIn);\n        }\n    }\n}\nfunction injectableDefOrInjectorDefFactory(token) {\n    // Most tokens will have an injectable def directly on them, which specifies a factory directly.\n    const injectableDef = getInjectableDef(token);\n    const factory = injectableDef !== null ? injectableDef.factory : getFactoryDef(token);\n    if (factory !== null) {\n        return factory;\n    }\n    // If the token is an NgModule, it's also injectable but the factory is on its injector def\n    // (`ɵinj`)\n    const injectorDef = getInjectorDef(token);\n    if (injectorDef !== null) {\n        return injectorDef.factory;\n    }\n    // InjectionTokens should have an injectable def (ɵprov) and thus should be handled above.\n    // If it's missing that, it's an error.\n    if (token instanceof InjectionToken) {\n        throw new Error(`Token ${stringify(token)} is missing a ɵprov definition.`);\n    }\n    // Undecorated types can sometimes be created if they have no constructor arguments.\n    if (token instanceof Function) {\n        return getUndecoratedInjectableFactory(token);\n    }\n    // There was no way to resolve a factory for this token.\n    throw new Error('unreachable');\n}\nfunction getUndecoratedInjectableFactory(token) {\n    // If the token has parameters then it has dependencies that we cannot resolve implicitly.\n    const paramLength = token.length;\n    if (paramLength > 0) {\n        const args = newArray(paramLength, '?');\n        throw new Error(`Can't resolve all parameters for ${stringify(token)}: (${args.join(', ')}).`);\n    }\n    // The constructor function appears to have no parameters.\n    // This might be because it inherits from a super-class. In which case, use an injectable\n    // def from an ancestor if there is one.\n    // Otherwise this really is a simple class with no dependencies, so return a factory that\n    // just instantiates the zero-arg constructor.\n    const inheritedInjectableDef = getInheritedInjectableDef(token);\n    if (inheritedInjectableDef !== null) {\n        return () => inheritedInjectableDef.factory(token);\n    }\n    else {\n        return () => new token();\n    }\n}\nfunction providerToRecord(provider, ngModuleType, providers) {\n    if (isValueProvider(provider)) {\n        return makeRecord(undefined, provider.useValue);\n    }\n    else {\n        const factory = providerToFactory(provider, ngModuleType, providers);\n        return makeRecord(factory, NOT_YET);\n    }\n}\n/**\n * Converts a `SingleProvider` into a factory function.\n *\n * @param provider provider to convert to factory\n */\nfunction providerToFactory(provider, ngModuleType, providers) {\n    let factory = undefined;\n    if (isTypeProvider(provider)) {\n        const unwrappedProvider = resolveForwardRef(provider);\n        return getFactoryDef(unwrappedProvider) || injectableDefOrInjectorDefFactory(unwrappedProvider);\n    }\n    else {\n        if (isValueProvider(provider)) {\n            factory = () => resolveForwardRef(provider.useValue);\n        }\n        else if (isFactoryProvider(provider)) {\n            factory = () => provider.useFactory(...injectArgs(provider.deps || []));\n        }\n        else if (isExistingProvider(provider)) {\n            factory = () => ɵɵinject(resolveForwardRef(provider.useExisting));\n        }\n        else {\n            const classRef = resolveForwardRef(provider &&\n                (provider.useClass || provider.provide));\n            if (!classRef) {\n                throwInvalidProviderError(ngModuleType, providers, provider);\n            }\n            if (hasDeps(provider)) {\n                factory = () => new (classRef)(...injectArgs(provider.deps));\n            }\n            else {\n                return getFactoryDef(classRef) || injectableDefOrInjectorDefFactory(classRef);\n            }\n        }\n    }\n    return factory;\n}\nfunction makeRecord(factory, value, multi = false) {\n    return {\n        factory: factory,\n        value: value,\n        multi: multi ? [] : undefined,\n    };\n}\nfunction isValueProvider(value) {\n    return value !== null && typeof value == 'object' && USE_VALUE in value;\n}\nfunction isExistingProvider(value) {\n    return !!(value && value.useExisting);\n}\nfunction isFactoryProvider(value) {\n    return !!(value && value.useFactory);\n}\nfunction isTypeProvider(value) {\n    return typeof value === 'function';\n}\nfunction isClassProvider(value) {\n    return !!value.useClass;\n}\nfunction hasDeps(value) {\n    return !!value.deps;\n}\nfunction hasOnDestroy(value) {\n    return value !== null && typeof value === 'object' &&\n        typeof value.ngOnDestroy === 'function';\n}\nfunction couldBeInjectableType(value) {\n    return (typeof value === 'function') ||\n        (typeof value === 'object' && value instanceof InjectionToken);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction INJECTOR_IMPL__PRE_R3__(providers, parent, name) {\n    return new StaticInjector(providers, parent, name);\n}\nfunction INJECTOR_IMPL__POST_R3__(providers, parent, name) {\n    return createInjector({ name: name }, parent, providers, name);\n}\nconst INJECTOR_IMPL = INJECTOR_IMPL__POST_R3__;\n/**\n * Concrete injectors implement this interface. Injectors are configured\n * with [providers](guide/glossary#provider) that associate\n * dependencies of various types with [injection tokens](guide/glossary#di-token).\n *\n * @see [\"DI Providers\"](guide/dependency-injection-providers).\n * @see `StaticProvider`\n *\n * @usageNotes\n *\n *  The following example creates a service injector instance.\n *\n * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n *\n * ### Usage example\n *\n * {@example core/di/ts/injector_spec.ts region='Injector'}\n *\n * `Injector` returns itself when given `Injector` as a token:\n *\n * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n *\n * @publicApi\n */\nclass Injector {\n    static create(options, parent) {\n        if (Array.isArray(options)) {\n            return INJECTOR_IMPL(options, parent, '');\n        }\n        else {\n            return INJECTOR_IMPL(options.providers, options.parent, options.name || '');\n        }\n    }\n}\nInjector.THROW_IF_NOT_FOUND = THROW_IF_NOT_FOUND;\nInjector.NULL = new NullInjector();\n/** @nocollapse */\nInjector.ɵprov = ɵɵdefineInjectable({\n    token: Injector,\n    providedIn: 'any',\n    factory: () => ɵɵinject(INJECTOR),\n});\n/**\n * @internal\n * @nocollapse\n */\nInjector.__NG_ELEMENT_ID__ = -1;\nconst IDENT = function (value) {\n    return value;\n};\nconst ɵ0$9 = IDENT;\nconst EMPTY = [];\nconst CIRCULAR$1 = IDENT;\nconst MULTI_PROVIDER_FN = function () {\n    return Array.prototype.slice.call(arguments);\n};\nconst ɵ1$1 = MULTI_PROVIDER_FN;\nconst NO_NEW_LINE$1 = 'ɵ';\nclass StaticInjector {\n    constructor(providers, parent = Injector.NULL, source = null) {\n        this.parent = parent;\n        this.source = source;\n        const records = this._records = new Map();\n        records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n        records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n        this.scope = recursivelyProcessProviders(records, providers);\n    }\n    get(token, notFoundValue, flags = InjectFlags.Default) {\n        const records = this._records;\n        let record = records.get(token);\n        if (record === undefined) {\n            // This means we have never seen this record, see if it is tree shakable provider.\n            const injectableDef = getInjectableDef(token);\n            if (injectableDef) {\n                const providedIn = injectableDef && injectableDef.providedIn;\n                if (providedIn === 'any' || providedIn != null && providedIn === this.scope) {\n                    records.set(token, record = resolveProvider({ provide: token, useFactory: injectableDef.factory, deps: EMPTY }));\n                }\n            }\n            if (record === undefined) {\n                // Set record to null to make sure that we don't go through expensive lookup above again.\n                records.set(token, null);\n            }\n        }\n        let lastInjector = setCurrentInjector(this);\n        try {\n            return tryResolveToken(token, record, records, this.parent, notFoundValue, flags);\n        }\n        catch (e) {\n            return catchInjectorError(e, token, 'StaticInjectorError', this.source);\n        }\n        finally {\n            setCurrentInjector(lastInjector);\n        }\n    }\n    toString() {\n        const tokens = [], records = this._records;\n        records.forEach((v, token) => tokens.push(stringify(token)));\n        return `StaticInjector[${tokens.join(', ')}]`;\n    }\n}\nfunction resolveProvider(provider) {\n    const deps = computeDeps(provider);\n    let fn = IDENT;\n    let value = EMPTY;\n    let useNew = false;\n    let provide = resolveForwardRef(provider.provide);\n    if (USE_VALUE in provider) {\n        // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n        value = provider.useValue;\n    }\n    else if (provider.useFactory) {\n        fn = provider.useFactory;\n    }\n    else if (provider.useExisting) {\n        // Just use IDENT\n    }\n    else if (provider.useClass) {\n        useNew = true;\n        fn = resolveForwardRef(provider.useClass);\n    }\n    else if (typeof provide == 'function') {\n        useNew = true;\n        fn = provide;\n    }\n    else {\n        throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n    }\n    return { deps, fn, useNew, value };\n}\nfunction multiProviderMixError(token) {\n    return staticError('Cannot mix multi providers and regular providers', token);\n}\nfunction recursivelyProcessProviders(records, provider) {\n    let scope = null;\n    if (provider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // if we have an array recurse into the array\n            for (let i = 0; i < provider.length; i++) {\n                scope = recursivelyProcessProviders(records, provider[i]) || scope;\n            }\n        }\n        else if (typeof provider === 'function') {\n            // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n            // error messages\n            throw staticError('Function/Class not supported', provider);\n        }\n        else if (provider && typeof provider === 'object' && provider.provide) {\n            // At this point we have what looks like a provider: {provide: ?, ....}\n            let token = resolveForwardRef(provider.provide);\n            const resolvedProvider = resolveProvider(provider);\n            if (provider.multi === true) {\n                // This is a multi provider.\n                let multiProvider = records.get(token);\n                if (multiProvider) {\n                    if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                        throw multiProviderMixError(token);\n                    }\n                }\n                else {\n                    // Create a placeholder factory which will look up the constituents of the multi provider.\n                    records.set(token, multiProvider = {\n                        token: provider.provide,\n                        deps: [],\n                        useNew: false,\n                        fn: MULTI_PROVIDER_FN,\n                        value: EMPTY\n                    });\n                }\n                // Treat the provider as the token.\n                token = provider;\n                multiProvider.deps.push({ token, options: 6 /* Default */ });\n            }\n            const record = records.get(token);\n            if (record && record.fn == MULTI_PROVIDER_FN) {\n                throw multiProviderMixError(token);\n            }\n            if (token === INJECTOR_SCOPE) {\n                scope = resolvedProvider.value;\n            }\n            records.set(token, resolvedProvider);\n        }\n        else {\n            throw staticError('Unexpected provider', provider);\n        }\n    }\n    return scope;\n}\nfunction tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n    try {\n        return resolveToken(token, record, records, parent, notFoundValue, flags);\n    }\n    catch (e) {\n        // ensure that 'e' is of type Error.\n        if (!(e instanceof Error)) {\n            e = new Error(e);\n        }\n        const path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n        path.unshift(token);\n        if (record && record.value == CIRCULAR$1) {\n            // Reset the Circular flag.\n            record.value = EMPTY;\n        }\n        throw e;\n    }\n}\nfunction resolveToken(token, record, records, parent, notFoundValue, flags) {\n    let value;\n    if (record && !(flags & InjectFlags.SkipSelf)) {\n        // If we don't have a record, this implies that we don't own the provider hence don't know how\n        // to resolve it.\n        value = record.value;\n        if (value == CIRCULAR$1) {\n            throw Error(NO_NEW_LINE$1 + 'Circular dependency');\n        }\n        else if (value === EMPTY) {\n            record.value = CIRCULAR$1;\n            let obj = undefined;\n            let useNew = record.useNew;\n            let fn = record.fn;\n            let depRecords = record.deps;\n            let deps = EMPTY;\n            if (depRecords.length) {\n                deps = [];\n                for (let i = 0; i < depRecords.length; i++) {\n                    const depRecord = depRecords[i];\n                    const options = depRecord.options;\n                    const childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                    deps.push(tryResolveToken(\n                    // Current Token to resolve\n                    depRecord.token, \n                    // A record which describes how to resolve the token.\n                    // If undefined, this means we don't have such a record\n                    childRecord, \n                    // Other records we know about.\n                    records, \n                    // If we don't know how to resolve dependency and we should not check parent for it,\n                    // than pass in Null injector.\n                    !childRecord && !(options & 4 /* CheckParent */) ? Injector.NULL : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, InjectFlags.Default));\n                }\n            }\n            record.value = value = useNew ? new fn(...deps) : fn.apply(obj, deps);\n        }\n    }\n    else if (!(flags & InjectFlags.Self)) {\n        value = parent.get(token, notFoundValue, InjectFlags.Default);\n    }\n    else if (!(flags & InjectFlags.Optional)) {\n        value = Injector.NULL.get(token, notFoundValue);\n    }\n    else {\n        value = Injector.NULL.get(token, typeof notFoundValue !== 'undefined' ? notFoundValue : null);\n    }\n    return value;\n}\nfunction computeDeps(provider) {\n    let deps = EMPTY;\n    const providerDeps = provider.deps;\n    if (providerDeps && providerDeps.length) {\n        deps = [];\n        for (let i = 0; i < providerDeps.length; i++) {\n            let options = 6 /* Default */;\n            let token = resolveForwardRef(providerDeps[i]);\n            if (Array.isArray(token)) {\n                for (let j = 0, annotations = token; j < annotations.length; j++) {\n                    const annotation = annotations[j];\n                    if (annotation instanceof Optional || annotation == Optional) {\n                        options = options | 1 /* Optional */;\n                    }\n                    else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                        options = options & ~2 /* CheckSelf */;\n                    }\n                    else if (annotation instanceof Self || annotation == Self) {\n                        options = options & ~4 /* CheckParent */;\n                    }\n                    else if (annotation instanceof Inject) {\n                        token = annotation.token;\n                    }\n                    else {\n                        token = resolveForwardRef(annotation);\n                    }\n                }\n            }\n            deps.push({ token, options });\n        }\n    }\n    else if (provider.useExisting) {\n        const token = resolveForwardRef(provider.useExisting);\n        deps = [{ token, options: 6 /* Default */ }];\n    }\n    else if (!providerDeps && !(USE_VALUE in provider)) {\n        // useValue & useExisting are the only ones which are exempt from deps all others need it.\n        throw staticError('\\'deps\\' required', provider);\n    }\n    return deps;\n}\nfunction staticError(text, obj) {\n    return new Error(formatError(text, obj, 'StaticInjectorError'));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction findFirstClosedCycle(keys) {\n    const res = [];\n    for (let i = 0; i < keys.length; ++i) {\n        if (res.indexOf(keys[i]) > -1) {\n            res.push(keys[i]);\n            return res;\n        }\n        res.push(keys[i]);\n    }\n    return res;\n}\nfunction constructResolvingPath(keys) {\n    if (keys.length > 1) {\n        const reversed = findFirstClosedCycle(keys.slice().reverse());\n        const tokenStrs = reversed.map(k => stringify(k.token));\n        return ' (' + tokenStrs.join(' -> ') + ')';\n    }\n    return '';\n}\nfunction injectionError(injector, key, constructResolvingMessage, originalError) {\n    const keys = [key];\n    const errMsg = constructResolvingMessage(keys);\n    const error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n    error.addKey = addKey;\n    error.keys = keys;\n    error.injectors = [injector];\n    error.constructResolvingMessage = constructResolvingMessage;\n    error[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\nfunction addKey(injector, key) {\n    this.injectors.push(injector);\n    this.keys.push(key);\n    // Note: This updated message won't be reflected in the `.stack` property\n    this.message = this.constructResolvingMessage(this.keys);\n}\n/**\n * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n * {@link Injector} does not have a {@link Provider} for the given key.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor(b:B) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n */\nfunction noProviderError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        const first = stringify(keys[0].token);\n        return `No provider for ${first}!${constructResolvingPath(keys)}`;\n    });\n}\n/**\n * Thrown when dependencies form a cycle.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * var injector = Injector.resolveAndCreate([\n *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n * ]);\n *\n * expect(() => injector.get(\"one\")).toThrowError();\n * ```\n *\n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n */\nfunction cyclicDependencyError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        return `Cannot instantiate cyclic dependency!${constructResolvingPath(keys)}`;\n    });\n}\n/**\n * Thrown when a constructing type returns with an Error.\n *\n * The `InstantiationError` class contains the original error plus the dependency graph which caused\n * this object to be instantiated.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor() {\n *     throw new Error('message');\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([A]);\n\n * try {\n *   injector.get(A);\n * } catch (e) {\n *   expect(e instanceof InstantiationError).toBe(true);\n *   expect(e.originalException.message).toEqual(\"message\");\n *   expect(e.originalStack).toBeDefined();\n * }\n * ```\n */\nfunction instantiationError(injector, originalException, originalStack, key) {\n    return injectionError(injector, key, function (keys) {\n        const first = stringify(keys[0].token);\n        return `${originalException.message}: Error during instantiation of ${first}!${constructResolvingPath(keys)}.`;\n    }, originalException);\n}\n/**\n * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n * creation.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n * ```\n */\nfunction invalidProviderError(provider) {\n    return Error(`Invalid provider - only instances of Provider and Type are allowed, got: ${provider}`);\n}\n/**\n * Thrown when the class has no annotation information.\n *\n * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n * need to be injected into the constructor.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor(b) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n *\n * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n *\n * ```typescript\n * class B {}\n *\n * class A {\n *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n * }\n *\n * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n * ```\n *\n */\nfunction noAnnotationError(typeOrFunc, params) {\n    const signature = [];\n    for (let i = 0, ii = params.length; i < ii; i++) {\n        const parameter = params[i];\n        if (!parameter || parameter.length == 0) {\n            signature.push('?');\n        }\n        else {\n            signature.push(parameter.map(stringify).join(' '));\n        }\n    }\n    return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n        signature.join(', ') + '). ' +\n        'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n        stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n}\n/**\n * Thrown when getting an object by index.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {}\n *\n * var injector = Injector.resolveAndCreate([A]);\n *\n * expect(() => injector.getAt(100)).toThrowError();\n * ```\n *\n */\nfunction outOfBoundsError(index) {\n    return Error(`Index ${index} is out-of-bounds.`);\n}\n// TODO: add a working example after alpha38 is released\n/**\n * Thrown when a multi provider and a regular provider are bound to the same token.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\n *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n * ])).toThrowError();\n * ```\n */\nfunction mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n    return Error(`Cannot mix multi providers and regular providers, got: ${provider1} ${provider2}`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n *\n * @deprecated No replacement\n * @publicApi\n */\nclass ReflectiveKey {\n    /**\n     * Private\n     */\n    constructor(token, id) {\n        this.token = token;\n        this.id = id;\n        if (!token) {\n            throw new Error('Token must be defined!');\n        }\n        this.displayName = stringify(this.token);\n    }\n    /**\n     * Retrieves a `Key` for a token.\n     */\n    static get(token) {\n        return _globalKeyRegistry.get(resolveForwardRef(token));\n    }\n    /**\n     * @returns the number of keys registered in the system.\n     */\n    static get numberOfKeys() {\n        return _globalKeyRegistry.numberOfKeys;\n    }\n}\nclass KeyRegistry {\n    constructor() {\n        this._allKeys = new Map();\n    }\n    get(token) {\n        if (token instanceof ReflectiveKey)\n            return token;\n        if (this._allKeys.has(token)) {\n            return this._allKeys.get(token);\n        }\n        const newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n        this._allKeys.set(token, newKey);\n        return newKey;\n    }\n    get numberOfKeys() {\n        return this._allKeys.size;\n    }\n}\nconst _globalKeyRegistry = new KeyRegistry();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nclass Reflector {\n    constructor(reflectionCapabilities) {\n        this.reflectionCapabilities = reflectionCapabilities;\n    }\n    updateCapabilities(caps) {\n        this.reflectionCapabilities = caps;\n    }\n    factory(type) {\n        return this.reflectionCapabilities.factory(type);\n    }\n    parameters(typeOrFunc) {\n        return this.reflectionCapabilities.parameters(typeOrFunc);\n    }\n    annotations(typeOrFunc) {\n        return this.reflectionCapabilities.annotations(typeOrFunc);\n    }\n    propMetadata(typeOrFunc) {\n        return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    }\n    hasLifecycleHook(type, lcProperty) {\n        return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n    }\n    getter(name) {\n        return this.reflectionCapabilities.getter(name);\n    }\n    setter(name) {\n        return this.reflectionCapabilities.setter(name);\n    }\n    method(name) {\n        return this.reflectionCapabilities.method(name);\n    }\n    importUri(type) {\n        return this.reflectionCapabilities.importUri(type);\n    }\n    resourceUri(type) {\n        return this.reflectionCapabilities.resourceUri(type);\n    }\n    resolveIdentifier(name, moduleUrl, members, runtime) {\n        return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n    }\n    resolveEnum(identifier, name) {\n        return this.reflectionCapabilities.resolveEnum(identifier, name);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The {@link Reflector} used internally in Angular to access metadata\n * about symbols.\n */\nconst reflector = new Reflector(new ReflectionCapabilities());\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nclass ReflectiveDependency {\n    constructor(key, optional, visibility) {\n        this.key = key;\n        this.optional = optional;\n        this.visibility = visibility;\n    }\n    static fromKey(key) {\n        return new ReflectiveDependency(key, false, null);\n    }\n}\nconst _EMPTY_LIST = [];\nclass ResolvedReflectiveProvider_ {\n    constructor(key, resolvedFactories, multiProvider) {\n        this.key = key;\n        this.resolvedFactories = resolvedFactories;\n        this.multiProvider = multiProvider;\n        this.resolvedFactory = this.resolvedFactories[0];\n    }\n}\n/**\n * An internal resolved representation of a factory function created by resolving `Provider`.\n * @publicApi\n */\nclass ResolvedReflectiveFactory {\n    constructor(\n    /**\n     * Factory function which can return an instance of an object represented by a key.\n     */\n    factory, \n    /**\n     * Arguments (dependencies) to the `factory` function.\n     */\n    dependencies) {\n        this.factory = factory;\n        this.dependencies = dependencies;\n    }\n}\n/**\n * Resolve a single provider.\n */\nfunction resolveReflectiveFactory(provider) {\n    let factoryFn;\n    let resolvedDeps;\n    if (provider.useClass) {\n        const useClass = resolveForwardRef(provider.useClass);\n        factoryFn = reflector.factory(useClass);\n        resolvedDeps = _dependenciesFor(useClass);\n    }\n    else if (provider.useExisting) {\n        factoryFn = (aliasInstance) => aliasInstance;\n        resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n    }\n    else if (provider.useFactory) {\n        factoryFn = provider.useFactory;\n        resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n    }\n    else {\n        factoryFn = () => provider.useValue;\n        resolvedDeps = _EMPTY_LIST;\n    }\n    return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n}\n/**\n * Converts the `Provider` into `ResolvedProvider`.\n *\n * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n * syntax.\n */\nfunction resolveReflectiveProvider(provider) {\n    return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n}\n/**\n * Resolve a list of Providers.\n */\nfunction resolveReflectiveProviders(providers) {\n    const normalized = _normalizeProviders(providers, []);\n    const resolved = normalized.map(resolveReflectiveProvider);\n    const resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n    return Array.from(resolvedProviderMap.values());\n}\n/**\n * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n * multi providers have been merged.\n */\nfunction mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n    for (let i = 0; i < providers.length; i++) {\n        const provider = providers[i];\n        const existing = normalizedProvidersMap.get(provider.key.id);\n        if (existing) {\n            if (provider.multiProvider !== existing.multiProvider) {\n                throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n            }\n            if (provider.multiProvider) {\n                for (let j = 0; j < provider.resolvedFactories.length; j++) {\n                    existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                }\n            }\n            else {\n                normalizedProvidersMap.set(provider.key.id, provider);\n            }\n        }\n        else {\n            let resolvedProvider;\n            if (provider.multiProvider) {\n                resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n            }\n            else {\n                resolvedProvider = provider;\n            }\n            normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n        }\n    }\n    return normalizedProvidersMap;\n}\nfunction _normalizeProviders(providers, res) {\n    providers.forEach(b => {\n        if (b instanceof Type) {\n            res.push({ provide: b, useClass: b });\n        }\n        else if (b && typeof b == 'object' && b.provide !== undefined) {\n            res.push(b);\n        }\n        else if (Array.isArray(b)) {\n            _normalizeProviders(b, res);\n        }\n        else {\n            throw invalidProviderError(b);\n        }\n    });\n    return res;\n}\nfunction constructDependencies(typeOrFunc, dependencies) {\n    if (!dependencies) {\n        return _dependenciesFor(typeOrFunc);\n    }\n    else {\n        const params = dependencies.map(t => [t]);\n        return dependencies.map(t => _extractToken(typeOrFunc, t, params));\n    }\n}\nfunction _dependenciesFor(typeOrFunc) {\n    const params = reflector.parameters(typeOrFunc);\n    if (!params)\n        return [];\n    if (params.some(p => p == null)) {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n    return params.map(p => _extractToken(typeOrFunc, p, params));\n}\nfunction _extractToken(typeOrFunc, metadata, params) {\n    let token = null;\n    let optional = false;\n    if (!Array.isArray(metadata)) {\n        if (metadata instanceof Inject) {\n            return _createDependency(metadata.token, optional, null);\n        }\n        else {\n            return _createDependency(metadata, optional, null);\n        }\n    }\n    let visibility = null;\n    for (let i = 0; i < metadata.length; ++i) {\n        const paramMetadata = metadata[i];\n        if (paramMetadata instanceof Type) {\n            token = paramMetadata;\n        }\n        else if (paramMetadata instanceof Inject) {\n            token = paramMetadata.token;\n        }\n        else if (paramMetadata instanceof Optional) {\n            optional = true;\n        }\n        else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n            visibility = paramMetadata;\n        }\n        else if (paramMetadata instanceof InjectionToken) {\n            token = paramMetadata;\n        }\n    }\n    token = resolveForwardRef(token);\n    if (token != null) {\n        return _createDependency(token, optional, visibility);\n    }\n    else {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n}\nfunction _createDependency(token, optional, visibility) {\n    return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Threshold for the dynamic version\nconst UNDEFINED = {};\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n *\n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n *\n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n *\n * @usageNotes\n * ### Example\n *\n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n *\n * ```typescript\n * @Injectable()\n * class Engine {\n * }\n *\n * @Injectable()\n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n *\n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n *\n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n *\n * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n * @publicApi\n */\nclass ReflectiveInjector {\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of `ResolvedReflectiveProvider`s.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     */\n    static resolve(providers) {\n        return resolveReflectiveProviders(providers);\n    }\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, `Provider`,\n     * or a recursive array of more providers.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     */\n    static resolveAndCreate(providers, parent) {\n        const ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n    }\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     */\n    static fromResolvedProviders(providers, parent) {\n        return new ReflectiveInjector_(providers, parent);\n    }\n}\nclass ReflectiveInjector_ {\n    /**\n     * Private\n     */\n    constructor(_providers, _parent) {\n        /** @internal */\n        this._constructionCounter = 0;\n        this._providers = _providers;\n        this.parent = _parent || null;\n        const len = _providers.length;\n        this.keyIds = [];\n        this.objs = [];\n        for (let i = 0; i < len; i++) {\n            this.keyIds[i] = _providers[i].key.id;\n            this.objs[i] = UNDEFINED;\n        }\n    }\n    get(token, notFoundValue = THROW_IF_NOT_FOUND) {\n        return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n    }\n    resolveAndCreateChild(providers) {\n        const ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return this.createChildFromResolved(ResolvedReflectiveProviders);\n    }\n    createChildFromResolved(providers) {\n        const inj = new ReflectiveInjector_(providers);\n        inj.parent = this;\n        return inj;\n    }\n    resolveAndInstantiate(provider) {\n        return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n    }\n    instantiateResolved(provider) {\n        return this._instantiateProvider(provider);\n    }\n    getProviderAtIndex(index) {\n        if (index < 0 || index >= this._providers.length) {\n            throw outOfBoundsError(index);\n        }\n        return this._providers[index];\n    }\n    /** @internal */\n    _new(provider) {\n        if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n            throw cyclicDependencyError(this, provider.key);\n        }\n        return this._instantiateProvider(provider);\n    }\n    _getMaxNumberOfObjects() {\n        return this.objs.length;\n    }\n    _instantiateProvider(provider) {\n        if (provider.multiProvider) {\n            const res = [];\n            for (let i = 0; i < provider.resolvedFactories.length; ++i) {\n                res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n            }\n            return res;\n        }\n        else {\n            return this._instantiate(provider, provider.resolvedFactories[0]);\n        }\n    }\n    _instantiate(provider, ResolvedReflectiveFactory) {\n        const factory = ResolvedReflectiveFactory.factory;\n        let deps;\n        try {\n            deps =\n                ResolvedReflectiveFactory.dependencies.map(dep => this._getByReflectiveDependency(dep));\n        }\n        catch (e) {\n            if (e.addKey) {\n                e.addKey(this, provider.key);\n            }\n            throw e;\n        }\n        let obj;\n        try {\n            obj = factory(...deps);\n        }\n        catch (e) {\n            throw instantiationError(this, e, e.stack, provider.key);\n        }\n        return obj;\n    }\n    _getByReflectiveDependency(dep) {\n        return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n    }\n    _getByKey(key, visibility, notFoundValue) {\n        if (key === ReflectiveInjector_.INJECTOR_KEY) {\n            return this;\n        }\n        if (visibility instanceof Self) {\n            return this._getByKeySelf(key, notFoundValue);\n        }\n        else {\n            return this._getByKeyDefault(key, notFoundValue, visibility);\n        }\n    }\n    _getObjByKeyId(keyId) {\n        for (let i = 0; i < this.keyIds.length; i++) {\n            if (this.keyIds[i] === keyId) {\n                if (this.objs[i] === UNDEFINED) {\n                    this.objs[i] = this._new(this._providers[i]);\n                }\n                return this.objs[i];\n            }\n        }\n        return UNDEFINED;\n    }\n    /** @internal */\n    _throwOrNull(key, notFoundValue) {\n        if (notFoundValue !== THROW_IF_NOT_FOUND) {\n            return notFoundValue;\n        }\n        else {\n            throw noProviderError(this, key);\n        }\n    }\n    /** @internal */\n    _getByKeySelf(key, notFoundValue) {\n        const obj = this._getObjByKeyId(key.id);\n        return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n    }\n    /** @internal */\n    _getByKeyDefault(key, notFoundValue, visibility) {\n        let inj;\n        if (visibility instanceof SkipSelf) {\n            inj = this.parent;\n        }\n        else {\n            inj = this;\n        }\n        while (inj instanceof ReflectiveInjector_) {\n            const inj_ = inj;\n            const obj = inj_._getObjByKeyId(key.id);\n            if (obj !== UNDEFINED)\n                return obj;\n            inj = inj_.parent;\n        }\n        if (inj !== null) {\n            return inj.get(key.token, notFoundValue);\n        }\n        else {\n            return this._throwOrNull(key, notFoundValue);\n        }\n    }\n    get displayName() {\n        const providers = _mapProviders(this, (b) => ' \"' + b.key.displayName + '\" ')\n            .join(', ');\n        return `ReflectiveInjector(providers: [${providers}])`;\n    }\n    toString() {\n        return this.displayName;\n    }\n}\nReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\nfunction _mapProviders(injector, fn) {\n    const res = [];\n    for (let i = 0; i < injector._providers.length; ++i) {\n        res[i] = fn(injector.getProviderAtIndex(i));\n    }\n    return res;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n * that will populate the `entryComponents` field of components and NgModules\n * based on its `useValue` property value.\n * All components that are referenced in the `useValue` value (either directly\n * or in a nested array or map) are added to the `entryComponents` property.\n *\n * @usageNotes\n *\n * The following example shows how the router can populate the `entryComponents`\n * field of an NgModule based on a router configuration that refers\n * to components.\n *\n * ```typescript\n * // helper function inside the router\n * function provideRoutes(routes) {\n *   return [\n *     {provide: ROUTES, useValue: routes},\n *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n *   ];\n * }\n *\n * // user code\n * let routes = [\n *   {path: '/root', component: RootComp},\n *   {path: '/teams', component: TeamsComp}\n * ];\n *\n * @NgModule({\n *   providers: [provideRoutes(routes)]\n * })\n * class ModuleWithRoutes {}\n * ```\n *\n * @publicApi\n * @deprecated Since 9.0.0. With Ivy, this property is no longer necessary.\n */\nconst ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n/**\n * Base class for query metadata.\n *\n * @see `ContentChildren`.\n * @see `ContentChild`.\n * @see `ViewChildren`.\n * @see `ViewChild`.\n *\n * @publicApi\n */\nclass Query {\n}\nconst ɵ0$a = (selector, data = {}) => (Object.assign({ selector, first: false, isViewQuery: false, descendants: false }, data));\n/**\n * ContentChildren decorator and metadata.\n *\n *\n * @Annotation\n * @publicApi\n */\nconst ContentChildren = makePropDecorator('ContentChildren', ɵ0$a, Query);\nconst ɵ1$2 = (selector, data = {}) => (Object.assign({ selector, first: true, isViewQuery: false, descendants: true }, data));\n/**\n * ContentChild decorator and metadata.\n *\n *\n * @Annotation\n *\n * @publicApi\n */\nconst ContentChild = makePropDecorator('ContentChild', ɵ1$2, Query);\nconst ɵ2 = (selector, data = {}) => (Object.assign({ selector, first: false, isViewQuery: true, descendants: true }, data));\n/**\n * ViewChildren decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nconst ViewChildren = makePropDecorator('ViewChildren', ɵ2, Query);\nconst ɵ3 = (selector, data) => (Object.assign({ selector, first: true, isViewQuery: true, descendants: true }, data));\n/**\n * ViewChild decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nconst ViewChild = makePropDecorator('ViewChild', ɵ3, Query);\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n *\n * Example:\n * ```\n * @Component({\n *   selector: 'my-comp',\n *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n * })\n * class MyComponent{\n * }\n *\n * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n *\n * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n *\n * // Use browser's `fetch()` function as the default resource resolution strategy.\n * resolveComponentResources(fetch).then(() => {\n *   // After resolution all URLs have been converted into `template` strings.\n *   renderComponent(MyComponent);\n * });\n *\n * ```\n *\n * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n * to call this method outside JIT mode.\n *\n * @param resourceResolver a function which is responsible for returning a `Promise` to the\n * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n */\nfunction resolveComponentResources(resourceResolver) {\n    // Store all promises which are fetching the resources.\n    const componentResolved = [];\n    // Cache so that we don't fetch the same resource more than once.\n    const urlMap = new Map();\n    function cachedResourceResolve(url) {\n        let promise = urlMap.get(url);\n        if (!promise) {\n            const resp = resourceResolver(url);\n            urlMap.set(url, promise = resp.then(unwrapResponse));\n        }\n        return promise;\n    }\n    componentResourceResolutionQueue.forEach((component, type) => {\n        const promises = [];\n        if (component.templateUrl) {\n            promises.push(cachedResourceResolve(component.templateUrl).then((template) => {\n                component.template = template;\n            }));\n        }\n        const styleUrls = component.styleUrls;\n        const styles = component.styles || (component.styles = []);\n        const styleOffset = component.styles.length;\n        styleUrls && styleUrls.forEach((styleUrl, index) => {\n            styles.push(''); // pre-allocate array.\n            promises.push(cachedResourceResolve(styleUrl).then((style) => {\n                styles[styleOffset + index] = style;\n                styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                if (styleUrls.length == 0) {\n                    component.styleUrls = undefined;\n                }\n            }));\n        });\n        const fullyResolved = Promise.all(promises).then(() => componentDefResolved(type));\n        componentResolved.push(fullyResolved);\n    });\n    clearResolutionOfComponentResourcesQueue();\n    return Promise.all(componentResolved).then(() => undefined);\n}\nlet componentResourceResolutionQueue = new Map();\n// Track when existing ɵcmp for a Type is waiting on resources.\nconst componentDefPendingResolution = new Set();\nfunction maybeQueueResolutionOfComponentResources(type, metadata) {\n    if (componentNeedsResolution(metadata)) {\n        componentResourceResolutionQueue.set(type, metadata);\n        componentDefPendingResolution.add(type);\n    }\n}\nfunction isComponentDefPendingResolution(type) {\n    return componentDefPendingResolution.has(type);\n}\nfunction componentNeedsResolution(component) {\n    return !!((component.templateUrl && !component.hasOwnProperty('template')) ||\n        component.styleUrls && component.styleUrls.length);\n}\nfunction clearResolutionOfComponentResourcesQueue() {\n    const old = componentResourceResolutionQueue;\n    componentResourceResolutionQueue = new Map();\n    return old;\n}\nfunction restoreComponentResolutionQueue(queue) {\n    componentDefPendingResolution.clear();\n    queue.forEach((_, type) => componentDefPendingResolution.add(type));\n    componentResourceResolutionQueue = queue;\n}\nfunction isComponentResourceResolutionQueueEmpty() {\n    return componentResourceResolutionQueue.size === 0;\n}\nfunction unwrapResponse(response) {\n    return typeof response == 'string' ? response : response.text();\n}\nfunction componentDefResolved(type) {\n    componentDefPendingResolution.delete(type);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Compute the static styling (class/style) from `TAttributes`.\n *\n * This function should be called during `firstCreatePass` only.\n *\n * @param tNode The `TNode` into which the styling information should be loaded.\n * @param attrs `TAttributes` containing the styling information.\n * @param writeToHost Where should the resulting static styles be written?\n *   - `false` Write to `TNode.stylesWithoutHost` / `TNode.classesWithoutHost`\n *   - `true` Write to `TNode.styles` / `TNode.classes`\n */\nfunction computeStaticStyling(tNode, attrs, writeToHost) {\n    ngDevMode &&\n        assertFirstCreatePass(getTView(), 'Expecting to be called in first template pass only');\n    let styles = writeToHost ? tNode.styles : null;\n    let classes = writeToHost ? tNode.classes : null;\n    let mode = 0;\n    if (attrs !== null) {\n        for (let i = 0; i < attrs.length; i++) {\n            const value = attrs[i];\n            if (typeof value === 'number') {\n                mode = value;\n            }\n            else if (mode == 1 /* Classes */) {\n                classes = concatStringsWithSpace(classes, value);\n            }\n            else if (mode == 2 /* Styles */) {\n                const style = value;\n                const styleValue = attrs[++i];\n                styles = concatStringsWithSpace(styles, style + ': ' + styleValue + ';');\n            }\n        }\n    }\n    writeToHost ? tNode.styles = styles : tNode.stylesWithoutHost = styles;\n    writeToHost ? tNode.classes = classes : tNode.classesWithoutHost = classes;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet _symbolIterator = null;\nfunction getSymbolIterator() {\n    if (!_symbolIterator) {\n        const Symbol = _global['Symbol'];\n        if (Symbol && Symbol.iterator) {\n            _symbolIterator = Symbol.iterator;\n        }\n        else {\n            // es6-shim specific logic\n            const keys = Object.getOwnPropertyNames(Map.prototype);\n            for (let i = 0; i < keys.length; ++i) {\n                const key = keys[i];\n                if (key !== 'entries' && key !== 'size' &&\n                    Map.prototype[key] === Map.prototype['entries']) {\n                    _symbolIterator = key;\n                }\n            }\n        }\n    }\n    return _symbolIterator;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction devModeEqual(a, b) {\n    const isListLikeIterableA = isListLikeIterable(a);\n    const isListLikeIterableB = isListLikeIterable(b);\n    if (isListLikeIterableA && isListLikeIterableB) {\n        return areIterablesEqual(a, b, devModeEqual);\n    }\n    else {\n        const isAObject = a && (typeof a === 'object' || typeof a === 'function');\n        const isBObject = b && (typeof b === 'object' || typeof b === 'function');\n        if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n            return true;\n        }\n        else {\n            return Object.is(a, b);\n        }\n    }\n}\n/**\n * Indicates that the result of a {@link Pipe} transformation has changed even though the\n * reference has not changed.\n *\n * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n * is stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n *\n * @publicApi\n * @deprecated from v10 stop using. (No replacement, deemed unnecessary.)\n */\nclass WrappedValue {\n    constructor(value) {\n        this.wrapped = value;\n    }\n    /** Creates a wrapped value. */\n    static wrap(value) {\n        return new WrappedValue(value);\n    }\n    /**\n     * Returns the underlying value of a wrapped value.\n     * Returns the given `value` when it is not wrapped.\n     **/\n    static unwrap(value) {\n        return WrappedValue.isWrapped(value) ? value.wrapped : value;\n    }\n    /** Returns true if `value` is a wrapped value. */\n    static isWrapped(value) {\n        return value instanceof WrappedValue;\n    }\n}\nfunction isListLikeIterable(obj) {\n    if (!isJsObject(obj))\n        return false;\n    return Array.isArray(obj) ||\n        (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n            getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n}\nfunction areIterablesEqual(a, b, comparator) {\n    const iterator1 = a[getSymbolIterator()]();\n    const iterator2 = b[getSymbolIterator()]();\n    while (true) {\n        const item1 = iterator1.next();\n        const item2 = iterator2.next();\n        if (item1.done && item2.done)\n            return true;\n        if (item1.done || item2.done)\n            return false;\n        if (!comparator(item1.value, item2.value))\n            return false;\n    }\n}\nfunction iterateListLike(obj, fn) {\n    if (Array.isArray(obj)) {\n        for (let i = 0; i < obj.length; i++) {\n            fn(obj[i]);\n        }\n    }\n    else {\n        const iterator = obj[getSymbolIterator()]();\n        let item;\n        while (!((item = iterator.next()).done)) {\n            fn(item.value);\n        }\n    }\n}\nfunction isJsObject(o) {\n    return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(misko): consider inlining\n/** Updates binding and returns the value. */\nfunction updateBinding(lView, bindingIndex, value) {\n    return lView[bindingIndex] = value;\n}\n/** Gets the current binding value. */\nfunction getBinding(lView, bindingIndex) {\n    ngDevMode && assertIndexInRange(lView, bindingIndex);\n    ngDevMode &&\n        assertNotSame(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n    return lView[bindingIndex];\n}\n/**\n * Updates binding if changed, then returns whether it was updated.\n *\n * This function also checks the `CheckNoChangesMode` and throws if changes are made.\n * Some changes (Objects/iterables) during `CheckNoChangesMode` are exempt to comply with VE\n * behavior.\n *\n * @param lView current `LView`\n * @param bindingIndex The binding in the `LView` to check\n * @param value New value to check against `lView[bindingIndex]`\n * @returns `true` if the bindings has changed. (Throws if binding has changed during\n *          `CheckNoChangesMode`)\n */\nfunction bindingUpdated(lView, bindingIndex, value) {\n    ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n    ngDevMode &&\n        assertLessThan(bindingIndex, lView.length, `Slot should have been initialized to NO_CHANGE`);\n    const oldValue = lView[bindingIndex];\n    if (Object.is(oldValue, value)) {\n        return false;\n    }\n    else {\n        if (ngDevMode && getCheckNoChangesMode()) {\n            // View engine didn't report undefined values as changed on the first checkNoChanges pass\n            // (before the change detection was run).\n            const oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n            if (!devModeEqual(oldValueToCompare, value)) {\n                const details = getExpressionChangedErrorDetails(lView, bindingIndex, oldValueToCompare, value);\n                throwErrorIfNoChangesMode(oldValue === NO_CHANGE, details.oldValue, details.newValue, details.propName);\n            }\n            // There was a change, but the `devModeEqual` decided that the change is exempt from an error.\n            // For this reason we exit as if no change. The early exit is needed to prevent the changed\n            // value to be written into `LView` (If we would write the new value that we would not see it\n            // as change on next CD.)\n            return false;\n        }\n        lView[bindingIndex] = value;\n        return true;\n    }\n}\n/** Updates 2 bindings if changed, then returns whether either was updated. */\nfunction bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n    const different = bindingUpdated(lView, bindingIndex, exp1);\n    return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n}\n/** Updates 3 bindings if changed, then returns whether any was updated. */\nfunction bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n    const different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n    return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n}\n/** Updates 4 bindings if changed, then returns whether any was updated. */\nfunction bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n    const different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n    return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Updates the value of or removes a bound attribute on an Element.\n *\n * Used in the case of `[attr.title]=\"value\"`\n *\n * @param name name The name of the attribute.\n * @param value value The attribute is removed when value is `null` or `undefined`.\n *                  Otherwise the attribute value is set to the stringified value.\n * @param sanitizer An optional function used to sanitize the value.\n * @param namespace Optional namespace to use when setting the attribute.\n *\n * @codeGenApi\n */\nfunction ɵɵattribute(name, value, sanitizer, namespace) {\n    const lView = getLView();\n    const bindingIndex = nextBindingIndex();\n    if (bindingUpdated(lView, bindingIndex, value)) {\n        const tView = getTView();\n        const tNode = getSelectedTNode();\n        elementAttributeInternal(tNode, lView, name, value, sanitizer, namespace);\n        ngDevMode && storePropertyBindingMetadata(tView.data, tNode, 'attr.' + name, bindingIndex);\n    }\n    return ɵɵattribute;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create interpolation bindings with a variable number of expressions.\n *\n * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n * Those are faster because there is no need to create an array of expressions and iterate over it.\n *\n * `values`:\n * - has static text at even indexes,\n * - has evaluated expressions at odd indexes.\n *\n * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nfunction interpolationV(lView, values) {\n    ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n    ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n    let isBindingUpdated = false;\n    let bindingIndex = getBindingIndex();\n    for (let i = 1; i < values.length; i += 2) {\n        // Check if bindings (odd indexes) have changed\n        isBindingUpdated = bindingUpdated(lView, bindingIndex++, values[i]) || isBindingUpdated;\n    }\n    setBindingIndex(bindingIndex);\n    if (!isBindingUpdated) {\n        return NO_CHANGE;\n    }\n    // Build the updated content\n    let content = values[0];\n    for (let i = 1; i < values.length; i += 2) {\n        content += renderStringify(values[i]) + values[i + 1];\n    }\n    return content;\n}\n/**\n * Creates an interpolation binding with 1 expression.\n *\n * @param prefix static value used for concatenation only.\n * @param v0 value checked for change.\n * @param suffix static value used for concatenation only.\n */\nfunction interpolation1(lView, prefix, v0, suffix) {\n    const different = bindingUpdated(lView, nextBindingIndex(), v0);\n    return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n}\n/**\n * Creates an interpolation binding with 2 expressions.\n */\nfunction interpolation2(lView, prefix, v0, i0, v1, suffix) {\n    const bindingIndex = getBindingIndex();\n    const different = bindingUpdated2(lView, bindingIndex, v0, v1);\n    incrementBindingIndex(2);\n    return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n}\n/**\n * Creates an interpolation binding with 3 expressions.\n */\nfunction interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix) {\n    const bindingIndex = getBindingIndex();\n    const different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n    incrementBindingIndex(3);\n    return different ?\n        prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n        NO_CHANGE;\n}\n/**\n * Create an interpolation binding with 4 expressions.\n */\nfunction interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n    const bindingIndex = getBindingIndex();\n    const different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n    incrementBindingIndex(4);\n    return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 +\n        renderStringify(v2) + i2 + renderStringify(v3) + suffix :\n        NO_CHANGE;\n}\n/**\n * Creates an interpolation binding with 5 expressions.\n */\nfunction interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n    const bindingIndex = getBindingIndex();\n    let different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n    different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n    incrementBindingIndex(5);\n    return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 +\n        renderStringify(v2) + i2 + renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n        NO_CHANGE;\n}\n/**\n * Creates an interpolation binding with 6 expressions.\n */\nfunction interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n    const bindingIndex = getBindingIndex();\n    let different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n    different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n    incrementBindingIndex(6);\n    return different ?\n        prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n            renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n        NO_CHANGE;\n}\n/**\n * Creates an interpolation binding with 7 expressions.\n */\nfunction interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n    const bindingIndex = getBindingIndex();\n    let different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n    different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n    incrementBindingIndex(7);\n    return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 +\n        renderStringify(v2) + i2 + renderStringify(v3) + i3 + renderStringify(v4) + i4 +\n        renderStringify(v5) + i5 + renderStringify(v6) + suffix :\n        NO_CHANGE;\n}\n/**\n * Creates an interpolation binding with 8 expressions.\n */\nfunction interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n    const bindingIndex = getBindingIndex();\n    let different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n    different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n    incrementBindingIndex(8);\n    return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 +\n        renderStringify(v2) + i2 + renderStringify(v3) + i3 + renderStringify(v4) + i4 +\n        renderStringify(v5) + i5 + renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n        NO_CHANGE;\n}\n\n/**\n *\n * Update an interpolated attribute on an element with single bound value surrounded by text.\n *\n * Used when the value passed to a property has 1 interpolated value in it:\n *\n * ```html\n * <div attr.title=\"prefix{{v0}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ɵɵattributeInterpolate1('title', 'prefix', v0, 'suffix');\n * ```\n *\n * @param attrName The name of the attribute to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ɵɵattributeInterpolate1(attrName, prefix, v0, suffix, sanitizer, namespace) {\n    const lView = getLView();\n    const interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n    if (interpolatedValue !== NO_CHANGE) {\n        const tNode = getSelectedTNode();\n        elementAttributeInternal(tNode, lView, attrName, interpolatedValue, sanitizer, namespace);\n        ngDevMode &&\n            storePropertyBindingMetadata(getTView().data, tNode, 'attr.' + attrName, getBindingIndex() - 1, prefix, suffix);\n    }\n    return ɵɵattributeInterpolate1;\n}\n/**\n *\n * Update an interpolated attribute on an element with 2 bound values surrounded by text.\n *\n * Used when the value passed to a property has 2 interpolated values in it:\n *\n * ```html\n * <div attr.title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ɵɵattributeInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n * ```\n *\n * @param attrName The name of the attribute to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ɵɵattributeInterpolate2(attrName, prefix, v0, i0, v1, suffix, sanitizer, namespace) {\n    const lView = getLView();\n    const interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n    if (interpolatedValue !== NO_CHANGE) {\n        const tNode = getSelectedTNode();\n        elementAttributeInternal(tNode, lView, attrName, interpolatedValue, sanitizer, namespace);\n        ngDevMode &&\n            storePropertyBindingMetadata(getTView().data, tNode, 'attr.' + attrName, getBindingIndex() - 2, prefix, i0, suffix);\n    }\n    return ɵɵattributeInterpolate2;\n}\n/**\n *\n * Update an interpolated attribute on an element with 3 bound values surrounded by text.\n *\n * Used when the value passed to a property has 3 interpolated values in it:\n *\n * ```html\n * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ɵɵattributeInterpolate3(\n * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n * ```\n *\n * @param attrName The name of the attribute to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ɵɵattributeInterpolate3(attrName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer, namespace) {\n    const lView = getLView();\n    const interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n    if (interpolatedValue !== NO_CHANGE) {\n        const tNode = getSelectedTNode();\n        elementAttributeInternal(tNode, lView, attrName, interpolatedValue, sanitizer, namespace);\n        ngDevMode &&\n            storePropertyBindingMetadata(getTView().data, tNode, 'attr.' + attrName, getBindingIndex() - 3, prefix, i0, i1, suffix);\n    }\n    return ɵɵattributeInterpolate3;\n}\n/**\n *\n * Update an interpolated attribute on an element with 4 bound values surrounded by text.\n *\n * Used when the value passed to a property has 4 interpolated values in it:\n *\n * ```html\n * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ɵɵattributeInterpolate4(\n * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n * ```\n *\n * @param attrName The name of the attribute to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ɵɵattributeInterpolate4(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer, namespace) {\n    const lView = getLView();\n    const interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n    if (interpolatedValue !== NO_CHANGE) {\n        const tNode = getSelectedTNode();\n        elementAttributeInternal(tNode, lView, attrName, interpolatedValue, sanitizer, namespace);\n        ngDevMode &&\n            storePropertyBindingMetadata(getTView().data, tNode, 'attr.' + attrName, getBindingIndex() - 4, prefix, i0, i1, i2, suffix);\n    }\n    return ɵɵattributeInterpolate4;\n}\n/**\n *\n * Update an interpolated attribute on an element with 5 bound values surrounded by text.\n *\n * Used when the value passed to a property has 5 interpolated values in it:\n *\n * ```html\n * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ɵɵattributeInterpolate5(\n * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n * ```\n *\n * @param attrName The name of the attribute to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ɵɵattributeInterpolate5(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer, namespace) {\n    const lView = getLView();\n    const interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n    if (interpolatedValue !== NO_CHANGE) {\n        const tNode = getSelectedTNode();\n        elementAttributeInternal(tNode, lView, attrName, interpolatedValue, sanitizer, namespace);\n        ngDevMode &&\n            storePropertyBindingMetadata(getTView().data, tNode, 'attr.' + attrName, getBindingIndex() - 5, prefix, i0, i1, i2, i3, suffix);\n    }\n    return ɵɵattributeInterpolate5;\n}\n/**\n *\n * Update an interpolated attribute on an element with 6 bound values surrounded by text.\n *\n * Used when the value passed to a property has 6 interpolated values in it:\n *\n * ```html\n * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ɵɵattributeInterpolate6(\n *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n * ```\n *\n * @param attrName The name of the attribute to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param i4 Static value used for concatenation only.\n * @param v5 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ɵɵattributeInterpolate6(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer, namespace) {\n    const lView = getLView();\n    const interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n    if (interpolatedValue !== NO_CHANGE) {\n        const tNode = getSelectedTNode();\n        elementAttributeInternal(tNode, lView, attrName, interpolatedValue, sanitizer, namespace);\n        ngDevMode &&\n            storePropertyBindingMetadata(getTView().data, tNode, 'attr.' + attrName, getBindingIndex() - 6, prefix, i0, i1, i2, i3, i4, suffix);\n    }\n    return ɵɵattributeInterpolate6;\n}\n/**\n *\n * Update an interpolated attribute on an element with 7 bound values surrounded by text.\n *\n * Used when the value passed to a property has 7 interpolated values in it:\n *\n * ```html\n * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ɵɵattributeInterpolate7(\n *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n * ```\n *\n * @param attrName The name of the attribute to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param i4 Static value used for concatenation only.\n * @param v5 Value checked for change.\n * @param i5 Static value used for concatenation only.\n * @param v6 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ɵɵattributeInterpolate7(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer, namespace) {\n    const lView = getLView();\n    const interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n    if (interpolatedValue !== NO_CHANGE) {\n        const tNode = getSelectedTNode();\n        elementAttributeInternal(tNode, lView, attrName, interpolatedValue, sanitizer, namespace);\n        ngDevMode &&\n            storePropertyBindingMetadata(getTView().data, tNode, 'attr.' + attrName, getBindingIndex() - 7, prefix, i0, i1, i2, i3, i4, i5, suffix);\n    }\n    return ɵɵattributeInterpolate7;\n}\n/**\n *\n * Update an interpolated attribute on an element with 8 bound values surrounded by text.\n *\n * Used when the value passed to a property has 8 interpolated values in it:\n *\n * ```html\n * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ɵɵattributeInterpolate8(\n *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n * ```\n *\n * @param attrName The name of the attribute to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param i4 Static value used for concatenation only.\n * @param v5 Value checked for change.\n * @param i5 Static value used for concatenation only.\n * @param v6 Value checked for change.\n * @param i6 Static value used for concatenation only.\n * @param v7 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ɵɵattributeInterpolate8(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer, namespace) {\n    const lView = getLView();\n    const interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n    if (interpolatedValue !== NO_CHANGE) {\n        const tNode = getSelectedTNode();\n        elementAttributeInternal(tNode, lView, attrName, interpolatedValue, sanitizer, namespace);\n        ngDevMode &&\n            storePropertyBindingMetadata(getTView().data, tNode, 'attr.' + attrName, getBindingIndex() - 8, prefix, i0, i1, i2, i3, i4, i5, i6, suffix);\n    }\n    return ɵɵattributeInterpolate8;\n}\n/**\n * Update an interpolated attribute on an element with 9 or more bound values surrounded by text.\n *\n * Used when the number of interpolated values exceeds 8.\n *\n * ```html\n * <div\n *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ɵɵattributeInterpolateV(\n *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n *  'suffix']);\n * ```\n *\n * @param attrName The name of the attribute to update.\n * @param values The collection of values and the strings in-between those values, beginning with\n * a string prefix and ending with a string suffix.\n * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ɵɵattributeInterpolateV(attrName, values, sanitizer, namespace) {\n    const lView = getLView();\n    const interpolated = interpolationV(lView, values);\n    if (interpolated !== NO_CHANGE) {\n        const tNode = getSelectedTNode();\n        elementAttributeInternal(tNode, lView, attrName, interpolated, sanitizer, namespace);\n        if (ngDevMode) {\n            const interpolationInBetween = [values[0]]; // prefix\n            for (let i = 2; i < values.length; i += 2) {\n                interpolationInBetween.push(values[i]);\n            }\n            storePropertyBindingMetadata(getTView().data, tNode, 'attr.' + attrName, getBindingIndex() - interpolationInBetween.length + 1, ...interpolationInBetween);\n        }\n    }\n    return ɵɵattributeInterpolateV;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Synchronously perform change detection on a component (and possibly its sub-components).\n *\n * This function triggers change detection in a synchronous way on a component.\n *\n * @param component The component which the change detection should be performed on.\n */\nfunction detectChanges(component) {\n    const view = getComponentViewByInstance(component);\n    detectChangesInternal(view[TVIEW], view, component);\n}\n/**\n * Marks the component as dirty (needing change detection). Marking a component dirty will\n * schedule a change detection on it at some point in the future.\n *\n * Marking an already dirty component as dirty won't do anything. Only one outstanding change\n * detection can be scheduled per component tree.\n *\n * @param component Component to mark as dirty.\n */\nfunction markDirty(component) {\n    ngDevMode && assertDefined(component, 'component');\n    const rootView = markViewDirty(getComponentViewByInstance(component));\n    ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n    scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n}\n/**\n * Used to perform change detection on the whole application.\n *\n * This is equivalent to `detectChanges`, but invoked on root component. Additionally, `tick`\n * executes lifecycle hooks and conditionally checks components based on their\n * `ChangeDetectionStrategy` and dirtiness.\n *\n * The preferred way to trigger change detection is to call `markDirty`. `markDirty` internally\n * schedules `tick` using a scheduler in order to coalesce multiple `markDirty` calls into a\n * single change detection run. By default, the scheduler is `requestAnimationFrame`, but can\n * be changed when calling `renderComponent` and providing the `scheduler` option.\n */\nfunction tick(component) {\n    const rootView = getRootView(component);\n    const rootContext = rootView[CONTEXT];\n    tickRootContext(rootContext);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction templateFirstCreatePass(index, tView, lView, templateFn, decls, vars, tagName, attrsIndex, localRefsIndex) {\n    ngDevMode && assertFirstCreatePass(tView);\n    ngDevMode && ngDevMode.firstCreatePass++;\n    const tViewConsts = tView.consts;\n    // TODO(pk): refactor getOrCreateTNode to have the \"create\" only version\n    const tNode = getOrCreateTNode(tView, lView[T_HOST], index, 0 /* Container */, tagName || null, getConstant(tViewConsts, attrsIndex));\n    resolveDirectives(tView, lView, tNode, getConstant(tViewConsts, localRefsIndex));\n    registerPostOrderHooks(tView, tNode);\n    const embeddedTView = tNode.tViews = createTView(2 /* Embedded */, -1, templateFn, decls, vars, tView.directiveRegistry, tView.pipeRegistry, null, tView.schemas, tViewConsts);\n    const embeddedTViewNode = createTNode(tView, null, 2 /* View */, -1, null, null);\n    embeddedTViewNode.injectorIndex = tNode.injectorIndex;\n    embeddedTView.node = embeddedTViewNode;\n    if (tView.queries !== null) {\n        tView.queries.template(tView, tNode);\n        embeddedTView.queries = tView.queries.embeddedTView(tNode);\n    }\n    return tNode;\n}\n/**\n * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n *\n * <ng-template #foo>\n *    <div></div>\n * </ng-template>\n *\n * @param index The index of the container in the data array\n * @param templateFn Inline template\n * @param decls The number of nodes, local refs, and pipes for this template\n * @param vars The number of bindings for this template\n * @param tagName The name of the container element, if applicable\n * @param attrsIndex Index of template attributes in the `consts` array.\n * @param localRefs Index of the local references in the `consts` array.\n * @param localRefExtractor A function which extracts local-refs values from the template.\n *        Defaults to the current element associated with the local-ref.\n *\n * @codeGenApi\n */\nfunction ɵɵtemplate(index, templateFn, decls, vars, tagName, attrsIndex, localRefsIndex, localRefExtractor) {\n    const lView = getLView();\n    const tView = getTView();\n    const adjustedIndex = index + HEADER_OFFSET;\n    const tNode = tView.firstCreatePass ?\n        templateFirstCreatePass(index, tView, lView, templateFn, decls, vars, tagName, attrsIndex, localRefsIndex) :\n        tView.data[adjustedIndex];\n    setPreviousOrParentTNode(tNode, false);\n    const comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n    appendChild(tView, lView, comment, tNode);\n    attachPatchData(comment, lView);\n    addToViewTree(lView, lView[adjustedIndex] = createLContainer(comment, lView, comment, tNode));\n    if (isDirectiveHost(tNode)) {\n        createDirectivesInstances(tView, lView, tNode);\n    }\n    if (localRefsIndex != null) {\n        saveResolvedLocalsInData(lView, tNode, localRefExtractor);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Store a value in the `data` at a given `index`. */\nfunction store(tView, lView, index, value) {\n    // We don't store any static data for local variables, so the first time\n    // we see the template, we should store as null to avoid a sparse array\n    const adjustedIndex = index + HEADER_OFFSET;\n    if (adjustedIndex >= tView.data.length) {\n        tView.data[adjustedIndex] = null;\n        tView.blueprint[adjustedIndex] = null;\n    }\n    lView[adjustedIndex] = value;\n}\n/**\n * Retrieves a local reference from the current contextViewData.\n *\n * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n *\n * @param index The index of the local ref in contextViewData.\n *\n * @codeGenApi\n */\nfunction ɵɵreference(index) {\n    const contextLView = getContextLView();\n    return load(contextLView, index);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction ɵɵdirectiveInject(token, flags = InjectFlags.Default) {\n    const lView = getLView();\n    // Fall back to inject() if view hasn't been created. This situation can happen in tests\n    // if inject utilities are used before bootstrapping.\n    if (lView == null)\n        return ɵɵinject(token, flags);\n    const tNode = getPreviousOrParentTNode();\n    return getOrCreateInjectable(tNode, lView, resolveForwardRef(token), flags);\n}\n/**\n * Facade for the attribute injection from DI.\n *\n * @codeGenApi\n */\nfunction ɵɵinjectAttribute(attrNameToInject) {\n    return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n}\n/**\n * Throws an error indicating that a factory function could not be generated by the compiler for a\n * particular class.\n *\n * This instruction allows the actual error message to be optimized away when ngDevMode is turned\n * off, saving bytes of generated code while still providing a good experience in dev mode.\n *\n * The name of the class is not mentioned here, but will be in the generated factory function name\n * and thus in the stack trace.\n *\n * @codeGenApi\n */\nfunction ɵɵinvalidFactory() {\n    const msg = ngDevMode ? `This constructor was not compatible with Dependency Injection.` : 'invalid';\n    throw new Error(msg);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Update a property on a selected element.\n *\n * Operates on the element selected by index via the {@link select} instruction.\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled\n *\n * @param propName Name of property. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param value New value to write.\n * @param sanitizer An optional function used to sanitize the value.\n * @returns This function returns itself so that it may be chained\n * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n *\n * @codeGenApi\n */\nfunction ɵɵproperty(propName, value, sanitizer) {\n    const lView = getLView();\n    const bindingIndex = nextBindingIndex();\n    if (bindingUpdated(lView, bindingIndex, value)) {\n        const tView = getTView();\n        const tNode = getSelectedTNode();\n        elementPropertyInternal(tView, tNode, lView, propName, value, lView[RENDERER], sanitizer, false);\n        ngDevMode && storePropertyBindingMetadata(tView.data, tNode, propName, bindingIndex);\n    }\n    return ɵɵproperty;\n}\n/**\n * Given `<div style=\"...\" my-dir>` and `MyDir` with `@Input('style')` we need to write to\n * directive input.\n */\nfunction setDirectiveInputsWhichShadowsStyling(tView, tNode, lView, value, isClassBased) {\n    const inputs = tNode.inputs;\n    const property = isClassBased ? 'class' : 'style';\n    // We support both 'class' and `className` hence the fallback.\n    setInputsForProperty(tView, lView, inputs[property], property, value);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction elementStartFirstCreatePass(index, tView, lView, native, name, attrsIndex, localRefsIndex) {\n    ngDevMode && assertFirstCreatePass(tView);\n    ngDevMode && ngDevMode.firstCreatePass++;\n    const tViewConsts = tView.consts;\n    const attrs = getConstant(tViewConsts, attrsIndex);\n    const tNode = getOrCreateTNode(tView, lView[T_HOST], index, 3 /* Element */, name, attrs);\n    const hasDirectives = resolveDirectives(tView, lView, tNode, getConstant(tViewConsts, localRefsIndex));\n    ngDevMode && logUnknownElementError(tView, native, tNode, hasDirectives);\n    if (tNode.attrs !== null) {\n        computeStaticStyling(tNode, tNode.attrs, false);\n    }\n    if (tNode.mergedAttrs !== null) {\n        computeStaticStyling(tNode, tNode.mergedAttrs, true);\n    }\n    if (tView.queries !== null) {\n        tView.queries.elementStart(tView, tNode);\n    }\n    return tNode;\n}\n/**\n * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n *\n * @param index Index of the element in the LView array\n * @param name Name of the DOM Node\n * @param attrsIndex Index of the element's attributes in the `consts` array.\n * @param localRefsIndex Index of the element's local references in the `consts` array.\n *\n * Attributes and localRefs are passed as an array of strings where elements with an even index\n * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n * ['id', 'warning5', 'class', 'alert']\n *\n * @codeGenApi\n */\nfunction ɵɵelementStart(index, name, attrsIndex, localRefsIndex) {\n    const lView = getLView();\n    const tView = getTView();\n    const adjustedIndex = HEADER_OFFSET + index;\n    ngDevMode &&\n        assertEqual(getBindingIndex(), tView.bindingStartIndex, 'elements should be created before any bindings');\n    ngDevMode && ngDevMode.rendererCreateElement++;\n    ngDevMode && assertIndexInRange(lView, adjustedIndex);\n    const renderer = lView[RENDERER];\n    const native = lView[adjustedIndex] = elementCreate(name, renderer, getNamespace());\n    const tNode = tView.firstCreatePass ?\n        elementStartFirstCreatePass(index, tView, lView, native, name, attrsIndex, localRefsIndex) :\n        tView.data[adjustedIndex];\n    setPreviousOrParentTNode(tNode, true);\n    const mergedAttrs = tNode.mergedAttrs;\n    if (mergedAttrs !== null) {\n        setUpAttributes(renderer, native, mergedAttrs);\n    }\n    const classes = tNode.classes;\n    if (classes !== null) {\n        writeDirectClass(renderer, native, classes);\n    }\n    const styles = tNode.styles;\n    if (styles !== null) {\n        writeDirectStyle(renderer, native, styles);\n    }\n    appendChild(tView, lView, native, tNode);\n    // any immediate children of a component or template container must be pre-emptively\n    // monkey-patched with the component view data so that the element can be inspected\n    // later on using any element discovery utility methods (see `element_discovery.ts`)\n    if (getElementDepthCount() === 0) {\n        attachPatchData(native, lView);\n    }\n    increaseElementDepthCount();\n    if (isDirectiveHost(tNode)) {\n        createDirectivesInstances(tView, lView, tNode);\n        executeContentQueries(tView, tNode, lView);\n    }\n    if (localRefsIndex !== null) {\n        saveResolvedLocalsInData(lView, tNode);\n    }\n}\n/**\n * Mark the end of the element.\n *\n * @codeGenApi\n */\nfunction ɵɵelementEnd() {\n    let previousOrParentTNode = getPreviousOrParentTNode();\n    ngDevMode && assertDefined(previousOrParentTNode, 'No parent node to close.');\n    if (getIsParent()) {\n        setIsNotParent();\n    }\n    else {\n        ngDevMode && assertHasParent(getPreviousOrParentTNode());\n        previousOrParentTNode = previousOrParentTNode.parent;\n        setPreviousOrParentTNode(previousOrParentTNode, false);\n    }\n    const tNode = previousOrParentTNode;\n    ngDevMode && assertNodeType(tNode, 3 /* Element */);\n    decreaseElementDepthCount();\n    const tView = getTView();\n    if (tView.firstCreatePass) {\n        registerPostOrderHooks(tView, previousOrParentTNode);\n        if (isContentQueryHost(previousOrParentTNode)) {\n            tView.queries.elementEnd(previousOrParentTNode);\n        }\n    }\n    if (tNode.classesWithoutHost != null && hasClassInput(tNode)) {\n        setDirectiveInputsWhichShadowsStyling(tView, tNode, getLView(), tNode.classesWithoutHost, true);\n    }\n    if (tNode.stylesWithoutHost != null && hasStyleInput(tNode)) {\n        setDirectiveInputsWhichShadowsStyling(tView, tNode, getLView(), tNode.stylesWithoutHost, false);\n    }\n}\n/**\n * Creates an empty element using {@link elementStart} and {@link elementEnd}\n *\n * @param index Index of the element in the data array\n * @param name Name of the DOM Node\n * @param attrsIndex Index of the element's attributes in the `consts` array.\n * @param localRefsIndex Index of the element's local references in the `consts` array.\n *\n * @codeGenApi\n */\nfunction ɵɵelement(index, name, attrsIndex, localRefsIndex) {\n    ɵɵelementStart(index, name, attrsIndex, localRefsIndex);\n    ɵɵelementEnd();\n}\nfunction logUnknownElementError(tView, element, tNode, hasDirectives) {\n    const schemas = tView.schemas;\n    // If `schemas` is set to `null`, that's an indication that this Component was compiled in AOT\n    // mode where this check happens at compile time. In JIT mode, `schemas` is always present and\n    // defined as an array (as an empty array in case `schemas` field is not defined) and we should\n    // execute the check below.\n    if (schemas === null)\n        return;\n    const tagName = tNode.tagName;\n    // If the element matches any directive, it's considered as valid.\n    if (!hasDirectives && tagName !== null) {\n        // The element is unknown if it's an instance of HTMLUnknownElement or it isn't registered\n        // as a custom element. Note that unknown elements with a dash in their name won't be instances\n        // of HTMLUnknownElement in browsers that support web components.\n        const isUnknown = \n        // Note that we can't check for `typeof HTMLUnknownElement === 'function'`,\n        // because while most browsers return 'function', IE returns 'object'.\n        (typeof HTMLUnknownElement !== 'undefined' && HTMLUnknownElement &&\n            element instanceof HTMLUnknownElement) ||\n            (typeof customElements !== 'undefined' && tagName.indexOf('-') > -1 &&\n                !customElements.get(tagName));\n        if (isUnknown && !matchingSchemas(tView, tagName)) {\n            let message = `'${tagName}' is not a known element:\\n`;\n            message += `1. If '${tagName}' is an Angular component, then verify that it is part of this module.\\n`;\n            if (tagName && tagName.indexOf('-') > -1) {\n                message += `2. If '${tagName}' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.`;\n            }\n            else {\n                message +=\n                    `2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.`;\n            }\n            console.error(message);\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction elementContainerStartFirstCreatePass(index, tView, lView, attrsIndex, localRefsIndex) {\n    ngDevMode && ngDevMode.firstCreatePass++;\n    const tViewConsts = tView.consts;\n    const attrs = getConstant(tViewConsts, attrsIndex);\n    const tNode = getOrCreateTNode(tView, lView[T_HOST], index, 4 /* ElementContainer */, 'ng-container', attrs);\n    // While ng-container doesn't necessarily support styling, we use the style context to identify\n    // and execute directives on the ng-container.\n    if (attrs !== null) {\n        computeStaticStyling(tNode, attrs, true);\n    }\n    const localRefs = getConstant(tViewConsts, localRefsIndex);\n    resolveDirectives(tView, lView, tNode, localRefs);\n    if (tView.queries !== null) {\n        tView.queries.elementStart(tView, tNode);\n    }\n    return tNode;\n}\n/**\n * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n * The instruction must later be followed by `elementContainerEnd()` call.\n *\n * @param index Index of the element in the LView array\n * @param attrsIndex Index of the container attributes in the `consts` array.\n * @param localRefsIndex Index of the container's local references in the `consts` array.\n *\n * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n * matching purposes and setting initial inputs of directives.\n *\n * @codeGenApi\n */\nfunction ɵɵelementContainerStart(index, attrsIndex, localRefsIndex) {\n    const lView = getLView();\n    const tView = getTView();\n    const adjustedIndex = index + HEADER_OFFSET;\n    ngDevMode && assertIndexInRange(lView, adjustedIndex);\n    ngDevMode &&\n        assertEqual(getBindingIndex(), tView.bindingStartIndex, 'element containers should be created before any bindings');\n    const tNode = tView.firstCreatePass ?\n        elementContainerStartFirstCreatePass(index, tView, lView, attrsIndex, localRefsIndex) :\n        tView.data[adjustedIndex];\n    setPreviousOrParentTNode(tNode, true);\n    ngDevMode && ngDevMode.rendererCreateComment++;\n    const native = lView[adjustedIndex] =\n        lView[RENDERER].createComment(ngDevMode ? 'ng-container' : '');\n    appendChild(tView, lView, native, tNode);\n    attachPatchData(native, lView);\n    if (isDirectiveHost(tNode)) {\n        createDirectivesInstances(tView, lView, tNode);\n        executeContentQueries(tView, tNode, lView);\n    }\n    if (localRefsIndex != null) {\n        saveResolvedLocalsInData(lView, tNode);\n    }\n}\n/**\n * Mark the end of the <ng-container>.\n *\n * @codeGenApi\n */\nfunction ɵɵelementContainerEnd() {\n    let previousOrParentTNode = getPreviousOrParentTNode();\n    const tView = getTView();\n    if (getIsParent()) {\n        setIsNotParent();\n    }\n    else {\n        ngDevMode && assertHasParent(previousOrParentTNode);\n        previousOrParentTNode = previousOrParentTNode.parent;\n        setPreviousOrParentTNode(previousOrParentTNode, false);\n    }\n    ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n    if (tView.firstCreatePass) {\n        registerPostOrderHooks(tView, previousOrParentTNode);\n        if (isContentQueryHost(previousOrParentTNode)) {\n            tView.queries.elementEnd(previousOrParentTNode);\n        }\n    }\n}\n/**\n * Creates an empty logical container using {@link elementContainerStart}\n * and {@link elementContainerEnd}\n *\n * @param index Index of the element in the LView array\n * @param attrsIndex Index of the container attributes in the `consts` array.\n * @param localRefsIndex Index of the container's local references in the `consts` array.\n *\n * @codeGenApi\n */\nfunction ɵɵelementContainer(index, attrsIndex, localRefsIndex) {\n    ɵɵelementContainerStart(index, attrsIndex, localRefsIndex);\n    ɵɵelementContainerEnd();\n}\n\n/**\n * Returns the current OpaqueViewState instance.\n *\n * Used in conjunction with the restoreView() instruction to save a snapshot\n * of the current view and restore it when listeners are invoked. This allows\n * walking the declaration view tree in listeners to get vars from parent views.\n *\n * @codeGenApi\n */\nfunction ɵɵgetCurrentView() {\n    return getLView();\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Determine if the argument is shaped like a Promise\n */\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\n/**\n * Determine if the argument is an Observable\n */\nfunction isObservable(obj) {\n    // TODO: use isObservable once we update pass rxjs 6.1\n    // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n    return !!obj && typeof obj.subscribe === 'function';\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Adds an event listener to the current node.\n *\n * If an output exists on one of the node's directives, it also subscribes to the output\n * and saves the subscription for later cleanup.\n *\n * @param eventName Name of the event\n * @param listenerFn The function to be called when event emits\n * @param useCapture Whether or not to use capture in event listener\n * @param eventTargetResolver Function that returns global target information in case this listener\n * should be attached to a global object like window, document or body\n *\n * @codeGenApi\n */\nfunction ɵɵlistener(eventName, listenerFn, useCapture = false, eventTargetResolver) {\n    const lView = getLView();\n    const tView = getTView();\n    const tNode = getPreviousOrParentTNode();\n    listenerInternal(tView, lView, lView[RENDERER], tNode, eventName, listenerFn, useCapture, eventTargetResolver);\n    return ɵɵlistener;\n}\n/**\n * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component or directive.\n *\n * This instruction is for compatibility purposes and is designed to ensure that a\n * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n * in the component's renderer. Normally all host listeners are evaluated with the\n * parent component's renderer, but, in the case of animation @triggers, they need\n * to be evaluated with the sub component's renderer (because that's where the\n * animation triggers are defined).\n *\n * Do not use this instruction as a replacement for `listener`. This instruction\n * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n *\n * @param eventName Name of the event\n * @param listenerFn The function to be called when event emits\n * @param useCapture Whether or not to use capture in event listener\n * @param eventTargetResolver Function that returns global target information in case this listener\n * should be attached to a global object like window, document or body\n *\n * @codeGenApi\n */\nfunction ɵɵsyntheticHostListener(eventName, listenerFn, useCapture = false, eventTargetResolver) {\n    const tNode = getPreviousOrParentTNode();\n    const lView = getLView();\n    const tView = getTView();\n    const currentDef = getCurrentDirectiveDef(tView.data);\n    const renderer = loadComponentRenderer(currentDef, tNode, lView);\n    listenerInternal(tView, lView, renderer, tNode, eventName, listenerFn, useCapture, eventTargetResolver);\n    return ɵɵsyntheticHostListener;\n}\n/**\n * A utility function that checks if a given element has already an event handler registered for an\n * event with a specified name. The TView.cleanup data structure is used to find out which events\n * are registered for a given element.\n */\nfunction findExistingListener(tView, lView, eventName, tNodeIdx) {\n    const tCleanup = tView.cleanup;\n    if (tCleanup != null) {\n        for (let i = 0; i < tCleanup.length - 1; i += 2) {\n            const cleanupEventName = tCleanup[i];\n            if (cleanupEventName === eventName && tCleanup[i + 1] === tNodeIdx) {\n                // We have found a matching event name on the same node but it might not have been\n                // registered yet, so we must explicitly verify entries in the LView cleanup data\n                // structures.\n                const lCleanup = lView[CLEANUP];\n                const listenerIdxInLCleanup = tCleanup[i + 2];\n                return lCleanup.length > listenerIdxInLCleanup ? lCleanup[listenerIdxInLCleanup] : null;\n            }\n            // TView.cleanup can have a mix of 4-elements entries (for event handler cleanups) or\n            // 2-element entries (for directive and queries destroy hooks). As such we can encounter\n            // blocks of 4 or 2 items in the tView.cleanup and this is why we iterate over 2 elements\n            // first and jump another 2 elements if we detect listeners cleanup (4 elements). Also check\n            // documentation of TView.cleanup for more details of this data structure layout.\n            if (typeof cleanupEventName === 'string') {\n                i += 2;\n            }\n        }\n    }\n    return null;\n}\nfunction listenerInternal(tView, lView, renderer, tNode, eventName, listenerFn, useCapture = false, eventTargetResolver) {\n    const isTNodeDirectiveHost = isDirectiveHost(tNode);\n    const firstCreatePass = tView.firstCreatePass;\n    const tCleanup = firstCreatePass && (tView.cleanup || (tView.cleanup = []));\n    // When the ɵɵlistener instruction was generated and is executed we know that there is either a\n    // native listener or a directive output on this element. As such we we know that we will have to\n    // register a listener and store its cleanup function on LView.\n    const lCleanup = getLCleanup(lView);\n    ngDevMode &&\n        assertNodeOfPossibleTypes(tNode, [3 /* Element */, 0 /* Container */, 4 /* ElementContainer */]);\n    let processOutputs = true;\n    // add native event listener - applicable to elements only\n    if (tNode.type === 3 /* Element */) {\n        const native = getNativeByTNode(tNode, lView);\n        const resolved = eventTargetResolver ? eventTargetResolver(native) : EMPTY_OBJ;\n        const target = resolved.target || native;\n        const lCleanupIndex = lCleanup.length;\n        const idxOrTargetGetter = eventTargetResolver ?\n            (_lView) => eventTargetResolver(unwrapRNode(_lView[tNode.index])).target :\n            tNode.index;\n        // In order to match current behavior, native DOM event listeners must be added for all\n        // events (including outputs).\n        if (isProceduralRenderer(renderer)) {\n            // There might be cases where multiple directives on the same element try to register an event\n            // handler function for the same event. In this situation we want to avoid registration of\n            // several native listeners as each registration would be intercepted by NgZone and\n            // trigger change detection. This would mean that a single user action would result in several\n            // change detections being invoked. To avoid this situation we want to have only one call to\n            // native handler registration (for the same element and same type of event).\n            //\n            // In order to have just one native event handler in presence of multiple handler functions,\n            // we just register a first handler function as a native event listener and then chain\n            // (coalesce) other handler functions on top of the first native handler function.\n            let existingListener = null;\n            // Please note that the coalescing described here doesn't happen for events specifying an\n            // alternative target (ex. (document:click)) - this is to keep backward compatibility with the\n            // view engine.\n            // Also, we don't have to search for existing listeners is there are no directives\n            // matching on a given node as we can't register multiple event handlers for the same event in\n            // a template (this would mean having duplicate attributes).\n            if (!eventTargetResolver && isTNodeDirectiveHost) {\n                existingListener = findExistingListener(tView, lView, eventName, tNode.index);\n            }\n            if (existingListener !== null) {\n                // Attach a new listener to coalesced listeners list, maintaining the order in which\n                // listeners are registered. For performance reasons, we keep a reference to the last\n                // listener in that list (in `__ngLastListenerFn__` field), so we can avoid going through\n                // the entire set each time we need to add a new listener.\n                const lastListenerFn = existingListener.__ngLastListenerFn__ || existingListener;\n                lastListenerFn.__ngNextListenerFn__ = listenerFn;\n                existingListener.__ngLastListenerFn__ = listenerFn;\n                processOutputs = false;\n            }\n            else {\n                // The first argument of `listen` function in Procedural Renderer is:\n                // - either a target name (as a string) in case of global target (window, document, body)\n                // - or element reference (in all other cases)\n                listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                const cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                ngDevMode && ngDevMode.rendererAddEventListener++;\n                lCleanup.push(listenerFn, cleanupFn);\n                tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, lCleanupIndex + 1);\n            }\n        }\n        else {\n            listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n            target.addEventListener(eventName, listenerFn, useCapture);\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            lCleanup.push(listenerFn);\n            tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCapture);\n        }\n    }\n    // subscribe to directive outputs\n    const outputs = tNode.outputs;\n    let props;\n    if (processOutputs && outputs !== null && (props = outputs[eventName])) {\n        const propsLength = props.length;\n        if (propsLength) {\n            for (let i = 0; i < propsLength; i += 2) {\n                const index = props[i];\n                ngDevMode && assertIndexInRange(lView, index);\n                const minifiedName = props[i + 1];\n                const directiveInstance = lView[index];\n                const output = directiveInstance[minifiedName];\n                if (ngDevMode && !isObservable(output)) {\n                    throw new Error(`@Output ${minifiedName} not initialized in '${directiveInstance.constructor.name}'.`);\n                }\n                const subscription = output.subscribe(listenerFn);\n                const idx = lCleanup.length;\n                lCleanup.push(listenerFn, subscription);\n                tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n            }\n        }\n    }\n}\nfunction executeListenerWithErrorHandling(lView, listenerFn, e) {\n    try {\n        // Only explicitly returning false from a listener should preventDefault\n        return listenerFn(e) !== false;\n    }\n    catch (error) {\n        handleError(lView, error);\n        return false;\n    }\n}\n/**\n * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n * if applicable.\n *\n * @param tNode The TNode associated with this listener\n * @param lView The LView that contains this listener\n * @param listenerFn The listener function to call\n * @param wrapWithPreventDefault Whether or not to prevent default behavior\n * (the procedural renderer does this already, so in those cases, we should skip)\n */\nfunction wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n    // Note: we are performing most of the work in the listener function itself\n    // to optimize listener registration.\n    return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n        // Ivy uses `Function` as a special token that allows us to unwrap the function\n        // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`.\n        if (e === Function) {\n            return listenerFn;\n        }\n        // In order to be backwards compatible with View Engine, events on component host nodes\n        // must also mark the component view itself dirty (i.e. the view that it owns).\n        const startView = tNode.flags & 2 /* isComponentHost */ ?\n            getComponentLViewByIndex(tNode.index, lView) :\n            lView;\n        // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n        if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n            markViewDirty(startView);\n        }\n        let result = executeListenerWithErrorHandling(lView, listenerFn, e);\n        // A just-invoked listener function might have coalesced listeners so we need to check for\n        // their presence and invoke as needed.\n        let nextListenerFn = wrapListenerIn_markDirtyAndPreventDefault.__ngNextListenerFn__;\n        while (nextListenerFn) {\n            // We should prevent default if any of the listeners explicitly return false\n            result = executeListenerWithErrorHandling(lView, nextListenerFn, e) && result;\n            nextListenerFn = nextListenerFn.__ngNextListenerFn__;\n        }\n        if (wrapWithPreventDefault && result === false) {\n            e.preventDefault();\n            // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n            e.returnValue = false;\n        }\n        return result;\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Retrieves a context at the level specified and saves it as the global, contextViewData.\n * Will get the next level up if level is not specified.\n *\n * This is used to save contexts of parent views so they can be bound in embedded views, or\n * in conjunction with reference() to bind a ref from a parent view.\n *\n * @param level The relative level of the view from which to grab context compared to contextVewData\n * @returns context\n *\n * @codeGenApi\n */\nfunction ɵɵnextContext(level = 1) {\n    return nextContextImpl(level);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Checks a given node against matching projection slots and returns the\n * determined slot index. Returns \"null\" if no slot matched the given node.\n *\n * This function takes into account the parsed ngProjectAs selector from the\n * node's attributes. If present, it will check whether the ngProjectAs selector\n * matches any of the projection slot selectors.\n */\nfunction matchingProjectionSlotIndex(tNode, projectionSlots) {\n    let wildcardNgContentIndex = null;\n    const ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n    for (let i = 0; i < projectionSlots.length; i++) {\n        const slotValue = projectionSlots[i];\n        // The last wildcard projection slot should match all nodes which aren't matching\n        // any selector. This is necessary to be backwards compatible with view engine.\n        if (slotValue === '*') {\n            wildcardNgContentIndex = i;\n            continue;\n        }\n        // If we ran into an `ngProjectAs` attribute, we should match its parsed selector\n        // to the list of selectors, otherwise we fall back to matching against the node.\n        if (ngProjectAsAttrVal === null ?\n            isNodeMatchingSelectorList(tNode, slotValue, /* isProjectionMode */ true) :\n            isSelectorInSelectorList(ngProjectAsAttrVal, slotValue)) {\n            return i; // first matching selector \"captures\" a given node\n        }\n    }\n    return wildcardNgContentIndex;\n}\n/**\n * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n * It takes all the selectors from the entire component's template and decides where\n * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n * backed by a selector).\n *\n * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n * un-parsed form.\n *\n * The parsed form is needed for efficient matching of a node against a given CSS selector.\n * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n *\n * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n * drawbacks:\n * - having only a textual form would require runtime parsing of CSS selectors;\n * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n * template author).\n *\n * @param projectionSlots? A collection of projection slots. A projection slot can be based\n *        on a parsed CSS selectors or set to the wildcard selector (\"*\") in order to match\n *        all nodes which do not match any selector. If not specified, a single wildcard\n *        selector projection slot will be defined.\n *\n * @codeGenApi\n */\nfunction ɵɵprojectionDef(projectionSlots) {\n    const componentNode = getLView()[DECLARATION_COMPONENT_VIEW][T_HOST];\n    if (!componentNode.projection) {\n        // If no explicit projection slots are defined, fall back to a single\n        // projection slot with the wildcard selector.\n        const numProjectionSlots = projectionSlots ? projectionSlots.length : 1;\n        const projectionHeads = componentNode.projection =\n            newArray(numProjectionSlots, null);\n        const tails = projectionHeads.slice();\n        let componentChild = componentNode.child;\n        while (componentChild !== null) {\n            const slotIndex = projectionSlots ? matchingProjectionSlotIndex(componentChild, projectionSlots) : 0;\n            if (slotIndex !== null) {\n                if (tails[slotIndex]) {\n                    tails[slotIndex].projectionNext = componentChild;\n                }\n                else {\n                    projectionHeads[slotIndex] = componentChild;\n                }\n                tails[slotIndex] = componentChild;\n            }\n            componentChild = componentChild.next;\n        }\n    }\n}\nlet delayProjection = false;\nfunction setDelayProjection(value) {\n    delayProjection = value;\n}\n/**\n * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n * to the projectionDef instruction.\n *\n * @param nodeIndex\n * @param selectorIndex:\n *        - 0 when the selector is `*` (or unspecified as this is the default value),\n *        - 1 based index of the selector from the {@link projectionDef}\n *\n * @codeGenApi\n */\nfunction ɵɵprojection(nodeIndex, selectorIndex = 0, attrs) {\n    const lView = getLView();\n    const tView = getTView();\n    const tProjectionNode = getOrCreateTNode(tView, lView[T_HOST], nodeIndex, 1 /* Projection */, null, attrs || null);\n    // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n    if (tProjectionNode.projection === null)\n        tProjectionNode.projection = selectorIndex;\n    // `<ng-content>` has no content\n    setIsNotParent();\n    // We might need to delay the projection of nodes if they are in the middle of an i18n block\n    if (!delayProjection) {\n        // re-distribution of projectable nodes is stored on a component's view level\n        applyProjection(tView, lView, tProjectionNode);\n    }\n}\n\n/**\n *\n * Update an interpolated property on an element with a lone bound value\n *\n * Used when the value passed to a property has 1 interpolated value in it, an no additional text\n * surrounds that interpolated value:\n *\n * ```html\n * <div title=\"{{v0}}\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ɵɵpropertyInterpolate('title', v0);\n * ```\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n *\n * @param propName The name of the property to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ɵɵpropertyInterpolate(propName, v0, sanitizer) {\n    ɵɵpropertyInterpolate1(propName, '', v0, '', sanitizer);\n    return ɵɵpropertyInterpolate;\n}\n/**\n *\n * Update an interpolated property on an element with single bound value surrounded by text.\n *\n * Used when the value passed to a property has 1 interpolated value in it:\n *\n * ```html\n * <div title=\"prefix{{v0}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ɵɵpropertyInterpolate1('title', 'prefix', v0, 'suffix');\n * ```\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n *\n * @param propName The name of the property to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ɵɵpropertyInterpolate1(propName, prefix, v0, suffix, sanitizer) {\n    const lView = getLView();\n    const interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n    if (interpolatedValue !== NO_CHANGE) {\n        const tView = getTView();\n        const tNode = getSelectedTNode();\n        elementPropertyInternal(tView, tNode, lView, propName, interpolatedValue, lView[RENDERER], sanitizer, false);\n        ngDevMode &&\n            storePropertyBindingMetadata(tView.data, tNode, propName, getBindingIndex() - 1, prefix, suffix);\n    }\n    return ɵɵpropertyInterpolate1;\n}\n/**\n *\n * Update an interpolated property on an element with 2 bound values surrounded by text.\n *\n * Used when the value passed to a property has 2 interpolated values in it:\n *\n * ```html\n * <div title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ɵɵpropertyInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n * ```\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n *\n * @param propName The name of the property to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ɵɵpropertyInterpolate2(propName, prefix, v0, i0, v1, suffix, sanitizer) {\n    const lView = getLView();\n    const interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n    if (interpolatedValue !== NO_CHANGE) {\n        const tView = getTView();\n        const tNode = getSelectedTNode();\n        elementPropertyInternal(tView, tNode, lView, propName, interpolatedValue, lView[RENDERER], sanitizer, false);\n        ngDevMode &&\n            storePropertyBindingMetadata(tView.data, tNode, propName, getBindingIndex() - 2, prefix, i0, suffix);\n    }\n    return ɵɵpropertyInterpolate2;\n}\n/**\n *\n * Update an interpolated property on an element with 3 bound values surrounded by text.\n *\n * Used when the value passed to a property has 3 interpolated values in it:\n *\n * ```html\n * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ɵɵpropertyInterpolate3(\n * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n * ```\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n *\n * @param propName The name of the property to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ɵɵpropertyInterpolate3(propName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer) {\n    const lView = getLView();\n    const interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n    if (interpolatedValue !== NO_CHANGE) {\n        const tView = getTView();\n        const tNode = getSelectedTNode();\n        elementPropertyInternal(tView, tNode, lView, propName, interpolatedValue, lView[RENDERER], sanitizer, false);\n        ngDevMode &&\n            storePropertyBindingMetadata(tView.data, tNode, propName, getBindingIndex() - 3, prefix, i0, i1, suffix);\n    }\n    return ɵɵpropertyInterpolate3;\n}\n/**\n *\n * Update an interpolated property on an element with 4 bound values surrounded by text.\n *\n * Used when the value passed to a property has 4 interpolated values in it:\n *\n * ```html\n * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ɵɵpropertyInterpolate4(\n * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n * ```\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n *\n * @param propName The name of the property to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ɵɵpropertyInterpolate4(propName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer) {\n    const lView = getLView();\n    const interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n    if (interpolatedValue !== NO_CHANGE) {\n        const tView = getTView();\n        const tNode = getSelectedTNode();\n        elementPropertyInternal(tView, tNode, lView, propName, interpolatedValue, lView[RENDERER], sanitizer, false);\n        ngDevMode &&\n            storePropertyBindingMetadata(tView.data, tNode, propName, getBindingIndex() - 4, prefix, i0, i1, i2, suffix);\n    }\n    return ɵɵpropertyInterpolate4;\n}\n/**\n *\n * Update an interpolated property on an element with 5 bound values surrounded by text.\n *\n * Used when the value passed to a property has 5 interpolated values in it:\n *\n * ```html\n * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ɵɵpropertyInterpolate5(\n * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n * ```\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n *\n * @param propName The name of the property to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ɵɵpropertyInterpolate5(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer) {\n    const lView = getLView();\n    const interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n    if (interpolatedValue !== NO_CHANGE) {\n        const tView = getTView();\n        const tNode = getSelectedTNode();\n        elementPropertyInternal(tView, tNode, lView, propName, interpolatedValue, lView[RENDERER], sanitizer, false);\n        ngDevMode &&\n            storePropertyBindingMetadata(tView.data, tNode, propName, getBindingIndex() - 5, prefix, i0, i1, i2, i3, suffix);\n    }\n    return ɵɵpropertyInterpolate5;\n}\n/**\n *\n * Update an interpolated property on an element with 6 bound values surrounded by text.\n *\n * Used when the value passed to a property has 6 interpolated values in it:\n *\n * ```html\n * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ɵɵpropertyInterpolate6(\n *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n * ```\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n *\n * @param propName The name of the property to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param i4 Static value used for concatenation only.\n * @param v5 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ɵɵpropertyInterpolate6(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer) {\n    const lView = getLView();\n    const interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n    if (interpolatedValue !== NO_CHANGE) {\n        const tView = getTView();\n        const tNode = getSelectedTNode();\n        elementPropertyInternal(tView, tNode, lView, propName, interpolatedValue, lView[RENDERER], sanitizer, false);\n        ngDevMode &&\n            storePropertyBindingMetadata(tView.data, tNode, propName, getBindingIndex() - 6, prefix, i0, i1, i2, i3, i4, suffix);\n    }\n    return ɵɵpropertyInterpolate6;\n}\n/**\n *\n * Update an interpolated property on an element with 7 bound values surrounded by text.\n *\n * Used when the value passed to a property has 7 interpolated values in it:\n *\n * ```html\n * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ɵɵpropertyInterpolate7(\n *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n * ```\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n *\n * @param propName The name of the property to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param i4 Static value used for concatenation only.\n * @param v5 Value checked for change.\n * @param i5 Static value used for concatenation only.\n * @param v6 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ɵɵpropertyInterpolate7(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer) {\n    const lView = getLView();\n    const interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n    if (interpolatedValue !== NO_CHANGE) {\n        const tView = getTView();\n        const tNode = getSelectedTNode();\n        elementPropertyInternal(tView, tNode, lView, propName, interpolatedValue, lView[RENDERER], sanitizer, false);\n        ngDevMode &&\n            storePropertyBindingMetadata(tView.data, tNode, propName, getBindingIndex() - 7, prefix, i0, i1, i2, i3, i4, i5, suffix);\n    }\n    return ɵɵpropertyInterpolate7;\n}\n/**\n *\n * Update an interpolated property on an element with 8 bound values surrounded by text.\n *\n * Used when the value passed to a property has 8 interpolated values in it:\n *\n * ```html\n * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ɵɵpropertyInterpolate8(\n *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n * ```\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n *\n * @param propName The name of the property to update\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param i4 Static value used for concatenation only.\n * @param v5 Value checked for change.\n * @param i5 Static value used for concatenation only.\n * @param v6 Value checked for change.\n * @param i6 Static value used for concatenation only.\n * @param v7 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ɵɵpropertyInterpolate8(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer) {\n    const lView = getLView();\n    const interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n    if (interpolatedValue !== NO_CHANGE) {\n        const tView = getTView();\n        const tNode = getSelectedTNode();\n        elementPropertyInternal(tView, tNode, lView, propName, interpolatedValue, lView[RENDERER], sanitizer, false);\n        ngDevMode &&\n            storePropertyBindingMetadata(tView.data, tNode, propName, getBindingIndex() - 8, prefix, i0, i1, i2, i3, i4, i5, i6, suffix);\n    }\n    return ɵɵpropertyInterpolate8;\n}\n/**\n * Update an interpolated property on an element with 9 or more bound values surrounded by text.\n *\n * Used when the number of interpolated values exceeds 8.\n *\n * ```html\n * <div\n *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n * ```\n *\n * Its compiled representation is::\n *\n * ```ts\n * ɵɵpropertyInterpolateV(\n *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n *  'suffix']);\n * ```\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n *\n * @param propName The name of the property to update.\n * @param values The collection of values and the strings inbetween those values, beginning with a\n * string prefix and ending with a string suffix.\n * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n * @param sanitizer An optional sanitizer function\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ɵɵpropertyInterpolateV(propName, values, sanitizer) {\n    const lView = getLView();\n    const interpolatedValue = interpolationV(lView, values);\n    if (interpolatedValue !== NO_CHANGE) {\n        const tView = getTView();\n        const tNode = getSelectedTNode();\n        elementPropertyInternal(tView, tNode, lView, propName, interpolatedValue, lView[RENDERER], sanitizer, false);\n        if (ngDevMode) {\n            const interpolationInBetween = [values[0]]; // prefix\n            for (let i = 2; i < values.length; i += 2) {\n                interpolationInBetween.push(values[i]);\n            }\n            storePropertyBindingMetadata(tView.data, tNode, propName, getBindingIndex() - interpolationInBetween.length + 1, ...interpolationInBetween);\n        }\n    }\n    return ɵɵpropertyInterpolateV;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This file contains reuseable \"empty\" symbols that can be used as default return values\n * in different parts of the rendering code. Because the same symbols are returned, this\n * allows for identity checks against these values to be consistently used by the framework\n * code.\n */\nconst EMPTY_OBJ$1 = {};\nconst EMPTY_ARRAY$3 = [];\n// freezing the values prevents any code from accidentally inserting new values in\nif ((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode()) {\n    // These property accesses can be ignored because ngDevMode will be set to false\n    // when optimizing code and the whole if statement will be dropped.\n    // tslint:disable-next-line:no-toplevel-property-access\n    Object.freeze(EMPTY_OBJ$1);\n    // tslint:disable-next-line:no-toplevel-property-access\n    Object.freeze(EMPTY_ARRAY$3);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * NOTE: The word `styling` is used interchangeably as style or class styling.\n *\n * This file contains code to link styling instructions together so that they can be replayed in\n * priority order. The file exists because Ivy styling instruction execution order does not match\n * that of the priority order. The purpose of this code is to create a linked list so that the\n * instructions can be traversed in priority order when computing the styles.\n *\n * Assume we are dealing with the following code:\n * ```\n * @Component({\n *   template: `\n *     <my-cmp [style]=\" {color: '#001'} \"\n *             [style.color]=\" #002 \"\n *             dir-style-color-1\n *             dir-style-color-2> `\n * })\n * class ExampleComponent {\n *   static ngComp = ... {\n *     ...\n *     // Compiler ensures that `ɵɵstyleProp` is after `ɵɵstyleMap`\n *     ɵɵstyleMap({color: '#001'});\n *     ɵɵstyleProp('color', '#002');\n *     ...\n *   }\n * }\n *\n * @Directive({\n *   selector: `[dir-style-color-1]',\n * })\n * class Style1Directive {\n *   @HostBinding('style') style = {color: '#005'};\n *   @HostBinding('style.color') color = '#006';\n *\n *   static ngDir = ... {\n *     ...\n *     // Compiler ensures that `ɵɵstyleProp` is after `ɵɵstyleMap`\n *     ɵɵstyleMap({color: '#005'});\n *     ɵɵstyleProp('color', '#006');\n *     ...\n *   }\n * }\n *\n * @Directive({\n *   selector: `[dir-style-color-2]',\n * })\n * class Style2Directive {\n *   @HostBinding('style') style = {color: '#007'};\n *   @HostBinding('style.color') color = '#008';\n *\n *   static ngDir = ... {\n *     ...\n *     // Compiler ensures that `ɵɵstyleProp` is after `ɵɵstyleMap`\n *     ɵɵstyleMap({color: '#007'});\n *     ɵɵstyleProp('color', '#008');\n *     ...\n *   }\n * }\n *\n * @Directive({\n *   selector: `my-cmp',\n * })\n * class MyComponent {\n *   @HostBinding('style') style = {color: '#003'};\n *   @HostBinding('style.color') color = '#004';\n *\n *   static ngComp = ... {\n *     ...\n *     // Compiler ensures that `ɵɵstyleProp` is after `ɵɵstyleMap`\n *     ɵɵstyleMap({color: '#003'});\n *     ɵɵstyleProp('color', '#004');\n *     ...\n *   }\n * }\n * ```\n *\n * The Order of instruction execution is:\n *\n * NOTE: the comment binding location is for illustrative purposes only.\n *\n * ```\n * // Template: (ExampleComponent)\n *     ɵɵstyleMap({color: '#001'});   // Binding index: 10\n *     ɵɵstyleProp('color', '#002');  // Binding index: 12\n * // MyComponent\n *     ɵɵstyleMap({color: '#003'});   // Binding index: 20\n *     ɵɵstyleProp('color', '#004');  // Binding index: 22\n * // Style1Directive\n *     ɵɵstyleMap({color: '#005'});   // Binding index: 24\n *     ɵɵstyleProp('color', '#006');  // Binding index: 26\n * // Style2Directive\n *     ɵɵstyleMap({color: '#007'});   // Binding index: 28\n *     ɵɵstyleProp('color', '#008');  // Binding index: 30\n * ```\n *\n * The correct priority order of concatenation is:\n *\n * ```\n * // MyComponent\n *     ɵɵstyleMap({color: '#003'});   // Binding index: 20\n *     ɵɵstyleProp('color', '#004');  // Binding index: 22\n * // Style1Directive\n *     ɵɵstyleMap({color: '#005'});   // Binding index: 24\n *     ɵɵstyleProp('color', '#006');  // Binding index: 26\n * // Style2Directive\n *     ɵɵstyleMap({color: '#007'});   // Binding index: 28\n *     ɵɵstyleProp('color', '#008');  // Binding index: 30\n * // Template: (ExampleComponent)\n *     ɵɵstyleMap({color: '#001'});   // Binding index: 10\n *     ɵɵstyleProp('color', '#002');  // Binding index: 12\n * ```\n *\n * What color should be rendered?\n *\n * Once the items are correctly sorted in the list, the answer is simply the last item in the\n * concatenation list which is `#002`.\n *\n * To do so we keep a linked list of all of the bindings which pertain to this element.\n * Notice that the bindings are inserted in the order of execution, but the `TView.data` allows\n * us to traverse them in the order of priority.\n *\n * |Idx|`TView.data`|`LView`          | Notes\n * |---|------------|-----------------|--------------\n * |...|            |                 |\n * |10 |`null`      |`{color: '#001'}`| `ɵɵstyleMap('color', {color: '#001'})`\n * |11 |`30 | 12`   | ...             |\n * |12 |`color`     |`'#002'`         | `ɵɵstyleProp('color', '#002')`\n * |13 |`10 | 0`    | ...             |\n * |...|            |                 |\n * |20 |`null`      |`{color: '#003'}`| `ɵɵstyleMap('color', {color: '#003'})`\n * |21 |`0 | 22`    | ...             |\n * |22 |`color`     |`'#004'`         | `ɵɵstyleProp('color', '#004')`\n * |23 |`20 | 24`   | ...             |\n * |24 |`null`      |`{color: '#005'}`| `ɵɵstyleMap('color', {color: '#005'})`\n * |25 |`22 | 26`   | ...             |\n * |26 |`color`     |`'#006'`         | `ɵɵstyleProp('color', '#006')`\n * |27 |`24 | 28`   | ...             |\n * |28 |`null`      |`{color: '#007'}`| `ɵɵstyleMap('color', {color: '#007'})`\n * |29 |`26 | 30`   | ...             |\n * |30 |`color`     |`'#008'`         | `ɵɵstyleProp('color', '#008')`\n * |31 |`28 | 10`   | ...             |\n *\n * The above data structure allows us to re-concatenate the styling no matter which data binding\n * changes.\n *\n * NOTE: in addition to keeping track of next/previous index the `TView.data` also stores prev/next\n * duplicate bit. The duplicate bit if true says there either is a binding with the same name or\n * there is a map (which may contain the name). This information is useful in knowing if other\n * styles with higher priority need to be searched for overwrites.\n *\n * NOTE: See `should support example in 'tnode_linked_list.ts' documentation` in\n * `tnode_linked_list_spec.ts` for working example.\n */\nlet __unused_const_as_closure_does_not_like_standalone_comment_blocks__;\n/**\n * Insert new `tStyleValue` at `TData` and link existing style bindings such that we maintain linked\n * list of styles and compute the duplicate flag.\n *\n * Note: this function is executed during `firstUpdatePass` only to populate the `TView.data`.\n *\n * The function works by keeping track of `tStylingRange` which contains two pointers pointing to\n * the head/tail of the template portion of the styles.\n *  - if `isHost === false` (we are template) then insertion is at tail of `TStylingRange`\n *  - if `isHost === true` (we are host binding) then insertion is at head of `TStylingRange`\n *\n * @param tData The `TData` to insert into.\n * @param tNode `TNode` associated with the styling element.\n * @param tStylingKey See `TStylingKey`.\n * @param index location of where `tStyleValue` should be stored (and linked into list.)\n * @param isHostBinding `true` if the insertion is for a `hostBinding`. (insertion is in front of\n *               template.)\n * @param isClassBinding True if the associated `tStylingKey` as a `class` styling.\n *                       `tNode.classBindings` should be used (or `tNode.styleBindings` otherwise.)\n */\nfunction insertTStylingBinding(tData, tNode, tStylingKeyWithStatic, index, isHostBinding, isClassBinding) {\n    ngDevMode && assertFirstUpdatePass(getTView());\n    let tBindings = isClassBinding ? tNode.classBindings : tNode.styleBindings;\n    let tmplHead = getTStylingRangePrev(tBindings);\n    let tmplTail = getTStylingRangeNext(tBindings);\n    tData[index] = tStylingKeyWithStatic;\n    let isKeyDuplicateOfStatic = false;\n    let tStylingKey;\n    if (Array.isArray(tStylingKeyWithStatic)) {\n        // We are case when the `TStylingKey` contains static fields as well.\n        const staticKeyValueArray = tStylingKeyWithStatic;\n        tStylingKey = staticKeyValueArray[1]; // unwrap.\n        // We need to check if our key is present in the static so that we can mark it as duplicate.\n        if (tStylingKey === null ||\n            keyValueArrayIndexOf(staticKeyValueArray, tStylingKey) > 0) {\n            // tStylingKey is present in the statics, need to mark it as duplicate.\n            isKeyDuplicateOfStatic = true;\n        }\n    }\n    else {\n        tStylingKey = tStylingKeyWithStatic;\n    }\n    if (isHostBinding) {\n        // We are inserting host bindings\n        // If we don't have template bindings then `tail` is 0.\n        const hasTemplateBindings = tmplTail !== 0;\n        // This is important to know because that means that the `head` can't point to the first\n        // template bindings (there are none.) Instead the head points to the tail of the template.\n        if (hasTemplateBindings) {\n            // template head's \"prev\" will point to last host binding or to 0 if no host bindings yet\n            const previousNode = getTStylingRangePrev(tData[tmplHead + 1]);\n            tData[index + 1] = toTStylingRange(previousNode, tmplHead);\n            // if a host binding has already been registered, we need to update the next of that host\n            // binding to point to this one\n            if (previousNode !== 0) {\n                // We need to update the template-tail value to point to us.\n                tData[previousNode + 1] =\n                    setTStylingRangeNext(tData[previousNode + 1], index);\n            }\n            // The \"previous\" of the template binding head should point to this host binding\n            tData[tmplHead + 1] = setTStylingRangePrev(tData[tmplHead + 1], index);\n        }\n        else {\n            tData[index + 1] = toTStylingRange(tmplHead, 0);\n            // if a host binding has already been registered, we need to update the next of that host\n            // binding to point to this one\n            if (tmplHead !== 0) {\n                // We need to update the template-tail value to point to us.\n                tData[tmplHead + 1] = setTStylingRangeNext(tData[tmplHead + 1], index);\n            }\n            // if we don't have template, the head points to template-tail, and needs to be advanced.\n            tmplHead = index;\n        }\n    }\n    else {\n        // We are inserting in template section.\n        // We need to set this binding's \"previous\" to the current template tail\n        tData[index + 1] = toTStylingRange(tmplTail, 0);\n        ngDevMode &&\n            assertEqual(tmplHead !== 0 && tmplTail === 0, false, 'Adding template bindings after hostBindings is not allowed.');\n        if (tmplHead === 0) {\n            tmplHead = index;\n        }\n        else {\n            // We need to update the previous value \"next\" to point to this binding\n            tData[tmplTail + 1] = setTStylingRangeNext(tData[tmplTail + 1], index);\n        }\n        tmplTail = index;\n    }\n    // Now we need to update / compute the duplicates.\n    // Starting with our location search towards head (least priority)\n    if (isKeyDuplicateOfStatic) {\n        tData[index + 1] = setTStylingRangePrevDuplicate(tData[index + 1]);\n    }\n    markDuplicates(tData, tStylingKey, index, true, isClassBinding);\n    markDuplicates(tData, tStylingKey, index, false, isClassBinding);\n    markDuplicateOfResidualStyling(tNode, tStylingKey, tData, index, isClassBinding);\n    tBindings = toTStylingRange(tmplHead, tmplTail);\n    if (isClassBinding) {\n        tNode.classBindings = tBindings;\n    }\n    else {\n        tNode.styleBindings = tBindings;\n    }\n}\n/**\n * Look into the residual styling to see if the current `tStylingKey` is duplicate of residual.\n *\n * @param tNode `TNode` where the residual is stored.\n * @param tStylingKey `TStylingKey` to store.\n * @param tData `TData` associated with the current `LView`.\n * @param index location of where `tStyleValue` should be stored (and linked into list.)\n * @param isClassBinding True if the associated `tStylingKey` as a `class` styling.\n *                       `tNode.classBindings` should be used (or `tNode.styleBindings` otherwise.)\n */\nfunction markDuplicateOfResidualStyling(tNode, tStylingKey, tData, index, isClassBinding) {\n    const residual = isClassBinding ? tNode.residualClasses : tNode.residualStyles;\n    if (residual != null /* or undefined */ && typeof tStylingKey == 'string' &&\n        keyValueArrayIndexOf(residual, tStylingKey) >= 0) {\n        // We have duplicate in the residual so mark ourselves as duplicate.\n        tData[index + 1] = setTStylingRangeNextDuplicate(tData[index + 1]);\n    }\n}\n/**\n * Marks `TStyleValue`s as duplicates if another style binding in the list has the same\n * `TStyleValue`.\n *\n * NOTE: this function is intended to be called twice once with `isPrevDir` set to `true` and once\n * with it set to `false` to search both the previous as well as next items in the list.\n *\n * No duplicate case\n * ```\n *   [style.color]\n *   [style.width.px] <<- index\n *   [style.height.px]\n * ```\n *\n * In the above case adding `[style.width.px]` to the existing `[style.color]` produces no\n * duplicates because `width` is not found in any other part of the linked list.\n *\n * Duplicate case\n * ```\n *   [style.color]\n *   [style.width.em]\n *   [style.width.px] <<- index\n * ```\n * In the above case adding `[style.width.px]` will produce a duplicate with `[style.width.em]`\n * because `width` is found in the chain.\n *\n * Map case 1\n * ```\n *   [style.width.px]\n *   [style.color]\n *   [style]  <<- index\n * ```\n * In the above case adding `[style]` will produce a duplicate with any other bindings because\n * `[style]` is a Map and as such is fully dynamic and could produce `color` or `width`.\n *\n * Map case 2\n * ```\n *   [style]\n *   [style.width.px]\n *   [style.color]  <<- index\n * ```\n * In the above case adding `[style.color]` will produce a duplicate because there is already a\n * `[style]` binding which is a Map and as such is fully dynamic and could produce `color` or\n * `width`.\n *\n * NOTE: Once `[style]` (Map) is added into the system all things are mapped as duplicates.\n * NOTE: We use `style` as example, but same logic is applied to `class`es as well.\n *\n * @param tData `TData` where the linked list is stored.\n * @param tStylingKey `TStylingKeyPrimitive` which contains the value to compare to other keys in\n *        the linked list.\n * @param index Starting location in the linked list to search from\n * @param isPrevDir Direction.\n *        - `true` for previous (lower priority);\n *        - `false` for next (higher priority).\n */\nfunction markDuplicates(tData, tStylingKey, index, isPrevDir, isClassBinding) {\n    const tStylingAtIndex = tData[index + 1];\n    const isMap = tStylingKey === null;\n    let cursor = isPrevDir ? getTStylingRangePrev(tStylingAtIndex) : getTStylingRangeNext(tStylingAtIndex);\n    let foundDuplicate = false;\n    // We keep iterating as long as we have a cursor\n    // AND either:\n    // - we found what we are looking for, OR\n    // - we are a map in which case we have to continue searching even after we find what we were\n    //   looking for since we are a wild card and everything needs to be flipped to duplicate.\n    while (cursor !== 0 && (foundDuplicate === false || isMap)) {\n        ngDevMode && assertIndexInRange(tData, cursor);\n        const tStylingValueAtCursor = tData[cursor];\n        const tStyleRangeAtCursor = tData[cursor + 1];\n        if (isStylingMatch(tStylingValueAtCursor, tStylingKey)) {\n            foundDuplicate = true;\n            tData[cursor + 1] = isPrevDir ? setTStylingRangeNextDuplicate(tStyleRangeAtCursor) :\n                setTStylingRangePrevDuplicate(tStyleRangeAtCursor);\n        }\n        cursor = isPrevDir ? getTStylingRangePrev(tStyleRangeAtCursor) :\n            getTStylingRangeNext(tStyleRangeAtCursor);\n    }\n    if (foundDuplicate) {\n        // if we found a duplicate, than mark ourselves.\n        tData[index + 1] = isPrevDir ? setTStylingRangePrevDuplicate(tStylingAtIndex) :\n            setTStylingRangeNextDuplicate(tStylingAtIndex);\n    }\n}\n/**\n * Determines if two `TStylingKey`s are a match.\n *\n * When computing weather a binding contains a duplicate, we need to compare if the instruction\n * `TStylingKey` has a match.\n *\n * Here are examples of `TStylingKey`s which match given `tStylingKeyCursor` is:\n * - `color`\n *    - `color`    // Match another color\n *    - `null`     // That means that `tStylingKey` is a `classMap`/`styleMap` instruction\n *    - `['', 'color', 'other', true]` // wrapped `color` so match\n *    - `['', null, 'other', true]`       // wrapped `null` so match\n *    - `['', 'width', 'color', 'value']` // wrapped static value contains a match on `'color'`\n * - `null`       // `tStylingKeyCursor` always match as it is `classMap`/`styleMap` instruction\n *\n * @param tStylingKeyCursor\n * @param tStylingKey\n */\nfunction isStylingMatch(tStylingKeyCursor, tStylingKey) {\n    ngDevMode &&\n        assertNotEqual(Array.isArray(tStylingKey), true, 'Expected that \\'tStylingKey\\' has been unwrapped');\n    if (tStylingKeyCursor === null || // If the cursor is `null` it means that we have map at that\n        // location so we must assume that we have a match.\n        tStylingKey == null || // If `tStylingKey` is `null` then it is a map therefor assume that it\n        // contains a match.\n        (Array.isArray(tStylingKeyCursor) ? tStylingKeyCursor[1] : tStylingKeyCursor) ===\n            tStylingKey // If the keys match explicitly than we are a match.\n    ) {\n        return true;\n    }\n    else if (Array.isArray(tStylingKeyCursor) && typeof tStylingKey === 'string') {\n        // if we did not find a match, but `tStylingKeyCursor` is `KeyValueArray` that means cursor has\n        // statics and we need to check those as well.\n        return keyValueArrayIndexOf(tStylingKeyCursor, tStylingKey) >=\n            0; // see if we are matching the key\n    }\n    return false;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Global state of the parser. (This makes parser non-reentrant, but that is not an issue)\nconst parserState = {\n    textEnd: 0,\n    key: 0,\n    keyEnd: 0,\n    value: 0,\n    valueEnd: 0,\n};\n/**\n * Retrieves the last parsed `key` of style.\n * @param text the text to substring the key from.\n */\nfunction getLastParsedKey(text) {\n    return text.substring(parserState.key, parserState.keyEnd);\n}\n/**\n * Retrieves the last parsed `value` of style.\n * @param text the text to substring the key from.\n */\nfunction getLastParsedValue(text) {\n    return text.substring(parserState.value, parserState.valueEnd);\n}\n/**\n * Initializes `className` string for parsing and parses the first token.\n *\n * This function is intended to be used in this format:\n * ```\n * for (let i = parseClassName(text); i >= 0; i = parseClassNameNext(text, i)) {\n *   const key = getLastParsedKey();\n *   ...\n * }\n * ```\n * @param text `className` to parse\n * @returns index where the next invocation of `parseClassNameNext` should resume.\n */\nfunction parseClassName(text) {\n    resetParserState(text);\n    return parseClassNameNext(text, consumeWhitespace(text, 0, parserState.textEnd));\n}\n/**\n * Parses next `className` token.\n *\n * This function is intended to be used in this format:\n * ```\n * for (let i = parseClassName(text); i >= 0; i = parseClassNameNext(text, i)) {\n *   const key = getLastParsedKey();\n *   ...\n * }\n * ```\n *\n * @param text `className` to parse\n * @param index where the parsing should resume.\n * @returns index where the next invocation of `parseClassNameNext` should resume.\n */\nfunction parseClassNameNext(text, index) {\n    const end = parserState.textEnd;\n    if (end === index) {\n        return -1;\n    }\n    index = parserState.keyEnd = consumeClassToken(text, parserState.key = index, end);\n    return consumeWhitespace(text, index, end);\n}\n/**\n * Initializes `cssText` string for parsing and parses the first key/values.\n *\n * This function is intended to be used in this format:\n * ```\n * for (let i = parseStyle(text); i >= 0; i = parseStyleNext(text, i))) {\n *   const key = getLastParsedKey();\n *   const value = getLastParsedValue();\n *   ...\n * }\n * ```\n * @param text `cssText` to parse\n * @returns index where the next invocation of `parseStyleNext` should resume.\n */\nfunction parseStyle(text) {\n    resetParserState(text);\n    return parseStyleNext(text, consumeWhitespace(text, 0, parserState.textEnd));\n}\n/**\n * Parses the next `cssText` key/values.\n *\n * This function is intended to be used in this format:\n * ```\n * for (let i = parseStyle(text); i >= 0; i = parseStyleNext(text, i))) {\n *   const key = getLastParsedKey();\n *   const value = getLastParsedValue();\n *   ...\n * }\n *\n * @param text `cssText` to parse\n * @param index where the parsing should resume.\n * @returns index where the next invocation of `parseStyleNext` should resume.\n */\nfunction parseStyleNext(text, startIndex) {\n    const end = parserState.textEnd;\n    let index = parserState.key = consumeWhitespace(text, startIndex, end);\n    if (end === index) {\n        // we reached an end so just quit\n        return -1;\n    }\n    index = parserState.keyEnd = consumeStyleKey(text, index, end);\n    index = consumeSeparator(text, index, end, 58 /* COLON */);\n    index = parserState.value = consumeWhitespace(text, index, end);\n    index = parserState.valueEnd = consumeStyleValue(text, index, end);\n    return consumeSeparator(text, index, end, 59 /* SEMI_COLON */);\n}\n/**\n * Reset the global state of the styling parser.\n * @param text The styling text to parse.\n */\nfunction resetParserState(text) {\n    parserState.key = 0;\n    parserState.keyEnd = 0;\n    parserState.value = 0;\n    parserState.valueEnd = 0;\n    parserState.textEnd = text.length;\n}\n/**\n * Returns index of next non-whitespace character.\n *\n * @param text Text to scan\n * @param startIndex Starting index of character where the scan should start.\n * @param endIndex Ending index of character where the scan should end.\n * @returns Index of next non-whitespace character (May be the same as `start` if no whitespace at\n *          that location.)\n */\nfunction consumeWhitespace(text, startIndex, endIndex) {\n    while (startIndex < endIndex && text.charCodeAt(startIndex) <= 32 /* SPACE */) {\n        startIndex++;\n    }\n    return startIndex;\n}\n/**\n * Returns index of last char in class token.\n *\n * @param text Text to scan\n * @param startIndex Starting index of character where the scan should start.\n * @param endIndex Ending index of character where the scan should end.\n * @returns Index after last char in class token.\n */\nfunction consumeClassToken(text, startIndex, endIndex) {\n    while (startIndex < endIndex && text.charCodeAt(startIndex) > 32 /* SPACE */) {\n        startIndex++;\n    }\n    return startIndex;\n}\n/**\n * Consumes all of the characters belonging to style key and token.\n *\n * @param text Text to scan\n * @param startIndex Starting index of character where the scan should start.\n * @param endIndex Ending index of character where the scan should end.\n * @returns Index after last style key character.\n */\nfunction consumeStyleKey(text, startIndex, endIndex) {\n    let ch;\n    while (startIndex < endIndex &&\n        ((ch = text.charCodeAt(startIndex)) === 45 /* DASH */ || ch === 95 /* UNDERSCORE */ ||\n            ((ch & -33 /* UPPER_CASE */) >= 65 /* A */ && (ch & -33 /* UPPER_CASE */) <= 90 /* Z */) ||\n            (ch >= 48 /* ZERO */ && ch <= 57 /* NINE */))) {\n        startIndex++;\n    }\n    return startIndex;\n}\n/**\n * Consumes all whitespace and the separator `:` after the style key.\n *\n * @param text Text to scan\n * @param startIndex Starting index of character where the scan should start.\n * @param endIndex Ending index of character where the scan should end.\n * @returns Index after separator and surrounding whitespace.\n */\nfunction consumeSeparator(text, startIndex, endIndex, separator) {\n    startIndex = consumeWhitespace(text, startIndex, endIndex);\n    if (startIndex < endIndex) {\n        if (ngDevMode && text.charCodeAt(startIndex) !== separator) {\n            malformedStyleError(text, String.fromCharCode(separator), startIndex);\n        }\n        startIndex++;\n    }\n    return startIndex;\n}\n/**\n * Consumes style value honoring `url()` and `\"\"` text.\n *\n * @param text Text to scan\n * @param startIndex Starting index of character where the scan should start.\n * @param endIndex Ending index of character where the scan should end.\n * @returns Index after last style value character.\n */\nfunction consumeStyleValue(text, startIndex, endIndex) {\n    let ch1 = -1; // 1st previous character\n    let ch2 = -1; // 2nd previous character\n    let ch3 = -1; // 3rd previous character\n    let i = startIndex;\n    let lastChIndex = i;\n    while (i < endIndex) {\n        const ch = text.charCodeAt(i++);\n        if (ch === 59 /* SEMI_COLON */) {\n            return lastChIndex;\n        }\n        else if (ch === 34 /* DOUBLE_QUOTE */ || ch === 39 /* SINGLE_QUOTE */) {\n            lastChIndex = i = consumeQuotedText(text, ch, i, endIndex);\n        }\n        else if (startIndex ===\n            i - 4 && // We have seen only 4 characters so far \"URL(\" (Ignore \"foo_URL()\")\n            ch3 === 85 /* U */ &&\n            ch2 === 82 /* R */ && ch1 === 76 /* L */ && ch === 40 /* OPEN_PAREN */) {\n            lastChIndex = i = consumeQuotedText(text, 41 /* CLOSE_PAREN */, i, endIndex);\n        }\n        else if (ch > 32 /* SPACE */) {\n            // if we have a non-whitespace character then capture its location\n            lastChIndex = i;\n        }\n        ch3 = ch2;\n        ch2 = ch1;\n        ch1 = ch & -33 /* UPPER_CASE */;\n    }\n    return lastChIndex;\n}\n/**\n * Consumes all of the quoted characters.\n *\n * @param text Text to scan\n * @param quoteCharCode CharCode of either `\"` or `'` quote or `)` for `url(...)`.\n * @param startIndex Starting index of character where the scan should start.\n * @param endIndex Ending index of character where the scan should end.\n * @returns Index after quoted characters.\n */\nfunction consumeQuotedText(text, quoteCharCode, startIndex, endIndex) {\n    let ch1 = -1; // 1st previous character\n    let index = startIndex;\n    while (index < endIndex) {\n        const ch = text.charCodeAt(index++);\n        if (ch == quoteCharCode && ch1 !== 92 /* BACK_SLASH */) {\n            return index;\n        }\n        if (ch == 92 /* BACK_SLASH */ && ch1 === 92 /* BACK_SLASH */) {\n            // two back slashes cancel each other out. For example `\"\\\\\"` should properly end the\n            // quotation. (It should not assume that the last `\"` is escaped.)\n            ch1 = 0;\n        }\n        else {\n            ch1 = ch;\n        }\n    }\n    throw ngDevMode ? malformedStyleError(text, String.fromCharCode(quoteCharCode), endIndex) :\n        new Error();\n}\nfunction malformedStyleError(text, expecting, index) {\n    ngDevMode && assertEqual(typeof text === 'string', true, 'String expected here');\n    throw throwError(`Malformed style at location ${index} in string '` + text.substring(0, index) + '[>>' +\n        text.substring(index, index + 1) + '<<]' + text.substr(index + 1) +\n        `'. Expecting '${expecting}'.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Update a style binding on an element with the provided value.\n *\n * If the style value is falsy then it will be removed from the element\n * (or assigned a different value depending if there are any styles placed\n * on the element with `styleMap` or any static styles that are\n * present from when the element was created with `styling`).\n *\n * Note that the styling element is updated as part of `stylingApply`.\n *\n * @param prop A valid CSS property.\n * @param value New value to write (`null` or an empty string to remove).\n * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n *\n * Note that this will apply the provided style value to the host element if this function is called\n * within a host binding function.\n *\n * @codeGenApi\n */\nfunction ɵɵstyleProp(prop, value, suffix) {\n    checkStylingProperty(prop, value, suffix, false);\n    return ɵɵstyleProp;\n}\n/**\n * Update a class binding on an element with the provided value.\n *\n * This instruction is meant to handle the `[class.foo]=\"exp\"` case and,\n * therefore, the class binding itself must already be allocated using\n * `styling` within the creation block.\n *\n * @param prop A valid CSS class (only one).\n * @param value A true/false value which will turn the class on or off.\n *\n * Note that this will apply the provided class value to the host element if this function\n * is called within a host binding function.\n *\n * @codeGenApi\n */\nfunction ɵɵclassProp(className, value) {\n    checkStylingProperty(className, value, null, true);\n    return ɵɵclassProp;\n}\n/**\n * Update style bindings using an object literal on an element.\n *\n * This instruction is meant to apply styling via the `[style]=\"exp\"` template bindings.\n * When styles are applied to the element they will then be updated with respect to\n * any styles/classes set via `styleProp`. If any styles are set to falsy\n * then they will be removed from the element.\n *\n * Note that the styling instruction will not be applied until `stylingApply` is called.\n *\n * @param styles A key/value style map of the styles that will be applied to the given element.\n *        Any missing styles (that have already been applied to the element beforehand) will be\n *        removed (unset) from the element's styling.\n *\n * Note that this will apply the provided styleMap value to the host element if this function\n * is called within a host binding.\n *\n * @codeGenApi\n */\nfunction ɵɵstyleMap(styles) {\n    checkStylingMap(styleKeyValueArraySet, styleStringParser, styles, false);\n}\n/**\n * Parse text as style and add values to KeyValueArray.\n *\n * This code is pulled out to a separate function so that it can be tree shaken away if it is not\n * needed. It is only referenced from `ɵɵstyleMap`.\n *\n * @param keyValueArray KeyValueArray to add parsed values to.\n * @param text text to parse.\n */\nfunction styleStringParser(keyValueArray, text) {\n    for (let i = parseStyle(text); i >= 0; i = parseStyleNext(text, i)) {\n        styleKeyValueArraySet(keyValueArray, getLastParsedKey(text), getLastParsedValue(text));\n    }\n}\n/**\n * Update class bindings using an object literal or class-string on an element.\n *\n * This instruction is meant to apply styling via the `[class]=\"exp\"` template bindings.\n * When classes are applied to the element they will then be updated with\n * respect to any styles/classes set via `classProp`. If any\n * classes are set to falsy then they will be removed from the element.\n *\n * Note that the styling instruction will not be applied until `stylingApply` is called.\n * Note that this will the provided classMap value to the host element if this function is called\n * within a host binding.\n *\n * @param classes A key/value map or string of CSS classes that will be added to the\n *        given element. Any missing classes (that have already been applied to the element\n *        beforehand) will be removed (unset) from the element's list of CSS classes.\n *\n * @codeGenApi\n */\nfunction ɵɵclassMap(classes) {\n    checkStylingMap(keyValueArraySet, classStringParser, classes, true);\n}\n/**\n * Parse text as class and add values to KeyValueArray.\n *\n * This code is pulled out to a separate function so that it can be tree shaken away if it is not\n * needed. It is only referenced from `ɵɵclassMap`.\n *\n * @param keyValueArray KeyValueArray to add parsed values to.\n * @param text text to parse.\n */\nfunction classStringParser(keyValueArray, text) {\n    for (let i = parseClassName(text); i >= 0; i = parseClassNameNext(text, i)) {\n        keyValueArraySet(keyValueArray, getLastParsedKey(text), true);\n    }\n}\n/**\n * Common code between `ɵɵclassProp` and `ɵɵstyleProp`.\n *\n * @param prop property name.\n * @param value binding value.\n * @param suffix suffix for the property (e.g. `em` or `px`)\n * @param isClassBased `true` if `class` change (`false` if `style`)\n */\nfunction checkStylingProperty(prop, value, suffix, isClassBased) {\n    const lView = getLView();\n    const tView = getTView();\n    // Styling instructions use 2 slots per binding.\n    // 1. one for the value / TStylingKey\n    // 2. one for the intermittent-value / TStylingRange\n    const bindingIndex = incrementBindingIndex(2);\n    if (tView.firstUpdatePass) {\n        stylingFirstUpdatePass(tView, prop, bindingIndex, isClassBased);\n    }\n    if (value !== NO_CHANGE && bindingUpdated(lView, bindingIndex, value)) {\n        const tNode = tView.data[getSelectedIndex() + HEADER_OFFSET];\n        updateStyling(tView, tNode, lView, lView[RENDERER], prop, lView[bindingIndex + 1] = normalizeSuffix(value, suffix), isClassBased, bindingIndex);\n    }\n}\n/**\n * Common code between `ɵɵclassMap` and `ɵɵstyleMap`.\n *\n * @param keyValueArraySet (See `keyValueArraySet` in \"util/array_utils\") Gets passed in as a\n *        function so that `style` can be processed. This is done for tree shaking purposes.\n * @param stringParser Parser used to parse `value` if `string`. (Passed in as `style` and `class`\n *        have different parsers.)\n * @param value bound value from application\n * @param isClassBased `true` if `class` change (`false` if `style`)\n */\nfunction checkStylingMap(keyValueArraySet, stringParser, value, isClassBased) {\n    const tView = getTView();\n    const bindingIndex = incrementBindingIndex(2);\n    if (tView.firstUpdatePass) {\n        stylingFirstUpdatePass(tView, null, bindingIndex, isClassBased);\n    }\n    const lView = getLView();\n    if (value !== NO_CHANGE && bindingUpdated(lView, bindingIndex, value)) {\n        // `getSelectedIndex()` should be here (rather than in instruction) so that it is guarded by the\n        // if so as not to read unnecessarily.\n        const tNode = tView.data[getSelectedIndex() + HEADER_OFFSET];\n        if (hasStylingInputShadow(tNode, isClassBased) && !isInHostBindings(tView, bindingIndex)) {\n            if (ngDevMode) {\n                // verify that if we are shadowing then `TData` is appropriately marked so that we skip\n                // processing this binding in styling resolution.\n                const tStylingKey = tView.data[bindingIndex];\n                assertEqual(Array.isArray(tStylingKey) ? tStylingKey[1] : tStylingKey, false, 'Styling linked list shadow input should be marked as \\'false\\'');\n            }\n            // VE does not concatenate the static portion like we are doing here.\n            // Instead VE just ignores the static completely if dynamic binding is present.\n            // Because of locality we have already set the static portion because we don't know if there\n            // is a dynamic portion until later. If we would ignore the static portion it would look like\n            // the binding has removed it. This would confuse `[ngStyle]`/`[ngClass]` to do the wrong\n            // thing as it would think that the static portion was removed. For this reason we\n            // concatenate it so that `[ngStyle]`/`[ngClass]`  can continue to work on changed.\n            let staticPrefix = isClassBased ? tNode.classesWithoutHost : tNode.stylesWithoutHost;\n            ngDevMode && isClassBased === false && staticPrefix !== null &&\n                assertEqual(staticPrefix.endsWith(';'), true, 'Expecting static portion to end with \\';\\'');\n            if (staticPrefix !== null) {\n                // We want to make sure that falsy values of `value` become empty strings.\n                value = concatStringsWithSpace(staticPrefix, value ? value : '');\n            }\n            // Given `<div [style] my-dir>` such that `my-dir` has `@Input('style')`.\n            // This takes over the `[style]` binding. (Same for `[class]`)\n            setDirectiveInputsWhichShadowsStyling(tView, tNode, lView, value, isClassBased);\n        }\n        else {\n            updateStylingMap(tView, tNode, lView, lView[RENDERER], lView[bindingIndex + 1], lView[bindingIndex + 1] = toStylingKeyValueArray(keyValueArraySet, stringParser, value), isClassBased, bindingIndex);\n        }\n    }\n}\n/**\n * Determines when the binding is in `hostBindings` section\n *\n * @param tView Current `TView`\n * @param bindingIndex index of binding which we would like if it is in `hostBindings`\n */\nfunction isInHostBindings(tView, bindingIndex) {\n    // All host bindings are placed after the expando section.\n    return bindingIndex >= tView.expandoStartIndex;\n}\n/**\n * Collects the necessary information to insert the binding into a linked list of style bindings\n * using `insertTStylingBinding`.\n *\n * @param tView `TView` where the binding linked list will be stored.\n * @param tStylingKey Property/key of the binding.\n * @param bindingIndex Index of binding associated with the `prop`\n * @param isClassBased `true` if `class` change (`false` if `style`)\n */\nfunction stylingFirstUpdatePass(tView, tStylingKey, bindingIndex, isClassBased) {\n    ngDevMode && assertFirstUpdatePass(tView);\n    const tData = tView.data;\n    if (tData[bindingIndex + 1] === null) {\n        // The above check is necessary because we don't clear first update pass until first successful\n        // (no exception) template execution. This prevents the styling instruction from double adding\n        // itself to the list.\n        // `getSelectedIndex()` should be here (rather than in instruction) so that it is guarded by the\n        // if so as not to read unnecessarily.\n        const tNode = tData[getSelectedIndex() + HEADER_OFFSET];\n        const isHostBindings = isInHostBindings(tView, bindingIndex);\n        if (hasStylingInputShadow(tNode, isClassBased) && tStylingKey === null && !isHostBindings) {\n            // `tStylingKey === null` implies that we are either `[style]` or `[class]` binding.\n            // If there is a directive which uses `@Input('style')` or `@Input('class')` than\n            // we need to neutralize this binding since that directive is shadowing it.\n            // We turn this into a noop by setting the key to `false`\n            tStylingKey = false;\n        }\n        tStylingKey = wrapInStaticStylingKey(tData, tNode, tStylingKey, isClassBased);\n        insertTStylingBinding(tData, tNode, tStylingKey, bindingIndex, isHostBindings, isClassBased);\n    }\n}\n/**\n * Adds static styling information to the binding if applicable.\n *\n * The linked list of styles not only stores the list and keys, but also stores static styling\n * information on some of the keys. This function determines if the key should contain the styling\n * information and computes it.\n *\n * See `TStylingStatic` for more details.\n *\n * @param tData `TData` where the linked list is stored.\n * @param tNode `TNode` for which the styling is being computed.\n * @param stylingKey `TStylingKeyPrimitive` which may need to be wrapped into `TStylingKey`\n * @param isClassBased `true` if `class` (`false` if `style`)\n */\nfunction wrapInStaticStylingKey(tData, tNode, stylingKey, isClassBased) {\n    const hostDirectiveDef = getCurrentDirectiveDef(tData);\n    let residual = isClassBased ? tNode.residualClasses : tNode.residualStyles;\n    if (hostDirectiveDef === null) {\n        // We are in template node.\n        // If template node already had styling instruction then it has already collected the static\n        // styling and there is no need to collect them again. We know that we are the first styling\n        // instruction because the `TNode.*Bindings` points to 0 (nothing has been inserted yet).\n        const isFirstStylingInstructionInTemplate = (isClassBased ? tNode.classBindings : tNode.styleBindings) === 0;\n        if (isFirstStylingInstructionInTemplate) {\n            // It would be nice to be able to get the statics from `mergeAttrs`, however, at this point\n            // they are already merged and it would not be possible to figure which property belongs where\n            // in the priority.\n            stylingKey = collectStylingFromDirectives(null, tData, tNode, stylingKey, isClassBased);\n            stylingKey = collectStylingFromTAttrs(stylingKey, tNode.attrs, isClassBased);\n            // We know that if we have styling binding in template we can't have residual.\n            residual = null;\n        }\n    }\n    else {\n        // We are in host binding node and there was no binding instruction in template node.\n        // This means that we need to compute the residual.\n        const directiveStylingLast = tNode.directiveStylingLast;\n        const isFirstStylingInstructionInHostBinding = directiveStylingLast === -1 || tData[directiveStylingLast] !== hostDirectiveDef;\n        if (isFirstStylingInstructionInHostBinding) {\n            stylingKey =\n                collectStylingFromDirectives(hostDirectiveDef, tData, tNode, stylingKey, isClassBased);\n            if (residual === null) {\n                // - If `null` than either:\n                //    - Template styling instruction already ran and it has consumed the static\n                //      styling into its `TStylingKey` and so there is no need to update residual. Instead\n                //      we need to update the `TStylingKey` associated with the first template node\n                //      instruction. OR\n                //    - Some other styling instruction ran and determined that there are no residuals\n                let templateStylingKey = getTemplateHeadTStylingKey(tData, tNode, isClassBased);\n                if (templateStylingKey !== undefined && Array.isArray(templateStylingKey)) {\n                    // Only recompute if `templateStylingKey` had static values. (If no static value found\n                    // then there is nothing to do since this operation can only produce less static keys, not\n                    // more.)\n                    templateStylingKey = collectStylingFromDirectives(null, tData, tNode, templateStylingKey[1] /* unwrap previous statics */, isClassBased);\n                    templateStylingKey =\n                        collectStylingFromTAttrs(templateStylingKey, tNode.attrs, isClassBased);\n                    setTemplateHeadTStylingKey(tData, tNode, isClassBased, templateStylingKey);\n                }\n            }\n            else {\n                // We only need to recompute residual if it is not `null`.\n                // - If existing residual (implies there was no template styling). This means that some of\n                //   the statics may have moved from the residual to the `stylingKey` and so we have to\n                //   recompute.\n                // - If `undefined` this is the first time we are running.\n                residual = collectResidual(tData, tNode, isClassBased);\n            }\n        }\n    }\n    if (residual !== undefined) {\n        isClassBased ? (tNode.residualClasses = residual) : (tNode.residualStyles = residual);\n    }\n    return stylingKey;\n}\n/**\n * Retrieve the `TStylingKey` for the template styling instruction.\n *\n * This is needed since `hostBinding` styling instructions are inserted after the template\n * instruction. While the template instruction needs to update the residual in `TNode` the\n * `hostBinding` instructions need to update the `TStylingKey` of the template instruction because\n * the template instruction is downstream from the `hostBindings` instructions.\n *\n * @param tData `TData` where the linked list is stored.\n * @param tNode `TNode` for which the styling is being computed.\n * @param isClassBased `true` if `class` (`false` if `style`)\n * @return `TStylingKey` if found or `undefined` if not found.\n */\nfunction getTemplateHeadTStylingKey(tData, tNode, isClassBased) {\n    const bindings = isClassBased ? tNode.classBindings : tNode.styleBindings;\n    if (getTStylingRangeNext(bindings) === 0) {\n        // There does not seem to be a styling instruction in the `template`.\n        return undefined;\n    }\n    return tData[getTStylingRangePrev(bindings)];\n}\n/**\n * Update the `TStylingKey` of the first template instruction in `TNode`.\n *\n * Logically `hostBindings` styling instructions are of lower priority than that of the template.\n * However, they execute after the template styling instructions. This means that they get inserted\n * in front of the template styling instructions.\n *\n * If we have a template styling instruction and a new `hostBindings` styling instruction is\n * executed it means that it may need to steal static fields from the template instruction. This\n * method allows us to update the first template instruction `TStylingKey` with a new value.\n *\n * Assume:\n * ```\n * <div my-dir style=\"color: red\" [style.color]=\"tmplExp\"></div>\n *\n * @Directive({\n *   host: {\n *     'style': 'width: 100px',\n *     '[style.color]': 'dirExp',\n *   }\n * })\n * class MyDir {}\n * ```\n *\n * when `[style.color]=\"tmplExp\"` executes it creates this data structure.\n * ```\n *  ['', 'color', 'color', 'red', 'width', '100px'],\n * ```\n *\n * The reason for this is that the template instruction does not know if there are styling\n * instructions and must assume that there are none and must collect all of the static styling.\n * (both\n * `color' and 'width`)\n *\n * When `'[style.color]': 'dirExp',` executes we need to insert a new data into the linked list.\n * ```\n *  ['', 'color', 'width', '100px'],  // newly inserted\n *  ['', 'color', 'color', 'red', 'width', '100px'], // this is wrong\n * ```\n *\n * Notice that the template statics is now wrong as it incorrectly contains `width` so we need to\n * update it like so:\n * ```\n *  ['', 'color', 'width', '100px'],\n *  ['', 'color', 'color', 'red'],    // UPDATE\n * ```\n *\n * @param tData `TData` where the linked list is stored.\n * @param tNode `TNode` for which the styling is being computed.\n * @param isClassBased `true` if `class` (`false` if `style`)\n * @param tStylingKey New `TStylingKey` which is replacing the old one.\n */\nfunction setTemplateHeadTStylingKey(tData, tNode, isClassBased, tStylingKey) {\n    const bindings = isClassBased ? tNode.classBindings : tNode.styleBindings;\n    ngDevMode &&\n        assertNotEqual(getTStylingRangeNext(bindings), 0, 'Expecting to have at least one template styling binding.');\n    tData[getTStylingRangePrev(bindings)] = tStylingKey;\n}\n/**\n * Collect all static values after the current `TNode.directiveStylingLast` index.\n *\n * Collect the remaining styling information which has not yet been collected by an existing\n * styling instruction.\n *\n * @param tData `TData` where the `DirectiveDefs` are stored.\n * @param tNode `TNode` which contains the directive range.\n * @param isClassBased `true` if `class` (`false` if `style`)\n */\nfunction collectResidual(tData, tNode, isClassBased) {\n    let residual = undefined;\n    const directiveEnd = tNode.directiveEnd;\n    ngDevMode &&\n        assertNotEqual(tNode.directiveStylingLast, -1, 'By the time this function gets called at least one hostBindings-node styling instruction must have executed.');\n    // We add `1 + tNode.directiveStart` because we need to skip the current directive (as we are\n    // collecting things after the last `hostBindings` directive which had a styling instruction.)\n    for (let i = 1 + tNode.directiveStylingLast; i < directiveEnd; i++) {\n        const attrs = tData[i].hostAttrs;\n        residual = collectStylingFromTAttrs(residual, attrs, isClassBased);\n    }\n    return collectStylingFromTAttrs(residual, tNode.attrs, isClassBased);\n}\n/**\n * Collect the static styling information with lower priority than `hostDirectiveDef`.\n *\n * (This is opposite of residual styling.)\n *\n * @param hostDirectiveDef `DirectiveDef` for which we want to collect lower priority static\n *        styling. (Or `null` if template styling)\n * @param tData `TData` where the linked list is stored.\n * @param tNode `TNode` for which the styling is being computed.\n * @param stylingKey Existing `TStylingKey` to update or wrap.\n * @param isClassBased `true` if `class` (`false` if `style`)\n */\nfunction collectStylingFromDirectives(hostDirectiveDef, tData, tNode, stylingKey, isClassBased) {\n    // We need to loop because there can be directives which have `hostAttrs` but don't have\n    // `hostBindings` so this loop catches up to the current directive..\n    let currentDirective = null;\n    const directiveEnd = tNode.directiveEnd;\n    let directiveStylingLast = tNode.directiveStylingLast;\n    if (directiveStylingLast === -1) {\n        directiveStylingLast = tNode.directiveStart;\n    }\n    else {\n        directiveStylingLast++;\n    }\n    while (directiveStylingLast < directiveEnd) {\n        currentDirective = tData[directiveStylingLast];\n        ngDevMode && assertDefined(currentDirective, 'expected to be defined');\n        stylingKey = collectStylingFromTAttrs(stylingKey, currentDirective.hostAttrs, isClassBased);\n        if (currentDirective === hostDirectiveDef)\n            break;\n        directiveStylingLast++;\n    }\n    if (hostDirectiveDef !== null) {\n        // we only advance the styling cursor if we are collecting data from host bindings.\n        // Template executes before host bindings and so if we would update the index,\n        // host bindings would not get their statics.\n        tNode.directiveStylingLast = directiveStylingLast;\n    }\n    return stylingKey;\n}\n/**\n * Convert `TAttrs` into `TStylingStatic`.\n *\n * @param stylingKey existing `TStylingKey` to update or wrap.\n * @param attrs `TAttributes` to process.\n * @param isClassBased `true` if `class` (`false` if `style`)\n */\nfunction collectStylingFromTAttrs(stylingKey, attrs, isClassBased) {\n    const desiredMarker = isClassBased ? 1 /* Classes */ : 2 /* Styles */;\n    let currentMarker = -1 /* ImplicitAttributes */;\n    if (attrs !== null) {\n        for (let i = 0; i < attrs.length; i++) {\n            const item = attrs[i];\n            if (typeof item === 'number') {\n                currentMarker = item;\n            }\n            else {\n                if (currentMarker === desiredMarker) {\n                    if (!Array.isArray(stylingKey)) {\n                        stylingKey = stylingKey === undefined ? [] : ['', stylingKey];\n                    }\n                    keyValueArraySet(stylingKey, item, isClassBased ? true : attrs[++i]);\n                }\n            }\n        }\n    }\n    return stylingKey === undefined ? null : stylingKey;\n}\n/**\n * Convert user input to `KeyValueArray`.\n *\n * This function takes user input which could be `string`, Object literal, or iterable and converts\n * it into a consistent representation. The output of this is `KeyValueArray` (which is an array\n * where\n * even indexes contain keys and odd indexes contain values for those keys).\n *\n * The advantage of converting to `KeyValueArray` is that we can perform diff in an input\n * independent\n * way.\n * (ie we can compare `foo bar` to `['bar', 'baz'] and determine a set of changes which need to be\n * applied)\n *\n * The fact that `KeyValueArray` is sorted is very important because it allows us to compute the\n * difference in linear fashion without the need to allocate any additional data.\n *\n * For example if we kept this as a `Map` we would have to iterate over previous `Map` to determine\n * which values need to be deleted, over the new `Map` to determine additions, and we would have to\n * keep additional `Map` to keep track of duplicates or items which have not yet been visited.\n *\n * @param keyValueArraySet (See `keyValueArraySet` in \"util/array_utils\") Gets passed in as a\n *        function so that `style` can be processed. This is done\n *        for tree shaking purposes.\n * @param stringParser The parser is passed in so that it will be tree shakable. See\n *        `styleStringParser` and `classStringParser`\n * @param value The value to parse/convert to `KeyValueArray`\n */\nfunction toStylingKeyValueArray(keyValueArraySet, stringParser, value) {\n    if (value == null /*|| value === undefined */ || value === '')\n        return EMPTY_ARRAY$3;\n    const styleKeyValueArray = [];\n    const unwrappedValue = unwrapSafeValue(value);\n    if (Array.isArray(unwrappedValue)) {\n        for (let i = 0; i < unwrappedValue.length; i++) {\n            keyValueArraySet(styleKeyValueArray, unwrappedValue[i], true);\n        }\n    }\n    else if (typeof unwrappedValue === 'object') {\n        for (const key in unwrappedValue) {\n            if (unwrappedValue.hasOwnProperty(key)) {\n                keyValueArraySet(styleKeyValueArray, key, unwrappedValue[key]);\n            }\n        }\n    }\n    else if (typeof unwrappedValue === 'string') {\n        stringParser(styleKeyValueArray, unwrappedValue);\n    }\n    else {\n        ngDevMode &&\n            throwError('Unsupported styling type ' + typeof unwrappedValue + ': ' + unwrappedValue);\n    }\n    return styleKeyValueArray;\n}\n/**\n * Set a `value` for a `key`.\n *\n * See: `keyValueArraySet` for details\n *\n * @param keyValueArray KeyValueArray to add to.\n * @param key Style key to add.\n * @param value The value to set.\n */\nfunction styleKeyValueArraySet(keyValueArray, key, value) {\n    keyValueArraySet(keyValueArray, key, unwrapSafeValue(value));\n}\n/**\n * Update map based styling.\n *\n * Map based styling could be anything which contains more than one binding. For example `string`,\n * or object literal. Dealing with all of these types would complicate the logic so\n * instead this function expects that the complex input is first converted into normalized\n * `KeyValueArray`. The advantage of normalization is that we get the values sorted, which makes it\n * very cheap to compute deltas between the previous and current value.\n *\n * @param tView Associated `TView.data` contains the linked list of binding priorities.\n * @param tNode `TNode` where the binding is located.\n * @param lView `LView` contains the values associated with other styling binding at this `TNode`.\n * @param renderer Renderer to use if any updates.\n * @param oldKeyValueArray Previous value represented as `KeyValueArray`\n * @param newKeyValueArray Current value represented as `KeyValueArray`\n * @param isClassBased `true` if `class` (`false` if `style`)\n * @param bindingIndex Binding index of the binding.\n */\nfunction updateStylingMap(tView, tNode, lView, renderer, oldKeyValueArray, newKeyValueArray, isClassBased, bindingIndex) {\n    if (oldKeyValueArray === NO_CHANGE) {\n        // On first execution the oldKeyValueArray is NO_CHANGE => treat it as empty KeyValueArray.\n        oldKeyValueArray = EMPTY_ARRAY$3;\n    }\n    let oldIndex = 0;\n    let newIndex = 0;\n    let oldKey = 0 < oldKeyValueArray.length ? oldKeyValueArray[0] : null;\n    let newKey = 0 < newKeyValueArray.length ? newKeyValueArray[0] : null;\n    while (oldKey !== null || newKey !== null) {\n        ngDevMode && assertLessThan(oldIndex, 999, 'Are we stuck in infinite loop?');\n        ngDevMode && assertLessThan(newIndex, 999, 'Are we stuck in infinite loop?');\n        const oldValue = oldIndex < oldKeyValueArray.length ? oldKeyValueArray[oldIndex + 1] : undefined;\n        const newValue = newIndex < newKeyValueArray.length ? newKeyValueArray[newIndex + 1] : undefined;\n        let setKey = null;\n        let setValue = undefined;\n        if (oldKey === newKey) {\n            // UPDATE: Keys are equal => new value is overwriting old value.\n            oldIndex += 2;\n            newIndex += 2;\n            if (oldValue !== newValue) {\n                setKey = newKey;\n                setValue = newValue;\n            }\n        }\n        else if (newKey === null || oldKey !== null && oldKey < newKey) {\n            // DELETE: oldKey key is missing or we did not find the oldKey in the newValue\n            // (because the keyValueArray is sorted and `newKey` is found later alphabetically).\n            // `\"background\" < \"color\"` so we need to delete `\"background\"` because it is not found in the\n            // new array.\n            oldIndex += 2;\n            setKey = oldKey;\n        }\n        else {\n            // CREATE: newKey's is earlier alphabetically than oldKey's (or no oldKey) => we have new key.\n            // `\"color\" > \"background\"` so we need to add `color` because it is in new array but not in\n            // old array.\n            ngDevMode && assertDefined(newKey, 'Expecting to have a valid key');\n            newIndex += 2;\n            setKey = newKey;\n            setValue = newValue;\n        }\n        if (setKey !== null) {\n            updateStyling(tView, tNode, lView, renderer, setKey, setValue, isClassBased, bindingIndex);\n        }\n        oldKey = oldIndex < oldKeyValueArray.length ? oldKeyValueArray[oldIndex] : null;\n        newKey = newIndex < newKeyValueArray.length ? newKeyValueArray[newIndex] : null;\n    }\n}\n/**\n * Update a simple (property name) styling.\n *\n * This function takes `prop` and updates the DOM to that value. The function takes the binding\n * value as well as binding priority into consideration to determine which value should be written\n * to DOM. (For example it may be determined that there is a higher priority overwrite which blocks\n * the DOM write, or if the value goes to `undefined` a lower priority overwrite may be consulted.)\n *\n * @param tView Associated `TView.data` contains the linked list of binding priorities.\n * @param tNode `TNode` where the binding is located.\n * @param lView `LView` contains the values associated with other styling binding at this `TNode`.\n * @param renderer Renderer to use if any updates.\n * @param prop Either style property name or a class name.\n * @param value Either style value for `prop` or `true`/`false` if `prop` is class.\n * @param isClassBased `true` if `class` (`false` if `style`)\n * @param bindingIndex Binding index of the binding.\n */\nfunction updateStyling(tView, tNode, lView, renderer, prop, value, isClassBased, bindingIndex) {\n    if (tNode.type !== 3 /* Element */) {\n        // It is possible to have styling on non-elements (such as ng-container).\n        // This is rare, but it does happen. In such a case, just ignore the binding.\n        return;\n    }\n    const tData = tView.data;\n    const tRange = tData[bindingIndex + 1];\n    const higherPriorityValue = getTStylingRangeNextDuplicate(tRange) ?\n        findStylingValue(tData, tNode, lView, prop, getTStylingRangeNext(tRange), isClassBased) :\n        undefined;\n    if (!isStylingValuePresent(higherPriorityValue)) {\n        // We don't have a next duplicate, or we did not find a duplicate value.\n        if (!isStylingValuePresent(value)) {\n            // We should delete current value or restore to lower priority value.\n            if (getTStylingRangePrevDuplicate(tRange)) {\n                // We have a possible prev duplicate, let's retrieve it.\n                value = findStylingValue(tData, null, lView, prop, bindingIndex, isClassBased);\n            }\n        }\n        const rNode = getNativeByIndex(getSelectedIndex(), lView);\n        applyStyling(renderer, isClassBased, rNode, prop, value);\n    }\n}\n/**\n * Search for styling value with higher priority which is overwriting current value, or a\n * value of lower priority to which we should fall back if the value is `undefined`.\n *\n * When value is being applied at a location, related values need to be consulted.\n * - If there is a higher priority binding, we should be using that one instead.\n *   For example `<div  [style]=\"{color:exp1}\" [style.color]=\"exp2\">` change to `exp1`\n *   requires that we check `exp2` to see if it is set to value other than `undefined`.\n * - If there is a lower priority binding and we are changing to `undefined`\n *   For example `<div  [style]=\"{color:exp1}\" [style.color]=\"exp2\">` change to `exp2` to\n *   `undefined` requires that we check `exp1` (and static values) and use that as new value.\n *\n * NOTE: The styling stores two values.\n * 1. The raw value which came from the application is stored at `index + 0` location. (This value\n *    is used for dirty checking).\n * 2. The normalized value is stored at `index + 1`.\n *\n * @param tData `TData` used for traversing the priority.\n * @param tNode `TNode` to use for resolving static styling. Also controls search direction.\n *   - `TNode` search next and quit as soon as `isStylingValuePresent(value)` is true.\n *      If no value found consult `tNode.residualStyle`/`tNode.residualClass` for default value.\n *   - `null` search prev and go all the way to end. Return last value where\n *     `isStylingValuePresent(value)` is true.\n * @param lView `LView` used for retrieving the actual values.\n * @param prop Property which we are interested in.\n * @param index Starting index in the linked list of styling bindings where the search should start.\n * @param isClassBased `true` if `class` (`false` if `style`)\n */\nfunction findStylingValue(tData, tNode, lView, prop, index, isClassBased) {\n    // `TNode` to use for resolving static styling. Also controls search direction.\n    //   - `TNode` search next and quit as soon as `isStylingValuePresent(value)` is true.\n    //      If no value found consult `tNode.residualStyle`/`tNode.residualClass` for default value.\n    //   - `null` search prev and go all the way to end. Return last value where\n    //     `isStylingValuePresent(value)` is true.\n    const isPrevDirection = tNode === null;\n    let value = undefined;\n    while (index > 0) {\n        const rawKey = tData[index];\n        const containsStatics = Array.isArray(rawKey);\n        // Unwrap the key if we contain static values.\n        const key = containsStatics ? rawKey[1] : rawKey;\n        const isStylingMap = key === null;\n        let valueAtLViewIndex = lView[index + 1];\n        if (valueAtLViewIndex === NO_CHANGE) {\n            // In firstUpdatePass the styling instructions create a linked list of styling.\n            // On subsequent passes it is possible for a styling instruction to try to read a binding\n            // which\n            // has not yet executed. In that case we will find `NO_CHANGE` and we should assume that\n            // we have `undefined` (or empty array in case of styling-map instruction) instead. This\n            // allows the resolution to apply the value (which may later be overwritten when the\n            // binding actually executes.)\n            valueAtLViewIndex = isStylingMap ? EMPTY_ARRAY$3 : undefined;\n        }\n        let currentValue = isStylingMap ? keyValueArrayGet(valueAtLViewIndex, prop) :\n            key === prop ? valueAtLViewIndex : undefined;\n        if (containsStatics && !isStylingValuePresent(currentValue)) {\n            currentValue = keyValueArrayGet(rawKey, prop);\n        }\n        if (isStylingValuePresent(currentValue)) {\n            value = currentValue;\n            if (isPrevDirection) {\n                return value;\n            }\n        }\n        const tRange = tData[index + 1];\n        index = isPrevDirection ? getTStylingRangePrev(tRange) : getTStylingRangeNext(tRange);\n    }\n    if (tNode !== null) {\n        // in case where we are going in next direction AND we did not find anything, we need to\n        // consult residual styling\n        let residual = isClassBased ? tNode.residualClasses : tNode.residualStyles;\n        if (residual != null /** OR residual !=== undefined */) {\n            value = keyValueArrayGet(residual, prop);\n        }\n    }\n    return value;\n}\n/**\n * Determines if the binding value should be used (or if the value is 'undefined' and hence priority\n * resolution should be used.)\n *\n * @param value Binding style value.\n */\nfunction isStylingValuePresent(value) {\n    // Currently only `undefined` value is considered non-binding. That is `undefined` says I don't\n    // have an opinion as to what this binding should be and you should consult other bindings by\n    // priority to determine the valid value.\n    // This is extracted into a single function so that we have a single place to control this.\n    return value !== undefined;\n}\n/**\n * Normalizes and/or adds a suffix to the value.\n *\n * If value is `null`/`undefined` no suffix is added\n * @param value\n * @param suffix\n */\nfunction normalizeSuffix(value, suffix) {\n    if (value == null /** || value === undefined */) {\n        // do nothing\n    }\n    else if (typeof suffix === 'string') {\n        value = value + suffix;\n    }\n    else if (typeof value === 'object') {\n        value = stringify(unwrapSafeValue(value));\n    }\n    return value;\n}\n/**\n * Tests if the `TNode` has input shadow.\n *\n * An input shadow is when a directive steals (shadows) the input by using `@Input('style')` or\n * `@Input('class')` as input.\n *\n * @param tNode `TNode` which we would like to see if it has shadow.\n * @param isClassBased `true` if `class` (`false` if `style`)\n */\nfunction hasStylingInputShadow(tNode, isClassBased) {\n    return (tNode.flags & (isClassBased ? 16 /* hasClassInput */ : 32 /* hasStyleInput */)) !== 0;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create static text node\n *\n * @param index Index of the node in the data array\n * @param value Static string value to write.\n *\n * @codeGenApi\n */\nfunction ɵɵtext(index, value = '') {\n    const lView = getLView();\n    const tView = getTView();\n    const adjustedIndex = index + HEADER_OFFSET;\n    ngDevMode &&\n        assertEqual(getBindingIndex(), tView.bindingStartIndex, 'text nodes should be created before any bindings');\n    ngDevMode && assertIndexInRange(lView, adjustedIndex);\n    const tNode = tView.firstCreatePass ?\n        getOrCreateTNode(tView, lView[T_HOST], index, 3 /* Element */, null, null) :\n        tView.data[adjustedIndex];\n    const textNative = lView[adjustedIndex] = createTextNode(value, lView[RENDERER]);\n    appendChild(tView, lView, textNative, tNode);\n    // Text nodes are self closing.\n    setPreviousOrParentTNode(tNode, false);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n *\n * Update text content with a lone bound value\n *\n * Used when a text node has 1 interpolated value in it, an no additional text\n * surrounds that interpolated value:\n *\n * ```html\n * <div>{{v0}}</div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵtextInterpolate(v0);\n * ```\n * @returns itself, so that it may be chained.\n * @see textInterpolateV\n * @codeGenApi\n */\nfunction ɵɵtextInterpolate(v0) {\n    ɵɵtextInterpolate1('', v0, '');\n    return ɵɵtextInterpolate;\n}\n/**\n *\n * Update text content with single bound value surrounded by other text.\n *\n * Used when a text node has 1 interpolated value in it:\n *\n * ```html\n * <div>prefix{{v0}}suffix</div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵtextInterpolate1('prefix', v0, 'suffix');\n * ```\n * @returns itself, so that it may be chained.\n * @see textInterpolateV\n * @codeGenApi\n */\nfunction ɵɵtextInterpolate1(prefix, v0, suffix) {\n    const lView = getLView();\n    const interpolated = interpolation1(lView, prefix, v0, suffix);\n    if (interpolated !== NO_CHANGE) {\n        textBindingInternal(lView, getSelectedIndex(), interpolated);\n    }\n    return ɵɵtextInterpolate1;\n}\n/**\n *\n * Update text content with 2 bound values surrounded by other text.\n *\n * Used when a text node has 2 interpolated values in it:\n *\n * ```html\n * <div>prefix{{v0}}-{{v1}}suffix</div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵtextInterpolate2('prefix', v0, '-', v1, 'suffix');\n * ```\n * @returns itself, so that it may be chained.\n * @see textInterpolateV\n * @codeGenApi\n */\nfunction ɵɵtextInterpolate2(prefix, v0, i0, v1, suffix) {\n    const lView = getLView();\n    const interpolated = interpolation2(lView, prefix, v0, i0, v1, suffix);\n    if (interpolated !== NO_CHANGE) {\n        textBindingInternal(lView, getSelectedIndex(), interpolated);\n    }\n    return ɵɵtextInterpolate2;\n}\n/**\n *\n * Update text content with 3 bound values surrounded by other text.\n *\n * Used when a text node has 3 interpolated values in it:\n *\n * ```html\n * <div>prefix{{v0}}-{{v1}}-{{v2}}suffix</div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵtextInterpolate3(\n * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n * ```\n * @returns itself, so that it may be chained.\n * @see textInterpolateV\n * @codeGenApi\n */\nfunction ɵɵtextInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n    const lView = getLView();\n    const interpolated = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n    if (interpolated !== NO_CHANGE) {\n        textBindingInternal(lView, getSelectedIndex(), interpolated);\n    }\n    return ɵɵtextInterpolate3;\n}\n/**\n *\n * Update text content with 4 bound values surrounded by other text.\n *\n * Used when a text node has 4 interpolated values in it:\n *\n * ```html\n * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix</div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵtextInterpolate4(\n * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n * ```\n * @returns itself, so that it may be chained.\n * @see ɵɵtextInterpolateV\n * @codeGenApi\n */\nfunction ɵɵtextInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n    const lView = getLView();\n    const interpolated = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n    if (interpolated !== NO_CHANGE) {\n        textBindingInternal(lView, getSelectedIndex(), interpolated);\n    }\n    return ɵɵtextInterpolate4;\n}\n/**\n *\n * Update text content with 5 bound values surrounded by other text.\n *\n * Used when a text node has 5 interpolated values in it:\n *\n * ```html\n * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix</div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵtextInterpolate5(\n * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n * ```\n * @returns itself, so that it may be chained.\n * @see textInterpolateV\n * @codeGenApi\n */\nfunction ɵɵtextInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n    const lView = getLView();\n    const interpolated = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n    if (interpolated !== NO_CHANGE) {\n        textBindingInternal(lView, getSelectedIndex(), interpolated);\n    }\n    return ɵɵtextInterpolate5;\n}\n/**\n *\n * Update text content with 6 bound values surrounded by other text.\n *\n * Used when a text node has 6 interpolated values in it:\n *\n * ```html\n * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix</div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵtextInterpolate6(\n *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n * ```\n *\n * @param i4 Static value used for concatenation only.\n * @param v5 Value checked for change. @returns itself, so that it may be chained.\n * @see textInterpolateV\n * @codeGenApi\n */\nfunction ɵɵtextInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n    const lView = getLView();\n    const interpolated = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n    if (interpolated !== NO_CHANGE) {\n        textBindingInternal(lView, getSelectedIndex(), interpolated);\n    }\n    return ɵɵtextInterpolate6;\n}\n/**\n *\n * Update text content with 7 bound values surrounded by other text.\n *\n * Used when a text node has 7 interpolated values in it:\n *\n * ```html\n * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix</div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵtextInterpolate7(\n *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n * ```\n * @returns itself, so that it may be chained.\n * @see textInterpolateV\n * @codeGenApi\n */\nfunction ɵɵtextInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n    const lView = getLView();\n    const interpolated = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n    if (interpolated !== NO_CHANGE) {\n        textBindingInternal(lView, getSelectedIndex(), interpolated);\n    }\n    return ɵɵtextInterpolate7;\n}\n/**\n *\n * Update text content with 8 bound values surrounded by other text.\n *\n * Used when a text node has 8 interpolated values in it:\n *\n * ```html\n * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix</div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵtextInterpolate8(\n *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n * ```\n * @returns itself, so that it may be chained.\n * @see textInterpolateV\n * @codeGenApi\n */\nfunction ɵɵtextInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n    const lView = getLView();\n    const interpolated = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n    if (interpolated !== NO_CHANGE) {\n        textBindingInternal(lView, getSelectedIndex(), interpolated);\n    }\n    return ɵɵtextInterpolate8;\n}\n/**\n * Update text content with 9 or more bound values other surrounded by text.\n *\n * Used when the number of interpolated values exceeds 8.\n *\n * ```html\n * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix</div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵtextInterpolateV(\n *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n *  'suffix']);\n * ```\n *.\n * @param values The collection of values and the strings in between those values, beginning with\n * a string prefix and ending with a string suffix.\n * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n *\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ɵɵtextInterpolateV(values) {\n    const lView = getLView();\n    const interpolated = interpolationV(lView, values);\n    if (interpolated !== NO_CHANGE) {\n        textBindingInternal(lView, getSelectedIndex(), interpolated);\n    }\n    return ɵɵtextInterpolateV;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n *\n * Update an interpolated class on an element with single bound value surrounded by text.\n *\n * Used when the value passed to a property has 1 interpolated value in it:\n *\n * ```html\n * <div class=\"prefix{{v0}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵclassMapInterpolate1('prefix', v0, 'suffix');\n * ```\n *\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @codeGenApi\n */\nfunction ɵɵclassMapInterpolate1(prefix, v0, suffix) {\n    const lView = getLView();\n    const interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n    checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);\n}\n/**\n *\n * Update an interpolated class on an element with 2 bound values surrounded by text.\n *\n * Used when the value passed to a property has 2 interpolated values in it:\n *\n * ```html\n * <div class=\"prefix{{v0}}-{{v1}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵclassMapInterpolate2('prefix', v0, '-', v1, 'suffix');\n * ```\n *\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @codeGenApi\n */\nfunction ɵɵclassMapInterpolate2(prefix, v0, i0, v1, suffix) {\n    const lView = getLView();\n    const interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n    checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);\n}\n/**\n *\n * Update an interpolated class on an element with 3 bound values surrounded by text.\n *\n * Used when the value passed to a property has 3 interpolated values in it:\n *\n * ```html\n * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵclassMapInterpolate3(\n * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n * ```\n *\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @codeGenApi\n */\nfunction ɵɵclassMapInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n    const lView = getLView();\n    const interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n    checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);\n}\n/**\n *\n * Update an interpolated class on an element with 4 bound values surrounded by text.\n *\n * Used when the value passed to a property has 4 interpolated values in it:\n *\n * ```html\n * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵclassMapInterpolate4(\n * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n * ```\n *\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @codeGenApi\n */\nfunction ɵɵclassMapInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n    const lView = getLView();\n    const interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n    checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);\n}\n/**\n *\n * Update an interpolated class on an element with 5 bound values surrounded by text.\n *\n * Used when the value passed to a property has 5 interpolated values in it:\n *\n * ```html\n * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵclassMapInterpolate5(\n * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n * ```\n *\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @codeGenApi\n */\nfunction ɵɵclassMapInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n    const lView = getLView();\n    const interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n    checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);\n}\n/**\n *\n * Update an interpolated class on an element with 6 bound values surrounded by text.\n *\n * Used when the value passed to a property has 6 interpolated values in it:\n *\n * ```html\n * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵclassMapInterpolate6(\n *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n * ```\n *\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param i4 Static value used for concatenation only.\n * @param v5 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @codeGenApi\n */\nfunction ɵɵclassMapInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n    const lView = getLView();\n    const interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n    checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);\n}\n/**\n *\n * Update an interpolated class on an element with 7 bound values surrounded by text.\n *\n * Used when the value passed to a property has 7 interpolated values in it:\n *\n * ```html\n * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵclassMapInterpolate7(\n *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n * ```\n *\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param i4 Static value used for concatenation only.\n * @param v5 Value checked for change.\n * @param i5 Static value used for concatenation only.\n * @param v6 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @codeGenApi\n */\nfunction ɵɵclassMapInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n    const lView = getLView();\n    const interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n    checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);\n}\n/**\n *\n * Update an interpolated class on an element with 8 bound values surrounded by text.\n *\n * Used when the value passed to a property has 8 interpolated values in it:\n *\n * ```html\n * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵclassMapInterpolate8(\n *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n * ```\n *\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param i4 Static value used for concatenation only.\n * @param v5 Value checked for change.\n * @param i5 Static value used for concatenation only.\n * @param v6 Value checked for change.\n * @param i6 Static value used for concatenation only.\n * @param v7 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @codeGenApi\n */\nfunction ɵɵclassMapInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n    const lView = getLView();\n    const interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n    checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);\n}\n/**\n * Update an interpolated class on an element with 9 or more bound values surrounded by text.\n *\n * Used when the number of interpolated values exceeds 8.\n *\n * ```html\n * <div\n *  class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵclassMapInterpolateV(\n *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n *  'suffix']);\n * ```\n *.\n * @param values The collection of values and the strings in-between those values, beginning with\n * a string prefix and ending with a string suffix.\n * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n * @codeGenApi\n */\nfunction ɵɵclassMapInterpolateV(values) {\n    const lView = getLView();\n    const interpolatedValue = interpolationV(lView, values);\n    checkStylingMap(keyValueArraySet, classStringParser, interpolatedValue, true);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n *\n * Update an interpolated style on an element with single bound value surrounded by text.\n *\n * Used when the value passed to a property has 1 interpolated value in it:\n *\n * ```html\n * <div style=\"key: {{v0}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵstyleMapInterpolate1('key: ', v0, 'suffix');\n * ```\n *\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @codeGenApi\n */\nfunction ɵɵstyleMapInterpolate1(prefix, v0, suffix) {\n    const lView = getLView();\n    const interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n    ɵɵstyleMap(interpolatedValue);\n}\n/**\n *\n * Update an interpolated style on an element with 2 bound values surrounded by text.\n *\n * Used when the value passed to a property has 2 interpolated values in it:\n *\n * ```html\n * <div style=\"key: {{v0}}; key1: {{v1}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵstyleMapInterpolate2('key: ', v0, '; key1: ', v1, 'suffix');\n * ```\n *\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @codeGenApi\n */\nfunction ɵɵstyleMapInterpolate2(prefix, v0, i0, v1, suffix) {\n    const lView = getLView();\n    const interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n    ɵɵstyleMap(interpolatedValue);\n}\n/**\n *\n * Update an interpolated style on an element with 3 bound values surrounded by text.\n *\n * Used when the value passed to a property has 3 interpolated values in it:\n *\n * ```html\n * <div style=\"key: {{v0}}; key2: {{v1}}; key2: {{v2}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵstyleMapInterpolate3(\n *     'key: ', v0, '; key1: ', v1, '; key2: ', v2, 'suffix');\n * ```\n *\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @codeGenApi\n */\nfunction ɵɵstyleMapInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n    const lView = getLView();\n    const interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n    ɵɵstyleMap(interpolatedValue);\n}\n/**\n *\n * Update an interpolated style on an element with 4 bound values surrounded by text.\n *\n * Used when the value passed to a property has 4 interpolated values in it:\n *\n * ```html\n * <div style=\"key: {{v0}}; key1: {{v1}}; key2: {{v2}}; key3: {{v3}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵstyleMapInterpolate4(\n *     'key: ', v0, '; key1: ', v1, '; key2: ', v2, '; key3: ', v3, 'suffix');\n * ```\n *\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @codeGenApi\n */\nfunction ɵɵstyleMapInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n    const lView = getLView();\n    const interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n    ɵɵstyleMap(interpolatedValue);\n}\n/**\n *\n * Update an interpolated style on an element with 5 bound values surrounded by text.\n *\n * Used when the value passed to a property has 5 interpolated values in it:\n *\n * ```html\n * <div style=\"key: {{v0}}; key1: {{v1}}; key2: {{v2}}; key3: {{v3}}; key4: {{v4}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵstyleMapInterpolate5(\n *     'key: ', v0, '; key1: ', v1, '; key2: ', v2, '; key3: ', v3, '; key4: ', v4, 'suffix');\n * ```\n *\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @codeGenApi\n */\nfunction ɵɵstyleMapInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n    const lView = getLView();\n    const interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n    ɵɵstyleMap(interpolatedValue);\n}\n/**\n *\n * Update an interpolated style on an element with 6 bound values surrounded by text.\n *\n * Used when the value passed to a property has 6 interpolated values in it:\n *\n * ```html\n * <div style=\"key: {{v0}}; key1: {{v1}}; key2: {{v2}}; key3: {{v3}}; key4: {{v4}};\n *             key5: {{v5}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵstyleMapInterpolate6(\n *    'key: ', v0, '; key1: ', v1, '; key2: ', v2, '; key3: ', v3, '; key4: ', v4, '; key5: ', v5,\n *    'suffix');\n * ```\n *\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param i4 Static value used for concatenation only.\n * @param v5 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @codeGenApi\n */\nfunction ɵɵstyleMapInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n    const lView = getLView();\n    const interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n    ɵɵstyleMap(interpolatedValue);\n}\n/**\n *\n * Update an interpolated style on an element with 7 bound values surrounded by text.\n *\n * Used when the value passed to a property has 7 interpolated values in it:\n *\n * ```html\n * <div style=\"key: {{v0}}; key1: {{v1}}; key2: {{v2}}; key3: {{v3}}; key4: {{v4}}; key5: {{v5}};\n *             key6: {{v6}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵstyleMapInterpolate7(\n *    'key: ', v0, '; key1: ', v1, '; key2: ', v2, '; key3: ', v3, '; key4: ', v4, '; key5: ', v5,\n *    '; key6: ', v6, 'suffix');\n * ```\n *\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param i4 Static value used for concatenation only.\n * @param v5 Value checked for change.\n * @param i5 Static value used for concatenation only.\n * @param v6 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @codeGenApi\n */\nfunction ɵɵstyleMapInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n    const lView = getLView();\n    const interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n    ɵɵstyleMap(interpolatedValue);\n}\n/**\n *\n * Update an interpolated style on an element with 8 bound values surrounded by text.\n *\n * Used when the value passed to a property has 8 interpolated values in it:\n *\n * ```html\n * <div style=\"key: {{v0}}; key1: {{v1}}; key2: {{v2}}; key3: {{v3}}; key4: {{v4}}; key5: {{v5}};\n *             key6: {{v6}}; key7: {{v7}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵstyleMapInterpolate8(\n *    'key: ', v0, '; key1: ', v1, '; key2: ', v2, '; key3: ', v3, '; key4: ', v4, '; key5: ', v5,\n *    '; key6: ', v6, '; key7: ', v7, 'suffix');\n * ```\n *\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param i4 Static value used for concatenation only.\n * @param v5 Value checked for change.\n * @param i5 Static value used for concatenation only.\n * @param v6 Value checked for change.\n * @param i6 Static value used for concatenation only.\n * @param v7 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @codeGenApi\n */\nfunction ɵɵstyleMapInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n    const lView = getLView();\n    const interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n    ɵɵstyleMap(interpolatedValue);\n}\n/**\n * Update an interpolated style on an element with 9 or more bound values surrounded by text.\n *\n * Used when the number of interpolated values exceeds 8.\n *\n * ```html\n * <div\n *  class=\"key: {{v0}}; key1: {{v1}}; key2: {{v2}}; key3: {{v3}}; key4: {{v4}}; key5: {{v5}};\n *         key6: {{v6}}; key7: {{v7}}; key8: {{v8}}; key9: {{v9}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵstyleMapInterpolateV(\n *    ['key: ', v0, '; key1: ', v1, '; key2: ', v2, '; key3: ', v3, '; key4: ', v4, '; key5: ', v5,\n *     '; key6: ', v6, '; key7: ', v7, '; key8: ', v8, '; key9: ', v9, 'suffix']);\n * ```\n *.\n * @param values The collection of values and the strings in-between those values, beginning with\n * a string prefix and ending with a string suffix.\n * (e.g. `['prefix', value0, '; key2: ', value1, '; key2: ', value2, ..., value99, 'suffix']`)\n * @codeGenApi\n */\nfunction ɵɵstyleMapInterpolateV(values) {\n    const lView = getLView();\n    const interpolatedValue = interpolationV(lView, values);\n    ɵɵstyleMap(interpolatedValue);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n *\n * Update an interpolated style property on an element with single bound value surrounded by text.\n *\n * Used when the value passed to a property has 1 interpolated value in it:\n *\n * ```html\n * <div style.color=\"prefix{{v0}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵstylePropInterpolate1(0, 'prefix', v0, 'suffix');\n * ```\n *\n * @param styleIndex Index of style to update. This index value refers to the\n *        index of the style in the style bindings array that was passed into\n *        `styling`.\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ɵɵstylePropInterpolate1(prop, prefix, v0, suffix, valueSuffix) {\n    const lView = getLView();\n    const interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n    checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n    return ɵɵstylePropInterpolate1;\n}\n/**\n *\n * Update an interpolated style property on an element with 2 bound values surrounded by text.\n *\n * Used when the value passed to a property has 2 interpolated values in it:\n *\n * ```html\n * <div style.color=\"prefix{{v0}}-{{v1}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵstylePropInterpolate2(0, 'prefix', v0, '-', v1, 'suffix');\n * ```\n *\n * @param styleIndex Index of style to update. This index value refers to the\n *        index of the style in the style bindings array that was passed into\n *        `styling`.\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ɵɵstylePropInterpolate2(prop, prefix, v0, i0, v1, suffix, valueSuffix) {\n    const lView = getLView();\n    const interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n    checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n    return ɵɵstylePropInterpolate2;\n}\n/**\n *\n * Update an interpolated style property on an element with 3 bound values surrounded by text.\n *\n * Used when the value passed to a property has 3 interpolated values in it:\n *\n * ```html\n * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵstylePropInterpolate3(0, 'prefix', v0, '-', v1, '-', v2, 'suffix');\n * ```\n *\n * @param styleIndex Index of style to update. This index value refers to the\n *        index of the style in the style bindings array that was passed into\n *        `styling`.\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ɵɵstylePropInterpolate3(prop, prefix, v0, i0, v1, i1, v2, suffix, valueSuffix) {\n    const lView = getLView();\n    const interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n    checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n    return ɵɵstylePropInterpolate3;\n}\n/**\n *\n * Update an interpolated style property on an element with 4 bound values surrounded by text.\n *\n * Used when the value passed to a property has 4 interpolated values in it:\n *\n * ```html\n * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵstylePropInterpolate4(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n * ```\n *\n * @param styleIndex Index of style to update. This index value refers to the\n *        index of the style in the style bindings array that was passed into\n *        `styling`.\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ɵɵstylePropInterpolate4(prop, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, valueSuffix) {\n    const lView = getLView();\n    const interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n    checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n    return ɵɵstylePropInterpolate4;\n}\n/**\n *\n * Update an interpolated style property on an element with 5 bound values surrounded by text.\n *\n * Used when the value passed to a property has 5 interpolated values in it:\n *\n * ```html\n * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵstylePropInterpolate5(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n * ```\n *\n * @param styleIndex Index of style to update. This index value refers to the\n *        index of the style in the style bindings array that was passed into\n *        `styling`.\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ɵɵstylePropInterpolate5(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, valueSuffix) {\n    const lView = getLView();\n    const interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n    checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n    return ɵɵstylePropInterpolate5;\n}\n/**\n *\n * Update an interpolated style property on an element with 6 bound values surrounded by text.\n *\n * Used when the value passed to a property has 6 interpolated values in it:\n *\n * ```html\n * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵstylePropInterpolate6(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n * ```\n *\n * @param styleIndex Index of style to update. This index value refers to the\n *        index of the style in the style bindings array that was passed into\n *        `styling`.\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param i4 Static value used for concatenation only.\n * @param v5 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ɵɵstylePropInterpolate6(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, valueSuffix) {\n    const lView = getLView();\n    const interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n    checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n    return ɵɵstylePropInterpolate6;\n}\n/**\n *\n * Update an interpolated style property on an element with 7 bound values surrounded by text.\n *\n * Used when the value passed to a property has 7 interpolated values in it:\n *\n * ```html\n * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵstylePropInterpolate7(\n *    0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n * ```\n *\n * @param styleIndex Index of style to update. This index value refers to the\n *        index of the style in the style bindings array that was passed into\n *        `styling`.\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param i4 Static value used for concatenation only.\n * @param v5 Value checked for change.\n * @param i5 Static value used for concatenation only.\n * @param v6 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ɵɵstylePropInterpolate7(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, valueSuffix) {\n    const lView = getLView();\n    const interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n    checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n    return ɵɵstylePropInterpolate7;\n}\n/**\n *\n * Update an interpolated style property on an element with 8 bound values surrounded by text.\n *\n * Used when the value passed to a property has 8 interpolated values in it:\n *\n * ```html\n * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵstylePropInterpolate8(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6,\n * '-', v7, 'suffix');\n * ```\n *\n * @param styleIndex Index of style to update. This index value refers to the\n *        index of the style in the style bindings array that was passed into\n *        `styling`.\n * @param prefix Static value used for concatenation only.\n * @param v0 Value checked for change.\n * @param i0 Static value used for concatenation only.\n * @param v1 Value checked for change.\n * @param i1 Static value used for concatenation only.\n * @param v2 Value checked for change.\n * @param i2 Static value used for concatenation only.\n * @param v3 Value checked for change.\n * @param i3 Static value used for concatenation only.\n * @param v4 Value checked for change.\n * @param i4 Static value used for concatenation only.\n * @param v5 Value checked for change.\n * @param i5 Static value used for concatenation only.\n * @param v6 Value checked for change.\n * @param i6 Static value used for concatenation only.\n * @param v7 Value checked for change.\n * @param suffix Static value used for concatenation only.\n * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ɵɵstylePropInterpolate8(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, valueSuffix) {\n    const lView = getLView();\n    const interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n    checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n    return ɵɵstylePropInterpolate8;\n}\n/**\n * Update an interpolated style property on an element with 9 or more bound values surrounded by\n * text.\n *\n * Used when the number of interpolated values exceeds 8.\n *\n * ```html\n * <div\n *  style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\">\n * </div>\n * ```\n *\n * Its compiled representation is:\n *\n * ```ts\n * ɵɵstylePropInterpolateV(\n *  0, ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n *  'suffix']);\n * ```\n *\n * @param styleIndex Index of style to update. This index value refers to the\n *        index of the style in the style bindings array that was passed into\n *        `styling`..\n * @param values The collection of values and the strings in-between those values, beginning with\n * a string prefix and ending with a string suffix.\n * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n * @returns itself, so that it may be chained.\n * @codeGenApi\n */\nfunction ɵɵstylePropInterpolateV(prop, values, valueSuffix) {\n    const lView = getLView();\n    const interpolatedValue = interpolationV(lView, values);\n    checkStylingProperty(prop, interpolatedValue, valueSuffix, false);\n    return ɵɵstylePropInterpolateV;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Update a property on a host element. Only applies to native node properties, not inputs.\n *\n * Operates on the element selected by index via the {@link select} instruction.\n *\n * @param propName Name of property. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param value New value to write.\n * @param sanitizer An optional function used to sanitize the value.\n * @returns This function returns itself so that it may be chained\n * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n *\n * @codeGenApi\n */\nfunction ɵɵhostProperty(propName, value, sanitizer) {\n    const lView = getLView();\n    const bindingIndex = nextBindingIndex();\n    if (bindingUpdated(lView, bindingIndex, value)) {\n        const tView = getTView();\n        const tNode = getSelectedTNode();\n        elementPropertyInternal(tView, tNode, lView, propName, value, lView[RENDERER], sanitizer, true);\n        ngDevMode && storePropertyBindingMetadata(tView.data, tNode, propName, bindingIndex);\n    }\n    return ɵɵhostProperty;\n}\n/**\n * Updates a synthetic host binding (e.g. `[@foo]`) on a component or directive.\n *\n * This instruction is for compatibility purposes and is designed to ensure that a\n * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n * the component's renderer. Normally all host bindings are evaluated with the parent\n * component's renderer, but, in the case of animation @triggers, they need to be\n * evaluated with the sub component's renderer (because that's where the animation\n * triggers are defined).\n *\n * Do not use this instruction as a replacement for `elementProperty`. This instruction\n * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n *\n * @param index The index of the element to update in the data array\n * @param propName Name of property. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param value New value to write.\n * @param sanitizer An optional function used to sanitize the value.\n *\n * @codeGenApi\n */\nfunction ɵɵsyntheticHostProperty(propName, value, sanitizer) {\n    const lView = getLView();\n    const bindingIndex = nextBindingIndex();\n    if (bindingUpdated(lView, bindingIndex, value)) {\n        const tView = getTView();\n        const tNode = getSelectedTNode();\n        const currentDef = getCurrentDirectiveDef(tView.data);\n        const renderer = loadComponentRenderer(currentDef, tNode, lView);\n        elementPropertyInternal(tView, tNode, lView, propName, value, renderer, sanitizer, true);\n        ngDevMode && storePropertyBindingMetadata(tView.data, tNode, propName, bindingIndex);\n    }\n    return ɵɵsyntheticHostProperty;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Retrieves the component instance associated with a given DOM element.\n *\n * @usageNotes\n * Given the following DOM structure:\n * ```html\n * <my-app>\n *   <div>\n *     <child-comp></child-comp>\n *   </div>\n * </my-app>\n * ```\n * Calling `getComponent` on `<child-comp>` will return the instance of `ChildComponent`\n * associated with this DOM element.\n *\n * Calling the function on `<my-app>` will return the `MyApp` instance.\n *\n *\n * @param element DOM element from which the component should be retrieved.\n * @returns Component instance associated with the element or `null` if there\n *    is no component associated with it.\n *\n * @publicApi\n * @globalApi ng\n */\nfunction getComponent(element) {\n    assertDomElement(element);\n    const context = loadLContext(element, false);\n    if (context === null)\n        return null;\n    if (context.component === undefined) {\n        context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n    }\n    return context.component;\n}\n/**\n * If inside an embedded view (e.g. `*ngIf` or `*ngFor`), retrieves the context of the embedded\n * view that the element is part of. Otherwise retrieves the instance of the component whose view\n * owns the element (in this case, the result is the same as calling `getOwningComponent`).\n *\n * @param element Element for which to get the surrounding component instance.\n * @returns Instance of the component that is around the element or null if the element isn't\n *    inside any component.\n *\n * @publicApi\n * @globalApi ng\n */\nfunction getContext(element) {\n    assertDomElement(element);\n    const context = loadLContext(element, false);\n    return context === null ? null : context.lView[CONTEXT];\n}\n/**\n * Retrieves the component instance whose view contains the DOM element.\n *\n * For example, if `<child-comp>` is used in the template of `<app-comp>`\n * (i.e. a `ViewChild` of `<app-comp>`), calling `getOwningComponent` on `<child-comp>`\n * would return `<app-comp>`.\n *\n * @param elementOrDir DOM element, component or directive instance\n *    for which to retrieve the root components.\n * @returns Component instance whose view owns the DOM element or null if the element is not\n *    part of a component view.\n *\n * @publicApi\n * @globalApi ng\n */\nfunction getOwningComponent(elementOrDir) {\n    const context = loadLContext(elementOrDir, false);\n    if (context === null)\n        return null;\n    let lView = context.lView;\n    let parent;\n    ngDevMode && assertLView(lView);\n    while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n        // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n        lView = parent;\n    }\n    return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n}\n/**\n * Retrieves all root components associated with a DOM element, directive or component instance.\n * Root components are those which have been bootstrapped by Angular.\n *\n * @param elementOrDir DOM element, component or directive instance\n *    for which to retrieve the root components.\n * @returns Root components associated with the target object.\n *\n * @publicApi\n * @globalApi ng\n */\nfunction getRootComponents(elementOrDir) {\n    return [...getRootContext(elementOrDir).components];\n}\n/**\n * Retrieves an `Injector` associated with an element, component or directive instance.\n *\n * @param elementOrDir DOM element, component or directive instance for which to\n *    retrieve the injector.\n * @returns Injector associated with the element, component or directive instance.\n *\n * @publicApi\n * @globalApi ng\n */\nfunction getInjector(elementOrDir) {\n    const context = loadLContext(elementOrDir, false);\n    if (context === null)\n        return Injector.NULL;\n    const tNode = context.lView[TVIEW].data[context.nodeIndex];\n    return new NodeInjector(tNode, context.lView);\n}\n/**\n * Retrieve a set of injection tokens at a given DOM node.\n *\n * @param element Element for which the injection tokens should be retrieved.\n */\nfunction getInjectionTokens(element) {\n    const context = loadLContext(element, false);\n    if (context === null)\n        return [];\n    const lView = context.lView;\n    const tView = lView[TVIEW];\n    const tNode = tView.data[context.nodeIndex];\n    const providerTokens = [];\n    const startIndex = tNode.providerIndexes & 1048575 /* ProvidersStartIndexMask */;\n    const endIndex = tNode.directiveEnd;\n    for (let i = startIndex; i < endIndex; i++) {\n        let value = tView.data[i];\n        if (isDirectiveDefHack(value)) {\n            // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n            // design flaw.  We should always store same type so that we can be monomorphic. The issue\n            // is that for Components/Directives we store the def instead the type. The correct behavior\n            // is that we should always be storing injectable type in this location.\n            value = value.type;\n        }\n        providerTokens.push(value);\n    }\n    return providerTokens;\n}\n/**\n * Retrieves directive instances associated with a given DOM element. Does not include\n * component instances.\n *\n * @usageNotes\n * Given the following DOM structure:\n * ```\n * <my-app>\n *   <button my-button></button>\n *   <my-comp></my-comp>\n * </my-app>\n * ```\n * Calling `getDirectives` on `<button>` will return an array with an instance of the `MyButton`\n * directive that is associated with the DOM element.\n *\n * Calling `getDirectives` on `<my-comp>` will return an empty array.\n *\n * @param element DOM element for which to get the directives.\n * @returns Array of directives associated with the element.\n *\n * @publicApi\n * @globalApi ng\n */\nfunction getDirectives(element) {\n    const context = loadLContext(element);\n    if (context.directives === undefined) {\n        context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n    }\n    // The `directives` in this case are a named array called `LComponentView`. Clone the\n    // result so we don't expose an internal data structure in the user's console.\n    return context.directives === null ? [] : [...context.directives];\n}\nfunction loadLContext(target, throwOnNotFound = true) {\n    const context = getLContext(target);\n    if (!context && throwOnNotFound) {\n        throw new Error(ngDevMode ? `Unable to find context associated with ${stringifyForError(target)}` :\n            'Invalid ng target');\n    }\n    return context;\n}\n/**\n * Retrieve map of local references.\n *\n * The references are retrieved as a map of local reference name to element or directive instance.\n *\n * @param target DOM element, component or directive instance for which to retrieve\n *    the local references.\n */\nfunction getLocalRefs(target) {\n    const context = loadLContext(target, false);\n    if (context === null)\n        return {};\n    if (context.localRefs === undefined) {\n        context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n    }\n    return context.localRefs || {};\n}\n/**\n * Retrieves the host element of a component or directive instance.\n * The host element is the DOM element that matched the selector of the directive.\n *\n * @param componentOrDirective Component or directive instance for which the host\n *     element should be retrieved.\n * @returns Host element of the target.\n *\n * @publicApi\n * @globalApi ng\n */\nfunction getHostElement(componentOrDirective) {\n    return getLContext(componentOrDirective).native;\n}\n/**\n * Retrieves the rendered text for a given component.\n *\n * This function retrieves the host element of a component and\n * and then returns the `textContent` for that element. This implies\n * that the text returned will include re-projected content of\n * the component as well.\n *\n * @param component The component to return the content text for.\n */\nfunction getRenderedText(component) {\n    const hostElement = getHostElement(component);\n    return hostElement.textContent || '';\n}\nfunction loadLContextFromNode(node) {\n    if (!(node instanceof Node))\n        throw new Error('Expecting instance of DOM Element');\n    return loadLContext(node);\n}\n/**\n * Retrieves a list of event listeners associated with a DOM element. The list does include host\n * listeners, but it does not include event listeners defined outside of the Angular context\n * (e.g. through `addEventListener`).\n *\n * @usageNotes\n * Given the following DOM structure:\n * ```\n * <my-app>\n *   <div (click)=\"doSomething()\"></div>\n * </my-app>\n *\n * ```\n * Calling `getListeners` on `<div>` will return an object that looks as follows:\n * ```\n * {\n *   name: 'click',\n *   element: <div>,\n *   callback: () => doSomething(),\n *   useCapture: false\n * }\n * ```\n *\n * @param element Element for which the DOM listeners should be retrieved.\n * @returns Array of event listeners on the DOM element.\n *\n * @publicApi\n * @globalApi ng\n */\nfunction getListeners(element) {\n    assertDomElement(element);\n    const lContext = loadLContext(element, false);\n    if (lContext === null)\n        return [];\n    const lView = lContext.lView;\n    const tView = lView[TVIEW];\n    const lCleanup = lView[CLEANUP];\n    const tCleanup = tView.cleanup;\n    const listeners = [];\n    if (tCleanup && lCleanup) {\n        for (let i = 0; i < tCleanup.length;) {\n            const firstParam = tCleanup[i++];\n            const secondParam = tCleanup[i++];\n            if (typeof firstParam === 'string') {\n                const name = firstParam;\n                const listenerElement = unwrapRNode(lView[secondParam]);\n                const callback = lCleanup[tCleanup[i++]];\n                const useCaptureOrIndx = tCleanup[i++];\n                // if useCaptureOrIndx is boolean then report it as is.\n                // if useCaptureOrIndx is positive number then it in unsubscribe method\n                // if useCaptureOrIndx is negative number then it is a Subscription\n                const type = (typeof useCaptureOrIndx === 'boolean' || useCaptureOrIndx >= 0) ? 'dom' : 'output';\n                const useCapture = typeof useCaptureOrIndx === 'boolean' ? useCaptureOrIndx : false;\n                if (element == listenerElement) {\n                    listeners.push({ element, name, callback, useCapture, type });\n                }\n            }\n        }\n    }\n    listeners.sort(sortListeners);\n    return listeners;\n}\nfunction sortListeners(a, b) {\n    if (a.name == b.name)\n        return 0;\n    return a.name < b.name ? -1 : 1;\n}\n/**\n * This function should not exist because it is megamorphic and only mostly correct.\n *\n * See call site for more info.\n */\nfunction isDirectiveDefHack(obj) {\n    return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n}\n/**\n * Returns the attached `DebugNode` instance for an element in the DOM.\n *\n * @param element DOM element which is owned by an existing component's view.\n */\nfunction getDebugNode(element) {\n    let debugNode = null;\n    const lContext = loadLContextFromNode(element);\n    const lView = lContext.lView;\n    const nodeIndex = lContext.nodeIndex;\n    if (nodeIndex !== -1) {\n        const valueInLView = lView[nodeIndex];\n        // this means that value in the lView is a component with its own\n        // data. In this situation the TNode is not accessed at the same spot.\n        const tNode = isLView(valueInLView) ? valueInLView[T_HOST] :\n            getTNode(lView[TVIEW], nodeIndex - HEADER_OFFSET);\n        debugNode = buildDebugNode(tNode, lView, nodeIndex);\n    }\n    return debugNode;\n}\n/**\n * Retrieve the component `LView` from component/element.\n *\n * NOTE: `LView` is a private and should not be leaked outside.\n *       Don't export this method to `ng.*` on window.\n *\n * @param target DOM element or component instance for which to retrieve the LView.\n */\nfunction getComponentLView(target) {\n    const lContext = loadLContext(target);\n    const nodeIndx = lContext.nodeIndex;\n    const lView = lContext.lView;\n    const componentLView = lView[nodeIndx];\n    ngDevMode && assertLView(componentLView);\n    return componentLView;\n}\n/** Asserts that a value is a DOM Element. */\nfunction assertDomElement(value) {\n    if (typeof Element !== 'undefined' && !(value instanceof Element)) {\n        throw new Error('Expecting instance of DOM Element');\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Marks a component for check (in case of OnPush components) and synchronously\n * performs change detection on the application this component belongs to.\n *\n * @param component Component to {@link ChangeDetectorRef#markForCheck mark for check}.\n *\n * @publicApi\n * @globalApi ng\n */\nfunction applyChanges(component) {\n    markDirty(component);\n    getRootComponents(component).forEach(rootComponent => detectChanges(rootComponent));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This file introduces series of globally accessible debug tools\n * to allow for the Angular debugging story to function.\n *\n * To see this in action run the following command:\n *\n *   bazel run --config=ivy\n *   //packages/core/test/bundling/todo:devserver\n *\n *  Then load `localhost:5432` and start using the console tools.\n */\n/**\n * This value reflects the property on the window where the dev\n * tools are patched (window.ng).\n * */\nconst GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\nlet _published = false;\n/**\n * Publishes a collection of default debug tools onto`window.ng`.\n *\n * These functions are available globally when Angular is in development\n * mode and are automatically stripped away from prod mode is on.\n */\nfunction publishDefaultGlobalUtils() {\n    if (!_published) {\n        _published = true;\n        publishGlobalUtil('getComponent', getComponent);\n        publishGlobalUtil('getContext', getContext);\n        publishGlobalUtil('getListeners', getListeners);\n        publishGlobalUtil('getOwningComponent', getOwningComponent);\n        publishGlobalUtil('getHostElement', getHostElement);\n        publishGlobalUtil('getInjector', getInjector);\n        publishGlobalUtil('getRootComponents', getRootComponents);\n        publishGlobalUtil('getDirectives', getDirectives);\n        publishGlobalUtil('applyChanges', applyChanges);\n    }\n}\n/**\n * Publishes the given function to `window.ng` so that it can be\n * used from the browser console when an application is not in production.\n */\nfunction publishGlobalUtil(name, fn) {\n    if (typeof COMPILED === 'undefined' || !COMPILED) {\n        // Note: we can't export `ng` when using closure enhanced optimization as:\n        // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n        // - we can't declare a closure extern as the namespace `ng` is already used within Google\n        //   for typings for AngularJS (via `goog.provide('ng....')`).\n        const w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            let container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ɵ0$b = (token, notFoundValue) => {\n    throw new Error('NullInjector: Not found: ' + stringifyForError(token));\n};\n// TODO: A hack to not pull in the NullInjector from @angular/core.\nconst NULL_INJECTOR$1 = {\n    get: ɵ0$b\n};\n/**\n * Bootstraps a Component into an existing host element and returns an instance\n * of the component.\n *\n * Use this function to bootstrap a component into the DOM tree. Each invocation\n * of this function will create a separate tree of components, injectors and\n * change detection cycles and lifetimes. To dynamically insert a new component\n * into an existing tree such that it shares the same injection, change detection\n * and object lifetime, use {@link ViewContainer#createComponent}.\n *\n * @param componentType Component to bootstrap\n * @param options Optional parameters which control bootstrapping\n */\nfunction renderComponent$1(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts = {}) {\n    ngDevMode && publishDefaultGlobalUtils();\n    ngDevMode && assertComponentType(componentType);\n    const rendererFactory = opts.rendererFactory || domRendererFactory3;\n    const sanitizer = opts.sanitizer || null;\n    const componentDef = getComponentDef(componentType);\n    if (componentDef.type != componentType)\n        componentDef.type = componentType;\n    // The first index of the first selector is the tag name.\n    const componentTag = componentDef.selectors[0][0];\n    const hostRenderer = rendererFactory.createRenderer(null, null);\n    const hostRNode = locateHostElement(hostRenderer, opts.host || componentTag, componentDef.encapsulation);\n    const rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n        16 /* CheckAlways */ | 512 /* IsRoot */;\n    const rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n    const renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n    const rootTView = createTView(0 /* Root */, -1, null, 1, 0, null, null, null, null, null);\n    const rootView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n    enterView(rootView, null);\n    let component;\n    try {\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        const componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n        component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n        // create mode pass\n        renderView(rootTView, rootView, null);\n        // update mode pass\n        refreshView(rootTView, rootView, null, null);\n    }\n    finally {\n        leaveView();\n        if (rendererFactory.end)\n            rendererFactory.end();\n    }\n    return component;\n}\n/**\n * Creates the root component view and the root component node.\n *\n * @param rNode Render host element.\n * @param def ComponentDef\n * @param rootView The parent view where the host node is stored\n * @param hostRenderer The current renderer\n * @param sanitizer The sanitizer, if provided\n *\n * @returns Component view created\n */\nfunction createRootComponentView(rNode, def, rootView, rendererFactory, hostRenderer, sanitizer) {\n    const tView = rootView[TVIEW];\n    ngDevMode && assertIndexInRange(rootView, 0 + HEADER_OFFSET);\n    rootView[0 + HEADER_OFFSET] = rNode;\n    const tNode = getOrCreateTNode(tView, null, 0, 3 /* Element */, null, null);\n    const mergedAttrs = tNode.mergedAttrs = def.hostAttrs;\n    if (mergedAttrs !== null) {\n        computeStaticStyling(tNode, mergedAttrs, true);\n        if (rNode !== null) {\n            setUpAttributes(hostRenderer, rNode, mergedAttrs);\n            if (tNode.classes !== null) {\n                writeDirectClass(hostRenderer, rNode, tNode.classes);\n            }\n            if (tNode.styles !== null) {\n                writeDirectStyle(hostRenderer, rNode, tNode.styles);\n            }\n        }\n    }\n    const viewRenderer = rendererFactory.createRenderer(rNode, def);\n    const componentView = createLView(rootView, getOrCreateTComponentView(def), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, viewRenderer, sanitizer);\n    if (tView.firstCreatePass) {\n        diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), tView, def.type);\n        markAsComponentHost(tView, tNode);\n        initTNodeFlags(tNode, rootView.length, 1);\n    }\n    addToViewTree(rootView, componentView);\n    // Store component view at node index, with node as the HOST\n    return rootView[HEADER_OFFSET] = componentView;\n}\n/**\n * Creates a root component and sets it up with features and host bindings. Shared by\n * renderComponent() and ViewContainerRef.createComponent().\n */\nfunction createRootComponent(componentView, componentDef, rootLView, rootContext, hostFeatures) {\n    const tView = rootLView[TVIEW];\n    // Create directive instance with factory() and store at next index in viewData\n    const component = instantiateRootComponent(tView, rootLView, componentDef);\n    rootContext.components.push(component);\n    componentView[CONTEXT] = component;\n    hostFeatures && hostFeatures.forEach((feature) => feature(component, componentDef));\n    // We want to generate an empty QueryList for root content queries for backwards\n    // compatibility with ViewEngine.\n    if (componentDef.contentQueries) {\n        componentDef.contentQueries(1 /* Create */, component, rootLView.length - 1);\n    }\n    const rootTNode = getPreviousOrParentTNode();\n    if (tView.firstCreatePass &&\n        (componentDef.hostBindings !== null || componentDef.hostAttrs !== null)) {\n        const elementIndex = rootTNode.index - HEADER_OFFSET;\n        setSelectedIndex(elementIndex);\n        const rootTView = rootLView[TVIEW];\n        addHostBindingsToExpandoInstructions(rootTView, componentDef);\n        growHostVarsSpace(rootTView, rootLView, componentDef.hostVars);\n        invokeHostBindingsInCreationMode(componentDef, component);\n    }\n    return component;\n}\nfunction createRootContext(scheduler, playerHandler) {\n    return {\n        components: [],\n        scheduler: scheduler || defaultScheduler,\n        clean: CLEAN_PROMISE,\n        playerHandler: playerHandler || null,\n        flags: 0 /* Empty */\n    };\n}\n/**\n * Used to enable lifecycle hooks on the root component.\n *\n * Include this feature when calling `renderComponent` if the root component\n * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n * be called properly.\n *\n * Example:\n *\n * ```\n * renderComponent(AppComponent, {hostFeatures: [LifecycleHooksFeature]});\n * ```\n */\nfunction LifecycleHooksFeature(component, def) {\n    const rootTView = readPatchedLView(component)[TVIEW];\n    const dirIndex = rootTView.data.length - 1;\n    // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n    // LNode).\n    registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n}\n/**\n * Wait on component until it is rendered.\n *\n * This function returns a `Promise` which is resolved when the component's\n * change detection is executed. This is determined by finding the scheduler\n * associated with the `component`'s render tree and waiting until the scheduler\n * flushes. If nothing is scheduled, the function returns a resolved promise.\n *\n * Example:\n * ```\n * await whenRendered(myComponent);\n * ```\n *\n * @param component Component to wait upon\n * @returns Promise which resolves when the component is rendered.\n */\nfunction whenRendered(component) {\n    return getRootContext(component).clean;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction getSuperType(type) {\n    return Object.getPrototypeOf(type.prototype).constructor;\n}\n/**\n * Merges the definition from a super class to a sub class.\n * @param definition The definition that is a SubClass of another directive of component\n *\n * @codeGenApi\n */\nfunction ɵɵInheritDefinitionFeature(definition) {\n    let superType = getSuperType(definition.type);\n    let shouldInheritFields = true;\n    const inheritanceChain = [definition];\n    while (superType) {\n        let superDef = undefined;\n        if (isComponentDef(definition)) {\n            // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n            superDef = superType.ɵcmp || superType.ɵdir;\n        }\n        else {\n            if (superType.ɵcmp) {\n                throw new Error('Directives cannot inherit Components');\n            }\n            // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n            superDef = superType.ɵdir;\n        }\n        if (superDef) {\n            if (shouldInheritFields) {\n                inheritanceChain.push(superDef);\n                // Some fields in the definition may be empty, if there were no values to put in them that\n                // would've justified object creation. Unwrap them if necessary.\n                const writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n                // Merge hostBindings\n                const superHostBindings = superDef.hostBindings;\n                superHostBindings && inheritHostBindings(definition, superHostBindings);\n                // Merge queries\n                const superViewQuery = superDef.viewQuery;\n                const superContentQueries = superDef.contentQueries;\n                superViewQuery && inheritViewQuery(definition, superViewQuery);\n                superContentQueries && inheritContentQueries(definition, superContentQueries);\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Merge animations metadata.\n                // If `superDef` is a Component, the `data` field is present (defaults to an empty object).\n                if (isComponentDef(superDef) && superDef.data.animation) {\n                    // If super def is a Component, the `definition` is also a Component, since Directives can\n                    // not inherit Components (we throw an error above and cannot reach this code).\n                    const defData = definition.data;\n                    defData.animation = (defData.animation || []).concat(superDef.data.animation);\n                }\n            }\n            // Run parent features\n            const features = superDef.features;\n            if (features) {\n                for (let i = 0; i < features.length; i++) {\n                    const feature = features[i];\n                    if (feature && feature.ngInherit) {\n                        feature(definition);\n                    }\n                    // If `InheritDefinitionFeature` is a part of the current `superDef`, it means that this\n                    // def already has all the necessary information inherited from its super class(es), so we\n                    // can stop merging fields from super classes. However we need to iterate through the\n                    // prototype chain to look for classes that might contain other \"features\" (like\n                    // NgOnChanges), which we should invoke for the original `definition`. We set the\n                    // `shouldInheritFields` flag to indicate that, essentially skipping fields inheritance\n                    // logic and only invoking functions from the \"features\" list.\n                    if (feature === ɵɵInheritDefinitionFeature) {\n                        shouldInheritFields = false;\n                    }\n                }\n            }\n        }\n        superType = Object.getPrototypeOf(superType);\n    }\n    mergeHostAttrsAcrossInheritance(inheritanceChain);\n}\n/**\n * Merge the `hostAttrs` and `hostVars` from the inherited parent to the base class.\n *\n * @param inheritanceChain A list of `WritableDefs` starting at the top most type and listing\n * sub-types in order. For each type take the `hostAttrs` and `hostVars` and merge it with the child\n * type.\n */\nfunction mergeHostAttrsAcrossInheritance(inheritanceChain) {\n    let hostVars = 0;\n    let hostAttrs = null;\n    // We process the inheritance order from the base to the leaves here.\n    for (let i = inheritanceChain.length - 1; i >= 0; i--) {\n        const def = inheritanceChain[i];\n        // For each `hostVars`, we need to add the superclass amount.\n        def.hostVars = (hostVars += def.hostVars);\n        // for each `hostAttrs` we need to merge it with superclass.\n        def.hostAttrs =\n            mergeHostAttrs(def.hostAttrs, hostAttrs = mergeHostAttrs(hostAttrs, def.hostAttrs));\n    }\n}\nfunction maybeUnwrapEmpty(value) {\n    if (value === EMPTY_OBJ) {\n        return {};\n    }\n    else if (value === EMPTY_ARRAY) {\n        return [];\n    }\n    else {\n        return value;\n    }\n}\nfunction inheritViewQuery(definition, superViewQuery) {\n    const prevViewQuery = definition.viewQuery;\n    if (prevViewQuery) {\n        definition.viewQuery = (rf, ctx) => {\n            superViewQuery(rf, ctx);\n            prevViewQuery(rf, ctx);\n        };\n    }\n    else {\n        definition.viewQuery = superViewQuery;\n    }\n}\nfunction inheritContentQueries(definition, superContentQueries) {\n    const prevContentQueries = definition.contentQueries;\n    if (prevContentQueries) {\n        definition.contentQueries = (rf, ctx, directiveIndex) => {\n            superContentQueries(rf, ctx, directiveIndex);\n            prevContentQueries(rf, ctx, directiveIndex);\n        };\n    }\n    else {\n        definition.contentQueries = superContentQueries;\n    }\n}\nfunction inheritHostBindings(definition, superHostBindings) {\n    const prevHostBindings = definition.hostBindings;\n    if (prevHostBindings) {\n        definition.hostBindings = (rf, ctx) => {\n            superHostBindings(rf, ctx);\n            prevHostBindings(rf, ctx);\n        };\n    }\n    else {\n        definition.hostBindings = superHostBindings;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Fields which exist on either directive or component definitions, and need to be copied from\n * parent to child classes by the `ɵɵCopyDefinitionFeature`.\n */\nconst COPY_DIRECTIVE_FIELDS = [\n    // The child class should use the providers of its parent.\n    'providersResolver',\n];\n/**\n * Fields which exist only on component definitions, and need to be copied from parent to child\n * classes by the `ɵɵCopyDefinitionFeature`.\n *\n * The type here allows any field of `ComponentDef` which is not also a property of `DirectiveDef`,\n * since those should go in `COPY_DIRECTIVE_FIELDS` above.\n */\nconst COPY_COMPONENT_FIELDS = [\n    // The child class should use the template function of its parent, including all template\n    // semantics.\n    'template',\n    'decls',\n    'consts',\n    'vars',\n    'onPush',\n    'ngContentSelectors',\n    // The child class should use the CSS styles of its parent, including all styling semantics.\n    'styles',\n    'encapsulation',\n    // The child class should be checked by the runtime in the same way as its parent.\n    'schemas',\n];\n/**\n * Copies the fields not handled by the `ɵɵInheritDefinitionFeature` from the supertype of a\n * definition.\n *\n * This exists primarily to support ngcc migration of an existing View Engine pattern, where an\n * entire decorator is inherited from a parent to a child class. When ngcc detects this case, it\n * generates a skeleton definition on the child class, and applies this feature.\n *\n * The `ɵɵCopyDefinitionFeature` then copies any needed fields from the parent class' definition,\n * including things like the component template function.\n *\n * @param definition The definition of a child class which inherits from a parent class with its\n * own definition.\n *\n * @codeGenApi\n */\nfunction ɵɵCopyDefinitionFeature(definition) {\n    let superType = getSuperType(definition.type);\n    let superDef = undefined;\n    if (isComponentDef(definition)) {\n        // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n        superDef = superType.ɵcmp;\n    }\n    else {\n        // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n        superDef = superType.ɵdir;\n    }\n    // Needed because `definition` fields are readonly.\n    const defAny = definition;\n    // Copy over any fields that apply to either directives or components.\n    for (const field of COPY_DIRECTIVE_FIELDS) {\n        defAny[field] = superDef[field];\n    }\n    if (isComponentDef(superDef)) {\n        // Copy over any component-specific fields.\n        for (const field of COPY_COMPONENT_FIELDS) {\n            defAny[field] = superDef[field];\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Resolves the providers which are defined in the DirectiveDef.\n *\n * When inserting the tokens and the factories in their respective arrays, we can assume that\n * this method is called first for the component (if any), and then for other directives on the same\n * node.\n * As a consequence,the providers are always processed in that order:\n * 1) The view providers of the component\n * 2) The providers of the component\n * 3) The providers of the other directives\n * This matches the structure of the injectables arrays of a view (for each node).\n * So the tokens and the factories can be pushed at the end of the arrays, except\n * in one case for multi providers.\n *\n * @param def the directive definition\n * @param providers: Array of `providers`.\n * @param viewProviders: Array of `viewProviders`.\n */\nfunction providersResolver(def, providers, viewProviders) {\n    const tView = getTView();\n    if (tView.firstCreatePass) {\n        const isComponent = isComponentDef(def);\n        // The list of view providers is processed first, and the flags are updated\n        resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent, true);\n        // Then, the list of providers is processed, and the flags are updated\n        resolveProvider$1(providers, tView.data, tView.blueprint, isComponent, false);\n    }\n}\n/**\n * Resolves a provider and publishes it to the DI system.\n */\nfunction resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent, isViewProvider) {\n    provider = resolveForwardRef(provider);\n    if (Array.isArray(provider)) {\n        // Recursively call `resolveProvider`\n        // Recursion is OK in this case because this code will not be in hot-path once we implement\n        // cloning of the initial state.\n        for (let i = 0; i < provider.length; i++) {\n            resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent, isViewProvider);\n        }\n    }\n    else {\n        const tView = getTView();\n        const lView = getLView();\n        let token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n        let providerFactory = providerToFactory(provider);\n        const tNode = getPreviousOrParentTNode();\n        const beginIndex = tNode.providerIndexes & 1048575 /* ProvidersStartIndexMask */;\n        const endIndex = tNode.directiveStart;\n        const cptViewProvidersCount = tNode.providerIndexes >> 20 /* CptViewProvidersCountShift */;\n        if (isTypeProvider(provider) || !provider.multi) {\n            // Single provider case: the factory is created and pushed immediately\n            const factory = new NodeInjectorFactory(providerFactory, isViewProvider, ɵɵdirectiveInject);\n            const existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n            if (existingFactoryIndex === -1) {\n                diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                registerDestroyHooksIfSupported(tView, provider, tInjectables.length);\n                tInjectables.push(token);\n                tNode.directiveStart++;\n                tNode.directiveEnd++;\n                if (isViewProvider) {\n                    tNode.providerIndexes += 1048576 /* CptViewProvidersCountShifter */;\n                }\n                lInjectablesBlueprint.push(factory);\n                lView.push(factory);\n            }\n            else {\n                lInjectablesBlueprint[existingFactoryIndex] = factory;\n                lView[existingFactoryIndex] = factory;\n            }\n        }\n        else {\n            // Multi provider case:\n            // We create a multi factory which is going to aggregate all the values.\n            // Since the output of such a factory depends on content or view injection,\n            // we create two of them, which are linked together.\n            //\n            // The first one (for view providers) is always in the first block of the injectables array,\n            // and the second one (for providers) is always in the second block.\n            // This is important because view providers have higher priority. When a multi token\n            // is being looked up, the view providers should be found first.\n            // Note that it is not possible to have a multi factory in the third block (directive block).\n            //\n            // The algorithm to process multi providers is as follows:\n            // 1) If the multi provider comes from the `viewProviders` of the component:\n            //   a) If the special view providers factory doesn't exist, it is created and pushed.\n            //   b) Else, the multi provider is added to the existing multi factory.\n            // 2) If the multi provider comes from the `providers` of the component or of another\n            // directive:\n            //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n            //      It is also linked to the multi factory for view providers, if it exists.\n            //   b) Else, the multi provider is added to the existing multi factory.\n            const existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n            const existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n            const doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                lInjectablesBlueprint[existingProvidersFactoryIndex];\n            const doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n            if (isViewProvider && !doesViewProvidersFactoryExist ||\n                !isViewProvider && !doesProvidersFactoryExist) {\n                // Cases 1.a and 2.a\n                diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                const factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent, providerFactory);\n                if (!isViewProvider && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                }\n                registerDestroyHooksIfSupported(tView, provider, tInjectables.length, 0);\n                tInjectables.push(token);\n                tNode.directiveStart++;\n                tNode.directiveEnd++;\n                if (isViewProvider) {\n                    tNode.providerIndexes += 1048576 /* CptViewProvidersCountShifter */;\n                }\n                lInjectablesBlueprint.push(factory);\n                lView.push(factory);\n            }\n            else {\n                // Cases 1.b and 2.b\n                const indexInFactory = multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex :\n                    existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent);\n                registerDestroyHooksIfSupported(tView, provider, existingProvidersFactoryIndex > -1 ? existingProvidersFactoryIndex :\n                    existingViewProvidersFactoryIndex, indexInFactory);\n            }\n            if (!isViewProvider && isComponent && doesViewProvidersFactoryExist) {\n                lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n            }\n        }\n    }\n}\n/**\n * Registers the `ngOnDestroy` hook of a provider, if the provider supports destroy hooks.\n * @param tView `TView` in which to register the hook.\n * @param provider Provider whose hook should be registered.\n * @param contextIndex Index under which to find the context for the hook when it's being invoked.\n * @param indexInFactory Only required for `multi` providers. Index of the provider in the multi\n * provider factory.\n */\nfunction registerDestroyHooksIfSupported(tView, provider, contextIndex, indexInFactory) {\n    const providerIsTypeProvider = isTypeProvider(provider);\n    if (providerIsTypeProvider || isClassProvider(provider)) {\n        const prototype = (provider.useClass || provider).prototype;\n        const ngOnDestroy = prototype.ngOnDestroy;\n        if (ngOnDestroy) {\n            const hooks = tView.destroyHooks || (tView.destroyHooks = []);\n            if (!providerIsTypeProvider && provider.multi) {\n                ngDevMode &&\n                    assertDefined(indexInFactory, 'indexInFactory when registering multi factory destroy hook');\n                const existingCallbacksIndex = hooks.indexOf(contextIndex);\n                if (existingCallbacksIndex === -1) {\n                    hooks.push(contextIndex, [indexInFactory, ngOnDestroy]);\n                }\n                else {\n                    hooks[existingCallbacksIndex + 1].push(indexInFactory, ngOnDestroy);\n                }\n            }\n            else {\n                hooks.push(contextIndex, ngOnDestroy);\n            }\n        }\n    }\n}\n/**\n * Add a factory in a multi factory.\n * @returns Index at which the factory was inserted.\n */\nfunction multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n    if (isComponentProvider) {\n        multiFactory.componentProviders++;\n    }\n    return multiFactory.multi.push(factory) - 1;\n}\n/**\n * Returns the index of item in the array, but only in the begin to end range.\n */\nfunction indexOf(item, arr, begin, end) {\n    for (let i = begin; i < end; i++) {\n        if (arr[i] === item)\n            return i;\n    }\n    return -1;\n}\n/**\n * Use this with `multi` `providers`.\n */\nfunction multiProvidersFactoryResolver(_, tData, lData, tNode) {\n    return multiResolve(this.multi, []);\n}\n/**\n * Use this with `multi` `viewProviders`.\n *\n * This factory knows how to concatenate itself with the existing `multi` `providers`.\n */\nfunction multiViewProvidersFactoryResolver(_, tData, lView, tNode) {\n    const factories = this.multi;\n    let result;\n    if (this.providerFactory) {\n        const componentCount = this.providerFactory.componentProviders;\n        const multiProviders = getNodeInjectable(lView, lView[TVIEW], this.providerFactory.index, tNode);\n        // Copy the section of the array which contains `multi` `providers` from the component\n        result = multiProviders.slice(0, componentCount);\n        // Insert the `viewProvider` instances.\n        multiResolve(factories, result);\n        // Copy the section of the array which contains `multi` `providers` from other directives\n        for (let i = componentCount; i < multiProviders.length; i++) {\n            result.push(multiProviders[i]);\n        }\n    }\n    else {\n        result = [];\n        // Insert the `viewProvider` instances.\n        multiResolve(factories, result);\n    }\n    return result;\n}\n/**\n * Maps an array of factories into an array of values.\n */\nfunction multiResolve(factories, result) {\n    for (let i = 0; i < factories.length; i++) {\n        const factory = factories[i];\n        result.push(factory());\n    }\n    return result;\n}\n/**\n * Creates a multi factory.\n */\nfunction multiFactory(factoryFn, index, isViewProvider, isComponent, f) {\n    const factory = new NodeInjectorFactory(factoryFn, isViewProvider, ɵɵdirectiveInject);\n    factory.multi = [];\n    factory.index = index;\n    factory.componentProviders = 0;\n    multiFactoryAdd(factory, f, isComponent && !isViewProvider);\n    return factory;\n}\n\n/**\n * This feature resolves the providers of a directive (or component),\n * and publish them into the DI system, making it visible to others for injection.\n *\n * For example:\n * ```ts\n * class ComponentWithProviders {\n *   constructor(private greeter: GreeterDE) {}\n *\n *   static ɵcmp = defineComponent({\n *     type: ComponentWithProviders,\n *     selectors: [['component-with-providers']],\n *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n *    decls: 1,\n *    vars: 1,\n *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n *      if (fs & RenderFlags.Create) {\n *        ɵɵtext(0);\n *      }\n *      if (fs & RenderFlags.Update) {\n *        ɵɵtextInterpolate(ctx.greeter.greet());\n *      }\n *    },\n *    features: [ProvidersFeature([GreeterDE])]\n *  });\n * }\n * ```\n *\n * @param definition\n *\n * @codeGenApi\n */\nfunction ɵɵProvidersFeature(providers, viewProviders = []) {\n    return (definition) => {\n        definition.providersResolver =\n            (def, processProvidersFn) => {\n                return providersResolver(def, //\n                processProvidersFn ? processProvidersFn(providers) : providers, //\n                viewProviders);\n            };\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents a component created by a `ComponentFactory`.\n * Provides access to the component instance and related objects,\n * and provides the means of destroying the instance.\n *\n * @publicApi\n */\nclass ComponentRef {\n}\n/**\n * Base class for a factory that can create a component dynamically.\n * Instantiate a factory for a given type of component with `resolveComponentFactory()`.\n * Use the resulting `ComponentFactory.create()` method to create a component of that type.\n *\n * @see [Dynamic Components](guide/dynamic-component-loader)\n *\n * @publicApi\n */\nclass ComponentFactory {\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction noComponentFactoryError(component) {\n    const error = Error(`No component factory found for ${stringify(component)}. Did you add it to @NgModule.entryComponents?`);\n    error[ERROR_COMPONENT] = component;\n    return error;\n}\nconst ERROR_COMPONENT = 'ngComponent';\nfunction getComponent$1(error) {\n    return error[ERROR_COMPONENT];\n}\nclass _NullComponentFactoryResolver {\n    resolveComponentFactory(component) {\n        throw noComponentFactoryError(component);\n    }\n}\n/**\n * A simple registry that maps `Components` to generated `ComponentFactory` classes\n * that can be used to create instances of components.\n * Use to obtain the factory for a given component type,\n * then use the factory's `create()` method to create a component of that type.\n *\n * @see [Dynamic Components](guide/dynamic-component-loader)\n * @publicApi\n */\nclass ComponentFactoryResolver {\n}\nComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\nclass CodegenComponentFactoryResolver {\n    constructor(factories, _parent, _ngModule) {\n        this._parent = _parent;\n        this._ngModule = _ngModule;\n        this._factories = new Map();\n        for (let i = 0; i < factories.length; i++) {\n            const factory = factories[i];\n            this._factories.set(factory.componentType, factory);\n        }\n    }\n    resolveComponentFactory(component) {\n        let factory = this._factories.get(component);\n        if (!factory && this._parent) {\n            factory = this._parent.resolveComponentFactory(component);\n        }\n        if (!factory) {\n            throw noComponentFactoryError(component);\n        }\n        return new ComponentFactoryBoundToModule(factory, this._ngModule);\n    }\n}\nclass ComponentFactoryBoundToModule extends ComponentFactory {\n    constructor(factory, ngModule) {\n        super();\n        this.factory = factory;\n        this.ngModule = ngModule;\n        this.selector = factory.selector;\n        this.componentType = factory.componentType;\n        this.ngContentSelectors = factory.ngContentSelectors;\n        this.inputs = factory.inputs;\n        this.outputs = factory.outputs;\n    }\n    create(injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction noop(...args) {\n    // Do nothing.\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A wrapper around a native element inside of a View.\n *\n * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n * element.\n *\n * @security Permitting direct access to the DOM can make your application more vulnerable to\n * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n * [Security Guide](http://g.co/ng/security).\n *\n * @publicApi\n */\n// Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n// i.e. users have to ask for what they need. With that, we can build better analysis tools\n// and could do better codegen in the future.\nclass ElementRef {\n    constructor(nativeElement) {\n        this.nativeElement = nativeElement;\n    }\n}\n/**\n * @internal\n * @nocollapse\n */\nElementRef.__NG_ELEMENT_ID__ = () => SWITCH_ELEMENT_REF_FACTORY(ElementRef);\nconst SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\nconst SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\nconst SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n/**\n * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n *\n * @publicApi\n */\nclass RendererFactory2 {\n}\n/**\n * Flags for renderer-specific style modifiers.\n * @publicApi\n */\nvar RendererStyleFlags2;\n(function (RendererStyleFlags2) {\n    // TODO(misko): This needs to be refactored into a separate file so that it can be imported from\n    // `node_manipulation.ts` Currently doing the import cause resolution order to change and fails\n    // the tests. The work around is to have hard coded value in `node_manipulation.ts` for now.\n    /**\n     * Marks a style as important.\n     */\n    RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n    /**\n     * Marks a style as using dash case naming (this-is-dash-case).\n     */\n    RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n})(RendererStyleFlags2 || (RendererStyleFlags2 = {}));\n/**\n * Extend this base class to implement custom rendering. By default, Angular\n * renders a template into DOM. You can use custom rendering to intercept\n * rendering calls, or to render to something other than DOM.\n *\n * Create your custom renderer using `RendererFactory2`.\n *\n * Use a custom renderer to bypass Angular's templating and\n * make custom UI changes that can't be expressed declaratively.\n * For example if you need to set a property or an attribute whose name is\n * not statically known, use the `setProperty()` or\n * `setAttribute()` method.\n *\n * @publicApi\n */\nclass Renderer2 {\n}\n/**\n * @internal\n * @nocollapse\n */\nRenderer2.__NG_ELEMENT_ID__ = () => SWITCH_RENDERER2_FACTORY();\nconst SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\nconst SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\nconst SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__POST_R3__;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n * @publicApi\n */\nclass Sanitizer {\n}\n/** @nocollapse */\nSanitizer.ɵprov = ɵɵdefineInjectable({\n    token: Sanitizer,\n    providedIn: 'root',\n    factory: () => null,\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description Represents the version of Angular\n *\n * @publicApi\n */\nclass Version {\n    constructor(full) {\n        this.full = full;\n        this.major = full.split('.')[0];\n        this.minor = full.split('.')[1];\n        this.patch = full.split('.').slice(2).join('.');\n    }\n}\n/**\n * @publicApi\n */\nconst VERSION = new Version('10.0.11');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass DefaultIterableDifferFactory {\n    constructor() { }\n    supports(obj) {\n        return isListLikeIterable(obj);\n    }\n    create(trackByFn) {\n        return new DefaultIterableDiffer(trackByFn);\n    }\n}\nconst trackByIdentity = (index, item) => item;\nconst ɵ0$c = trackByIdentity;\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n * @publicApi\n */\nclass DefaultIterableDiffer {\n    constructor(trackByFn) {\n        this.length = 0;\n        // Keeps track of the used records at any point in time (during & across `_check()` calls)\n        this._linkedRecords = null;\n        // Keeps track of the removed records at any point in time during `_check()` calls.\n        this._unlinkedRecords = null;\n        this._previousItHead = null;\n        this._itHead = null;\n        this._itTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._movesHead = null;\n        this._movesTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n        // Keeps track of records where custom track by is the same, but item identity has changed\n        this._identityChangesHead = null;\n        this._identityChangesTail = null;\n        this._trackByFn = trackByFn || trackByIdentity;\n    }\n    forEachItem(fn) {\n        let record;\n        for (record = this._itHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    }\n    forEachOperation(fn) {\n        let nextIt = this._itHead;\n        let nextRemove = this._removalsHead;\n        let addRemoveOffset = 0;\n        let moveOffsets = null;\n        while (nextIt || nextRemove) {\n            // Figure out which is the next record to process\n            // Order: remove, add, move\n            const record = !nextRemove ||\n                nextIt &&\n                    nextIt.currentIndex <\n                        getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                nextIt :\n                nextRemove;\n            const adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n            const currentIndex = record.currentIndex;\n            // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n            if (record === nextRemove) {\n                addRemoveOffset--;\n                nextRemove = nextRemove._nextRemoved;\n            }\n            else {\n                nextIt = nextIt._next;\n                if (record.previousIndex == null) {\n                    addRemoveOffset++;\n                }\n                else {\n                    // INVARIANT:  currentIndex < previousIndex\n                    if (!moveOffsets)\n                        moveOffsets = [];\n                    const localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                    const localCurrentIndex = currentIndex - addRemoveOffset;\n                    if (localMovePreviousIndex != localCurrentIndex) {\n                        for (let i = 0; i < localMovePreviousIndex; i++) {\n                            const offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                            const index = offset + i;\n                            if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                moveOffsets[i] = offset + 1;\n                            }\n                        }\n                        const previousIndex = record.previousIndex;\n                        moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                    }\n                }\n            }\n            if (adjPreviousIndex !== currentIndex) {\n                fn(record, adjPreviousIndex, currentIndex);\n            }\n        }\n    }\n    forEachPreviousItem(fn) {\n        let record;\n        for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    }\n    forEachAddedItem(fn) {\n        let record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    }\n    forEachMovedItem(fn) {\n        let record;\n        for (record = this._movesHead; record !== null; record = record._nextMoved) {\n            fn(record);\n        }\n    }\n    forEachRemovedItem(fn) {\n        let record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    }\n    forEachIdentityChange(fn) {\n        let record;\n        for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n            fn(record);\n        }\n    }\n    diff(collection) {\n        if (collection == null)\n            collection = [];\n        if (!isListLikeIterable(collection)) {\n            throw new Error(`Error trying to diff '${stringify(collection)}'. Only arrays and iterables are allowed`);\n        }\n        if (this.check(collection)) {\n            return this;\n        }\n        else {\n            return null;\n        }\n    }\n    onDestroy() { }\n    check(collection) {\n        this._reset();\n        let record = this._itHead;\n        let mayBeDirty = false;\n        let index;\n        let item;\n        let itemTrackBy;\n        if (Array.isArray(collection)) {\n            this.length = collection.length;\n            for (let index = 0; index < this.length; index++) {\n                item = collection[index];\n                itemTrackBy = this._trackByFn(index, item);\n                if (record === null || !Object.is(record.trackById, itemTrackBy)) {\n                    record = this._mismatch(record, item, itemTrackBy, index);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = this._verifyReinsertion(record, item, itemTrackBy, index);\n                    }\n                    if (!Object.is(record.item, item))\n                        this._addIdentityChange(record, item);\n                }\n                record = record._next;\n            }\n        }\n        else {\n            index = 0;\n            iterateListLike(collection, (item) => {\n                itemTrackBy = this._trackByFn(index, item);\n                if (record === null || !Object.is(record.trackById, itemTrackBy)) {\n                    record = this._mismatch(record, item, itemTrackBy, index);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = this._verifyReinsertion(record, item, itemTrackBy, index);\n                    }\n                    if (!Object.is(record.item, item))\n                        this._addIdentityChange(record, item);\n                }\n                record = record._next;\n                index++;\n            });\n            this.length = index;\n        }\n        this._truncate(record);\n        this.collection = collection;\n        return this.isDirty;\n    }\n    /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n     * changes.\n     */\n    get isDirty() {\n        return this._additionsHead !== null || this._movesHead !== null ||\n            this._removalsHead !== null || this._identityChangesHead !== null;\n    }\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * @internal\n     */\n    _reset() {\n        if (this.isDirty) {\n            let record;\n            let nextRecord;\n            for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                record.previousIndex = record.currentIndex;\n            }\n            this._additionsHead = this._additionsTail = null;\n            for (record = this._movesHead; record !== null; record = nextRecord) {\n                record.previousIndex = record.currentIndex;\n                nextRecord = record._nextMoved;\n            }\n            this._movesHead = this._movesTail = null;\n            this._removalsHead = this._removalsTail = null;\n            this._identityChangesHead = this._identityChangesTail = null;\n            // TODO(vicb): when assert gets supported\n            // assert(!this.isDirty);\n        }\n    }\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * @internal\n     */\n    _mismatch(record, item, itemTrackBy, index) {\n        // The previous record after which we will append the current one.\n        let previousRecord;\n        if (record === null) {\n            previousRecord = this._itTail;\n        }\n        else {\n            previousRecord = record._prev;\n            // Remove the record from the collection since we know it does not match the item.\n            this._remove(record);\n        }\n        // Attempt to see if we have seen the item before.\n        record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n        if (record !== null) {\n            // We have seen this before, we need to move it forward in the collection.\n            // But first we need to check if identity changed, so we can update in view if necessary\n            if (!Object.is(record.item, item))\n                this._addIdentityChange(record, item);\n            this._moveAfter(record, previousRecord, index);\n        }\n        else {\n            // Never seen it, check evicted list.\n            record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (record !== null) {\n                // It is an item which we have evicted earlier: reinsert it back into the list.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!Object.is(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._reinsertAfter(record, previousRecord, index);\n            }\n            else {\n                // It is a new item: add it.\n                record =\n                    this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n            }\n        }\n        return record;\n    }\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * @internal\n     */\n    _verifyReinsertion(record, item, itemTrackBy, index) {\n        let reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n        if (reinsertRecord !== null) {\n            record = this._reinsertAfter(reinsertRecord, record._prev, index);\n        }\n        else if (record.currentIndex != index) {\n            record.currentIndex = index;\n            this._addToMoves(record, index);\n        }\n        return record;\n    }\n    /**\n     * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {@link IterableChangeRecord_}.\n     *\n     * @internal\n     */\n    _truncate(record) {\n        // Anything after that needs to be removed;\n        while (record !== null) {\n            const nextRecord = record._next;\n            this._addToRemovals(this._unlink(record));\n            record = nextRecord;\n        }\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.clear();\n        }\n        if (this._additionsTail !== null) {\n            this._additionsTail._nextAdded = null;\n        }\n        if (this._movesTail !== null) {\n            this._movesTail._nextMoved = null;\n        }\n        if (this._itTail !== null) {\n            this._itTail._next = null;\n        }\n        if (this._removalsTail !== null) {\n            this._removalsTail._nextRemoved = null;\n        }\n        if (this._identityChangesTail !== null) {\n            this._identityChangesTail._nextIdentityChange = null;\n        }\n    }\n    /** @internal */\n    _reinsertAfter(record, prevRecord, index) {\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.remove(record);\n        }\n        const prev = record._prevRemoved;\n        const next = record._nextRemoved;\n        if (prev === null) {\n            this._removalsHead = next;\n        }\n        else {\n            prev._nextRemoved = next;\n        }\n        if (next === null) {\n            this._removalsTail = prev;\n        }\n        else {\n            next._prevRemoved = prev;\n        }\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    }\n    /** @internal */\n    _moveAfter(record, prevRecord, index) {\n        this._unlink(record);\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    }\n    /** @internal */\n    _addAfter(record, prevRecord, index) {\n        this._insertAfter(record, prevRecord, index);\n        if (this._additionsTail === null) {\n            // TODO(vicb):\n            // assert(this._additionsHead === null);\n            this._additionsTail = this._additionsHead = record;\n        }\n        else {\n            // TODO(vicb):\n            // assert(_additionsTail._nextAdded === null);\n            // assert(record._nextAdded === null);\n            this._additionsTail = this._additionsTail._nextAdded = record;\n        }\n        return record;\n    }\n    /** @internal */\n    _insertAfter(record, prevRecord, index) {\n        // TODO(vicb):\n        // assert(record != prevRecord);\n        // assert(record._next === null);\n        // assert(record._prev === null);\n        const next = prevRecord === null ? this._itHead : prevRecord._next;\n        // TODO(vicb):\n        // assert(next != record);\n        // assert(prevRecord != record);\n        record._next = next;\n        record._prev = prevRecord;\n        if (next === null) {\n            this._itTail = record;\n        }\n        else {\n            next._prev = record;\n        }\n        if (prevRecord === null) {\n            this._itHead = record;\n        }\n        else {\n            prevRecord._next = record;\n        }\n        if (this._linkedRecords === null) {\n            this._linkedRecords = new _DuplicateMap();\n        }\n        this._linkedRecords.put(record);\n        record.currentIndex = index;\n        return record;\n    }\n    /** @internal */\n    _remove(record) {\n        return this._addToRemovals(this._unlink(record));\n    }\n    /** @internal */\n    _unlink(record) {\n        if (this._linkedRecords !== null) {\n            this._linkedRecords.remove(record);\n        }\n        const prev = record._prev;\n        const next = record._next;\n        // TODO(vicb):\n        // assert((record._prev = null) === null);\n        // assert((record._next = null) === null);\n        if (prev === null) {\n            this._itHead = next;\n        }\n        else {\n            prev._next = next;\n        }\n        if (next === null) {\n            this._itTail = prev;\n        }\n        else {\n            next._prev = prev;\n        }\n        return record;\n    }\n    /** @internal */\n    _addToMoves(record, toIndex) {\n        // TODO(vicb):\n        // assert(record._nextMoved === null);\n        if (record.previousIndex === toIndex) {\n            return record;\n        }\n        if (this._movesTail === null) {\n            // TODO(vicb):\n            // assert(_movesHead === null);\n            this._movesTail = this._movesHead = record;\n        }\n        else {\n            // TODO(vicb):\n            // assert(_movesTail._nextMoved === null);\n            this._movesTail = this._movesTail._nextMoved = record;\n        }\n        return record;\n    }\n    _addToRemovals(record) {\n        if (this._unlinkedRecords === null) {\n            this._unlinkedRecords = new _DuplicateMap();\n        }\n        this._unlinkedRecords.put(record);\n        record.currentIndex = null;\n        record._nextRemoved = null;\n        if (this._removalsTail === null) {\n            // TODO(vicb):\n            // assert(_removalsHead === null);\n            this._removalsTail = this._removalsHead = record;\n            record._prevRemoved = null;\n        }\n        else {\n            // TODO(vicb):\n            // assert(_removalsTail._nextRemoved === null);\n            // assert(record._nextRemoved === null);\n            record._prevRemoved = this._removalsTail;\n            this._removalsTail = this._removalsTail._nextRemoved = record;\n        }\n        return record;\n    }\n    /** @internal */\n    _addIdentityChange(record, item) {\n        record.item = item;\n        if (this._identityChangesTail === null) {\n            this._identityChangesTail = this._identityChangesHead = record;\n        }\n        else {\n            this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n        }\n        return record;\n    }\n}\nclass IterableChangeRecord_ {\n    constructor(item, trackById) {\n        this.item = item;\n        this.trackById = trackById;\n        this.currentIndex = null;\n        this.previousIndex = null;\n        /** @internal */\n        this._nextPrevious = null;\n        /** @internal */\n        this._prev = null;\n        /** @internal */\n        this._next = null;\n        /** @internal */\n        this._prevDup = null;\n        /** @internal */\n        this._nextDup = null;\n        /** @internal */\n        this._prevRemoved = null;\n        /** @internal */\n        this._nextRemoved = null;\n        /** @internal */\n        this._nextAdded = null;\n        /** @internal */\n        this._nextMoved = null;\n        /** @internal */\n        this._nextIdentityChange = null;\n    }\n}\n// A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\nclass _DuplicateItemRecordList {\n    constructor() {\n        /** @internal */\n        this._head = null;\n        /** @internal */\n        this._tail = null;\n    }\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     */\n    add(record) {\n        if (this._head === null) {\n            this._head = this._tail = record;\n            record._nextDup = null;\n            record._prevDup = null;\n        }\n        else {\n            // TODO(vicb):\n            // assert(record.item ==  _head.item ||\n            //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n            this._tail._nextDup = record;\n            record._prevDup = this._tail;\n            record._nextDup = null;\n            this._tail = record;\n        }\n    }\n    // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n    // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n    get(trackById, atOrAfterIndex) {\n        let record;\n        for (record = this._head; record !== null; record = record._nextDup) {\n            if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                Object.is(record.trackById, trackById)) {\n                return record;\n            }\n        }\n        return null;\n    }\n    /**\n     * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     */\n    remove(record) {\n        // TODO(vicb):\n        // assert(() {\n        //  // verify that the record being removed is in the list.\n        //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n        //    if (identical(cursor, record)) return true;\n        //  }\n        //  return false;\n        //});\n        const prev = record._prevDup;\n        const next = record._nextDup;\n        if (prev === null) {\n            this._head = next;\n        }\n        else {\n            prev._nextDup = next;\n        }\n        if (next === null) {\n            this._tail = prev;\n        }\n        else {\n            next._prevDup = prev;\n        }\n        return this._head === null;\n    }\n}\nclass _DuplicateMap {\n    constructor() {\n        this.map = new Map();\n    }\n    put(record) {\n        const key = record.trackById;\n        let duplicates = this.map.get(key);\n        if (!duplicates) {\n            duplicates = new _DuplicateItemRecordList();\n            this.map.set(key, duplicates);\n        }\n        duplicates.add(record);\n    }\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     */\n    get(trackById, atOrAfterIndex) {\n        const key = trackById;\n        const recordList = this.map.get(key);\n        return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n    }\n    /**\n     * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     */\n    remove(record) {\n        const key = record.trackById;\n        const recordList = this.map.get(key);\n        // Remove the list of duplicates when it gets empty\n        if (recordList.remove(record)) {\n            this.map.delete(key);\n        }\n        return record;\n    }\n    get isEmpty() {\n        return this.map.size === 0;\n    }\n    clear() {\n        this.map.clear();\n    }\n}\nfunction getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n    const previousIndex = item.previousIndex;\n    if (previousIndex === null)\n        return previousIndex;\n    let moveOffset = 0;\n    if (moveOffsets && previousIndex < moveOffsets.length) {\n        moveOffset = moveOffsets[previousIndex];\n    }\n    return previousIndex + addRemoveOffset + moveOffset;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass DefaultKeyValueDifferFactory {\n    constructor() { }\n    supports(obj) {\n        return obj instanceof Map || isJsObject(obj);\n    }\n    create() {\n        return new DefaultKeyValueDiffer();\n    }\n}\nclass DefaultKeyValueDiffer {\n    constructor() {\n        this._records = new Map();\n        this._mapHead = null;\n        // _appendAfter is used in the check loop\n        this._appendAfter = null;\n        this._previousMapHead = null;\n        this._changesHead = null;\n        this._changesTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n    }\n    get isDirty() {\n        return this._additionsHead !== null || this._changesHead !== null ||\n            this._removalsHead !== null;\n    }\n    forEachItem(fn) {\n        let record;\n        for (record = this._mapHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    }\n    forEachPreviousItem(fn) {\n        let record;\n        for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    }\n    forEachChangedItem(fn) {\n        let record;\n        for (record = this._changesHead; record !== null; record = record._nextChanged) {\n            fn(record);\n        }\n    }\n    forEachAddedItem(fn) {\n        let record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    }\n    forEachRemovedItem(fn) {\n        let record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    }\n    diff(map) {\n        if (!map) {\n            map = new Map();\n        }\n        else if (!(map instanceof Map || isJsObject(map))) {\n            throw new Error(`Error trying to diff '${stringify(map)}'. Only maps and objects are allowed`);\n        }\n        return this.check(map) ? this : null;\n    }\n    onDestroy() { }\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     */\n    check(map) {\n        this._reset();\n        let insertBefore = this._mapHead;\n        this._appendAfter = null;\n        this._forEach(map, (value, key) => {\n            if (insertBefore && insertBefore.key === key) {\n                this._maybeAddToChanges(insertBefore, value);\n                this._appendAfter = insertBefore;\n                insertBefore = insertBefore._next;\n            }\n            else {\n                const record = this._getOrCreateRecordForKey(key, value);\n                insertBefore = this._insertBeforeOrAppend(insertBefore, record);\n            }\n        });\n        // Items remaining at the end of the list have been deleted\n        if (insertBefore) {\n            if (insertBefore._prev) {\n                insertBefore._prev._next = null;\n            }\n            this._removalsHead = insertBefore;\n            for (let record = insertBefore; record !== null; record = record._nextRemoved) {\n                if (record === this._mapHead) {\n                    this._mapHead = null;\n                }\n                this._records.delete(record.key);\n                record._nextRemoved = record._next;\n                record.previousValue = record.currentValue;\n                record.currentValue = null;\n                record._prev = null;\n                record._next = null;\n            }\n        }\n        // Make sure tails have no next records from previous runs\n        if (this._changesTail)\n            this._changesTail._nextChanged = null;\n        if (this._additionsTail)\n            this._additionsTail._nextAdded = null;\n        return this.isDirty;\n    }\n    /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     */\n    _insertBeforeOrAppend(before, record) {\n        if (before) {\n            const prev = before._prev;\n            record._next = before;\n            record._prev = prev;\n            before._prev = record;\n            if (prev) {\n                prev._next = record;\n            }\n            if (before === this._mapHead) {\n                this._mapHead = record;\n            }\n            this._appendAfter = before;\n            return before;\n        }\n        if (this._appendAfter) {\n            this._appendAfter._next = record;\n            record._prev = this._appendAfter;\n        }\n        else {\n            this._mapHead = record;\n        }\n        this._appendAfter = record;\n        return null;\n    }\n    _getOrCreateRecordForKey(key, value) {\n        if (this._records.has(key)) {\n            const record = this._records.get(key);\n            this._maybeAddToChanges(record, value);\n            const prev = record._prev;\n            const next = record._next;\n            if (prev) {\n                prev._next = next;\n            }\n            if (next) {\n                next._prev = prev;\n            }\n            record._next = null;\n            record._prev = null;\n            return record;\n        }\n        const record = new KeyValueChangeRecord_(key);\n        this._records.set(key, record);\n        record.currentValue = value;\n        this._addToAdditions(record);\n        return record;\n    }\n    /** @internal */\n    _reset() {\n        if (this.isDirty) {\n            let record;\n            // let `_previousMapHead` contain the state of the map before the changes\n            this._previousMapHead = this._mapHead;\n            for (record = this._previousMapHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            // Update `record.previousValue` with the value of the item before the changes\n            // We need to update all changed items (that's those which have been added and changed)\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                record.previousValue = record.currentValue;\n            }\n            for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                record.previousValue = record.currentValue;\n            }\n            this._changesHead = this._changesTail = null;\n            this._additionsHead = this._additionsTail = null;\n            this._removalsHead = null;\n        }\n    }\n    // Add the record or a given key to the list of changes only when the value has actually changed\n    _maybeAddToChanges(record, newValue) {\n        if (!Object.is(newValue, record.currentValue)) {\n            record.previousValue = record.currentValue;\n            record.currentValue = newValue;\n            this._addToChanges(record);\n        }\n    }\n    _addToAdditions(record) {\n        if (this._additionsHead === null) {\n            this._additionsHead = this._additionsTail = record;\n        }\n        else {\n            this._additionsTail._nextAdded = record;\n            this._additionsTail = record;\n        }\n    }\n    _addToChanges(record) {\n        if (this._changesHead === null) {\n            this._changesHead = this._changesTail = record;\n        }\n        else {\n            this._changesTail._nextChanged = record;\n            this._changesTail = record;\n        }\n    }\n    /** @internal */\n    _forEach(obj, fn) {\n        if (obj instanceof Map) {\n            obj.forEach(fn);\n        }\n        else {\n            Object.keys(obj).forEach(k => fn(obj[k], k));\n        }\n    }\n}\nclass KeyValueChangeRecord_ {\n    constructor(key) {\n        this.key = key;\n        this.previousValue = null;\n        this.currentValue = null;\n        /** @internal */\n        this._nextPrevious = null;\n        /** @internal */\n        this._next = null;\n        /** @internal */\n        this._prev = null;\n        /** @internal */\n        this._nextAdded = null;\n        /** @internal */\n        this._nextRemoved = null;\n        /** @internal */\n        this._nextChanged = null;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n *\n * @publicApi\n */\nclass IterableDiffers {\n    constructor(factories) {\n        this.factories = factories;\n    }\n    static create(factories, parent) {\n        if (parent != null) {\n            const copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new IterableDiffers(factories);\n    }\n    /**\n     * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {@link IterableDiffers} instance with the provided factories and return a new\n     * {@link IterableDiffers} instance.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link IterableDiffer} available.\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    static extend(factories) {\n        return {\n            provide: IterableDiffers,\n            useFactory: (parent) => {\n                if (!parent) {\n                    // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                    // to\n                    // bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend IterableDiffers without a parent injector');\n                }\n                return IterableDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n        };\n    }\n    find(iterable) {\n        const factory = this.factories.find(f => f.supports(iterable));\n        if (factory != null) {\n            return factory;\n        }\n        else {\n            throw new Error(`Cannot find a differ supporting object '${iterable}' of type '${getTypeNameForDebugging(iterable)}'`);\n        }\n    }\n}\n/** @nocollapse */\nIterableDiffers.ɵprov = ɵɵdefineInjectable({\n    token: IterableDiffers,\n    providedIn: 'root',\n    factory: () => new IterableDiffers([new DefaultIterableDifferFactory()])\n});\nfunction getTypeNameForDebugging(type) {\n    return type['name'] || typeof type;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n *\n * @publicApi\n */\nclass KeyValueDiffers {\n    constructor(factories) {\n        this.factories = factories;\n    }\n    static create(factories, parent) {\n        if (parent) {\n            const copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new KeyValueDiffers(factories);\n    }\n    /**\n     * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n     * {@link KeyValueDiffers} instance.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link KeyValueDiffer} available.\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    static extend(factories) {\n        return {\n            provide: KeyValueDiffers,\n            useFactory: (parent) => {\n                if (!parent) {\n                    // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                    // to bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                }\n                return KeyValueDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n        };\n    }\n    find(kv) {\n        const factory = this.factories.find(f => f.supports(kv));\n        if (factory) {\n            return factory;\n        }\n        throw new Error(`Cannot find a differ supporting object '${kv}'`);\n    }\n}\n/** @nocollapse */\nKeyValueDiffers.ɵprov = ɵɵdefineInjectable({\n    token: KeyValueDiffers,\n    providedIn: 'root',\n    factory: () => new KeyValueDiffers([new DefaultKeyValueDifferFactory()])\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Structural diffing for `Object`s and `Map`s.\n */\nconst keyValDiff = [new DefaultKeyValueDifferFactory()];\n/**\n * Structural diffing for `Iterable` types such as `Array`s.\n */\nconst iterableDiff = [new DefaultIterableDifferFactory()];\nconst defaultIterableDiffers = new IterableDiffers(iterableDiff);\nconst defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an embedded template that can be used to instantiate embedded views.\n * To instantiate embedded views based on a template, use the `ViewContainerRef`\n * method `createEmbeddedView()`.\n *\n * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n * is injected into the constructor of the directive,\n * using the `TemplateRef` token.\n *\n * You can also use a `Query` to find a `TemplateRef` associated with\n * a component or a directive.\n *\n * @see `ViewContainerRef`\n * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n *\n * @publicApi\n */\nclass TemplateRef {\n}\n/**\n * @internal\n * @nocollapse\n */\nTemplateRef.__NG_ELEMENT_ID__ = () => SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef);\nconst SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\nconst SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\nconst SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents a container where one or more views can be attached to a component.\n *\n * Can contain *host views* (created by instantiating a\n * component with the `createComponent()` method), and *embedded views*\n * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n *\n * A view container instance can contain other view containers,\n * creating a [view hierarchy](guide/glossary#view-tree).\n *\n * @see `ComponentRef`\n * @see `EmbeddedViewRef`\n *\n * @publicApi\n */\nclass ViewContainerRef {\n}\n/**\n * @internal\n * @nocollapse\n */\nViewContainerRef.__NG_ELEMENT_ID__ = () => SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef);\nconst SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\nconst SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\nconst SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n    let msg = `ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '${oldValue}'. Current value: '${currValue}'.`;\n    if (isFirstCheck) {\n        msg +=\n            ` It seems like the view has been created after its parent and its children have been dirty checked.` +\n                ` Has it been created in a change detection hook ?`;\n    }\n    return viewDebugError(msg, context);\n}\nfunction viewWrappedDebugError(err, context) {\n    if (!(err instanceof Error)) {\n        // errors that are not Error instances don't have a stack,\n        // so it is ok to wrap them into a new Error object...\n        err = new Error(err.toString());\n    }\n    _addDebugContext(err, context);\n    return err;\n}\nfunction viewDebugError(msg, context) {\n    const err = new Error(msg);\n    _addDebugContext(err, context);\n    return err;\n}\nfunction _addDebugContext(err, context) {\n    err[ERROR_DEBUG_CONTEXT] = context;\n    err[ERROR_LOGGER] = context.logError.bind(context);\n}\nfunction isViewDebugError(err) {\n    return !!getDebugContext(err);\n}\nfunction viewDestroyedError(action) {\n    return new Error(`ViewDestroyedError: Attempt to use a destroyed view: ${action}`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Called before each cycle of a view's check to detect whether this is in the\n// initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n// lifecycle methods. Returns true if this check cycle should call lifecycle\n// methods.\nfunction shiftInitState(view, priorInitState, newInitState) {\n    // Only update the InitState if we are currently in the prior state.\n    // For example, only move into CallingInit if we are in BeforeInit. Only\n    // move into CallingContentInit if we are in CallingInit. Normally this will\n    // always be true because of how checkCycle is called in checkAndUpdateView.\n    // However, if checkAndUpdateView is called recursively or if an exception is\n    // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n    // from the beginning. This ensures the state is monotonically increasing,\n    // terminating in the AfterInit state, which ensures the Init methods are called\n    // at least once and only once.\n    const state = view.state;\n    const initState = state & 1792 /* InitState_Mask */;\n    if (initState === priorInitState) {\n        view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n        view.initIndex = -1;\n        return true;\n    }\n    return initState === newInitState;\n}\n// Returns true if the lifecycle init method should be called for the node with\n// the given init index.\nfunction shouldCallLifecycleInitHook(view, initState, index) {\n    if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n        view.initIndex = index + 1;\n        return true;\n    }\n    return false;\n}\n/**\n * Node instance data.\n *\n * We have a separate type per NodeType to save memory\n * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n *\n * To keep our code monomorphic,\n * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n * purposes.\n */\nclass NodeData {\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asTextData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asElementData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asProviderData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asPureExpressionData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asQueryList(view, index) {\n    return view.nodes[index];\n}\nclass DebugContext {\n}\n/**\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n */\nconst Services = {\n    setCurrentNode: undefined,\n    createRootView: undefined,\n    createEmbeddedView: undefined,\n    createComponentView: undefined,\n    createNgModuleRef: undefined,\n    overrideProvider: undefined,\n    overrideComponentView: undefined,\n    clearOverrides: undefined,\n    checkAndUpdateView: undefined,\n    checkNoChangesView: undefined,\n    destroyView: undefined,\n    resolveDep: undefined,\n    createDebugContext: undefined,\n    handleEvent: undefined,\n    updateDirectives: undefined,\n    updateRenderer: undefined,\n    dirtyParentQueries: undefined,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst NOOP = () => { };\nconst _tokenKeyCache = new Map();\nfunction tokenKey(token) {\n    let key = _tokenKeyCache.get(token);\n    if (!key) {\n        key = stringify(token) + '_' + _tokenKeyCache.size;\n        _tokenKeyCache.set(token, key);\n    }\n    return key;\n}\nfunction unwrapValue(view, nodeIdx, bindingIdx, value) {\n    if (WrappedValue.isWrapped(value)) {\n        value = WrappedValue.unwrap(value);\n        const globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n        const oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n        view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n    }\n    return value;\n}\nconst UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\nconst EMPTY_RENDERER_TYPE_ID = '$$empty';\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nfunction createRendererType2(values) {\n    return {\n        id: UNDEFINED_RENDERER_TYPE_ID,\n        styles: values.styles,\n        encapsulation: values.encapsulation,\n        data: values.data\n    };\n}\nlet _renderCompCount$1 = 0;\nfunction resolveRendererType2(type) {\n    if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n        // first time we see this RendererType2. Initialize it...\n        const isFilled = ((type.encapsulation != null && type.encapsulation !== ViewEncapsulation$1.None) ||\n            type.styles.length || Object.keys(type.data).length);\n        if (isFilled) {\n            type.id = `c${_renderCompCount$1++}`;\n        }\n        else {\n            type.id = EMPTY_RENDERER_TYPE_ID;\n        }\n    }\n    if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n        type = null;\n    }\n    return type || null;\n}\nfunction checkBinding(view, def, bindingIdx, value) {\n    const oldValues = view.oldValues;\n    if ((view.state & 2 /* FirstCheck */) ||\n        !Object.is(oldValues[def.bindingIndex + bindingIdx], value)) {\n        return true;\n    }\n    return false;\n}\nfunction checkAndUpdateBinding(view, def, bindingIdx, value) {\n    if (checkBinding(view, def, bindingIdx, value)) {\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return true;\n    }\n    return false;\n}\nfunction checkBindingNoChanges(view, def, bindingIdx, value) {\n    const oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n    if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n        const bindingName = def.bindings[bindingIdx].name;\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), `${bindingName}: ${oldValue}`, `${bindingName}: ${value}`, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\nfunction markParentViewsForCheck(view) {\n    let currView = view;\n    while (currView) {\n        if (currView.def.flags & 2 /* OnPush */) {\n            currView.state |= 8 /* ChecksEnabled */;\n        }\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\nfunction markParentViewsForCheckProjectedViews(view, endView) {\n    let currView = view;\n    while (currView && currView !== endView) {\n        currView.state |= 64 /* CheckProjectedViews */;\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\nfunction dispatchEvent(view, nodeIndex, eventName, event) {\n    try {\n        const nodeDef = view.def.nodes[nodeIndex];\n        const startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n            asElementData(view, nodeIndex).componentView :\n            view;\n        markParentViewsForCheck(startView);\n        return Services.handleEvent(view, nodeIndex, eventName, event);\n    }\n    catch (e) {\n        // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n        view.root.errorHandler.handleError(e);\n    }\n}\nfunction declaredViewContainer(view) {\n    if (view.parent) {\n        const parentView = view.parent;\n        return asElementData(parentView, view.parentNodeDef.nodeIndex);\n    }\n    return null;\n}\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n */\nfunction viewParentEl(view) {\n    const parentView = view.parent;\n    if (parentView) {\n        return view.parentNodeDef.parent;\n    }\n    else {\n        return null;\n    }\n}\nfunction renderNode(view, def) {\n    switch (def.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return asElementData(view, def.nodeIndex).renderElement;\n        case 2 /* TypeText */:\n            return asTextData(view, def.nodeIndex).renderText;\n    }\n}\nfunction elementEventFullName(target, name) {\n    return target ? `${target}:${name}` : name;\n}\nfunction isComponentView(view) {\n    return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n}\nfunction isEmbeddedView(view) {\n    return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n}\nfunction filterQueryId(queryId) {\n    return 1 << (queryId % 32);\n}\nfunction splitMatchedQueriesDsl(matchedQueriesDsl) {\n    const matchedQueries = {};\n    let matchedQueryIds = 0;\n    const references = {};\n    if (matchedQueriesDsl) {\n        matchedQueriesDsl.forEach(([queryId, valueType]) => {\n            if (typeof queryId === 'number') {\n                matchedQueries[queryId] = valueType;\n                matchedQueryIds |= filterQueryId(queryId);\n            }\n            else {\n                references[queryId] = valueType;\n            }\n        });\n    }\n    return { matchedQueries, references, matchedQueryIds };\n}\nfunction splitDepsDsl(deps, sourceName) {\n    return deps.map(value => {\n        let token;\n        let flags;\n        if (Array.isArray(value)) {\n            [flags, token] = value;\n        }\n        else {\n            flags = 0 /* None */;\n            token = value;\n        }\n        if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n            Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n        }\n        return { flags, token, tokenKey: tokenKey(token) };\n    });\n}\nfunction getParentRenderElement(view, renderHost, def) {\n    let renderParent = def.renderParent;\n    if (renderParent) {\n        if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n            (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n            (renderParent.element.componentRendererType &&\n                renderParent.element.componentRendererType.encapsulation === ViewEncapsulation$1.Native)) {\n            // only children of non components, or children of components with native encapsulation should\n            // be attached.\n            return asElementData(view, def.renderParent.nodeIndex).renderElement;\n        }\n    }\n    else {\n        return renderHost;\n    }\n}\nconst DEFINITION_CACHE = new WeakMap();\nfunction resolveDefinition(factory) {\n    let value = DEFINITION_CACHE.get(factory);\n    if (!value) {\n        value = factory(() => NOOP);\n        value.factory = factory;\n        DEFINITION_CACHE.set(factory, value);\n    }\n    return value;\n}\nfunction rootRenderNodes(view) {\n    const renderNodes = [];\n    visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n    return renderNodes;\n}\nfunction visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n    // We need to re-compute the parent node in case the nodes have been moved around manually\n    if (action === 3 /* RemoveChild */) {\n        parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n    }\n    visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\nfunction visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n    for (let i = startIndex; i <= endIndex; i++) {\n        const nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n            visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n}\nfunction visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n    let compView = view;\n    while (compView && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    const hostView = compView.parent;\n    const hostElDef = viewParentEl(compView);\n    const startIndex = hostElDef.nodeIndex + 1;\n    const endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n    for (let i = startIndex; i <= endIndex; i++) {\n        const nodeDef = hostView.def.nodes[i];\n        if (nodeDef.ngContentIndex === ngContentIndex) {\n            visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n    if (!hostView.parent) {\n        // a root view\n        const projectedNodes = view.root.projectableNodes[ngContentIndex];\n        if (projectedNodes) {\n            for (let i = 0; i < projectedNodes.length; i++) {\n                execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n            }\n        }\n    }\n}\nfunction visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n    if (nodeDef.flags & 8 /* TypeNgContent */) {\n        visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n    }\n    else {\n        const rn = renderNode(view, nodeDef);\n        if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n            (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n            // Note: we might need to do both actions.\n            if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                const compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n            }\n        }\n        else {\n            execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n        }\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            const embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n            for (let k = 0; k < embeddedViews.length; k++) {\n                visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n            }\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n            visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n        }\n    }\n}\nfunction execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n    const renderer = view.renderer;\n    switch (action) {\n        case 1 /* AppendChild */:\n            renderer.appendChild(parentNode, renderNode);\n            break;\n        case 2 /* InsertBefore */:\n            renderer.insertBefore(parentNode, renderNode, nextSibling);\n            break;\n        case 3 /* RemoveChild */:\n            renderer.removeChild(parentNode, renderNode);\n            break;\n        case 0 /* Collect */:\n            target.push(renderNode);\n            break;\n    }\n}\nconst NS_PREFIX_RE = /^:([^:]+):(.+)$/;\nfunction splitNamespace(name) {\n    if (name[0] === ':') {\n        const match = name.match(NS_PREFIX_RE);\n        return [match[1], match[2]];\n    }\n    return ['', name];\n}\nfunction calcBindingFlags(bindings) {\n    let flags = 0;\n    for (let i = 0; i < bindings.length; i++) {\n        flags |= bindings[i].flags;\n    }\n    return flags;\n}\nfunction interpolate(valueCount, constAndInterp) {\n    let result = '';\n    for (let i = 0; i < valueCount * 2; i = i + 2) {\n        result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n    }\n    return result + constAndInterp[valueCount * 2];\n}\nfunction inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n    switch (valueCount) {\n        case 1:\n            return c0 + _toStringWithNull(a1) + c1;\n        case 2:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n        case 3:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3;\n        case 4:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4;\n        case 5:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n        case 6:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n        case 7:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7;\n        case 8:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n        case 9:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n        default:\n            throw new Error(`Does not support more than 9 expressions`);\n    }\n}\nfunction _toStringWithNull(v) {\n    return v != null ? v.toString() : '';\n}\nconst EMPTY_ARRAY$4 = [];\nconst EMPTY_MAP = {};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst UNDEFINED_VALUE = {};\nconst InjectorRefTokenKey = tokenKey(Injector);\nconst INJECTORRefTokenKey = tokenKey(INJECTOR);\nconst NgModuleRefTokenKey = tokenKey(NgModuleRef);\nfunction moduleProvideDef(flags, token, value, deps) {\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    const depDefs = splitDepsDsl(deps, stringify(token));\n    return {\n        // will bet set by the module definition\n        index: -1,\n        deps: depDefs,\n        flags,\n        token,\n        value\n    };\n}\nfunction moduleDef(providers) {\n    const providersByKey = {};\n    const modules = [];\n    let scope = null;\n    for (let i = 0; i < providers.length; i++) {\n        const provider = providers[i];\n        if (provider.token === INJECTOR_SCOPE) {\n            scope = provider.value;\n        }\n        if (provider.flags & 1073741824 /* TypeNgModule */) {\n            modules.push(provider.token);\n        }\n        provider.index = i;\n        providersByKey[tokenKey(provider.token)] = provider;\n    }\n    return {\n        // Will be filled later...\n        factory: null,\n        providersByKey,\n        providers,\n        modules,\n        scope: scope,\n    };\n}\nfunction initNgModule(data) {\n    const def = data._def;\n    const providers = data._providers = newArray(def.providers.length);\n    for (let i = 0; i < def.providers.length; i++) {\n        const provDef = def.providers[i];\n        if (!(provDef.flags & 4096 /* LazyProvider */)) {\n            // Make sure the provider has not been already initialized outside this loop.\n            if (providers[i] === undefined) {\n                providers[i] = _createProviderInstance(data, provDef);\n            }\n        }\n    }\n}\nfunction resolveNgModuleDep(data, depDef, notFoundValue = Injector.THROW_IF_NOT_FOUND) {\n    const former = setCurrentInjector(data);\n    try {\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        if (depDef.flags & 1 /* SkipSelf */) {\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        const tokenKey = depDef.tokenKey;\n        switch (tokenKey) {\n            case InjectorRefTokenKey:\n            case INJECTORRefTokenKey:\n            case NgModuleRefTokenKey:\n                return data;\n        }\n        const providerDef = data._def.providersByKey[tokenKey];\n        let injectableDef;\n        if (providerDef) {\n            let providerInstance = data._providers[providerDef.index];\n            if (providerInstance === undefined) {\n                providerInstance = data._providers[providerDef.index] =\n                    _createProviderInstance(data, providerDef);\n            }\n            return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n        }\n        else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n            const index = data._providers.length;\n            data._def.providers[index] = data._def.providersByKey[depDef.tokenKey] = {\n                flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                value: injectableDef.factory,\n                deps: [],\n                index,\n                token: depDef.token,\n            };\n            data._providers[index] = UNDEFINED_VALUE;\n            return (data._providers[index] =\n                _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n        }\n        else if (depDef.flags & 4 /* Self */) {\n            return notFoundValue;\n        }\n        return data._parent.get(depDef.token, notFoundValue);\n    }\n    finally {\n        setCurrentInjector(former);\n    }\n}\nfunction moduleTransitivelyPresent(ngModule, scope) {\n    return ngModule._def.modules.indexOf(scope) > -1;\n}\nfunction targetsModule(ngModule, def) {\n    const providedIn = def.providedIn;\n    return providedIn != null &&\n        (providedIn === 'any' || providedIn === ngModule._def.scope ||\n            moduleTransitivelyPresent(ngModule, providedIn));\n}\nfunction _createProviderInstance(ngModule, providerDef) {\n    let injectable;\n    switch (providerDef.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 1024 /* TypeFactoryProvider */:\n            injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 2048 /* TypeUseExistingProvider */:\n            injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n            break;\n        case 256 /* TypeValueProvider */:\n            injectable = providerDef.value;\n            break;\n    }\n    // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n    // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n    // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n    // set (ngOnDestroy was detected statically).\n    if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n        !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n        providerDef.flags |= 131072 /* OnDestroy */;\n    }\n    return injectable === undefined ? UNDEFINED_VALUE : injectable;\n}\nfunction _createClass(ngModule, ctor, deps) {\n    const len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            const depValues = [];\n            for (let i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return new ctor(...depValues);\n    }\n}\nfunction _callFactory(ngModule, factory, deps) {\n    const len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            const depValues = [];\n            for (let i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return factory(...depValues);\n    }\n}\nfunction callNgModuleLifecycle(ngModule, lifecycles) {\n    const def = ngModule._def;\n    const destroyed = new Set();\n    for (let i = 0; i < def.providers.length; i++) {\n        const provDef = def.providers[i];\n        if (provDef.flags & 131072 /* OnDestroy */) {\n            const instance = ngModule._providers[i];\n            if (instance && instance !== UNDEFINED_VALUE) {\n                const onDestroy = instance.ngOnDestroy;\n                if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                    onDestroy.apply(instance);\n                    destroyed.add(instance);\n                }\n            }\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction attachEmbeddedView(parentView, elementData, viewIndex, view) {\n    let embeddedViews = elementData.viewContainer._embeddedViews;\n    if (viewIndex === null || viewIndex === undefined) {\n        viewIndex = embeddedViews.length;\n    }\n    view.viewContainerParent = parentView;\n    addToArray(embeddedViews, viewIndex, view);\n    attachProjectedView(elementData, view);\n    Services.dirtyParentQueries(view);\n    const prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n}\nfunction attachProjectedView(vcElementData, view) {\n    const dvcElementData = declaredViewContainer(view);\n    if (!dvcElementData || dvcElementData === vcElementData ||\n        view.state & 16 /* IsProjectedView */) {\n        return;\n    }\n    // Note: For performance reasons, we\n    // - add a view to template._projectedViews only 1x throughout its lifetime,\n    //   and remove it not until the view is destroyed.\n    //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n    //    nested projected views as well, even across component boundaries).\n    // - don't track the insertion order of views in the projected views array\n    //   (hard, as when the views of the same template are inserted different view containers)\n    view.state |= 16 /* IsProjectedView */;\n    let projectedViews = dvcElementData.template._projectedViews;\n    if (!projectedViews) {\n        projectedViews = dvcElementData.template._projectedViews = [];\n    }\n    projectedViews.push(view);\n    // Note: we are changing the NodeDef here as we cannot calculate\n    // the fact whether a template is used for projection during compilation.\n    markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n}\nfunction markNodeAsProjectedTemplate(viewDef, nodeDef) {\n    if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n        return;\n    }\n    viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n    nodeDef.flags |= 4 /* ProjectedTemplate */;\n    let parentNodeDef = nodeDef.parent;\n    while (parentNodeDef) {\n        parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n        parentNodeDef = parentNodeDef.parent;\n    }\n}\nfunction detachEmbeddedView(elementData, viewIndex) {\n    const embeddedViews = elementData.viewContainer._embeddedViews;\n    if (viewIndex == null || viewIndex >= embeddedViews.length) {\n        viewIndex = embeddedViews.length - 1;\n    }\n    if (viewIndex < 0) {\n        return null;\n    }\n    const view = embeddedViews[viewIndex];\n    view.viewContainerParent = null;\n    removeFromArray(embeddedViews, viewIndex);\n    // See attachProjectedView for why we don't update projectedViews here.\n    Services.dirtyParentQueries(view);\n    renderDetachView$1(view);\n    return view;\n}\nfunction detachProjectedView(view) {\n    if (!(view.state & 16 /* IsProjectedView */)) {\n        return;\n    }\n    const dvcElementData = declaredViewContainer(view);\n    if (dvcElementData) {\n        const projectedViews = dvcElementData.template._projectedViews;\n        if (projectedViews) {\n            removeFromArray(projectedViews, projectedViews.indexOf(view));\n            Services.dirtyParentQueries(view);\n        }\n    }\n}\nfunction moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n    const embeddedViews = elementData.viewContainer._embeddedViews;\n    const view = embeddedViews[oldViewIndex];\n    removeFromArray(embeddedViews, oldViewIndex);\n    if (newViewIndex == null) {\n        newViewIndex = embeddedViews.length;\n    }\n    addToArray(embeddedViews, newViewIndex, view);\n    // Note: Don't need to change projectedViews as the order in there\n    // as always invalid...\n    Services.dirtyParentQueries(view);\n    renderDetachView$1(view);\n    const prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n    return view;\n}\nfunction renderAttachEmbeddedView(elementData, prevView, view) {\n    const prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) : elementData.renderElement;\n    const parentNode = view.renderer.parentNode(prevRenderNode);\n    const nextSibling = view.renderer.nextSibling(prevRenderNode);\n    // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n    // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n    visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n}\nfunction renderDetachView$1(view) {\n    visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst EMPTY_CONTEXT = {};\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nfunction createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n    return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n}\nfunction getComponentViewDefinitionFactory(componentFactory) {\n    return componentFactory.viewDefFactory;\n}\nclass ComponentFactory_ extends ComponentFactory {\n    constructor(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        super();\n        this.selector = selector;\n        this.componentType = componentType;\n        this._inputs = _inputs;\n        this._outputs = _outputs;\n        this.ngContentSelectors = ngContentSelectors;\n        this.viewDefFactory = viewDefFactory;\n    }\n    get inputs() {\n        const inputsArr = [];\n        const inputs = this._inputs;\n        for (let propName in inputs) {\n            const templateName = inputs[propName];\n            inputsArr.push({ propName, templateName });\n        }\n        return inputsArr;\n    }\n    get outputs() {\n        const outputsArr = [];\n        for (let propName in this._outputs) {\n            const templateName = this._outputs[propName];\n            outputsArr.push({ propName, templateName });\n        }\n        return outputsArr;\n    }\n    /**\n     * Creates a new component.\n     */\n    create(injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        if (!ngModule) {\n            throw new Error('ngModule should be provided');\n        }\n        const viewDef = resolveDefinition(this.viewDefFactory);\n        const componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n        const view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n        const component = asProviderData(view, componentNodeIndex).instance;\n        if (rootSelectorOrNode) {\n            view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n        }\n        return new ComponentRef_(view, new ViewRef_(view), component);\n    }\n}\nclass ComponentRef_ extends ComponentRef {\n    constructor(_view, _viewRef, _component) {\n        super();\n        this._view = _view;\n        this._viewRef = _viewRef;\n        this._component = _component;\n        this._elDef = this._view.def.nodes[0];\n        this.hostView = _viewRef;\n        this.changeDetectorRef = _viewRef;\n        this.instance = _component;\n    }\n    get location() {\n        return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n    }\n    get injector() {\n        return new Injector_(this._view, this._elDef);\n    }\n    get componentType() {\n        return this._component.constructor;\n    }\n    destroy() {\n        this._viewRef.destroy();\n    }\n    onDestroy(callback) {\n        this._viewRef.onDestroy(callback);\n    }\n}\nfunction createViewContainerData(view, elDef, elData) {\n    return new ViewContainerRef_(view, elDef, elData);\n}\nclass ViewContainerRef_ {\n    constructor(_view, _elDef, _data) {\n        this._view = _view;\n        this._elDef = _elDef;\n        this._data = _data;\n        /**\n         * @internal\n         */\n        this._embeddedViews = [];\n    }\n    get element() {\n        return new ElementRef(this._data.renderElement);\n    }\n    get injector() {\n        return new Injector_(this._view, this._elDef);\n    }\n    /** @deprecated No replacement */\n    get parentInjector() {\n        let view = this._view;\n        let elDef = this._elDef.parent;\n        while (!elDef && view) {\n            elDef = viewParentEl(view);\n            view = view.parent;\n        }\n        return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n    }\n    clear() {\n        const len = this._embeddedViews.length;\n        for (let i = len - 1; i >= 0; i--) {\n            const view = detachEmbeddedView(this._data, i);\n            Services.destroyView(view);\n        }\n    }\n    get(index) {\n        const view = this._embeddedViews[index];\n        if (view) {\n            const ref = new ViewRef_(view);\n            ref.attachToViewContainerRef(this);\n            return ref;\n        }\n        return null;\n    }\n    get length() {\n        return this._embeddedViews.length;\n    }\n    createEmbeddedView(templateRef, context, index) {\n        const viewRef = templateRef.createEmbeddedView(context || {});\n        this.insert(viewRef, index);\n        return viewRef;\n    }\n    createComponent(componentFactory, index, injector, projectableNodes, ngModuleRef) {\n        const contextInjector = injector || this.parentInjector;\n        if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n            ngModuleRef = contextInjector.get(NgModuleRef);\n        }\n        const componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n        this.insert(componentRef.hostView, index);\n        return componentRef;\n    }\n    insert(viewRef, index) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n        }\n        const viewRef_ = viewRef;\n        const viewData = viewRef_._view;\n        attachEmbeddedView(this._view, this._data, index, viewData);\n        viewRef_.attachToViewContainerRef(this);\n        return viewRef;\n    }\n    move(viewRef, currentIndex) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot move a destroyed View in a ViewContainer!');\n        }\n        const previousIndex = this._embeddedViews.indexOf(viewRef._view);\n        moveEmbeddedView(this._data, previousIndex, currentIndex);\n        return viewRef;\n    }\n    indexOf(viewRef) {\n        return this._embeddedViews.indexOf(viewRef._view);\n    }\n    remove(index) {\n        const viewData = detachEmbeddedView(this._data, index);\n        if (viewData) {\n            Services.destroyView(viewData);\n        }\n    }\n    detach(index) {\n        const view = detachEmbeddedView(this._data, index);\n        return view ? new ViewRef_(view) : null;\n    }\n}\nfunction createChangeDetectorRef(view) {\n    return new ViewRef_(view);\n}\nclass ViewRef_ {\n    constructor(_view) {\n        this._view = _view;\n        this._viewContainerRef = null;\n        this._appRef = null;\n    }\n    get rootNodes() {\n        return rootRenderNodes(this._view);\n    }\n    get context() {\n        return this._view.context;\n    }\n    get destroyed() {\n        return (this._view.state & 128 /* Destroyed */) !== 0;\n    }\n    markForCheck() {\n        markParentViewsForCheck(this._view);\n    }\n    detach() {\n        this._view.state &= ~4 /* Attached */;\n    }\n    detectChanges() {\n        const fs = this._view.root.rendererFactory;\n        if (fs.begin) {\n            fs.begin();\n        }\n        try {\n            Services.checkAndUpdateView(this._view);\n        }\n        finally {\n            if (fs.end) {\n                fs.end();\n            }\n        }\n    }\n    checkNoChanges() {\n        Services.checkNoChangesView(this._view);\n    }\n    reattach() {\n        this._view.state |= 4 /* Attached */;\n    }\n    onDestroy(callback) {\n        if (!this._view.disposables) {\n            this._view.disposables = [];\n        }\n        this._view.disposables.push(callback);\n    }\n    destroy() {\n        if (this._appRef) {\n            this._appRef.detachView(this);\n        }\n        else if (this._viewContainerRef) {\n            this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n        }\n        Services.destroyView(this._view);\n    }\n    detachFromAppRef() {\n        this._appRef = null;\n        renderDetachView$1(this._view);\n        Services.dirtyParentQueries(this._view);\n    }\n    attachToAppRef(appRef) {\n        if (this._viewContainerRef) {\n            throw new Error('This view is already attached to a ViewContainer!');\n        }\n        this._appRef = appRef;\n    }\n    attachToViewContainerRef(vcRef) {\n        if (this._appRef) {\n            throw new Error('This view is already attached directly to the ApplicationRef!');\n        }\n        this._viewContainerRef = vcRef;\n    }\n}\nfunction createTemplateData(view, def) {\n    return new TemplateRef_(view, def);\n}\nclass TemplateRef_ extends TemplateRef {\n    constructor(_parentView, _def) {\n        super();\n        this._parentView = _parentView;\n        this._def = _def;\n    }\n    createEmbeddedView(context) {\n        return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n    }\n    get elementRef() {\n        return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n    }\n}\nfunction createInjector$1(view, elDef) {\n    return new Injector_(view, elDef);\n}\nclass Injector_ {\n    constructor(view, elDef) {\n        this.view = view;\n        this.elDef = elDef;\n    }\n    get(token, notFoundValue = Injector.THROW_IF_NOT_FOUND) {\n        const allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n        return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token, tokenKey: tokenKey(token) }, notFoundValue);\n    }\n}\nfunction nodeValue(view, index) {\n    const def = view.def.nodes[index];\n    if (def.flags & 1 /* TypeElement */) {\n        const elData = asElementData(view, def.nodeIndex);\n        return def.element.template ? elData.template : elData.renderElement;\n    }\n    else if (def.flags & 2 /* TypeText */) {\n        return asTextData(view, def.nodeIndex).renderText;\n    }\n    else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n        return asProviderData(view, def.nodeIndex).instance;\n    }\n    throw new Error(`Illegal state: read nodeValue for node index ${index}`);\n}\nfunction createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n    return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n}\nclass NgModuleRef_ {\n    constructor(_moduleType, _parent, _bootstrapComponents, _def) {\n        this._moduleType = _moduleType;\n        this._parent = _parent;\n        this._bootstrapComponents = _bootstrapComponents;\n        this._def = _def;\n        this._destroyListeners = [];\n        this._destroyed = false;\n        this.injector = this;\n        initNgModule(this);\n    }\n    get(token, notFoundValue = Injector.THROW_IF_NOT_FOUND, injectFlags = InjectFlags.Default) {\n        let flags = 0 /* None */;\n        if (injectFlags & InjectFlags.SkipSelf) {\n            flags |= 1 /* SkipSelf */;\n        }\n        else if (injectFlags & InjectFlags.Self) {\n            flags |= 4 /* Self */;\n        }\n        return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n    }\n    get instance() {\n        return this.get(this._moduleType);\n    }\n    get componentFactoryResolver() {\n        return this.get(ComponentFactoryResolver);\n    }\n    destroy() {\n        if (this._destroyed) {\n            throw new Error(`The ng module ${stringify(this.instance.constructor)} has already been destroyed.`);\n        }\n        this._destroyed = true;\n        callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n        this._destroyListeners.forEach((listener) => listener());\n    }\n    onDestroy(callback) {\n        this._destroyListeners.push(callback);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst Renderer2TokenKey = tokenKey(Renderer2);\nconst ElementRefTokenKey = tokenKey(ElementRef);\nconst ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\nconst TemplateRefTokenKey = tokenKey(TemplateRef);\nconst ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\nconst InjectorRefTokenKey$1 = tokenKey(Injector);\nconst INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\nfunction directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n    const bindings = [];\n    if (props) {\n        for (let prop in props) {\n            const [bindingIndex, nonMinifiedName] = props[prop];\n            bindings[bindingIndex] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                nonMinifiedName,\n                ns: null,\n                securityContext: null,\n                suffix: null\n            };\n        }\n    }\n    const outputDefs = [];\n    if (outputs) {\n        for (let propName in outputs) {\n            outputDefs.push({ type: 1 /* DirectiveOutput */, propName, target: null, eventName: outputs[propName] });\n        }\n    }\n    flags |= 16384 /* TypeDirective */;\n    return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n}\nfunction pipeDef(flags, ctor, deps) {\n    flags |= 16 /* TypePipe */;\n    return _def(-1, flags, null, 0, ctor, ctor, deps);\n}\nfunction providerDef(flags, matchedQueries, token, value, deps) {\n    return _def(-1, flags, matchedQueries, 0, token, value, deps);\n}\nfunction _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n    const { matchedQueries, references, matchedQueryIds } = splitMatchedQueriesDsl(matchedQueriesDsl);\n    if (!outputs) {\n        outputs = [];\n    }\n    if (!bindings) {\n        bindings = [];\n    }\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    const depDefs = splitDepsDsl(deps, stringify(token));\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex,\n        flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries,\n        matchedQueryIds,\n        references,\n        ngContentIndex: -1,\n        childCount,\n        bindings,\n        bindingFlags: calcBindingFlags(bindings),\n        outputs,\n        element: null,\n        provider: { token, value, deps: depDefs },\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\nfunction createProviderInstance(view, def) {\n    return _createProviderInstance$1(view, def);\n}\nfunction createPipeInstance(view, def) {\n    // deps are looked up from component.\n    let compView = view;\n    while (compView.parent && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    // pipes can see the private services of the component\n    const allowPrivateServices = true;\n    // pipes are always eager and classes!\n    return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n}\nfunction createDirectiveInstance(view, def) {\n    // components can see other private services, other directives can't.\n    const allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n    // directives are always eager and classes!\n    const instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n    if (def.outputs.length) {\n        for (let i = 0; i < def.outputs.length; i++) {\n            const output = def.outputs[i];\n            const outputObservable = instance[output.propName];\n            if (isObservable(outputObservable)) {\n                const subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n            }\n            else {\n                throw new Error(`@Output ${output.propName} not initialized in '${instance.constructor.name}'.`);\n            }\n        }\n    }\n    return instance;\n}\nfunction eventHandlerClosure(view, index, eventName) {\n    return (event) => dispatchEvent(view, index, eventName, event);\n}\nfunction checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    const providerData = asProviderData(view, def.nodeIndex);\n    const directive = providerData.instance;\n    let changed = false;\n    let changes = undefined;\n    const bindLen = def.bindings.length;\n    if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 0, v0, changes);\n    }\n    if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 1, v1, changes);\n    }\n    if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 2, v2, changes);\n    }\n    if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 3, v3, changes);\n    }\n    if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 4, v4, changes);\n    }\n    if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 5, v5, changes);\n    }\n    if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 6, v6, changes);\n    }\n    if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 7, v7, changes);\n    }\n    if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 8, v8, changes);\n    }\n    if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 9, v9, changes);\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((def.flags & 65536 /* OnInit */) &&\n        shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\nfunction checkAndUpdateDirectiveDynamic(view, def, values) {\n    const providerData = asProviderData(view, def.nodeIndex);\n    const directive = providerData.instance;\n    let changed = false;\n    let changes = undefined;\n    for (let i = 0; i < values.length; i++) {\n        if (checkBinding(view, def, i, values[i])) {\n            changed = true;\n            changes = updateProp(view, providerData, def, i, values[i], changes);\n        }\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((def.flags & 65536 /* OnInit */) &&\n        shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\nfunction _createProviderInstance$1(view, def) {\n    // private services can see other private services\n    const allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n    const providerDef = def.provider;\n    switch (def.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n        case 1024 /* TypeFactoryProvider */:\n            return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n        case 2048 /* TypeUseExistingProvider */:\n            return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n        case 256 /* TypeValueProvider */:\n            return providerDef.value;\n    }\n}\nfunction createClass(view, elDef, allowPrivateServices, ctor, deps) {\n    const len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            const depValues = [];\n            for (let i = 0; i < len; i++) {\n                depValues.push(resolveDep(view, elDef, allowPrivateServices, deps[i]));\n            }\n            return new ctor(...depValues);\n    }\n}\nfunction callFactory(view, elDef, allowPrivateServices, factory, deps) {\n    const len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            const depValues = [];\n            for (let i = 0; i < len; i++) {\n                depValues.push(resolveDep(view, elDef, allowPrivateServices, deps[i]));\n            }\n            return factory(...depValues);\n    }\n}\n// This default value is when checking the hierarchy for a token.\n//\n// It means both:\n// - the token is not provided by the current injector,\n// - only the element injectors should be checked (ie do not check module injectors\n//\n//          mod1\n//         /\n//       el1   mod2\n//         \\  /\n//         el2\n//\n// When requesting el2.injector.get(token), we should check in the following order and return the\n// first found value:\n// - el2.injector.get(token, default)\n// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n// - mod2.injector.get(token, default)\nconst NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\nfunction resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue = Injector.THROW_IF_NOT_FOUND) {\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    const startView = view;\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    const tokenKey = depDef.tokenKey;\n    if (tokenKey === ChangeDetectorRefTokenKey) {\n        // directives on the same element as a component should be able to control the change detector\n        // of that component as well.\n        allowPrivateServices = !!(elDef && elDef.element.componentView);\n    }\n    if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n        allowPrivateServices = false;\n        elDef = elDef.parent;\n    }\n    let searchView = view;\n    while (searchView) {\n        if (elDef) {\n            switch (tokenKey) {\n                case Renderer2TokenKey: {\n                    const compView = findCompView(searchView, elDef, allowPrivateServices);\n                    return compView.renderer;\n                }\n                case ElementRefTokenKey:\n                    return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                case ViewContainerRefTokenKey:\n                    return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                case TemplateRefTokenKey: {\n                    if (elDef.element.template) {\n                        return asElementData(searchView, elDef.nodeIndex).template;\n                    }\n                    break;\n                }\n                case ChangeDetectorRefTokenKey: {\n                    let cdView = findCompView(searchView, elDef, allowPrivateServices);\n                    return createChangeDetectorRef(cdView);\n                }\n                case InjectorRefTokenKey$1:\n                case INJECTORRefTokenKey$1:\n                    return createInjector$1(searchView, elDef);\n                default:\n                    const providerDef = (allowPrivateServices ? elDef.element.allProviders :\n                        elDef.element.publicProviders)[tokenKey];\n                    if (providerDef) {\n                        let providerData = asProviderData(searchView, providerDef.nodeIndex);\n                        if (!providerData) {\n                            providerData = { instance: _createProviderInstance$1(searchView, providerDef) };\n                            searchView.nodes[providerDef.nodeIndex] = providerData;\n                        }\n                        return providerData.instance;\n                    }\n            }\n        }\n        allowPrivateServices = isComponentView(searchView);\n        elDef = viewParentEl(searchView);\n        searchView = searchView.parent;\n        if (depDef.flags & 4 /* Self */) {\n            searchView = null;\n        }\n    }\n    const value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n    if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n        notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n        // Return the value from the root element injector when\n        // - it provides it\n        //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        // - the module injector should not be checked\n        //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        return value;\n    }\n    return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n}\nfunction findCompView(view, elDef, allowPrivateServices) {\n    let compView;\n    if (allowPrivateServices) {\n        compView = asElementData(view, elDef.nodeIndex).componentView;\n    }\n    else {\n        compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n    }\n    return compView;\n}\nfunction updateProp(view, providerData, def, bindingIdx, value, changes) {\n    if (def.flags & 32768 /* Component */) {\n        const compView = asElementData(view, def.parent.nodeIndex).componentView;\n        if (compView.def.flags & 2 /* OnPush */) {\n            compView.state |= 8 /* ChecksEnabled */;\n        }\n    }\n    const binding = def.bindings[bindingIdx];\n    const propName = binding.name;\n    // Note: This is still safe with Closure Compiler as\n    // the user passed in the property name as an object has to `providerDef`,\n    // so Closure Compiler will have renamed the property correctly already.\n    providerData.instance[propName] = value;\n    if (def.flags & 524288 /* OnChanges */) {\n        changes = changes || {};\n        const oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n        const binding = def.bindings[bindingIdx];\n        changes[binding.nonMinifiedName] =\n            new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n    }\n    view.oldValues[def.bindingIndex + bindingIdx] = value;\n    return changes;\n}\n// This function calls the ngAfterContentCheck, ngAfterContentInit,\n// ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n// flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n// called during a pre-order traversal of the view tree (that is calling the\n// parent hooks before the child hooks) these events are sent in using a\n// post-order traversal of the tree (children before parents). This changes the\n// meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n// expected nodeIndex which a ngOnInit should be called. When sending\n// ngAfterContentInit and ngAfterViewInit it is the expected count of\n// ngAfterContentInit or ngAfterViewInit methods that have been called. This\n// ensure that despite being called recursively or after picking up after an\n// exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n// correct nodes. Consider for example, the following (where E is an element\n// and D is a directive)\n//  Tree:       pre-order index  post-order index\n//    E1        0                6\n//      E2      1                1\n//       D3     2                0\n//      E4      3                5\n//       E5     4                4\n//        E6    5                2\n//        E7    6                3\n// As can be seen, the post-order index has an unclear relationship to the\n// pre-order index (postOrderIndex === preOrderIndex - parentCount +\n// childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n// are stable (will be the same for the same view regardless of exceptions or\n// recursion) we just need to count them which will roughly correspond to the\n// post-order index (it skips elements and directives that do not have\n// lifecycle hooks).\n//\n// For example, if an exception is raised in the E6.onAfterViewInit() the\n// initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n// initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n// not have their ngAfterViewInit() called but, starting with E7, the rest of\n// the view will begin getting ngAfterViewInit() called until a check and\n// pass is complete.\n//\n// This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n// indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n// initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n// D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n// When the recursion returns the initIndex will be 7 so E1 is skipped as it\n// has already been called in the recursively called checkAnUpdateView().\nfunction callLifecycleHooksChildrenFirst(view, lifecycles) {\n    if (!(view.def.nodeFlags & lifecycles)) {\n        return;\n    }\n    const nodes = view.def.nodes;\n    let initIndex = 0;\n    for (let i = 0; i < nodes.length; i++) {\n        const nodeDef = nodes[i];\n        let parent = nodeDef.parent;\n        if (!parent && nodeDef.flags & lifecycles) {\n            // matching root node (e.g. a pipe)\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n        }\n        if ((nodeDef.childFlags & lifecycles) === 0) {\n            // no child matches one of the lifecycles\n            i += nodeDef.childCount;\n        }\n        while (parent && (parent.flags & 1 /* TypeElement */) &&\n            i === parent.nodeIndex + parent.childCount) {\n            // last child of an element\n            if (parent.directChildFlags & lifecycles) {\n                initIndex = callElementProvidersLifecycles(view, parent, lifecycles, initIndex);\n            }\n            parent = parent.parent;\n        }\n    }\n}\nfunction callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n    for (let i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n        const nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & lifecycles) {\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n        }\n        // only visit direct children\n        i += nodeDef.childCount;\n    }\n    return initIndex;\n}\nfunction callProviderLifecycles(view, index, lifecycles, initIndex) {\n    const providerData = asProviderData(view, index);\n    if (!providerData) {\n        return;\n    }\n    const provider = providerData.instance;\n    if (!provider) {\n        return;\n    }\n    Services.setCurrentNode(view, index);\n    if (lifecycles & 1048576 /* AfterContentInit */ &&\n        shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n        provider.ngAfterContentInit();\n    }\n    if (lifecycles & 2097152 /* AfterContentChecked */) {\n        provider.ngAfterContentChecked();\n    }\n    if (lifecycles & 4194304 /* AfterViewInit */ &&\n        shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n        provider.ngAfterViewInit();\n    }\n    if (lifecycles & 8388608 /* AfterViewChecked */) {\n        provider.ngAfterViewChecked();\n    }\n    if (lifecycles & 131072 /* OnDestroy */) {\n        provider.ngOnDestroy();\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ComponentFactoryResolver$1 extends ComponentFactoryResolver {\n    /**\n     * @param ngModule The NgModuleRef to which all resolved factories are bound.\n     */\n    constructor(ngModule) {\n        super();\n        this.ngModule = ngModule;\n    }\n    resolveComponentFactory(component) {\n        ngDevMode && assertComponentType(component);\n        const componentDef = getComponentDef(component);\n        return new ComponentFactory$1(componentDef, this.ngModule);\n    }\n}\nfunction toRefArray(map) {\n    const array = [];\n    for (let nonMinified in map) {\n        if (map.hasOwnProperty(nonMinified)) {\n            const minified = map[nonMinified];\n            array.push({ propName: minified, templateName: nonMinified });\n        }\n    }\n    return array;\n}\nfunction getNamespace$1(elementName) {\n    const name = elementName.toLowerCase();\n    return name === 'svg' ? SVG_NAMESPACE : (name === 'math' ? MATH_ML_NAMESPACE : null);\n}\n/**\n * A change detection scheduler token for {@link RootContext}. This token is the default value used\n * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n */\nconst SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n    providedIn: 'root',\n    factory: () => defaultScheduler,\n});\nfunction createChainedInjector(rootViewInjector, moduleInjector) {\n    return {\n        get: (token, notFoundValue, flags) => {\n            const value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n            if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                // Return the value from the root element injector when\n                // - it provides it\n                //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                // - the module injector should not be checked\n                //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                return value;\n            }\n            return moduleInjector.get(token, notFoundValue, flags);\n        }\n    };\n}\n/**\n * Render3 implementation of {@link viewEngine_ComponentFactory}.\n */\nclass ComponentFactory$1 extends ComponentFactory {\n    /**\n     * @param componentDef The component definition.\n     * @param ngModule The NgModuleRef to which the factory is bound.\n     */\n    constructor(componentDef, ngModule) {\n        super();\n        this.componentDef = componentDef;\n        this.ngModule = ngModule;\n        this.componentType = componentDef.type;\n        this.selector = stringifyCSSSelectorList(componentDef.selectors);\n        this.ngContentSelectors =\n            componentDef.ngContentSelectors ? componentDef.ngContentSelectors : [];\n        this.isBoundToModule = !!ngModule;\n    }\n    get inputs() {\n        return toRefArray(this.componentDef.inputs);\n    }\n    get outputs() {\n        return toRefArray(this.componentDef.outputs);\n    }\n    create(injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        ngModule = ngModule || this.ngModule;\n        const rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n        const rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n        const sanitizer = rootViewInjector.get(Sanitizer, null);\n        const hostRenderer = rendererFactory.createRenderer(null, this.componentDef);\n        // Determine a tag name used for creating host elements when this component is created\n        // dynamically. Default to 'div' if this component did not specify any tag name in its selector.\n        const elementName = this.componentDef.selectors[0][0] || 'div';\n        const hostRNode = rootSelectorOrNode ?\n            locateHostElement(hostRenderer, rootSelectorOrNode, this.componentDef.encapsulation) :\n            elementCreate(elementName, rendererFactory.createRenderer(null, this.componentDef), getNamespace$1(elementName));\n        const rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        const rootContext = createRootContext();\n        // Create the root view. Uses empty TView and ContentTemplate.\n        const rootTView = createTView(0 /* Root */, -1, null, 1, 0, null, null, null, null, null);\n        const rootLView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, hostRenderer, sanitizer, rootViewInjector);\n        // rootView is the parent when bootstrapping\n        // TODO(misko): it looks like we are entering view here but we don't really need to as\n        // `renderView` does that. However as the code is written it is needed because\n        // `createRootComponentView` and `createRootComponent` both read global state. Fixing those\n        // issues would allow us to drop this.\n        enterView(rootLView, null);\n        let component;\n        let tElementNode;\n        try {\n            const componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, hostRenderer);\n            if (hostRNode) {\n                if (rootSelectorOrNode) {\n                    setUpAttributes(hostRenderer, hostRNode, ['ng-version', VERSION.full]);\n                }\n                else {\n                    // If host element is created as a part of this function call (i.e. `rootSelectorOrNode`\n                    // is not defined), also apply attributes and classes extracted from component selector.\n                    // Extract attributes and classes from the first selector only to match VE behavior.\n                    const { attrs, classes } = extractAttrsAndClassesFromSelector(this.componentDef.selectors[0]);\n                    if (attrs) {\n                        setUpAttributes(hostRenderer, hostRNode, attrs);\n                    }\n                    if (classes && classes.length > 0) {\n                        writeDirectClass(hostRenderer, hostRNode, classes.join(' '));\n                    }\n                }\n            }\n            tElementNode = getTNode(rootTView, 0);\n            if (projectableNodes !== undefined) {\n                const projection = tElementNode.projection = [];\n                for (let i = 0; i < this.ngContentSelectors.length; i++) {\n                    const nodesforSlot = projectableNodes[i];\n                    // Projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    // We also normalize the length of the passed in projectable nodes (to match the number of\n                    // <ng-container> slots defined by a component).\n                    projection.push(nodesforSlot != null ? Array.from(nodesforSlot) : null);\n                }\n            }\n            // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n            // executed here?\n            // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n            component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n            renderView(rootTView, rootLView, null);\n        }\n        finally {\n            leaveView();\n        }\n        const componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n        // The host element of the internal root view is attached to the component's host view node.\n        ngDevMode && assertNodeOfPossibleTypes(rootTView.node, [2 /* View */]);\n        rootTView.node.child = tElementNode;\n        return componentRef;\n    }\n}\nconst componentFactoryResolver = new ComponentFactoryResolver$1();\n/**\n * Creates a ComponentFactoryResolver and stores it on the injector. Or, if the\n * ComponentFactoryResolver\n * already exists, retrieves the existing ComponentFactoryResolver.\n *\n * @returns The ComponentFactoryResolver instance to use\n */\nfunction injectComponentFactoryResolver() {\n    return componentFactoryResolver;\n}\n/**\n * Represents an instance of a Component created via a {@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n * method.\n *\n */\nclass ComponentRef$1 extends ComponentRef {\n    constructor(componentType, instance, location, _rootLView, _tNode) {\n        super();\n        this.location = location;\n        this._rootLView = _rootLView;\n        this._tNode = _tNode;\n        this.destroyCbs = [];\n        this.instance = instance;\n        this.hostView = this.changeDetectorRef = new RootViewRef(_rootLView);\n        assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n        this.componentType = componentType;\n    }\n    get injector() {\n        return new NodeInjector(this._tNode, this._rootLView);\n    }\n    destroy() {\n        if (this.destroyCbs) {\n            this.destroyCbs.forEach(fn => fn());\n            this.destroyCbs = null;\n            !this.hostView.destroyed && this.hostView.destroy();\n        }\n    }\n    onDestroy(callback) {\n        if (this.destroyCbs) {\n            this.destroyCbs.push(callback);\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// THIS CODE IS GENERATED - DO NOT MODIFY\n// See angular/tools/gulp-tasks/cldr/extract.js\nconst u = undefined;\nfunction plural(n) {\n    let i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\\.?/, '').length;\n    if (i === 1 && v === 0)\n        return 1;\n    return 5;\n}\nvar localeEn = [\n    'en',\n    [['a', 'p'], ['AM', 'PM'], u],\n    [['AM', 'PM'], u, u],\n    [\n        ['S', 'M', 'T', 'W', 'T', 'F', 'S'], ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n        ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n        ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n    ],\n    u,\n    [\n        ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n        ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        [\n            'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n            'October', 'November', 'December'\n        ]\n    ],\n    u,\n    [['B', 'A'], ['BC', 'AD'], ['Before Christ', 'Anno Domini']],\n    0,\n    [6, 0],\n    ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],\n    ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'],\n    ['{1}, {0}', u, '{1} \\'at\\' {0}', u],\n    ['.', ',', ';', '%', '+', '-', 'E', '×', '‰', '∞', 'NaN', ':'],\n    ['#,##0.###', '#,##0%', '¤#,##0.00', '#E0'],\n    'USD',\n    '$',\n    'US Dollar',\n    {},\n    'ltr',\n    plural\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This const is used to store the locale data registered with `registerLocaleData`\n */\nlet LOCALE_DATA = {};\n/**\n * Register locale data to be used internally by Angular. See the\n * [\"I18n guide\"](guide/i18n#i18n-pipes) to know how to import additional locale data.\n *\n * The signature `registerLocaleData(data: any, extraData?: any)` is deprecated since v5.1\n */\nfunction registerLocaleData(data, localeId, extraData) {\n    if (typeof localeId !== 'string') {\n        extraData = localeId;\n        localeId = data[LocaleDataIndex.LocaleId];\n    }\n    localeId = localeId.toLowerCase().replace(/_/g, '-');\n    LOCALE_DATA[localeId] = data;\n    if (extraData) {\n        LOCALE_DATA[localeId][LocaleDataIndex.ExtraData] = extraData;\n    }\n}\n/**\n * Finds the locale data for a given locale.\n *\n * @param locale The locale code.\n * @returns The locale data.\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n */\nfunction findLocaleData(locale) {\n    const normalizedLocale = normalizeLocale(locale);\n    let match = getLocaleData(normalizedLocale);\n    if (match) {\n        return match;\n    }\n    // let's try to find a parent locale\n    const parentLocale = normalizedLocale.split('-')[0];\n    match = getLocaleData(parentLocale);\n    if (match) {\n        return match;\n    }\n    if (parentLocale === 'en') {\n        return localeEn;\n    }\n    throw new Error(`Missing locale data for the locale \"${locale}\".`);\n}\n/**\n * Retrieves the default currency code for the given locale.\n *\n * The default is defined as the first currency which is still in use.\n *\n * @param locale The code of the locale whose currency code we want.\n * @returns The code of the default currency for the given locale.\n *\n */\nfunction getLocaleCurrencyCode(locale) {\n    const data = findLocaleData(locale);\n    return data[LocaleDataIndex.CurrencyCode] || null;\n}\n/**\n * Retrieves the plural function used by ICU expressions to determine the plural case to use\n * for a given locale.\n * @param locale A locale code for the locale format rules to use.\n * @returns The plural function for the locale.\n * @see `NgPlural`\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n */\nfunction getLocalePluralCase(locale) {\n    const data = findLocaleData(locale);\n    return data[LocaleDataIndex.PluralCase];\n}\n/**\n * Helper function to get the given `normalizedLocale` from `LOCALE_DATA`\n * or from the global `ng.common.locale`.\n */\nfunction getLocaleData(normalizedLocale) {\n    if (!(normalizedLocale in LOCALE_DATA)) {\n        LOCALE_DATA[normalizedLocale] = _global.ng && _global.ng.common && _global.ng.common.locales &&\n            _global.ng.common.locales[normalizedLocale];\n    }\n    return LOCALE_DATA[normalizedLocale];\n}\n/**\n * Helper function to remove all the locale data from `LOCALE_DATA`.\n */\nfunction unregisterAllLocaleData() {\n    LOCALE_DATA = {};\n}\n/**\n * Index of each type of locale data from the locale data array\n */\nvar LocaleDataIndex;\n(function (LocaleDataIndex) {\n    LocaleDataIndex[LocaleDataIndex[\"LocaleId\"] = 0] = \"LocaleId\";\n    LocaleDataIndex[LocaleDataIndex[\"DayPeriodsFormat\"] = 1] = \"DayPeriodsFormat\";\n    LocaleDataIndex[LocaleDataIndex[\"DayPeriodsStandalone\"] = 2] = \"DayPeriodsStandalone\";\n    LocaleDataIndex[LocaleDataIndex[\"DaysFormat\"] = 3] = \"DaysFormat\";\n    LocaleDataIndex[LocaleDataIndex[\"DaysStandalone\"] = 4] = \"DaysStandalone\";\n    LocaleDataIndex[LocaleDataIndex[\"MonthsFormat\"] = 5] = \"MonthsFormat\";\n    LocaleDataIndex[LocaleDataIndex[\"MonthsStandalone\"] = 6] = \"MonthsStandalone\";\n    LocaleDataIndex[LocaleDataIndex[\"Eras\"] = 7] = \"Eras\";\n    LocaleDataIndex[LocaleDataIndex[\"FirstDayOfWeek\"] = 8] = \"FirstDayOfWeek\";\n    LocaleDataIndex[LocaleDataIndex[\"WeekendRange\"] = 9] = \"WeekendRange\";\n    LocaleDataIndex[LocaleDataIndex[\"DateFormat\"] = 10] = \"DateFormat\";\n    LocaleDataIndex[LocaleDataIndex[\"TimeFormat\"] = 11] = \"TimeFormat\";\n    LocaleDataIndex[LocaleDataIndex[\"DateTimeFormat\"] = 12] = \"DateTimeFormat\";\n    LocaleDataIndex[LocaleDataIndex[\"NumberSymbols\"] = 13] = \"NumberSymbols\";\n    LocaleDataIndex[LocaleDataIndex[\"NumberFormats\"] = 14] = \"NumberFormats\";\n    LocaleDataIndex[LocaleDataIndex[\"CurrencyCode\"] = 15] = \"CurrencyCode\";\n    LocaleDataIndex[LocaleDataIndex[\"CurrencySymbol\"] = 16] = \"CurrencySymbol\";\n    LocaleDataIndex[LocaleDataIndex[\"CurrencyName\"] = 17] = \"CurrencyName\";\n    LocaleDataIndex[LocaleDataIndex[\"Currencies\"] = 18] = \"Currencies\";\n    LocaleDataIndex[LocaleDataIndex[\"Directionality\"] = 19] = \"Directionality\";\n    LocaleDataIndex[LocaleDataIndex[\"PluralCase\"] = 20] = \"PluralCase\";\n    LocaleDataIndex[LocaleDataIndex[\"ExtraData\"] = 21] = \"ExtraData\";\n})(LocaleDataIndex || (LocaleDataIndex = {}));\n/**\n * Returns the canonical form of a locale name - lowercase with `_` replaced with `-`.\n */\nfunction normalizeLocale(locale) {\n    return locale.toLowerCase().replace(/_/g, '-');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst pluralMapping = ['zero', 'one', 'two', 'few', 'many'];\n/**\n * Returns the plural case based on the locale\n */\nfunction getPluralCase(value, locale) {\n    const plural = getLocalePluralCase(locale)(parseInt(value, 10));\n    const result = pluralMapping[plural];\n    return (result !== undefined) ? result : 'other';\n}\n/**\n * The locale id that the application is using by default (for translations and ICU expressions).\n */\nconst DEFAULT_LOCALE_ID = 'en-US';\n/**\n * USD currency code that the application uses by default for CurrencyPipe when no\n * DEFAULT_CURRENCY_CODE is provided.\n */\nconst USD_CURRENCY_CODE = 'USD';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The locale id that the application is currently using (for translations and ICU expressions).\n * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n * but is now defined as a global value.\n */\nlet LOCALE_ID = DEFAULT_LOCALE_ID;\n/**\n * Sets the locale id that will be used for translations and ICU expressions.\n * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n * but is now defined as a global value.\n *\n * @param localeId\n */\nfunction setLocaleId(localeId) {\n    assertDefined(localeId, `Expected localeId to be defined`);\n    if (typeof localeId === 'string') {\n        LOCALE_ID = localeId.toLowerCase().replace(/_/g, '-');\n    }\n}\n/**\n * Gets the locale id that will be used for translations and ICU expressions.\n * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n * but is now defined as a global value.\n */\nfunction getLocaleId() {\n    return LOCALE_ID;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * NOTE: changes to the `ngI18nClosureMode` name must be synced with `compiler-cli/src/tooling.ts`.\n */\nif (typeof ngI18nClosureMode === 'undefined') {\n    // These property accesses can be ignored because ngI18nClosureMode will be set to false\n    // when optimizing code and the whole if statement will be dropped.\n    // Make sure to refer to ngI18nClosureMode as ['ngI18nClosureMode'] for closure.\n    // NOTE: we need to have it in IIFE so that the tree-shaker is happy.\n    (function () {\n        // tslint:disable-next-line:no-toplevel-property-access\n        _global['ngI18nClosureMode'] =\n            // TODO(FW-1250): validate that this actually, you know, works.\n            // tslint:disable-next-line:no-toplevel-property-access\n            typeof goog !== 'undefined' && typeof goog.getMsg === 'function';\n    })();\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction getParentFromI18nMutateOpCode(mergedCode) {\n    return mergedCode >>> 17 /* SHIFT_PARENT */;\n}\nfunction getRefFromI18nMutateOpCode(mergedCode) {\n    return (mergedCode & 131064 /* MASK_REF */) >>> 3 /* SHIFT_REF */;\n}\nfunction getInstructionFromI18nMutateOpCode(mergedCode) {\n    return mergedCode & 7 /* MASK_INSTRUCTION */;\n}\n/**\n * Marks that the next string is an element name.\n *\n * See `I18nMutateOpCodes` documentation.\n */\nconst ELEMENT_MARKER = {\n    marker: 'element'\n};\n/**\n * Marks that the next string is comment text.\n *\n * See `I18nMutateOpCodes` documentation.\n */\nconst COMMENT_MARKER = {\n    marker: 'comment'\n};\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\nconst unusedValueExportToPlacateAjd$6 = 1;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst i18nIndexStack = [];\nlet i18nIndexStackPointer = -1;\nfunction popI18nIndex() {\n    return i18nIndexStack[i18nIndexStackPointer--];\n}\nfunction pushI18nIndex(index) {\n    i18nIndexStack[++i18nIndexStackPointer] = index;\n}\nlet changeMask = 0b0;\nlet shiftsCounter = 0;\nfunction setMaskBit(bit) {\n    if (bit) {\n        changeMask = changeMask | (1 << shiftsCounter);\n    }\n    shiftsCounter++;\n}\nfunction applyI18n(tView, lView, index) {\n    if (shiftsCounter > 0) {\n        ngDevMode && assertDefined(tView, `tView should be defined`);\n        const tI18n = tView.data[index + HEADER_OFFSET];\n        let updateOpCodes;\n        let tIcus = null;\n        if (Array.isArray(tI18n)) {\n            updateOpCodes = tI18n;\n        }\n        else {\n            updateOpCodes = tI18n.update;\n            tIcus = tI18n.icus;\n        }\n        const bindingsStartIndex = getBindingIndex() - shiftsCounter - 1;\n        applyUpdateOpCodes(tView, tIcus, lView, updateOpCodes, bindingsStartIndex, changeMask);\n        // Reset changeMask & maskBit to default for the next update cycle\n        changeMask = 0b0;\n        shiftsCounter = 0;\n    }\n}\n/**\n * Apply `I18nMutateOpCodes` OpCodes.\n *\n * @param tView Current `TView`\n * @param rootIndex Pointer to the root (parent) tNode for the i18n.\n * @param createOpCodes OpCodes to process\n * @param lView Current `LView`\n */\nfunction applyCreateOpCodes(tView, rootindex, createOpCodes, lView) {\n    const renderer = lView[RENDERER];\n    let currentTNode = null;\n    let previousTNode = null;\n    const visitedNodes = [];\n    for (let i = 0; i < createOpCodes.length; i++) {\n        const opCode = createOpCodes[i];\n        if (typeof opCode == 'string') {\n            const textRNode = createTextNode(opCode, renderer);\n            const textNodeIndex = createOpCodes[++i];\n            ngDevMode && ngDevMode.rendererCreateTextNode++;\n            previousTNode = currentTNode;\n            currentTNode =\n                createDynamicNodeAtIndex(tView, lView, textNodeIndex, 3 /* Element */, textRNode, null);\n            visitedNodes.push(textNodeIndex);\n            setIsNotParent();\n        }\n        else if (typeof opCode == 'number') {\n            switch (opCode & 7 /* MASK_INSTRUCTION */) {\n                case 1 /* AppendChild */:\n                    const destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                    let destinationTNode;\n                    if (destinationNodeIndex === rootindex) {\n                        // If the destination node is `i18nStart`, we don't have a\n                        // top-level node and we should use the host node instead\n                        destinationTNode = lView[T_HOST];\n                    }\n                    else {\n                        destinationTNode = getTNode(tView, destinationNodeIndex);\n                    }\n                    ngDevMode &&\n                        assertDefined(currentTNode, `You need to create or select a node before you can insert it into the DOM`);\n                    previousTNode =\n                        appendI18nNode(tView, currentTNode, destinationTNode, previousTNode, lView);\n                    break;\n                case 0 /* Select */:\n                    // Negative indices indicate that a given TNode is a sibling node, not a parent node\n                    // (see `i18nStartFirstPass` for additional information).\n                    const isParent = opCode >= 0;\n                    // FIXME(misko): This SHIFT_REF looks suspect as it does not have mask.\n                    const nodeIndex = (isParent ? opCode : ~opCode) >>> 3 /* SHIFT_REF */;\n                    visitedNodes.push(nodeIndex);\n                    previousTNode = currentTNode;\n                    currentTNode = getTNode(tView, nodeIndex);\n                    if (currentTNode) {\n                        setPreviousOrParentTNode(currentTNode, isParent);\n                    }\n                    break;\n                case 5 /* ElementEnd */:\n                    const elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                    previousTNode = currentTNode = getTNode(tView, elementIndex);\n                    setPreviousOrParentTNode(currentTNode, false);\n                    break;\n                case 4 /* Attr */:\n                    const elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                    const attrName = createOpCodes[++i];\n                    const attrValue = createOpCodes[++i];\n                    // This code is used for ICU expressions only, since we don't support\n                    // directives/components in ICUs, we don't need to worry about inputs here\n                    elementAttributeInternal(getTNode(tView, elementNodeIndex), lView, attrName, attrValue, null, null);\n                    break;\n                default:\n                    throw new Error(`Unable to determine the type of mutate operation for \"${opCode}\"`);\n            }\n        }\n        else {\n            switch (opCode) {\n                case COMMENT_MARKER:\n                    const commentValue = createOpCodes[++i];\n                    const commentNodeIndex = createOpCodes[++i];\n                    ngDevMode &&\n                        assertEqual(typeof commentValue, 'string', `Expected \"${commentValue}\" to be a comment node value`);\n                    const commentRNode = renderer.createComment(commentValue);\n                    ngDevMode && ngDevMode.rendererCreateComment++;\n                    previousTNode = currentTNode;\n                    currentTNode = createDynamicNodeAtIndex(tView, lView, commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                    visitedNodes.push(commentNodeIndex);\n                    attachPatchData(commentRNode, lView);\n                    // We will add the case nodes later, during the update phase\n                    setIsNotParent();\n                    break;\n                case ELEMENT_MARKER:\n                    const tagNameValue = createOpCodes[++i];\n                    const elementNodeIndex = createOpCodes[++i];\n                    ngDevMode &&\n                        assertEqual(typeof tagNameValue, 'string', `Expected \"${tagNameValue}\" to be an element node tag name`);\n                    const elementRNode = renderer.createElement(tagNameValue);\n                    ngDevMode && ngDevMode.rendererCreateElement++;\n                    previousTNode = currentTNode;\n                    currentTNode = createDynamicNodeAtIndex(tView, lView, elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                    visitedNodes.push(elementNodeIndex);\n                    break;\n                default:\n                    throw new Error(`Unable to determine the type of mutate operation for \"${opCode}\"`);\n            }\n        }\n    }\n    setIsNotParent();\n    return visitedNodes;\n}\n/**\n * Apply `I18nUpdateOpCodes` OpCodes\n *\n * @param tView Current `TView`\n * @param tIcus If ICUs present than this contains them.\n * @param lView Current `LView`\n * @param updateOpCodes OpCodes to process\n * @param bindingsStartIndex Location of the first `ɵɵi18nApply`\n * @param changeMask Each bit corresponds to a `ɵɵi18nExp` (Counting backwards from\n *     `bindingsStartIndex`)\n */\nfunction applyUpdateOpCodes(tView, tIcus, lView, updateOpCodes, bindingsStartIndex, changeMask) {\n    let caseCreated = false;\n    for (let i = 0; i < updateOpCodes.length; i++) {\n        // bit code to check if we should apply the next update\n        const checkBit = updateOpCodes[i];\n        // Number of opCodes to skip until next set of update codes\n        const skipCodes = updateOpCodes[++i];\n        if (checkBit & changeMask) {\n            // The value has been updated since last checked\n            let value = '';\n            for (let j = i + 1; j <= (i + skipCodes); j++) {\n                const opCode = updateOpCodes[j];\n                if (typeof opCode == 'string') {\n                    value += opCode;\n                }\n                else if (typeof opCode == 'number') {\n                    if (opCode < 0) {\n                        // Negative opCode represent `i18nExp` values offset.\n                        value += renderStringify(lView[bindingsStartIndex - opCode]);\n                    }\n                    else {\n                        const nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                        switch (opCode & 3 /* MASK_OPCODE */) {\n                            case 1 /* Attr */:\n                                const propName = updateOpCodes[++j];\n                                const sanitizeFn = updateOpCodes[++j];\n                                elementPropertyInternal(tView, getTNode(tView, nodeIndex), lView, propName, value, lView[RENDERER], sanitizeFn, false);\n                                break;\n                            case 0 /* Text */:\n                                textBindingInternal(lView, nodeIndex, value);\n                                break;\n                            case 2 /* IcuSwitch */:\n                                caseCreated =\n                                    applyIcuSwitchCase(tView, tIcus, updateOpCodes[++j], lView, value);\n                                break;\n                            case 3 /* IcuUpdate */:\n                                applyIcuUpdateCase(tView, tIcus, updateOpCodes[++j], bindingsStartIndex, lView, caseCreated);\n                                break;\n                        }\n                    }\n                }\n            }\n        }\n        i += skipCodes;\n    }\n}\n/**\n * Apply OpCodes associated with updating an existing ICU.\n *\n * @param tView Current `TView`\n * @param tIcus ICUs active at this location.\n * @param tIcuIndex Index into `tIcus` to process.\n * @param bindingsStartIndex Location of the first `ɵɵi18nApply`\n * @param lView Current `LView`\n * @param changeMask Each bit corresponds to a `ɵɵi18nExp` (Counting backwards from\n *     `bindingsStartIndex`)\n */\nfunction applyIcuUpdateCase(tView, tIcus, tIcuIndex, bindingsStartIndex, lView, caseCreated) {\n    ngDevMode && assertIndexInRange(tIcus, tIcuIndex);\n    const tIcu = tIcus[tIcuIndex];\n    ngDevMode && assertIndexInRange(lView, tIcu.currentCaseLViewIndex);\n    const activeCaseIndex = lView[tIcu.currentCaseLViewIndex];\n    if (activeCaseIndex !== null) {\n        const mask = caseCreated ?\n            -1 : // -1 is same as all bits on, which simulates creation since it marks all bits dirty\n            changeMask;\n        applyUpdateOpCodes(tView, tIcus, lView, tIcu.update[activeCaseIndex], bindingsStartIndex, mask);\n    }\n}\n/**\n * Apply OpCodes associated with switching a case on ICU.\n *\n * This involves tearing down existing case and than building up a new case.\n *\n * @param tView Current `TView`\n * @param tIcus ICUs active at this location.\n * @param tICuIndex Index into `tIcus` to process.\n * @param lView Current `LView`\n * @param value Value of the case to update to.\n * @returns true if a new case was created (needed so that the update executes regardless of the\n *     bitmask)\n */\nfunction applyIcuSwitchCase(tView, tIcus, tICuIndex, lView, value) {\n    applyIcuSwitchCaseRemove(tView, tIcus, tICuIndex, lView);\n    // Rebuild a new case for this ICU\n    let caseCreated = false;\n    const tIcu = tIcus[tICuIndex];\n    const caseIndex = getCaseIndex(tIcu, value);\n    lView[tIcu.currentCaseLViewIndex] = caseIndex !== -1 ? caseIndex : null;\n    if (caseIndex > -1) {\n        // Add the nodes for the new case\n        applyCreateOpCodes(tView, -1, // -1 means we don't have parent node\n        tIcu.create[caseIndex], lView);\n        caseCreated = true;\n    }\n    return caseCreated;\n}\n/**\n * Apply OpCodes associated with tearing down of DOM.\n *\n * This involves tearing down existing case and than building up a new case.\n *\n * @param tView Current `TView`\n * @param tIcus ICUs active at this location.\n * @param tIcuIndex Index into `tIcus` to process.\n * @param lView Current `LView`\n * @returns true if a new case was created (needed so that the update executes regardless of the\n *     bitmask)\n */\nfunction applyIcuSwitchCaseRemove(tView, tIcus, tIcuIndex, lView) {\n    ngDevMode && assertIndexInRange(tIcus, tIcuIndex);\n    const tIcu = tIcus[tIcuIndex];\n    const activeCaseIndex = lView[tIcu.currentCaseLViewIndex];\n    if (activeCaseIndex !== null) {\n        const removeCodes = tIcu.remove[activeCaseIndex];\n        for (let k = 0; k < removeCodes.length; k++) {\n            const removeOpCode = removeCodes[k];\n            const nodeOrIcuIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n            switch (removeOpCode & 7 /* MASK_INSTRUCTION */) {\n                case 3 /* Remove */:\n                    // FIXME(misko): this comment is wrong!\n                    // Remove DOM element, but do *not* mark TNode as detached, since we are\n                    // just switching ICU cases (while keeping the same TNode), so a DOM element\n                    // representing a new ICU case will be re-created.\n                    removeNode(tView, lView, nodeOrIcuIndex, /* markAsDetached */ false);\n                    break;\n                case 6 /* RemoveNestedIcu */:\n                    applyIcuSwitchCaseRemove(tView, tIcus, nodeOrIcuIndex, lView);\n                    break;\n            }\n        }\n    }\n}\nfunction appendI18nNode(tView, tNode, parentTNode, previousTNode, lView) {\n    ngDevMode && ngDevMode.rendererMoveNode++;\n    const nextNode = tNode.next;\n    if (!previousTNode) {\n        previousTNode = parentTNode;\n    }\n    // Re-organize node tree to put this node in the correct position.\n    if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n        tNode.next = parentTNode.child;\n        parentTNode.child = tNode;\n    }\n    else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n        tNode.next = previousTNode.next;\n        previousTNode.next = tNode;\n    }\n    else {\n        tNode.next = null;\n    }\n    if (parentTNode !== lView[T_HOST]) {\n        tNode.parent = parentTNode;\n    }\n    // If tNode was moved around, we might need to fix a broken link.\n    let cursor = tNode.next;\n    while (cursor) {\n        if (cursor.next === tNode) {\n            cursor.next = nextNode;\n        }\n        cursor = cursor.next;\n    }\n    // If the placeholder to append is a projection, we need to move the projected nodes instead\n    if (tNode.type === 1 /* Projection */) {\n        applyProjection(tView, lView, tNode);\n        return tNode;\n    }\n    appendChild(tView, lView, getNativeByTNode(tNode, lView), tNode);\n    const slotValue = lView[tNode.index];\n    if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n        // Nodes that inject ViewContainerRef also have a comment node that should be moved\n        appendChild(tView, lView, slotValue[NATIVE], tNode);\n    }\n    return tNode;\n}\n/**\n * See `i18nEnd` above.\n */\nfunction i18nEndFirstPass(tView, lView) {\n    ngDevMode &&\n        assertEqual(getBindingIndex(), tView.bindingStartIndex, 'i18nEnd should be called before any binding');\n    const rootIndex = popI18nIndex();\n    const tI18n = tView.data[rootIndex + HEADER_OFFSET];\n    ngDevMode && assertDefined(tI18n, `You should call i18nStart before i18nEnd`);\n    // Find the last node that was added before `i18nEnd`\n    const lastCreatedNode = getPreviousOrParentTNode();\n    // Read the instructions to insert/move/remove DOM elements\n    const visitedNodes = applyCreateOpCodes(tView, rootIndex, tI18n.create, lView);\n    // Remove deleted nodes\n    let index = rootIndex + 1;\n    while (index <= lastCreatedNode.index - HEADER_OFFSET) {\n        if (visitedNodes.indexOf(index) === -1) {\n            removeNode(tView, lView, index, /* markAsDetached */ true);\n        }\n        // Check if an element has any local refs and skip them\n        const tNode = getTNode(tView, index);\n        if (tNode &&\n            (tNode.type === 0 /* Container */ || tNode.type === 3 /* Element */ ||\n                tNode.type === 4 /* ElementContainer */) &&\n            tNode.localNames !== null) {\n            // Divide by 2 to get the number of local refs,\n            // since they are stored as an array that also includes directive indexes,\n            // i.e. [\"localRef\", directiveIndex, ...]\n            index += tNode.localNames.length >> 1;\n        }\n        index++;\n    }\n}\nfunction removeNode(tView, lView, index, markAsDetached) {\n    const removedPhTNode = getTNode(tView, index);\n    const removedPhRNode = getNativeByIndex(index, lView);\n    if (removedPhRNode) {\n        nativeRemoveNode(lView[RENDERER], removedPhRNode);\n    }\n    const slotValue = load(lView, index);\n    if (isLContainer(slotValue)) {\n        const lContainer = slotValue;\n        if (removedPhTNode.type !== 0 /* Container */) {\n            nativeRemoveNode(lView[RENDERER], lContainer[NATIVE]);\n        }\n    }\n    if (markAsDetached) {\n        // Define this node as detached to avoid projecting it later\n        removedPhTNode.flags |= 64 /* isDetached */;\n    }\n    ngDevMode && ngDevMode.rendererRemoveNode++;\n}\n/**\n * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n */\nfunction createDynamicNodeAtIndex(tView, lView, index, type, native, name) {\n    const previousOrParentTNode = getPreviousOrParentTNode();\n    ngDevMode && assertIndexInRange(lView, index + HEADER_OFFSET);\n    lView[index + HEADER_OFFSET] = native;\n    // FIXME(misko): Why does this create A TNode??? I would not expect this to be here.\n    const tNode = getOrCreateTNode(tView, lView[T_HOST], index, type, name, null);\n    // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n    // We will link ourselves into the tree later with `appendI18nNode`.\n    if (previousOrParentTNode && previousOrParentTNode.next === tNode) {\n        previousOrParentTNode.next = null;\n    }\n    return tNode;\n}\n/**\n * Returns the index of the current case of an ICU expression depending on the main binding value\n *\n * @param icuExpression\n * @param bindingValue The value of the main binding used by this ICU expression\n */\nfunction getCaseIndex(icuExpression, bindingValue) {\n    let index = icuExpression.cases.indexOf(bindingValue);\n    if (index === -1) {\n        switch (icuExpression.type) {\n            case 1 /* plural */: {\n                const resolvedCase = getPluralCase(bindingValue, getLocaleId());\n                index = icuExpression.cases.indexOf(resolvedCase);\n                if (index === -1 && resolvedCase !== 'other') {\n                    index = icuExpression.cases.indexOf('other');\n                }\n                break;\n            }\n            case 0 /* select */: {\n                index = icuExpression.cases.indexOf('other');\n                break;\n            }\n        }\n    }\n    return index;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Converts `I18nUpdateOpCodes` array into a human readable format.\n *\n * This function is attached to the `I18nUpdateOpCodes.debug` property if `ngDevMode` is enabled.\n * This function provides a human readable view of the opcodes. This is useful when debugging the\n * application as well as writing more readable tests.\n *\n * @param this `I18nUpdateOpCodes` if attached as a method.\n * @param opcodes `I18nUpdateOpCodes` if invoked as a function.\n */\nfunction i18nUpdateOpCodesToString(opcodes) {\n    const parser = new OpCodeParser(opcodes || (Array.isArray(this) ? this : []));\n    let lines = [];\n    function consumeOpCode(value) {\n        const ref = value >>> 2 /* SHIFT_REF */;\n        const opCode = value & 3 /* MASK_OPCODE */;\n        switch (opCode) {\n            case 0 /* Text */:\n                return `(lView[${ref}] as Text).textContent = $$$`;\n            case 1 /* Attr */:\n                const attrName = parser.consumeString();\n                const sanitizationFn = parser.consumeFunction();\n                const value = sanitizationFn ? `(${sanitizationFn})($$$)` : '$$$';\n                return `(lView[${ref}] as Element).setAttribute('${attrName}', ${value})`;\n            case 2 /* IcuSwitch */:\n                return `icuSwitchCase(lView[${ref}] as Comment, ${parser.consumeNumber()}, $$$)`;\n            case 3 /* IcuUpdate */:\n                return `icuUpdateCase(lView[${ref}] as Comment, ${parser.consumeNumber()})`;\n        }\n        throw new Error('unexpected OpCode');\n    }\n    while (parser.hasMore()) {\n        let mask = parser.consumeNumber();\n        let size = parser.consumeNumber();\n        const end = parser.i + size;\n        const statements = [];\n        let statement = '';\n        while (parser.i < end) {\n            let value = parser.consumeNumberOrString();\n            if (typeof value === 'string') {\n                statement += value;\n            }\n            else if (value < 0) {\n                // Negative numbers are ref indexes\n                statement += '${lView[' + (0 - value) + ']}';\n            }\n            else {\n                // Positive numbers are operations.\n                const opCodeText = consumeOpCode(value);\n                statements.push(opCodeText.replace('$$$', '`' + statement + '`') + ';');\n                statement = '';\n            }\n        }\n        lines.push(`if (mask & 0b${mask.toString(2)}) { ${statements.join(' ')} }`);\n    }\n    return lines;\n}\n/**\n * Converts `I18nMutableOpCodes` array into a human readable format.\n *\n * This function is attached to the `I18nMutableOpCodes.debug` if `ngDevMode` is enabled. This\n * function provides a human readable view of the opcodes. This is useful when debugging the\n * application as well as writing more readable tests.\n *\n * @param this `I18nMutableOpCodes` if attached as a method.\n * @param opcodes `I18nMutableOpCodes` if invoked as a function.\n */\nfunction i18nMutateOpCodesToString(opcodes) {\n    const parser = new OpCodeParser(opcodes || (Array.isArray(this) ? this : []));\n    let lines = [];\n    function consumeOpCode(opCode) {\n        const parent = getParentFromI18nMutateOpCode(opCode);\n        const ref = getRefFromI18nMutateOpCode(opCode);\n        switch (getInstructionFromI18nMutateOpCode(opCode)) {\n            case 0 /* Select */:\n                lastRef = ref;\n                return '';\n            case 1 /* AppendChild */:\n                return `(lView[${parent}] as Element).appendChild(lView[${lastRef}])`;\n            case 3 /* Remove */:\n                return `(lView[${parent}] as Element).remove(lView[${ref}])`;\n            case 4 /* Attr */:\n                return `(lView[${ref}] as Element).setAttribute(\"${parser.consumeString()}\", \"${parser.consumeString()}\")`;\n            case 5 /* ElementEnd */:\n                return `setPreviousOrParentTNode(tView.data[${ref}] as TNode)`;\n            case 6 /* RemoveNestedIcu */:\n                return `removeNestedICU(${ref})`;\n        }\n        throw new Error('Unexpected OpCode');\n    }\n    let lastRef = -1;\n    while (parser.hasMore()) {\n        let value = parser.consumeNumberStringOrMarker();\n        if (value === COMMENT_MARKER) {\n            const text = parser.consumeString();\n            lastRef = parser.consumeNumber();\n            lines.push(`lView[${lastRef}] = document.createComment(\"${text}\")`);\n        }\n        else if (value === ELEMENT_MARKER) {\n            const text = parser.consumeString();\n            lastRef = parser.consumeNumber();\n            lines.push(`lView[${lastRef}] = document.createElement(\"${text}\")`);\n        }\n        else if (typeof value === 'string') {\n            lastRef = parser.consumeNumber();\n            lines.push(`lView[${lastRef}] = document.createTextNode(\"${value}\")`);\n        }\n        else if (typeof value === 'number') {\n            const line = consumeOpCode(value);\n            line && lines.push(line);\n        }\n        else {\n            throw new Error('Unexpected value');\n        }\n    }\n    return lines;\n}\nclass OpCodeParser {\n    constructor(codes) {\n        this.i = 0;\n        this.codes = codes;\n    }\n    hasMore() {\n        return this.i < this.codes.length;\n    }\n    consumeNumber() {\n        let value = this.codes[this.i++];\n        assertNumber(value, 'expecting number in OpCode');\n        return value;\n    }\n    consumeString() {\n        let value = this.codes[this.i++];\n        assertString(value, 'expecting string in OpCode');\n        return value;\n    }\n    consumeFunction() {\n        let value = this.codes[this.i++];\n        if (value === null || typeof value === 'function') {\n            return value;\n        }\n        throw new Error('expecting function in OpCode');\n    }\n    consumeNumberOrString() {\n        let value = this.codes[this.i++];\n        if (typeof value === 'string') {\n            return value;\n        }\n        assertNumber(value, 'expecting number or string in OpCode');\n        return value;\n    }\n    consumeNumberStringOrMarker() {\n        let value = this.codes[this.i++];\n        if (typeof value === 'string' || typeof value === 'number' || value == COMMENT_MARKER ||\n            value == ELEMENT_MARKER) {\n            return value;\n        }\n        assertNumber(value, 'expecting number, string, COMMENT_MARKER or ELEMENT_MARKER in OpCode');\n        return value;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\nconst ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\nconst NESTED_ICU = /�(\\d+)�/;\nconst ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n// Count for the number of vars that will be allocated for each i18n block.\n// It is global because this is used in multiple functions that include loops and recursive calls.\n// This is reset to 0 when `i18nStartFirstPass` is called.\nlet i18nVarsCount;\nconst parentIndexStack = [];\nconst MARKER = `�`;\nconst SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\nconst PH_REGEXP = /�(\\/?[#*!]\\d+):?\\d*�/gi;\n/**\n * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n * and later on replaced by a space. We are re-implementing the same idea here, since translations\n * might contain this special character.\n */\nconst NGSP_UNICODE_REGEXP = /\\uE500/g;\nfunction replaceNgsp(value) {\n    return value.replace(NGSP_UNICODE_REGEXP, ' ');\n}\n/**\n * See `i18nStart` above.\n */\nfunction i18nStartFirstPass(lView, tView, index, message, subTemplateIndex) {\n    const startIndex = tView.blueprint.length - HEADER_OFFSET;\n    i18nVarsCount = 0;\n    const previousOrParentTNode = getPreviousOrParentTNode();\n    const parentTNode = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n    let parentIndex = parentTNode && parentTNode !== lView[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n    let parentIndexPointer = 0;\n    parentIndexStack[parentIndexPointer] = parentIndex;\n    const createOpCodes = [];\n    if (ngDevMode) {\n        attachDebugGetter(createOpCodes, i18nMutateOpCodesToString);\n    }\n    // If the previous node wasn't the direct parent then we have a translation without top level\n    // element and we need to keep a reference of the previous element if there is one. We should also\n    // keep track whether an element was a parent node or not, so that the logic that consumes\n    // the generated `I18nMutateOpCode`s can leverage this information to properly set TNode state\n    // (whether it's a parent or sibling).\n    if (index > 0 && previousOrParentTNode !== parentTNode) {\n        let previousTNodeIndex = previousOrParentTNode.index - HEADER_OFFSET;\n        // If current TNode is a sibling node, encode it using a negative index. This information is\n        // required when the `Select` action is processed (see the `readCreateOpCodes` function).\n        if (!getIsParent()) {\n            previousTNodeIndex = ~previousTNodeIndex;\n        }\n        // Create an OpCode to select the previous TNode\n        createOpCodes.push(previousTNodeIndex << 3 /* SHIFT_REF */ | 0 /* Select */);\n    }\n    const updateOpCodes = [];\n    if (ngDevMode) {\n        attachDebugGetter(updateOpCodes, i18nUpdateOpCodesToString);\n    }\n    const icuExpressions = [];\n    if (message === '' && isRootTemplateMessage(subTemplateIndex)) {\n        // If top level translation is an empty string, do not invoke additional processing\n        // and just create op codes for empty text node instead.\n        createOpCodes.push(message, allocNodeIndex(startIndex), parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n    }\n    else {\n        const templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        const msgParts = replaceNgsp(templateTranslation).split(PH_REGEXP);\n        for (let i = 0; i < msgParts.length; i++) {\n            let value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === \"#\" /* ELEMENT */) {\n                        const phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    const phIndex = parseInt(value.substr(1), 10);\n                    const isElement = value.charAt(0) === \"#\" /* ELEMENT */;\n                    // The value represents a placeholder that we move to the designated index.\n                    // Note: positive indicies indicate that a TNode with a given index should also be marked\n                    // as parent while executing `Select` instruction.\n                    createOpCodes.push((isElement ? phIndex : ~phIndex) << 3 /* SHIFT_REF */ |\n                        0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (isElement) {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                const parts = extractParts(value);\n                for (let j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        const icuExpression = parts[j];\n                        // Verify that ICU expression has the right shape. Translations might contain invalid\n                        // constructions (while original messages were correct), so ICU parsing at runtime may\n                        // not succeed (thus `icuExpression` remains a string).\n                        if (typeof icuExpression !== 'object') {\n                            throw new Error(`Unable to parse ICU expression in \"${templateTranslation}\" message.`);\n                        }\n                        // Create the comment node that will anchor the ICU expression\n                        const icuNodeIndex = allocNodeIndex(startIndex);\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? `ICU ${icuNodeIndex}` : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        const mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        const tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        const text = parts[j];\n                        // Even indexes are text (including bindings)\n                        const hasBinding = text.match(BINDING_REGEXP);\n                        // Create text nodes\n                        const textNodeIndex = allocNodeIndex(startIndex);\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if (i18nVarsCount > 0) {\n        allocExpando(tView, lView, i18nVarsCount);\n    }\n    // NOTE: local var needed to properly assert the type of `TI18n`.\n    const tI18n = {\n        vars: i18nVarsCount,\n        create: createOpCodes,\n        update: updateOpCodes,\n        icus: icuExpressions.length ? icuExpressions : null,\n    };\n    tView.data[index + HEADER_OFFSET] = tI18n;\n}\n/**\n * See `i18nAttributes` above.\n */\nfunction i18nAttributesFirstPass(lView, tView, index, values) {\n    const previousElement = getPreviousOrParentTNode();\n    const previousElementIndex = previousElement.index - HEADER_OFFSET;\n    const updateOpCodes = [];\n    if (ngDevMode) {\n        attachDebugGetter(updateOpCodes, i18nUpdateOpCodesToString);\n    }\n    for (let i = 0; i < values.length; i += 2) {\n        const attrName = values[i];\n        const message = values[i + 1];\n        const parts = message.split(ICU_REGEXP);\n        for (let j = 0; j < parts.length; j++) {\n            const value = parts[j];\n            if (j & 1) {\n                // Odd indexes are ICU expressions\n                // TODO(ocombe): support ICU expressions in attributes\n                throw new Error('ICU expressions are not yet supported in attributes');\n            }\n            else if (value !== '') {\n                // Even indexes are text (including bindings)\n                const hasBinding = !!value.match(BINDING_REGEXP);\n                if (hasBinding) {\n                    if (tView.firstCreatePass && tView.data[index + HEADER_OFFSET] === null) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                    }\n                }\n                else {\n                    const tNode = getTNode(tView, previousElementIndex);\n                    // Set attributes for Elements only, for other types (like ElementContainer),\n                    // only set inputs below\n                    if (tNode.type === 3 /* Element */) {\n                        elementAttributeInternal(tNode, lView, attrName, value, null, null);\n                    }\n                    // Check if that attribute is a directive input\n                    const dataValue = tNode.inputs !== null && tNode.inputs[attrName];\n                    if (dataValue) {\n                        setInputsForProperty(tView, lView, dataValue, attrName, value);\n                        if (ngDevMode) {\n                            const element = getNativeByIndex(previousElementIndex, lView);\n                            setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if (tView.firstCreatePass && tView.data[index + HEADER_OFFSET] === null) {\n        tView.data[index + HEADER_OFFSET] = updateOpCodes;\n    }\n}\n/**\n * Generate the OpCodes to update the bindings of a string.\n *\n * @param str The string containing the bindings.\n * @param destinationNode Index of the destination node which will receive the binding.\n * @param attrName Name of the attribute, if the string belongs to an attribute.\n * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n */\nfunction generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn = null) {\n    const updateOpCodes = [null, null]; // Alloc space for mask and size\n    if (ngDevMode) {\n        attachDebugGetter(updateOpCodes, i18nUpdateOpCodesToString);\n    }\n    const textParts = str.split(BINDING_REGEXP);\n    let mask = 0;\n    for (let j = 0; j < textParts.length; j++) {\n        const textValue = textParts[j];\n        if (j & 1) {\n            // Odd indexes are bindings\n            const bindingIndex = parseInt(textValue, 10);\n            updateOpCodes.push(-1 - bindingIndex);\n            mask = mask | toMaskBit(bindingIndex);\n        }\n        else if (textValue !== '') {\n            // Even indexes are text\n            updateOpCodes.push(textValue);\n        }\n    }\n    updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n        (attrName ? 1 /* Attr */ : 0 /* Text */));\n    if (attrName) {\n        updateOpCodes.push(attrName, sanitizeFn);\n    }\n    updateOpCodes[0] = mask;\n    updateOpCodes[1] = updateOpCodes.length - 2;\n    return updateOpCodes;\n}\nfunction getBindingMask(icuExpression, mask = 0) {\n    mask = mask | toMaskBit(icuExpression.mainBinding);\n    let match;\n    for (let i = 0; i < icuExpression.values.length; i++) {\n        const valueArr = icuExpression.values[i];\n        for (let j = 0; j < valueArr.length; j++) {\n            const value = valueArr[j];\n            if (typeof value === 'string') {\n                while (match = BINDING_REGEXP.exec(value)) {\n                    mask = mask | toMaskBit(parseInt(match[1], 10));\n                }\n            }\n            else {\n                mask = getBindingMask(value, mask);\n            }\n        }\n    }\n    return mask;\n}\nfunction allocNodeIndex(startIndex) {\n    return startIndex + i18nVarsCount++;\n}\n/**\n * Convert binding index to mask bit.\n *\n * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n * that we will execute binding code more often than necessary. (penalty of performance)\n */\nfunction toMaskBit(bindingIndex) {\n    return 1 << Math.min(bindingIndex, 31);\n}\nfunction isRootTemplateMessage(subTemplateIndex) {\n    return subTemplateIndex === undefined;\n}\n/**\n * Removes everything inside the sub-templates of a message.\n */\nfunction removeInnerTemplateTranslation(message) {\n    let match;\n    let res = '';\n    let index = 0;\n    let inTemplate = false;\n    let tagMatched;\n    while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n        if (!inTemplate) {\n            res += message.substring(index, match.index + match[0].length);\n            tagMatched = match[1];\n            inTemplate = true;\n        }\n        else {\n            if (match[0] === `${MARKER}/*${tagMatched}${MARKER}`) {\n                index = match.index;\n                inTemplate = false;\n            }\n        }\n    }\n    ngDevMode &&\n        assertEqual(inTemplate, false, `Tag mismatch: unable to find the end of the sub-template in the translation \"${message}\"`);\n    res += message.substr(index);\n    return res;\n}\n/**\n * Extracts a part of a message and removes the rest.\n *\n * This method is used for extracting a part of the message associated with a template. A translated\n * message can span multiple templates.\n *\n * Example:\n * ```\n * <div i18n>Translate <span *ngIf>me</span>!</div>\n * ```\n *\n * @param message The message to crop\n * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n * external template and removes all sub-templates.\n */\nfunction getTranslationForTemplate(message, subTemplateIndex) {\n    if (isRootTemplateMessage(subTemplateIndex)) {\n        // We want the root template message, ignore all sub-templates\n        return removeInnerTemplateTranslation(message);\n    }\n    else {\n        // We want a specific sub-template\n        const start = message.indexOf(`:${subTemplateIndex}${MARKER}`) + 2 + subTemplateIndex.toString().length;\n        const end = message.search(new RegExp(`${MARKER}\\\\/\\\\*\\\\d+:${subTemplateIndex}${MARKER}`));\n        return removeInnerTemplateTranslation(message.substring(start, end));\n    }\n}\n/**\n * Generate the OpCodes for ICU expressions.\n *\n * @param tIcus\n * @param icuExpression\n * @param startIndex\n * @param expandoStartIndex\n */\nfunction icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n    const createCodes = [];\n    const removeCodes = [];\n    const updateCodes = [];\n    const vars = [];\n    const childIcus = [];\n    const values = icuExpression.values;\n    for (let i = 0; i < values.length; i++) {\n        // Each value is an array of strings & other ICU expressions\n        const valueArr = values[i];\n        const nestedIcus = [];\n        for (let j = 0; j < valueArr.length; j++) {\n            const value = valueArr[j];\n            if (typeof value !== 'string') {\n                // It is an nested ICU expression\n                const icuIndex = nestedIcus.push(value) - 1;\n                // Replace nested ICU expression by a comment node\n                valueArr[j] = `<!--�${icuIndex}�-->`;\n            }\n        }\n        const icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n        createCodes.push(icuCase.create);\n        removeCodes.push(icuCase.remove);\n        updateCodes.push(icuCase.update);\n        vars.push(icuCase.vars);\n        childIcus.push(icuCase.childIcus);\n    }\n    const tIcu = {\n        type: icuExpression.type,\n        vars,\n        currentCaseLViewIndex: HEADER_OFFSET +\n            expandoStartIndex // expandoStartIndex does not include the header so add it.\n            + 1,\n        childIcus,\n        cases: icuExpression.cases,\n        create: createCodes,\n        remove: removeCodes,\n        update: updateCodes\n    };\n    tIcus.push(tIcu);\n    // Adding the maximum possible of vars needed (based on the cases with the most vars)\n    i18nVarsCount += Math.max(...vars);\n}\n/**\n * Parses text containing an ICU expression and produces a JSON object for it.\n * Original code from closure library, modified for Angular.\n *\n * @param pattern Text containing an ICU expression that needs to be parsed.\n *\n */\nfunction parseICUBlock(pattern) {\n    const cases = [];\n    const values = [];\n    let icuType = 1 /* plural */;\n    let mainBinding = 0;\n    pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n        if (type === 'select') {\n            icuType = 0 /* select */;\n        }\n        else {\n            icuType = 1 /* plural */;\n        }\n        mainBinding = parseInt(binding.substr(1), 10);\n        return '';\n    });\n    const parts = extractParts(pattern);\n    // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n    for (let pos = 0; pos < parts.length;) {\n        let key = parts[pos++].trim();\n        if (icuType === 1 /* plural */) {\n            // Key can be \"=x\", we just want \"x\"\n            key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n        }\n        if (key.length) {\n            cases.push(key);\n        }\n        const blocks = extractParts(parts[pos++]);\n        if (cases.length > values.length) {\n            values.push(blocks);\n        }\n    }\n    // TODO(ocombe): support ICU expressions in attributes, see #21615\n    return { type: icuType, mainBinding: mainBinding, cases, values };\n}\n/**\n * Transforms a string template into an HTML template and a list of instructions used to update\n * attributes or nodes that contain bindings.\n *\n * @param unsafeHtml The string to parse\n * @param parentIndex\n * @param nestedIcus\n * @param tIcus\n * @param expandoStartIndex\n */\nfunction parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n    const inertBodyHelper = getInertBodyHelper(getDocument());\n    const inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n    if (!inertBodyElement) {\n        throw new Error('Unable to generate inert body element');\n    }\n    const wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n    const opCodes = {\n        vars: 1,\n        childIcus: [],\n        create: [],\n        remove: [],\n        update: []\n    };\n    if (ngDevMode) {\n        attachDebugGetter(opCodes.create, i18nMutateOpCodesToString);\n        attachDebugGetter(opCodes.remove, i18nMutateOpCodesToString);\n        attachDebugGetter(opCodes.update, i18nUpdateOpCodesToString);\n    }\n    parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n    return opCodes;\n}\n/**\n * Breaks pattern into strings and top level {...} blocks.\n * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n * keys and cases.\n * Original code from closure library, modified for Angular.\n *\n * @param pattern (sub)Pattern to be broken.\n *\n */\nfunction extractParts(pattern) {\n    if (!pattern) {\n        return [];\n    }\n    let prevPos = 0;\n    const braceStack = [];\n    const results = [];\n    const braces = /[{}]/g;\n    // lastIndex doesn't get set to 0 so we have to.\n    braces.lastIndex = 0;\n    let match;\n    while (match = braces.exec(pattern)) {\n        const pos = match.index;\n        if (match[0] == '}') {\n            braceStack.pop();\n            if (braceStack.length == 0) {\n                // End of the block.\n                const block = pattern.substring(prevPos, pos);\n                if (ICU_BLOCK_REGEXP.test(block)) {\n                    results.push(parseICUBlock(block));\n                }\n                else {\n                    results.push(block);\n                }\n                prevPos = pos + 1;\n            }\n        }\n        else {\n            if (braceStack.length == 0) {\n                const substring = pattern.substring(prevPos, pos);\n                results.push(substring);\n                prevPos = pos + 1;\n            }\n            braceStack.push('{');\n        }\n    }\n    const substring = pattern.substring(prevPos);\n    results.push(substring);\n    return results;\n}\n/**\n * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n *\n * @param currentNode The first node to parse\n * @param icuCase The data for the ICU expression case that contains those nodes\n * @param parentIndex Index of the current node's parent\n * @param nestedIcus Data for the nested ICU expressions that this case contains\n * @param tIcus Data for all ICU expressions of the current message\n * @param expandoStartIndex Expando start index for the current ICU expression\n */\nfunction parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n    if (currentNode) {\n        const nestedIcusToCreate = [];\n        while (currentNode) {\n            const nextNode = currentNode.nextSibling;\n            const newIndex = expandoStartIndex + ++icuCase.vars;\n            switch (currentNode.nodeType) {\n                case Node.ELEMENT_NODE:\n                    const element = currentNode;\n                    const tagName = element.tagName.toLowerCase();\n                    if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                        // This isn't a valid element, we won't create an element for it\n                        icuCase.vars--;\n                    }\n                    else {\n                        icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        const elAttrs = element.attributes;\n                        for (let i = 0; i < elAttrs.length; i++) {\n                            const attr = elAttrs.item(i);\n                            const lowerAttrName = attr.name.toLowerCase();\n                            const hasBinding = !!attr.value.match(BINDING_REGEXP);\n                            // we assume the input string is safe, unless it's using a binding\n                            if (hasBinding) {\n                                if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                    if (URI_ATTRS[lowerAttrName]) {\n                                        addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                    }\n                                    else if (SRCSET_ATTRS[lowerAttrName]) {\n                                        addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                    }\n                                    else {\n                                        addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                    }\n                                }\n                                else {\n                                    ngDevMode &&\n                                        console.warn(`WARNING: ignoring unsafe attribute value ${lowerAttrName} on element ${tagName} (see http://g.co/ng/security#xss)`);\n                                }\n                            }\n                            else {\n                                icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                            }\n                        }\n                        // Parse the children of this node (if any)\n                        parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                        // Remove the parent node after the children\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                    }\n                    break;\n                case Node.TEXT_NODE:\n                    const value = currentNode.textContent || '';\n                    const hasBinding = value.match(BINDING_REGEXP);\n                    icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                    }\n                    break;\n                case Node.COMMENT_NODE:\n                    // Check if the comment node is a placeholder for a nested ICU\n                    const match = NESTED_ICU.exec(currentNode.textContent || '');\n                    if (match) {\n                        const nestedIcuIndex = parseInt(match[1], 10);\n                        const newLocal = ngDevMode ? `nested ICU ${nestedIcuIndex}` : '';\n                        // Create the comment node that will anchor the ICU expression\n                        icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        const nestedIcu = nestedIcus[nestedIcuIndex];\n                        nestedIcusToCreate.push([nestedIcu, newIndex]);\n                    }\n                    else {\n                        // We do not handle any other type of comment\n                        icuCase.vars--;\n                    }\n                    break;\n                default:\n                    // We do not handle any other type of element\n                    icuCase.vars--;\n            }\n            currentNode = nextNode;\n        }\n        for (let i = 0; i < nestedIcusToCreate.length; i++) {\n            const nestedIcu = nestedIcusToCreate[i][0];\n            const nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n            icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n            // Since this is recursive, the last TIcu that was pushed is the one we want\n            const nestTIcuIndex = tIcus.length - 1;\n            icuCase.vars += Math.max(...tIcus[nestTIcuIndex].vars);\n            icuCase.childIcus.push(nestTIcuIndex);\n            const mask = getBindingMask(nestedIcu);\n            icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n            3, // skip 3 opCodes if not changed\n            -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, \n            // FIXME(misko): Index should be part of the opcode\n            nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n            2, // skip 2 opCodes if not changed\n            nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n            icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, \n            // FIXME(misko): Index should be part of the opcode\n            nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// i18nPostprocess consts\nconst ROOT_TEMPLATE_ID = 0;\nconst PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\nconst PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\nconst PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\nconst PP_ICU_PLACEHOLDERS_REGEXP = /{([A-Z0-9_]+)}/g;\nconst PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\nconst PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\nconst PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n/**\n * Handles message string post-processing for internationalization.\n *\n * Handles message string post-processing by transforming it from intermediate\n * format (that might contain some markers that we need to replace) to the final\n * form, consumable by i18nStart instruction. Post processing steps include:\n *\n * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n * 3. Replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n * 4. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n *    in case multiple ICUs have the same placeholder name\n *\n * @param message Raw translation string for post processing\n * @param replacements Set of replacements that should be applied\n *\n * @returns Transformed string that can be consumed by i18nStart instruction\n *\n * @codeGenApi\n */\nfunction i18nPostprocess(message, replacements = {}) {\n    /**\n     * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n     *\n     * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n     * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n     * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n     * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n     * front of �#6�. The post processing step restores the right order by keeping track of the\n     * template id stack and looks for placeholders that belong to the currently active template.\n     */\n    let result = message;\n    if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n        const matches = {};\n        const templateIdsStack = [ROOT_TEMPLATE_ID];\n        result = result.replace(PP_PLACEHOLDERS_REGEXP, (m, phs, tmpl) => {\n            const content = phs || tmpl;\n            const placeholders = matches[content] || [];\n            if (!placeholders.length) {\n                content.split('|').forEach((placeholder) => {\n                    const match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                    const templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                    const isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                    placeholders.push([templateId, isCloseTemplateTag, placeholder]);\n                });\n                matches[content] = placeholders;\n            }\n            if (!placeholders.length) {\n                throw new Error(`i18n postprocess: unmatched placeholder - ${content}`);\n            }\n            const currentTemplateId = templateIdsStack[templateIdsStack.length - 1];\n            let idx = 0;\n            // find placeholder index that matches current template id\n            for (let i = 0; i < placeholders.length; i++) {\n                if (placeholders[i][0] === currentTemplateId) {\n                    idx = i;\n                    break;\n                }\n            }\n            // update template id stack based on the current tag extracted\n            const [templateId, isCloseTemplateTag, placeholder] = placeholders[idx];\n            if (isCloseTemplateTag) {\n                templateIdsStack.pop();\n            }\n            else if (currentTemplateId !== templateId) {\n                templateIdsStack.push(templateId);\n            }\n            // remove processed tag from the list\n            placeholders.splice(idx, 1);\n            return placeholder;\n        });\n    }\n    // return current result if no replacements specified\n    if (!Object.keys(replacements).length) {\n        return result;\n    }\n    /**\n     * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n     */\n    result = result.replace(PP_ICU_VARS_REGEXP, (match, start, key, _type, _idx, end) => {\n        return replacements.hasOwnProperty(key) ? `${start}${replacements[key]}${end}` : match;\n    });\n    /**\n     * Step 3: replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n     */\n    result = result.replace(PP_ICU_PLACEHOLDERS_REGEXP, (match, key) => {\n        return replacements.hasOwnProperty(key) ? replacements[key] : match;\n    });\n    /**\n     * Step 4: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n     * multiple ICUs have the same placeholder name\n     */\n    result = result.replace(PP_ICUS_REGEXP, (match, key) => {\n        if (replacements.hasOwnProperty(key)) {\n            const list = replacements[key];\n            if (!list.length) {\n                throw new Error(`i18n postprocess: unmatched ICU - ${match} with key: ${key}`);\n            }\n            return list.shift();\n        }\n        return match;\n    });\n    return result;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Marks a block of text as translatable.\n *\n * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n * The translation `message` is the value which is locale specific. The translation string may\n * contain placeholders which associate inner elements and sub-templates within the translation.\n *\n * The translation `message` placeholders are:\n * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n *   `block` that matches the sub-template in which it was declared.\n * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n *   and end of DOM element that were embedded in the original translation block. The placeholder\n *   `index` points to the element index in the template instructions set. An optional `block` that\n *   matches the sub-template in which it was declared.\n * - `�!{index}(:{block})�`/`�/!{index}(:{block})�`: *Projection Placeholder*:  Marks the\n *   beginning and end of <ng-content> that was embedded in the original translation block.\n *   The placeholder `index` points to the element index in the template instructions set.\n *   An optional `block` that matches the sub-template in which it was declared.\n * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n *   split up and translated separately in each angular template function. The `index` points to the\n *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n *\n * @param index A unique index of the translation in the static block.\n * @param message The translation message.\n * @param subTemplateIndex Optional sub-template index in the `message`.\n *\n * @codeGenApi\n */\nfunction ɵɵi18nStart(index, message, subTemplateIndex) {\n    const tView = getTView();\n    ngDevMode && assertDefined(tView, `tView should be defined`);\n    pushI18nIndex(index);\n    // We need to delay projections until `i18nEnd`\n    setDelayProjection(true);\n    if (tView.firstCreatePass && tView.data[index + HEADER_OFFSET] === null) {\n        i18nStartFirstPass(getLView(), tView, index, message, subTemplateIndex);\n    }\n}\n/**\n * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n *\n * @codeGenApi\n */\nfunction ɵɵi18nEnd() {\n    const lView = getLView();\n    const tView = getTView();\n    ngDevMode && assertDefined(tView, `tView should be defined`);\n    i18nEndFirstPass(tView, lView);\n    // Stop delaying projections\n    setDelayProjection(false);\n}\n/**\n *\n * Use this instruction to create a translation block that doesn't contain any placeholder.\n * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n *\n * The translation `message` is the value which is locale specific. The translation string may\n * contain placeholders which associate inner elements and sub-templates within the translation.\n *\n * The translation `message` placeholders are:\n * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n *   `block` that matches the sub-template in which it was declared.\n * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n *   and end of DOM element that were embedded in the original translation block. The placeholder\n *   `index` points to the element index in the template instructions set. An optional `block` that\n *   matches the sub-template in which it was declared.\n * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n *   split up and translated separately in each angular template function. The `index` points to the\n *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n *\n * @param index A unique index of the translation in the static block.\n * @param message The translation message.\n * @param subTemplateIndex Optional sub-template index in the `message`.\n *\n * @codeGenApi\n */\nfunction ɵɵi18n(index, message, subTemplateIndex) {\n    ɵɵi18nStart(index, message, subTemplateIndex);\n    ɵɵi18nEnd();\n}\n/**\n * Marks a list of attributes as translatable.\n *\n * @param index A unique index in the static block\n * @param values\n *\n * @codeGenApi\n */\nfunction ɵɵi18nAttributes(index, values) {\n    const lView = getLView();\n    const tView = getTView();\n    ngDevMode && assertDefined(tView, `tView should be defined`);\n    i18nAttributesFirstPass(lView, tView, index, values);\n}\n/**\n * Stores the values of the bindings during each update cycle in order to determine if we need to\n * update the translated nodes.\n *\n * @param value The binding's value\n * @returns This function returns itself so that it may be chained\n * (e.g. `i18nExp(ctx.name)(ctx.title)`)\n *\n * @codeGenApi\n */\nfunction ɵɵi18nExp(value) {\n    const lView = getLView();\n    setMaskBit(bindingUpdated(lView, nextBindingIndex(), value));\n    return ɵɵi18nExp;\n}\n/**\n * Updates a translation block or an i18n attribute when the bindings have changed.\n *\n * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n * (i18n attribute) on which it should update the content.\n *\n * @codeGenApi\n */\nfunction ɵɵi18nApply(index) {\n    applyI18n(getTView(), getLView(), index);\n}\n/**\n * Handles message string post-processing for internationalization.\n *\n * Handles message string post-processing by transforming it from intermediate\n * format (that might contain some markers that we need to replace) to the final\n * form, consumable by i18nStart instruction. Post processing steps include:\n *\n * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n * 3. Replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n * 4. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n *    in case multiple ICUs have the same placeholder name\n *\n * @param message Raw translation string for post processing\n * @param replacements Set of replacements that should be applied\n *\n * @returns Transformed string that can be consumed by i18nStart instruction\n *\n * @codeGenApi\n */\nfunction ɵɵi18nPostprocess(message, replacements = {}) {\n    return i18nPostprocess(message, replacements);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n * on the type.\n *\n * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n *\n * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n * tree-shaken away during production builds.\n */\nfunction setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n    return noSideEffects(() => {\n        const clazz = type;\n        // We determine whether a class has its own metadata by taking the metadata from the\n        // parent constructor and checking whether it's the same as the subclass metadata below.\n        // We can't use `hasOwnProperty` here because it doesn't work correctly in IE10 for\n        // static fields that are defined by TS. See\n        // https://github.com/angular/angular/pull/28439#issuecomment-459349218.\n        const parentPrototype = clazz.prototype ? Object.getPrototypeOf(clazz.prototype) : null;\n        const parentConstructor = parentPrototype && parentPrototype.constructor;\n        if (decorators !== null) {\n            if (clazz.decorators !== undefined &&\n                (!parentConstructor || parentConstructor.decorators !== clazz.decorators)) {\n                clazz.decorators.push(...decorators);\n            }\n            else {\n                clazz.decorators = decorators;\n            }\n        }\n        if (ctorParameters !== null) {\n            // Rather than merging, clobber the existing parameters. If other projects exist which\n            // use tsickle-style annotations and reflect over them in the same way, this could\n            // cause issues, but that is vanishingly unlikely.\n            clazz.ctorParameters = ctorParameters;\n        }\n        if (propDecorators !== null) {\n            // The property decorator objects are merged as it is possible different fields have\n            // different decorator types. Decorators on individual fields are not merged, as it's\n            // also incredibly unlikely that a field will be decorated both with an Angular\n            // decorator and a non-Angular decorator that's also been downleveled.\n            if (clazz.propDecorators !== undefined &&\n                (!parentConstructor ||\n                    parentConstructor.propDecorators !== clazz.propDecorators)) {\n                clazz.propDecorators = Object.assign(Object.assign({}, clazz.propDecorators), propDecorators);\n            }\n            else {\n                clazz.propDecorators = propDecorators;\n            }\n        }\n    });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Map of module-id to the corresponding NgModule.\n * - In pre Ivy we track NgModuleFactory,\n * - In post Ivy we track the NgModuleType\n */\nconst modules = new Map();\n/**\n * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n * @publicApi\n */\nfunction registerModuleFactory(id, factory) {\n    const existing = modules.get(id);\n    assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n    modules.set(id, factory);\n}\nfunction assertSameOrNotExisting(id, type, incoming) {\n    if (type && type !== incoming) {\n        throw new Error(`Duplicate module registered for ${id} - ${stringify(type)} vs ${stringify(type.name)}`);\n    }\n}\nfunction registerNgModuleType(ngModuleType) {\n    if (ngModuleType.ɵmod.id !== null) {\n        const id = ngModuleType.ɵmod.id;\n        const existing = modules.get(id);\n        assertSameOrNotExisting(id, existing, ngModuleType);\n        modules.set(id, ngModuleType);\n    }\n    let imports = ngModuleType.ɵmod.imports;\n    if (imports instanceof Function) {\n        imports = imports();\n    }\n    if (imports) {\n        imports.forEach(i => registerNgModuleType(i));\n    }\n}\nfunction clearModulesForTest() {\n    modules.clear();\n}\nfunction getRegisteredNgModuleType(id) {\n    return modules.get(id) || autoRegisterModuleById[id];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass NgModuleRef$1 extends NgModuleRef {\n    constructor(ngModuleType, _parent) {\n        super();\n        this._parent = _parent;\n        // tslint:disable-next-line:require-internal-with-underscore\n        this._bootstrapComponents = [];\n        this.injector = this;\n        this.destroyCbs = [];\n        // When bootstrapping a module we have a dependency graph that looks like this:\n        // ApplicationRef -> ComponentFactoryResolver -> NgModuleRef. The problem is that if the\n        // module being resolved tries to inject the ComponentFactoryResolver, it'll create a\n        // circular dependency which will result in a runtime error, because the injector doesn't\n        // exist yet. We work around the issue by creating the ComponentFactoryResolver ourselves\n        // and providing it, rather than letting the injector resolve it.\n        this.componentFactoryResolver = new ComponentFactoryResolver$1(this);\n        const ngModuleDef = getNgModuleDef(ngModuleType);\n        ngDevMode &&\n            assertDefined(ngModuleDef, `NgModule '${stringify(ngModuleType)}' is not a subtype of 'NgModuleType'.`);\n        const ngLocaleIdDef = getNgLocaleIdDef(ngModuleType);\n        ngLocaleIdDef && setLocaleId(ngLocaleIdDef);\n        this._bootstrapComponents = maybeUnwrapFn(ngModuleDef.bootstrap);\n        this._r3Injector = createInjectorWithoutInjectorInstances(ngModuleType, _parent, [\n            { provide: NgModuleRef, useValue: this }, {\n                provide: ComponentFactoryResolver,\n                useValue: this.componentFactoryResolver\n            }\n        ], stringify(ngModuleType));\n        // We need to resolve the injector types separately from the injector creation, because\n        // the module might be trying to use this ref in its contructor for DI which will cause a\n        // circular error that will eventually error out, because the injector isn't created yet.\n        this._r3Injector._resolveInjectorDefTypes();\n        this.instance = this.get(ngModuleType);\n    }\n    get(token, notFoundValue = Injector.THROW_IF_NOT_FOUND, injectFlags = InjectFlags.Default) {\n        if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n            return this;\n        }\n        return this._r3Injector.get(token, notFoundValue, injectFlags);\n    }\n    destroy() {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n        const injector = this._r3Injector;\n        !injector.destroyed && injector.destroy();\n        this.destroyCbs.forEach(fn => fn());\n        this.destroyCbs = null;\n    }\n    onDestroy(callback) {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n        this.destroyCbs.push(callback);\n    }\n}\nclass NgModuleFactory$1 extends NgModuleFactory {\n    constructor(moduleType) {\n        super();\n        this.moduleType = moduleType;\n        const ngModuleDef = getNgModuleDef(moduleType);\n        if (ngModuleDef !== null) {\n            // Register the NgModule with Angular's module registry. The location (and hence timing) of\n            // this call is critical to ensure this works correctly (modules get registered when expected)\n            // without bloating bundles (modules are registered when otherwise not referenced).\n            //\n            // In View Engine, registration occurs in the .ngfactory.js file as a side effect. This has\n            // several practical consequences:\n            //\n            // - If an .ngfactory file is not imported from, the module won't be registered (and can be\n            //   tree shaken).\n            // - If an .ngfactory file is imported from, the module will be registered even if an instance\n            //   is not actually created (via `create` below).\n            // - Since an .ngfactory file in View Engine references the .ngfactory files of the NgModule's\n            //   imports,\n            //\n            // In Ivy, things are a bit different. .ngfactory files still exist for compatibility, but are\n            // not a required API to use - there are other ways to obtain an NgModuleFactory for a given\n            // NgModule. Thus, relying on a side effect in the .ngfactory file is not sufficient. Instead,\n            // the side effect of registration is added here, in the constructor of NgModuleFactory,\n            // ensuring no matter how a factory is created, the module is registered correctly.\n            //\n            // An alternative would be to include the registration side effect inline following the actual\n            // NgModule definition. This also has the correct timing, but breaks tree-shaking - modules\n            // will be registered and retained even if they're otherwise never referenced.\n            registerNgModuleType(moduleType);\n        }\n    }\n    create(parentInjector) {\n        return new NgModuleRef$1(this.moduleType, parentInjector);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Bindings for pure functions are stored after regular bindings.\n *\n * |-------decls------|---------vars---------|                 |----- hostVars (dir1) ------|\n * ------------------------------------------------------------------------------------------\n * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n * ------------------------------------------------------------------------------------------\n *                    ^                      ^\n *      TView.bindingStartIndex      TView.expandoStartIndex\n *\n * Pure function instructions are given an offset from the binding root. Adding the offset to the\n * binding root gives the first index where the bindings are stored. In component views, the binding\n * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n * any directive instances + any hostVars in directives evaluated before it.\n *\n * See VIEW_DATA.md for more information about host binding resolution.\n */\n/**\n * If the value hasn't been saved, calls the pure function to store and return the\n * value. If it has been saved, returns the saved value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn Function that returns a value\n * @param thisArg Optional calling context of pureFn\n * @returns value\n *\n * @codeGenApi\n */\nfunction ɵɵpureFunction0(slotOffset, pureFn, thisArg) {\n    const bindingIndex = getBindingRoot() + slotOffset;\n    const lView = getLView();\n    return lView[bindingIndex] === NO_CHANGE ?\n        updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n        getBinding(lView, bindingIndex);\n}\n/**\n * If the value of the provided exp has changed, calls the pure function to return\n * an updated value. Or if the value has not changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn Function that returns an updated value\n * @param exp Updated expression value\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n *\n * @codeGenApi\n */\nfunction ɵɵpureFunction1(slotOffset, pureFn, exp, thisArg) {\n    return pureFunction1Internal(getLView(), getBindingRoot(), slotOffset, pureFn, exp, thisArg);\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n *\n * @codeGenApi\n */\nfunction ɵɵpureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n    return pureFunction2Internal(getLView(), getBindingRoot(), slotOffset, pureFn, exp1, exp2, thisArg);\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n *\n * @codeGenApi\n */\nfunction ɵɵpureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n    return pureFunction3Internal(getLView(), getBindingRoot(), slotOffset, pureFn, exp1, exp2, exp3, thisArg);\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n *\n * @codeGenApi\n */\nfunction ɵɵpureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n    return pureFunction4Internal(getLView(), getBindingRoot(), slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg);\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n *\n * @codeGenApi\n */\nfunction ɵɵpureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n    const bindingIndex = getBindingRoot() + slotOffset;\n    const lView = getLView();\n    const different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n    return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n        updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n            pureFn(exp1, exp2, exp3, exp4, exp5)) :\n        getBinding(lView, bindingIndex + 5);\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n *\n * @codeGenApi\n */\nfunction ɵɵpureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n    const bindingIndex = getBindingRoot() + slotOffset;\n    const lView = getLView();\n    const different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n    return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n        updateBinding(lView, bindingIndex + 6, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n        getBinding(lView, bindingIndex + 6);\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @param exp7\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n *\n * @codeGenApi\n */\nfunction ɵɵpureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n    const bindingIndex = getBindingRoot() + slotOffset;\n    const lView = getLView();\n    let different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n    return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n        updateBinding(lView, bindingIndex + 7, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n        getBinding(lView, bindingIndex + 7);\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @param exp7\n * @param exp8\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n *\n * @codeGenApi\n */\nfunction ɵɵpureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n    const bindingIndex = getBindingRoot() + slotOffset;\n    const lView = getLView();\n    const different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n    return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n        updateBinding(lView, bindingIndex + 8, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n        getBinding(lView, bindingIndex + 8);\n}\n/**\n * pureFunction instruction that can support any number of bindings.\n *\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn A pure function that takes binding values and builds an object or array\n * containing those values.\n * @param exps An array of binding values\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n *\n * @codeGenApi\n */\nfunction ɵɵpureFunctionV(slotOffset, pureFn, exps, thisArg) {\n    return pureFunctionVInternal(getLView(), getBindingRoot(), slotOffset, pureFn, exps, thisArg);\n}\n/**\n * Results of a pure function invocation are stored in LView in a dedicated slot that is initialized\n * to NO_CHANGE. In rare situations a pure pipe might throw an exception on the very first\n * invocation and not produce any valid results. In this case LView would keep holding the NO_CHANGE\n * value. The NO_CHANGE is not something that we can use in expressions / bindings thus we convert\n * it to `undefined`.\n */\nfunction getPureFunctionReturnValue(lView, returnValueIndex) {\n    ngDevMode && assertIndexInRange(lView, returnValueIndex);\n    const lastReturnValue = lView[returnValueIndex];\n    return lastReturnValue === NO_CHANGE ? undefined : lastReturnValue;\n}\n/**\n * If the value of the provided exp has changed, calls the pure function to return\n * an updated value. Or if the value has not changed, returns cached value.\n *\n * @param lView LView in which the function is being executed.\n * @param bindingRoot Binding root index.\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn Function that returns an updated value\n * @param exp Updated expression value\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction1Internal(lView, bindingRoot, slotOffset, pureFn, exp, thisArg) {\n    const bindingIndex = bindingRoot + slotOffset;\n    return bindingUpdated(lView, bindingIndex, exp) ?\n        updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n        getPureFunctionReturnValue(lView, bindingIndex + 1);\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param lView LView in which the function is being executed.\n * @param bindingRoot Binding root index.\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction2Internal(lView, bindingRoot, slotOffset, pureFn, exp1, exp2, thisArg) {\n    const bindingIndex = bindingRoot + slotOffset;\n    return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n        updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n        getPureFunctionReturnValue(lView, bindingIndex + 2);\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param lView LView in which the function is being executed.\n * @param bindingRoot Binding root index.\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction3Internal(lView, bindingRoot, slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n    const bindingIndex = bindingRoot + slotOffset;\n    return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n        updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n        getPureFunctionReturnValue(lView, bindingIndex + 3);\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param lView LView in which the function is being executed.\n * @param bindingRoot Binding root index.\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n *\n */\nfunction pureFunction4Internal(lView, bindingRoot, slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n    const bindingIndex = bindingRoot + slotOffset;\n    return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n        updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n        getPureFunctionReturnValue(lView, bindingIndex + 4);\n}\n/**\n * pureFunction instruction that can support any number of bindings.\n *\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param lView LView in which the function is being executed.\n * @param bindingRoot Binding root index.\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn A pure function that takes binding values and builds an object or array\n * containing those values.\n * @param exps An array of binding values\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunctionVInternal(lView, bindingRoot, slotOffset, pureFn, exps, thisArg) {\n    let bindingIndex = bindingRoot + slotOffset;\n    let different = false;\n    for (let i = 0; i < exps.length; i++) {\n        bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n    }\n    return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n        getPureFunctionReturnValue(lView, bindingIndex);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a pipe.\n *\n * @param index Pipe index where the pipe will be stored.\n * @param pipeName The name of the pipe\n * @returns T the instance of the pipe.\n *\n * @codeGenApi\n */\nfunction ɵɵpipe(index, pipeName) {\n    const tView = getTView();\n    let pipeDef;\n    const adjustedIndex = index + HEADER_OFFSET;\n    if (tView.firstCreatePass) {\n        pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n        tView.data[adjustedIndex] = pipeDef;\n        if (pipeDef.onDestroy) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n        }\n    }\n    else {\n        pipeDef = tView.data[adjustedIndex];\n    }\n    const pipeFactory = pipeDef.factory || (pipeDef.factory = getFactoryDef(pipeDef.type, true));\n    const previousInjectImplementation = setInjectImplementation(ɵɵdirectiveInject);\n    // DI for pipes is supposed to behave like directives when placed on a component\n    // host node, which means that we have to disable access to `viewProviders`.\n    const previousIncludeViewProviders = setIncludeViewProviders(false);\n    const pipeInstance = pipeFactory();\n    setIncludeViewProviders(previousIncludeViewProviders);\n    setInjectImplementation(previousInjectImplementation);\n    store(tView, getLView(), index, pipeInstance);\n    return pipeInstance;\n}\n/**\n * Searches the pipe registry for a pipe with the given name. If one is found,\n * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n *\n * @param name Name of pipe to resolve\n * @param registry Full list of available pipes\n * @returns Matching PipeDef\n */\nfunction getPipeDef$1(name, registry) {\n    if (registry) {\n        for (let i = registry.length - 1; i >= 0; i--) {\n            const pipeDef = registry[i];\n            if (name === pipeDef.name) {\n                return pipeDef;\n            }\n        }\n    }\n    throw new Error(`The pipe '${name}' could not be found!`);\n}\n/**\n * Invokes a pipe with 1 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space\n * @param v1 1st argument to {@link PipeTransform#transform}.\n *\n * @codeGenApi\n */\nfunction ɵɵpipeBind1(index, slotOffset, v1) {\n    const lView = getLView();\n    const pipeInstance = load(lView, index);\n    return unwrapValue$1(lView, isPure(lView, index) ?\n        pureFunction1Internal(lView, getBindingRoot(), slotOffset, pipeInstance.transform, v1, pipeInstance) :\n        pipeInstance.transform(v1));\n}\n/**\n * Invokes a pipe with 2 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n *\n * @codeGenApi\n */\nfunction ɵɵpipeBind2(index, slotOffset, v1, v2) {\n    const lView = getLView();\n    const pipeInstance = load(lView, index);\n    return unwrapValue$1(lView, isPure(lView, index) ?\n        pureFunction2Internal(lView, getBindingRoot(), slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n        pipeInstance.transform(v1, v2));\n}\n/**\n * Invokes a pipe with 3 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n * @param v3 4rd argument to {@link PipeTransform#transform}.\n *\n * @codeGenApi\n */\nfunction ɵɵpipeBind3(index, slotOffset, v1, v2, v3) {\n    const lView = getLView();\n    const pipeInstance = load(lView, index);\n    return unwrapValue$1(lView, isPure(lView, index) ? pureFunction3Internal(lView, getBindingRoot(), slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n        pipeInstance.transform(v1, v2, v3));\n}\n/**\n * Invokes a pipe with 4 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n * @param v3 3rd argument to {@link PipeTransform#transform}.\n * @param v4 4th argument to {@link PipeTransform#transform}.\n *\n * @codeGenApi\n */\nfunction ɵɵpipeBind4(index, slotOffset, v1, v2, v3, v4) {\n    const lView = getLView();\n    const pipeInstance = load(lView, index);\n    return unwrapValue$1(lView, isPure(lView, index) ? pureFunction4Internal(lView, getBindingRoot(), slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n        pipeInstance.transform(v1, v2, v3, v4));\n}\n/**\n * Invokes a pipe with variable number of arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space\n * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n *\n * @codeGenApi\n */\nfunction ɵɵpipeBindV(index, slotOffset, values) {\n    const lView = getLView();\n    const pipeInstance = load(lView, index);\n    return unwrapValue$1(lView, isPure(lView, index) ?\n        pureFunctionVInternal(lView, getBindingRoot(), slotOffset, pipeInstance.transform, values, pipeInstance) :\n        pipeInstance.transform.apply(pipeInstance, values));\n}\nfunction isPure(lView, index) {\n    return lView[TVIEW].data[index + HEADER_OFFSET].pure;\n}\n/**\n * Unwrap the output of a pipe transformation.\n * In order to trick change detection into considering that the new value is always different from\n * the old one, the old value is overwritten by NO_CHANGE.\n *\n * @param newValue the pipe transformation output.\n */\nfunction unwrapValue$1(lView, newValue) {\n    if (WrappedValue.isWrapped(newValue)) {\n        newValue = WrappedValue.unwrap(newValue);\n        // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n        // stored\n        const bindingToInvalidateIdx = getBindingIndex();\n        lView[bindingToInvalidateIdx] = NO_CHANGE;\n    }\n    return newValue;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass EventEmitter_ extends Subject {\n    constructor(isAsync = false) {\n        super();\n        this.__isAsync = isAsync;\n    }\n    emit(value) {\n        super.next(value);\n    }\n    subscribe(generatorOrNext, error, complete) {\n        let schedulerFn;\n        let errorFn = (err) => null;\n        let completeFn = () => null;\n        if (generatorOrNext && typeof generatorOrNext === 'object') {\n            schedulerFn = this.__isAsync ? (value) => {\n                setTimeout(() => generatorOrNext.next(value));\n            } : (value) => {\n                generatorOrNext.next(value);\n            };\n            if (generatorOrNext.error) {\n                errorFn = this.__isAsync ? (err) => {\n                    setTimeout(() => generatorOrNext.error(err));\n                } : (err) => {\n                    generatorOrNext.error(err);\n                };\n            }\n            if (generatorOrNext.complete) {\n                completeFn = this.__isAsync ? () => {\n                    setTimeout(() => generatorOrNext.complete());\n                } : () => {\n                    generatorOrNext.complete();\n                };\n            }\n        }\n        else {\n            schedulerFn = this.__isAsync ? (value) => {\n                setTimeout(() => generatorOrNext(value));\n            } : (value) => {\n                generatorOrNext(value);\n            };\n            if (error) {\n                errorFn = this.__isAsync ? (err) => {\n                    setTimeout(() => error(err));\n                } : (err) => {\n                    error(err);\n                };\n            }\n            if (complete) {\n                completeFn = this.__isAsync ? () => {\n                    setTimeout(() => complete());\n                } : () => {\n                    complete();\n                };\n            }\n        }\n        const sink = super.subscribe(schedulerFn, errorFn, completeFn);\n        if (generatorOrNext instanceof Subscription) {\n            generatorOrNext.add(sink);\n        }\n        return sink;\n    }\n}\n/**\n * @publicApi\n */\nconst EventEmitter = EventEmitter_;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction symbolIterator() {\n    return this._results[getSymbolIterator()]();\n}\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n * provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * @usageNotes\n * ### Example\n * ```typescript\n * @Component({...})\n * class Container {\n *   @ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n *\n * @publicApi\n */\nclass QueryList {\n    constructor() {\n        this.dirty = true;\n        this._results = [];\n        this.changes = new EventEmitter();\n        this.length = 0;\n        // This function should be declared on the prototype, but doing so there will cause the class\n        // declaration to have side-effects and become not tree-shakable. For this reason we do it in\n        // the constructor.\n        // [getSymbolIterator()](): Iterator<T> { ... }\n        const symbol = getSymbolIterator();\n        const proto = QueryList.prototype;\n        if (!proto[symbol])\n            proto[symbol] = symbolIterator;\n    }\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     */\n    map(fn) {\n        return this._results.map(fn);\n    }\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     */\n    filter(fn) {\n        return this._results.filter(fn);\n    }\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     */\n    find(fn) {\n        return this._results.find(fn);\n    }\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     */\n    reduce(fn, init) {\n        return this._results.reduce(fn, init);\n    }\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     */\n    forEach(fn) {\n        this._results.forEach(fn);\n    }\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     */\n    some(fn) {\n        return this._results.some(fn);\n    }\n    /**\n     * Returns a copy of the internal results list as an Array.\n     */\n    toArray() {\n        return this._results.slice();\n    }\n    toString() {\n        return this._results.toString();\n    }\n    /**\n     * Updates the stored data of the query list, and resets the `dirty` flag to `false`, so that\n     * on change detection, it will not notify of changes to the queries, unless a new change\n     * occurs.\n     *\n     * @param resultsTree The query results to store\n     */\n    reset(resultsTree) {\n        this._results = flatten(resultsTree);\n        this.dirty = false;\n        this.length = this._results.length;\n        this.last = this._results[this.length - 1];\n        this.first = this._results[0];\n    }\n    /**\n     * Triggers a change event by emitting on the `changes` {@link EventEmitter}.\n     */\n    notifyOnChanges() {\n        this.changes.emit(this);\n    }\n    /** internal */\n    setDirty() {\n        this.dirty = true;\n    }\n    /** internal */\n    destroy() {\n        this.changes.complete();\n        this.changes.unsubscribe();\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\nconst unusedValueExportToPlacateAjd$7 = 1;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\nconst unusedValueExportToPlacateAjd$8 = 1;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst unusedValueToPlacateAjd$2 = unusedValueExportToPlacateAjd$7 + unusedValueExportToPlacateAjd$3 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$8;\nclass LQuery_ {\n    constructor(queryList) {\n        this.queryList = queryList;\n        this.matches = null;\n    }\n    clone() {\n        return new LQuery_(this.queryList);\n    }\n    setDirty() {\n        this.queryList.setDirty();\n    }\n}\nclass LQueries_ {\n    constructor(queries = []) {\n        this.queries = queries;\n    }\n    createEmbeddedView(tView) {\n        const tQueries = tView.queries;\n        if (tQueries !== null) {\n            const noOfInheritedQueries = tView.contentQueries !== null ? tView.contentQueries[0] : tQueries.length;\n            const viewLQueries = [];\n            // An embedded view has queries propagated from a declaration view at the beginning of the\n            // TQueries collection and up until a first content query declared in the embedded view. Only\n            // propagated LQueries are created at this point (LQuery corresponding to declared content\n            // queries will be instantiated from the content query instructions for each directive).\n            for (let i = 0; i < noOfInheritedQueries; i++) {\n                const tQuery = tQueries.getByIndex(i);\n                const parentLQuery = this.queries[tQuery.indexInDeclarationView];\n                viewLQueries.push(parentLQuery.clone());\n            }\n            return new LQueries_(viewLQueries);\n        }\n        return null;\n    }\n    insertView(tView) {\n        this.dirtyQueriesWithMatches(tView);\n    }\n    detachView(tView) {\n        this.dirtyQueriesWithMatches(tView);\n    }\n    dirtyQueriesWithMatches(tView) {\n        for (let i = 0; i < this.queries.length; i++) {\n            if (getTQuery(tView, i).matches !== null) {\n                this.queries[i].setDirty();\n            }\n        }\n    }\n}\nclass TQueryMetadata_ {\n    constructor(predicate, descendants, isStatic, read = null) {\n        this.predicate = predicate;\n        this.descendants = descendants;\n        this.isStatic = isStatic;\n        this.read = read;\n    }\n}\nclass TQueries_ {\n    constructor(queries = []) {\n        this.queries = queries;\n    }\n    elementStart(tView, tNode) {\n        ngDevMode &&\n            assertFirstCreatePass(tView, 'Queries should collect results on the first template pass only');\n        for (let i = 0; i < this.queries.length; i++) {\n            this.queries[i].elementStart(tView, tNode);\n        }\n    }\n    elementEnd(tNode) {\n        for (let i = 0; i < this.queries.length; i++) {\n            this.queries[i].elementEnd(tNode);\n        }\n    }\n    embeddedTView(tNode) {\n        let queriesForTemplateRef = null;\n        for (let i = 0; i < this.length; i++) {\n            const childQueryIndex = queriesForTemplateRef !== null ? queriesForTemplateRef.length : 0;\n            const tqueryClone = this.getByIndex(i).embeddedTView(tNode, childQueryIndex);\n            if (tqueryClone) {\n                tqueryClone.indexInDeclarationView = i;\n                if (queriesForTemplateRef !== null) {\n                    queriesForTemplateRef.push(tqueryClone);\n                }\n                else {\n                    queriesForTemplateRef = [tqueryClone];\n                }\n            }\n        }\n        return queriesForTemplateRef !== null ? new TQueries_(queriesForTemplateRef) : null;\n    }\n    template(tView, tNode) {\n        ngDevMode &&\n            assertFirstCreatePass(tView, 'Queries should collect results on the first template pass only');\n        for (let i = 0; i < this.queries.length; i++) {\n            this.queries[i].template(tView, tNode);\n        }\n    }\n    getByIndex(index) {\n        ngDevMode && assertIndexInRange(this.queries, index);\n        return this.queries[index];\n    }\n    get length() {\n        return this.queries.length;\n    }\n    track(tquery) {\n        this.queries.push(tquery);\n    }\n}\nclass TQuery_ {\n    constructor(metadata, nodeIndex = -1) {\n        this.metadata = metadata;\n        this.matches = null;\n        this.indexInDeclarationView = -1;\n        this.crossesNgTemplate = false;\n        /**\n         * A flag indicating if a given query still applies to nodes it is crossing. We use this flag\n         * (alongside with _declarationNodeIndex) to know when to stop applying content queries to\n         * elements in a template.\n         */\n        this._appliesToNextNode = true;\n        this._declarationNodeIndex = nodeIndex;\n    }\n    elementStart(tView, tNode) {\n        if (this.isApplyingToNode(tNode)) {\n            this.matchTNode(tView, tNode);\n        }\n    }\n    elementEnd(tNode) {\n        if (this._declarationNodeIndex === tNode.index) {\n            this._appliesToNextNode = false;\n        }\n    }\n    template(tView, tNode) {\n        this.elementStart(tView, tNode);\n    }\n    embeddedTView(tNode, childQueryIndex) {\n        if (this.isApplyingToNode(tNode)) {\n            this.crossesNgTemplate = true;\n            // A marker indicating a `<ng-template>` element (a placeholder for query results from\n            // embedded views created based on this `<ng-template>`).\n            this.addMatch(-tNode.index, childQueryIndex);\n            return new TQuery_(this.metadata);\n        }\n        return null;\n    }\n    isApplyingToNode(tNode) {\n        if (this._appliesToNextNode && this.metadata.descendants === false) {\n            const declarationNodeIdx = this._declarationNodeIndex;\n            let parent = tNode.parent;\n            // Determine if a given TNode is a \"direct\" child of a node on which a content query was\n            // declared (only direct children of query's host node can match with the descendants: false\n            // option). There are 3 main use-case / conditions to consider here:\n            // - <needs-target><i #target></i></needs-target>: here <i #target> parent node is a query\n            // host node;\n            // - <needs-target><ng-template [ngIf]=\"true\"><i #target></i></ng-template></needs-target>:\n            // here <i #target> parent node is null;\n            // - <needs-target><ng-container><i #target></i></ng-container></needs-target>: here we need\n            // to go past `<ng-container>` to determine <i #target> parent node (but we shouldn't traverse\n            // up past the query's host node!).\n            while (parent !== null && parent.type === 4 /* ElementContainer */ &&\n                parent.index !== declarationNodeIdx) {\n                parent = parent.parent;\n            }\n            return declarationNodeIdx === (parent !== null ? parent.index : -1);\n        }\n        return this._appliesToNextNode;\n    }\n    matchTNode(tView, tNode) {\n        const predicate = this.metadata.predicate;\n        if (Array.isArray(predicate)) {\n            for (let i = 0; i < predicate.length; i++) {\n                const name = predicate[i];\n                this.matchTNodeWithReadOption(tView, tNode, getIdxOfMatchingSelector(tNode, name));\n                // Also try matching the name to a provider since strings can be used as DI tokens too.\n                this.matchTNodeWithReadOption(tView, tNode, locateDirectiveOrProvider(tNode, tView, name, false, false));\n            }\n        }\n        else {\n            if (predicate === TemplateRef) {\n                if (tNode.type === 0 /* Container */) {\n                    this.matchTNodeWithReadOption(tView, tNode, -1);\n                }\n            }\n            else {\n                this.matchTNodeWithReadOption(tView, tNode, locateDirectiveOrProvider(tNode, tView, predicate, false, false));\n            }\n        }\n    }\n    matchTNodeWithReadOption(tView, tNode, nodeMatchIdx) {\n        if (nodeMatchIdx !== null) {\n            const read = this.metadata.read;\n            if (read !== null) {\n                if (read === ElementRef || read === ViewContainerRef ||\n                    read === TemplateRef && tNode.type === 0 /* Container */) {\n                    this.addMatch(tNode.index, -2);\n                }\n                else {\n                    const directiveOrProviderIdx = locateDirectiveOrProvider(tNode, tView, read, false, false);\n                    if (directiveOrProviderIdx !== null) {\n                        this.addMatch(tNode.index, directiveOrProviderIdx);\n                    }\n                }\n            }\n            else {\n                this.addMatch(tNode.index, nodeMatchIdx);\n            }\n        }\n    }\n    addMatch(tNodeIdx, matchIdx) {\n        if (this.matches === null) {\n            this.matches = [tNodeIdx, matchIdx];\n        }\n        else {\n            this.matches.push(tNodeIdx, matchIdx);\n        }\n    }\n}\n/**\n * Iterates over local names for a given node and returns directive index\n * (or -1 if a local name points to an element).\n *\n * @param tNode static data of a node to check\n * @param selector selector to match\n * @returns directive index, -1 or null if a selector didn't match any of the local names\n */\nfunction getIdxOfMatchingSelector(tNode, selector) {\n    const localNames = tNode.localNames;\n    if (localNames !== null) {\n        for (let i = 0; i < localNames.length; i += 2) {\n            if (localNames[i] === selector) {\n                return localNames[i + 1];\n            }\n        }\n    }\n    return null;\n}\nfunction createResultByTNodeType(tNode, currentView) {\n    if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n        return createElementRef(ElementRef, tNode, currentView);\n    }\n    else if (tNode.type === 0 /* Container */) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n    return null;\n}\nfunction createResultForNode(lView, tNode, matchingIdx, read) {\n    if (matchingIdx === -1) {\n        // if read token and / or strategy is not specified, detect it using appropriate tNode type\n        return createResultByTNodeType(tNode, lView);\n    }\n    else if (matchingIdx === -2) {\n        // read a special token from a node injector\n        return createSpecialToken(lView, tNode, read);\n    }\n    else {\n        // read a token\n        return getNodeInjectable(lView, lView[TVIEW], matchingIdx, tNode);\n    }\n}\nfunction createSpecialToken(lView, tNode, read) {\n    if (read === ElementRef) {\n        return createElementRef(ElementRef, tNode, lView);\n    }\n    else if (read === TemplateRef) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, lView);\n    }\n    else if (read === ViewContainerRef) {\n        ngDevMode &&\n            assertNodeOfPossibleTypes(tNode, [3 /* Element */, 0 /* Container */, 4 /* ElementContainer */]);\n        return createContainerRef(ViewContainerRef, ElementRef, tNode, lView);\n    }\n    else {\n        ngDevMode &&\n            throwError(`Special token to read should be one of ElementRef, TemplateRef or ViewContainerRef but got ${stringify(read)}.`);\n    }\n}\n/**\n * A helper function that creates query results for a given view. This function is meant to do the\n * processing once and only once for a given view instance (a set of results for a given view\n * doesn't change).\n */\nfunction materializeViewResults(tView, lView, tQuery, queryIndex) {\n    const lQuery = lView[QUERIES].queries[queryIndex];\n    if (lQuery.matches === null) {\n        const tViewData = tView.data;\n        const tQueryMatches = tQuery.matches;\n        const result = [];\n        for (let i = 0; i < tQueryMatches.length; i += 2) {\n            const matchedNodeIdx = tQueryMatches[i];\n            if (matchedNodeIdx < 0) {\n                // we at the <ng-template> marker which might have results in views created based on this\n                // <ng-template> - those results will be in separate views though, so here we just leave\n                // null as a placeholder\n                result.push(null);\n            }\n            else {\n                ngDevMode && assertIndexInRange(tViewData, matchedNodeIdx);\n                const tNode = tViewData[matchedNodeIdx];\n                result.push(createResultForNode(lView, tNode, tQueryMatches[i + 1], tQuery.metadata.read));\n            }\n        }\n        lQuery.matches = result;\n    }\n    return lQuery.matches;\n}\n/**\n * A helper function that collects (already materialized) query results from a tree of views,\n * starting with a provided LView.\n */\nfunction collectQueryResults(tView, lView, queryIndex, result) {\n    const tQuery = tView.queries.getByIndex(queryIndex);\n    const tQueryMatches = tQuery.matches;\n    if (tQueryMatches !== null) {\n        const lViewResults = materializeViewResults(tView, lView, tQuery, queryIndex);\n        for (let i = 0; i < tQueryMatches.length; i += 2) {\n            const tNodeIdx = tQueryMatches[i];\n            if (tNodeIdx > 0) {\n                result.push(lViewResults[i / 2]);\n            }\n            else {\n                const childQueryIndex = tQueryMatches[i + 1];\n                const declarationLContainer = lView[-tNodeIdx];\n                ngDevMode && assertLContainer(declarationLContainer);\n                // collect matches for views inserted in this container\n                for (let i = CONTAINER_HEADER_OFFSET; i < declarationLContainer.length; i++) {\n                    const embeddedLView = declarationLContainer[i];\n                    if (embeddedLView[DECLARATION_LCONTAINER] === embeddedLView[PARENT]) {\n                        collectQueryResults(embeddedLView[TVIEW], embeddedLView, childQueryIndex, result);\n                    }\n                }\n                // collect matches for views created from this declaration container and inserted into\n                // different containers\n                if (declarationLContainer[MOVED_VIEWS] !== null) {\n                    const embeddedLViews = declarationLContainer[MOVED_VIEWS];\n                    for (let i = 0; i < embeddedLViews.length; i++) {\n                        const embeddedLView = embeddedLViews[i];\n                        collectQueryResults(embeddedLView[TVIEW], embeddedLView, childQueryIndex, result);\n                    }\n                }\n            }\n        }\n    }\n    return result;\n}\n/**\n * Refreshes a query by combining matches from all active views and removing matches from deleted\n * views.\n *\n * @returns `true` if a query got dirty during change detection or if this is a static query\n * resolving in creation mode, `false` otherwise.\n *\n * @codeGenApi\n */\nfunction ɵɵqueryRefresh(queryList) {\n    const lView = getLView();\n    const tView = getTView();\n    const queryIndex = getCurrentQueryIndex();\n    setCurrentQueryIndex(queryIndex + 1);\n    const tQuery = getTQuery(tView, queryIndex);\n    if (queryList.dirty && (isCreationMode(lView) === tQuery.metadata.isStatic)) {\n        if (tQuery.matches === null) {\n            queryList.reset([]);\n        }\n        else {\n            const result = tQuery.crossesNgTemplate ?\n                collectQueryResults(tView, lView, queryIndex, []) :\n                materializeViewResults(tView, lView, tQuery, queryIndex);\n            queryList.reset(result);\n            queryList.notifyOnChanges();\n        }\n        return true;\n    }\n    return false;\n}\n/**\n * Creates new QueryList for a static view query.\n *\n * @param predicate The type for which the query will search\n * @param descend Whether or not to descend into children\n * @param read What to save in the query\n *\n * @codeGenApi\n */\nfunction ɵɵstaticViewQuery(predicate, descend, read) {\n    viewQueryInternal(getTView(), getLView(), predicate, descend, read, true);\n}\n/**\n * Creates new QueryList, stores the reference in LView and returns QueryList.\n *\n * @param predicate The type for which the query will search\n * @param descend Whether or not to descend into children\n * @param read What to save in the query\n *\n * @codeGenApi\n */\nfunction ɵɵviewQuery(predicate, descend, read) {\n    viewQueryInternal(getTView(), getLView(), predicate, descend, read, false);\n}\nfunction viewQueryInternal(tView, lView, predicate, descend, read, isStatic) {\n    if (tView.firstCreatePass) {\n        createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), -1);\n        if (isStatic) {\n            tView.staticViewQueries = true;\n        }\n    }\n    createLQuery(tView, lView);\n}\n/**\n * Registers a QueryList, associated with a content query, for later refresh (part of a view\n * refresh).\n *\n * @param directiveIndex Current directive index\n * @param predicate The type for which the query will search\n * @param descend Whether or not to descend into children\n * @param read What to save in the query\n * @returns QueryList<T>\n *\n * @codeGenApi\n */\nfunction ɵɵcontentQuery(directiveIndex, predicate, descend, read) {\n    contentQueryInternal(getTView(), getLView(), predicate, descend, read, false, getPreviousOrParentTNode(), directiveIndex);\n}\n/**\n * Registers a QueryList, associated with a static content query, for later refresh\n * (part of a view refresh).\n *\n * @param directiveIndex Current directive index\n * @param predicate The type for which the query will search\n * @param descend Whether or not to descend into children\n * @param read What to save in the query\n * @returns QueryList<T>\n *\n * @codeGenApi\n */\nfunction ɵɵstaticContentQuery(directiveIndex, predicate, descend, read) {\n    contentQueryInternal(getTView(), getLView(), predicate, descend, read, true, getPreviousOrParentTNode(), directiveIndex);\n}\nfunction contentQueryInternal(tView, lView, predicate, descend, read, isStatic, tNode, directiveIndex) {\n    if (tView.firstCreatePass) {\n        createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), tNode.index);\n        saveContentQueryAndDirectiveIndex(tView, directiveIndex);\n        if (isStatic) {\n            tView.staticContentQueries = true;\n        }\n    }\n    createLQuery(tView, lView);\n}\n/**\n * Loads a QueryList corresponding to the current view or content query.\n *\n * @codeGenApi\n */\nfunction ɵɵloadQuery() {\n    return loadQueryInternal(getLView(), getCurrentQueryIndex());\n}\nfunction loadQueryInternal(lView, queryIndex) {\n    ngDevMode &&\n        assertDefined(lView[QUERIES], 'LQueries should be defined when trying to load a query');\n    ngDevMode && assertIndexInRange(lView[QUERIES].queries, queryIndex);\n    return lView[QUERIES].queries[queryIndex].queryList;\n}\nfunction createLQuery(tView, lView) {\n    const queryList = new QueryList();\n    storeCleanupWithContext(tView, lView, queryList, queryList.destroy);\n    if (lView[QUERIES] === null)\n        lView[QUERIES] = new LQueries_();\n    lView[QUERIES].queries.push(new LQuery_(queryList));\n}\nfunction createTQuery(tView, metadata, nodeIndex) {\n    if (tView.queries === null)\n        tView.queries = new TQueries_();\n    tView.queries.track(new TQuery_(metadata, nodeIndex));\n}\nfunction saveContentQueryAndDirectiveIndex(tView, directiveIndex) {\n    const tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n    const lastSavedDirectiveIndex = tView.contentQueries.length ? tViewContentQueries[tViewContentQueries.length - 1] : -1;\n    if (directiveIndex !== lastSavedDirectiveIndex) {\n        tViewContentQueries.push(tView.queries.length - 1, directiveIndex);\n    }\n}\nfunction getTQuery(tView, index) {\n    ngDevMode && assertDefined(tView.queries, 'TQueries must be defined to retrieve a TQuery');\n    return tView.queries.getByIndex(index);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n * `<ng-template>` element.\n *\n * @codeGenApi\n */\nfunction ɵɵtemplateRefExtractor(tNode, currentView) {\n    return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n}\n/**\n * Returns the appropriate `ChangeDetectorRef` for a pipe.\n *\n * @codeGenApi\n */\nfunction ɵɵinjectPipeChangeDetectorRef(flags = InjectFlags.Default) {\n    const value = injectChangeDetectorRef(true);\n    if (value == null && !(flags & InjectFlags.Optional)) {\n        throw new Error(`No provider for ChangeDetectorRef!`);\n    }\n    else {\n        return value;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ɵ0$d = () => ({\n    'ɵɵattribute': ɵɵattribute,\n    'ɵɵattributeInterpolate1': ɵɵattributeInterpolate1,\n    'ɵɵattributeInterpolate2': ɵɵattributeInterpolate2,\n    'ɵɵattributeInterpolate3': ɵɵattributeInterpolate3,\n    'ɵɵattributeInterpolate4': ɵɵattributeInterpolate4,\n    'ɵɵattributeInterpolate5': ɵɵattributeInterpolate5,\n    'ɵɵattributeInterpolate6': ɵɵattributeInterpolate6,\n    'ɵɵattributeInterpolate7': ɵɵattributeInterpolate7,\n    'ɵɵattributeInterpolate8': ɵɵattributeInterpolate8,\n    'ɵɵattributeInterpolateV': ɵɵattributeInterpolateV,\n    'ɵɵdefineComponent': ɵɵdefineComponent,\n    'ɵɵdefineDirective': ɵɵdefineDirective,\n    'ɵɵdefineInjectable': ɵɵdefineInjectable,\n    'ɵɵdefineInjector': ɵɵdefineInjector,\n    'ɵɵdefineNgModule': ɵɵdefineNgModule,\n    'ɵɵdefinePipe': ɵɵdefinePipe,\n    'ɵɵdirectiveInject': ɵɵdirectiveInject,\n    'ɵɵgetFactoryOf': ɵɵgetFactoryOf,\n    'ɵɵgetInheritedFactory': ɵɵgetInheritedFactory,\n    'ɵɵinject': ɵɵinject,\n    'ɵɵinjectAttribute': ɵɵinjectAttribute,\n    'ɵɵinvalidFactory': ɵɵinvalidFactory,\n    'ɵɵinvalidFactoryDep': ɵɵinvalidFactoryDep,\n    'ɵɵinjectPipeChangeDetectorRef': ɵɵinjectPipeChangeDetectorRef,\n    'ɵɵtemplateRefExtractor': ɵɵtemplateRefExtractor,\n    'ɵɵNgOnChangesFeature': ɵɵNgOnChangesFeature,\n    'ɵɵProvidersFeature': ɵɵProvidersFeature,\n    'ɵɵCopyDefinitionFeature': ɵɵCopyDefinitionFeature,\n    'ɵɵInheritDefinitionFeature': ɵɵInheritDefinitionFeature,\n    'ɵɵnextContext': ɵɵnextContext,\n    'ɵɵnamespaceHTML': ɵɵnamespaceHTML,\n    'ɵɵnamespaceMathML': ɵɵnamespaceMathML,\n    'ɵɵnamespaceSVG': ɵɵnamespaceSVG,\n    'ɵɵenableBindings': ɵɵenableBindings,\n    'ɵɵdisableBindings': ɵɵdisableBindings,\n    'ɵɵelementStart': ɵɵelementStart,\n    'ɵɵelementEnd': ɵɵelementEnd,\n    'ɵɵelement': ɵɵelement,\n    'ɵɵelementContainerStart': ɵɵelementContainerStart,\n    'ɵɵelementContainerEnd': ɵɵelementContainerEnd,\n    'ɵɵelementContainer': ɵɵelementContainer,\n    'ɵɵpureFunction0': ɵɵpureFunction0,\n    'ɵɵpureFunction1': ɵɵpureFunction1,\n    'ɵɵpureFunction2': ɵɵpureFunction2,\n    'ɵɵpureFunction3': ɵɵpureFunction3,\n    'ɵɵpureFunction4': ɵɵpureFunction4,\n    'ɵɵpureFunction5': ɵɵpureFunction5,\n    'ɵɵpureFunction6': ɵɵpureFunction6,\n    'ɵɵpureFunction7': ɵɵpureFunction7,\n    'ɵɵpureFunction8': ɵɵpureFunction8,\n    'ɵɵpureFunctionV': ɵɵpureFunctionV,\n    'ɵɵgetCurrentView': ɵɵgetCurrentView,\n    'ɵɵrestoreView': ɵɵrestoreView,\n    'ɵɵlistener': ɵɵlistener,\n    'ɵɵprojection': ɵɵprojection,\n    'ɵɵsyntheticHostProperty': ɵɵsyntheticHostProperty,\n    'ɵɵsyntheticHostListener': ɵɵsyntheticHostListener,\n    'ɵɵpipeBind1': ɵɵpipeBind1,\n    'ɵɵpipeBind2': ɵɵpipeBind2,\n    'ɵɵpipeBind3': ɵɵpipeBind3,\n    'ɵɵpipeBind4': ɵɵpipeBind4,\n    'ɵɵpipeBindV': ɵɵpipeBindV,\n    'ɵɵprojectionDef': ɵɵprojectionDef,\n    'ɵɵhostProperty': ɵɵhostProperty,\n    'ɵɵproperty': ɵɵproperty,\n    'ɵɵpropertyInterpolate': ɵɵpropertyInterpolate,\n    'ɵɵpropertyInterpolate1': ɵɵpropertyInterpolate1,\n    'ɵɵpropertyInterpolate2': ɵɵpropertyInterpolate2,\n    'ɵɵpropertyInterpolate3': ɵɵpropertyInterpolate3,\n    'ɵɵpropertyInterpolate4': ɵɵpropertyInterpolate4,\n    'ɵɵpropertyInterpolate5': ɵɵpropertyInterpolate5,\n    'ɵɵpropertyInterpolate6': ɵɵpropertyInterpolate6,\n    'ɵɵpropertyInterpolate7': ɵɵpropertyInterpolate7,\n    'ɵɵpropertyInterpolate8': ɵɵpropertyInterpolate8,\n    'ɵɵpropertyInterpolateV': ɵɵpropertyInterpolateV,\n    'ɵɵpipe': ɵɵpipe,\n    'ɵɵqueryRefresh': ɵɵqueryRefresh,\n    'ɵɵviewQuery': ɵɵviewQuery,\n    'ɵɵstaticViewQuery': ɵɵstaticViewQuery,\n    'ɵɵstaticContentQuery': ɵɵstaticContentQuery,\n    'ɵɵloadQuery': ɵɵloadQuery,\n    'ɵɵcontentQuery': ɵɵcontentQuery,\n    'ɵɵreference': ɵɵreference,\n    'ɵɵclassMap': ɵɵclassMap,\n    'ɵɵclassMapInterpolate1': ɵɵclassMapInterpolate1,\n    'ɵɵclassMapInterpolate2': ɵɵclassMapInterpolate2,\n    'ɵɵclassMapInterpolate3': ɵɵclassMapInterpolate3,\n    'ɵɵclassMapInterpolate4': ɵɵclassMapInterpolate4,\n    'ɵɵclassMapInterpolate5': ɵɵclassMapInterpolate5,\n    'ɵɵclassMapInterpolate6': ɵɵclassMapInterpolate6,\n    'ɵɵclassMapInterpolate7': ɵɵclassMapInterpolate7,\n    'ɵɵclassMapInterpolate8': ɵɵclassMapInterpolate8,\n    'ɵɵclassMapInterpolateV': ɵɵclassMapInterpolateV,\n    'ɵɵstyleMap': ɵɵstyleMap,\n    'ɵɵstyleMapInterpolate1': ɵɵstyleMapInterpolate1,\n    'ɵɵstyleMapInterpolate2': ɵɵstyleMapInterpolate2,\n    'ɵɵstyleMapInterpolate3': ɵɵstyleMapInterpolate3,\n    'ɵɵstyleMapInterpolate4': ɵɵstyleMapInterpolate4,\n    'ɵɵstyleMapInterpolate5': ɵɵstyleMapInterpolate5,\n    'ɵɵstyleMapInterpolate6': ɵɵstyleMapInterpolate6,\n    'ɵɵstyleMapInterpolate7': ɵɵstyleMapInterpolate7,\n    'ɵɵstyleMapInterpolate8': ɵɵstyleMapInterpolate8,\n    'ɵɵstyleMapInterpolateV': ɵɵstyleMapInterpolateV,\n    'ɵɵstyleProp': ɵɵstyleProp,\n    'ɵɵstylePropInterpolate1': ɵɵstylePropInterpolate1,\n    'ɵɵstylePropInterpolate2': ɵɵstylePropInterpolate2,\n    'ɵɵstylePropInterpolate3': ɵɵstylePropInterpolate3,\n    'ɵɵstylePropInterpolate4': ɵɵstylePropInterpolate4,\n    'ɵɵstylePropInterpolate5': ɵɵstylePropInterpolate5,\n    'ɵɵstylePropInterpolate6': ɵɵstylePropInterpolate6,\n    'ɵɵstylePropInterpolate7': ɵɵstylePropInterpolate7,\n    'ɵɵstylePropInterpolate8': ɵɵstylePropInterpolate8,\n    'ɵɵstylePropInterpolateV': ɵɵstylePropInterpolateV,\n    'ɵɵclassProp': ɵɵclassProp,\n    'ɵɵselect': ɵɵselect,\n    'ɵɵadvance': ɵɵadvance,\n    'ɵɵtemplate': ɵɵtemplate,\n    'ɵɵtext': ɵɵtext,\n    'ɵɵtextInterpolate': ɵɵtextInterpolate,\n    'ɵɵtextInterpolate1': ɵɵtextInterpolate1,\n    'ɵɵtextInterpolate2': ɵɵtextInterpolate2,\n    'ɵɵtextInterpolate3': ɵɵtextInterpolate3,\n    'ɵɵtextInterpolate4': ɵɵtextInterpolate4,\n    'ɵɵtextInterpolate5': ɵɵtextInterpolate5,\n    'ɵɵtextInterpolate6': ɵɵtextInterpolate6,\n    'ɵɵtextInterpolate7': ɵɵtextInterpolate7,\n    'ɵɵtextInterpolate8': ɵɵtextInterpolate8,\n    'ɵɵtextInterpolateV': ɵɵtextInterpolateV,\n    'ɵɵi18n': ɵɵi18n,\n    'ɵɵi18nAttributes': ɵɵi18nAttributes,\n    'ɵɵi18nExp': ɵɵi18nExp,\n    'ɵɵi18nStart': ɵɵi18nStart,\n    'ɵɵi18nEnd': ɵɵi18nEnd,\n    'ɵɵi18nApply': ɵɵi18nApply,\n    'ɵɵi18nPostprocess': ɵɵi18nPostprocess,\n    'ɵɵresolveWindow': ɵɵresolveWindow,\n    'ɵɵresolveDocument': ɵɵresolveDocument,\n    'ɵɵresolveBody': ɵɵresolveBody,\n    'ɵɵsetComponentScope': ɵɵsetComponentScope,\n    'ɵɵsetNgModuleScope': ɵɵsetNgModuleScope,\n    'ɵɵsanitizeHtml': ɵɵsanitizeHtml,\n    'ɵɵsanitizeStyle': ɵɵsanitizeStyle,\n    'ɵɵsanitizeResourceUrl': ɵɵsanitizeResourceUrl,\n    'ɵɵsanitizeScript': ɵɵsanitizeScript,\n    'ɵɵsanitizeUrl': ɵɵsanitizeUrl,\n    'ɵɵsanitizeUrlOrResourceUrl': ɵɵsanitizeUrlOrResourceUrl,\n});\n/**\n * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n *\n * This should be kept up to date with the public exports of @angular/core.\n */\nconst angularCoreEnv = (ɵ0$d)();\n\nlet jitOptions = null;\nfunction setJitOptions(options) {\n    if (jitOptions !== null) {\n        if (options.defaultEncapsulation !== jitOptions.defaultEncapsulation) {\n            ngDevMode &&\n                console.error('Provided value for `defaultEncapsulation` can not be changed once it has been set.');\n            return;\n        }\n        if (options.preserveWhitespaces !== jitOptions.preserveWhitespaces) {\n            ngDevMode &&\n                console.error('Provided value for `preserveWhitespaces` can not be changed once it has been set.');\n            return;\n        }\n    }\n    jitOptions = options;\n}\nfunction getJitOptions() {\n    return jitOptions;\n}\nfunction resetJitOptions() {\n    jitOptions = null;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst EMPTY_ARRAY$5 = [];\nconst moduleQueue = [];\n/**\n * Enqueues moduleDef to be checked later to see if scope can be set on its\n * component declarations.\n */\nfunction enqueueModuleForDelayedScoping(moduleType, ngModule) {\n    moduleQueue.push({ moduleType, ngModule });\n}\nlet flushingModuleQueue = false;\n/**\n * Loops over queued module definitions, if a given module definition has all of its\n * declarations resolved, it dequeues that module definition and sets the scope on\n * its declarations.\n */\nfunction flushModuleScopingQueueAsMuchAsPossible() {\n    if (!flushingModuleQueue) {\n        flushingModuleQueue = true;\n        try {\n            for (let i = moduleQueue.length - 1; i >= 0; i--) {\n                const { moduleType, ngModule } = moduleQueue[i];\n                if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                    // dequeue\n                    moduleQueue.splice(i, 1);\n                    setScopeOnDeclaredComponents(moduleType, ngModule);\n                }\n            }\n        }\n        finally {\n            flushingModuleQueue = false;\n        }\n    }\n}\n/**\n * Returns truthy if a declaration has resolved. If the declaration happens to be\n * an array of declarations, it will recurse to check each declaration in that array\n * (which may also be arrays).\n */\nfunction isResolvedDeclaration(declaration) {\n    if (Array.isArray(declaration)) {\n        return declaration.every(isResolvedDeclaration);\n    }\n    return !!resolveForwardRef(declaration);\n}\n/**\n * Compiles a module in JIT mode.\n *\n * This function automatically gets called when a class has a `@NgModule` decorator.\n */\nfunction compileNgModule(moduleType, ngModule = {}) {\n    compileNgModuleDefs(moduleType, ngModule);\n    // Because we don't know if all declarations have resolved yet at the moment the\n    // NgModule decorator is executing, we're enqueueing the setting of module scope\n    // on its declarations to be run at a later time when all declarations for the module,\n    // including forward refs, have resolved.\n    enqueueModuleForDelayedScoping(moduleType, ngModule);\n}\n/**\n * Compiles and adds the `ɵmod` and `ɵinj` properties to the module class.\n *\n * It's possible to compile a module via this API which will allow duplicate declarations in its\n * root.\n */\nfunction compileNgModuleDefs(moduleType, ngModule, allowDuplicateDeclarationsInRoot = false) {\n    ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n    ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n    const declarations = flatten(ngModule.declarations || EMPTY_ARRAY$5);\n    let ngModuleDef = null;\n    Object.defineProperty(moduleType, NG_MOD_DEF, {\n        configurable: true,\n        get: () => {\n            if (ngModuleDef === null) {\n                if (ngDevMode && ngModule.imports && ngModule.imports.indexOf(moduleType) > -1) {\n                    // We need to assert this immediately, because allowing it to continue will cause it to\n                    // go into an infinite loop before we've reached the point where we throw all the errors.\n                    throw new Error(`'${stringifyForError(moduleType)}' module can't import itself`);\n                }\n                ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, `ng:///${moduleType.name}/ɵmod.js`, {\n                    type: moduleType,\n                    bootstrap: flatten(ngModule.bootstrap || EMPTY_ARRAY$5).map(resolveForwardRef),\n                    declarations: declarations.map(resolveForwardRef),\n                    imports: flatten(ngModule.imports || EMPTY_ARRAY$5)\n                        .map(resolveForwardRef)\n                        .map(expandModuleWithProviders),\n                    exports: flatten(ngModule.exports || EMPTY_ARRAY$5)\n                        .map(resolveForwardRef)\n                        .map(expandModuleWithProviders),\n                    schemas: ngModule.schemas ? flatten(ngModule.schemas) : null,\n                    id: ngModule.id || null,\n                });\n                // Set `schemas` on ngModuleDef to an empty array in JIT mode to indicate that runtime\n                // should verify that there are no unknown elements in a template. In AOT mode, that check\n                // happens at compile time and `schemas` information is not present on Component and Module\n                // defs after compilation (so the check doesn't happen the second time at runtime).\n                if (!ngModuleDef.schemas) {\n                    ngModuleDef.schemas = [];\n                }\n            }\n            return ngModuleDef;\n        }\n    });\n    let ngInjectorDef = null;\n    Object.defineProperty(moduleType, NG_INJ_DEF, {\n        get: () => {\n            if (ngInjectorDef === null) {\n                ngDevMode &&\n                    verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot);\n                const meta = {\n                    name: moduleType.name,\n                    type: moduleType,\n                    deps: reflectDependencies(moduleType),\n                    providers: ngModule.providers || EMPTY_ARRAY$5,\n                    imports: [\n                        (ngModule.imports || EMPTY_ARRAY$5).map(resolveForwardRef),\n                        (ngModule.exports || EMPTY_ARRAY$5).map(resolveForwardRef),\n                    ],\n                };\n                ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, `ng:///${moduleType.name}/ɵinj.js`, meta);\n            }\n            return ngInjectorDef;\n        },\n        // Make the property configurable in dev mode to allow overriding in tests\n        configurable: !!ngDevMode,\n    });\n}\nfunction verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot, importingModule) {\n    if (verifiedNgModule.get(moduleType))\n        return;\n    verifiedNgModule.set(moduleType, true);\n    moduleType = resolveForwardRef(moduleType);\n    let ngModuleDef;\n    if (importingModule) {\n        ngModuleDef = getNgModuleDef(moduleType);\n        if (!ngModuleDef) {\n            throw new Error(`Unexpected value '${moduleType.name}' imported by the module '${importingModule.name}'. Please add an @NgModule annotation.`);\n        }\n    }\n    else {\n        ngModuleDef = getNgModuleDef(moduleType, true);\n    }\n    const errors = [];\n    const declarations = maybeUnwrapFn(ngModuleDef.declarations);\n    const imports = maybeUnwrapFn(ngModuleDef.imports);\n    flatten(imports).map(unwrapModuleWithProvidersImports).forEach(mod => {\n        verifySemanticsOfNgModuleImport(mod, moduleType);\n        verifySemanticsOfNgModuleDef(mod, false, moduleType);\n    });\n    const exports = maybeUnwrapFn(ngModuleDef.exports);\n    declarations.forEach(verifyDeclarationsHaveDefinitions);\n    declarations.forEach(verifyDirectivesHaveSelector);\n    const combinedDeclarations = [\n        ...declarations.map(resolveForwardRef),\n        ...flatten(imports.map(computeCombinedExports)).map(resolveForwardRef),\n    ];\n    exports.forEach(verifyExportsAreDeclaredOrReExported);\n    declarations.forEach(decl => verifyDeclarationIsUnique(decl, allowDuplicateDeclarationsInRoot));\n    declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n    const ngModule = getAnnotation(moduleType, 'NgModule');\n    if (ngModule) {\n        ngModule.imports &&\n            flatten(ngModule.imports).map(unwrapModuleWithProvidersImports).forEach(mod => {\n                verifySemanticsOfNgModuleImport(mod, moduleType);\n                verifySemanticsOfNgModuleDef(mod, false, moduleType);\n            });\n        ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyCorrectBootstrapType);\n        ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyComponentIsPartOfNgModule);\n        ngModule.entryComponents &&\n            deepForEach(ngModule.entryComponents, verifyComponentIsPartOfNgModule);\n    }\n    // Throw Error if any errors were detected.\n    if (errors.length) {\n        throw new Error(errors.join('\\n'));\n    }\n    ////////////////////////////////////////////////////////////////////////////////////////////////\n    function verifyDeclarationsHaveDefinitions(type) {\n        type = resolveForwardRef(type);\n        const def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n        if (!def) {\n            errors.push(`Unexpected value '${stringifyForError(type)}' declared by the module '${stringifyForError(moduleType)}'. Please add a @Pipe/@Directive/@Component annotation.`);\n        }\n    }\n    function verifyDirectivesHaveSelector(type) {\n        type = resolveForwardRef(type);\n        const def = getDirectiveDef(type);\n        if (!getComponentDef(type) && def && def.selectors.length == 0) {\n            errors.push(`Directive ${stringifyForError(type)} has no selector, please add it!`);\n        }\n    }\n    function verifyExportsAreDeclaredOrReExported(type) {\n        type = resolveForwardRef(type);\n        const kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n            getPipeDef(type) && 'pipe';\n        if (kind) {\n            // only checked if we are declared as Component, Directive, or Pipe\n            // Modules don't need to be declared or imported.\n            if (combinedDeclarations.lastIndexOf(type) === -1) {\n                // We are exporting something which we don't explicitly declare or import.\n                errors.push(`Can't export ${kind} ${stringifyForError(type)} from ${stringifyForError(moduleType)} as it was neither declared nor imported!`);\n            }\n        }\n    }\n    function verifyDeclarationIsUnique(type, suppressErrors) {\n        type = resolveForwardRef(type);\n        const existingModule = ownerNgModule.get(type);\n        if (existingModule && existingModule !== moduleType) {\n            if (!suppressErrors) {\n                const modules = [existingModule, moduleType].map(stringifyForError).sort();\n                errors.push(`Type ${stringifyForError(type)} is part of the declarations of 2 modules: ${modules[0]} and ${modules[1]}! ` +\n                    `Please consider moving ${stringifyForError(type)} to a higher module that imports ${modules[0]} and ${modules[1]}. ` +\n                    `You can also create a new NgModule that exports and includes ${stringifyForError(type)} then import that NgModule in ${modules[0]} and ${modules[1]}.`);\n            }\n        }\n        else {\n            // Mark type as having owner.\n            ownerNgModule.set(type, moduleType);\n        }\n    }\n    function verifyComponentIsPartOfNgModule(type) {\n        type = resolveForwardRef(type);\n        const existingModule = ownerNgModule.get(type);\n        if (!existingModule) {\n            errors.push(`Component ${stringifyForError(type)} is not part of any NgModule or the module has not been imported into your module.`);\n        }\n    }\n    function verifyCorrectBootstrapType(type) {\n        type = resolveForwardRef(type);\n        if (!getComponentDef(type)) {\n            errors.push(`${stringifyForError(type)} cannot be used as an entry component.`);\n        }\n    }\n    function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n        type = resolveForwardRef(type);\n        if (getComponentDef(type)) {\n            // We know we are component\n            const component = getAnnotation(type, 'Component');\n            if (component && component.entryComponents) {\n                deepForEach(component.entryComponents, verifyComponentIsPartOfNgModule);\n            }\n        }\n    }\n    function verifySemanticsOfNgModuleImport(type, importingModule) {\n        type = resolveForwardRef(type);\n        if (getComponentDef(type) || getDirectiveDef(type)) {\n            throw new Error(`Unexpected directive '${type.name}' imported by the module '${importingModule.name}'. Please add an @NgModule annotation.`);\n        }\n        if (getPipeDef(type)) {\n            throw new Error(`Unexpected pipe '${type.name}' imported by the module '${importingModule.name}'. Please add an @NgModule annotation.`);\n        }\n    }\n}\nfunction unwrapModuleWithProvidersImports(typeOrWithProviders) {\n    typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n    return typeOrWithProviders.ngModule || typeOrWithProviders;\n}\nfunction getAnnotation(type, name) {\n    let annotation = null;\n    collect(type.__annotations__);\n    collect(type.decorators);\n    return annotation;\n    function collect(annotations) {\n        if (annotations) {\n            annotations.forEach(readAnnotation);\n        }\n    }\n    function readAnnotation(decorator) {\n        if (!annotation) {\n            const proto = Object.getPrototypeOf(decorator);\n            if (proto.ngMetadataName == name) {\n                annotation = decorator;\n            }\n            else if (decorator.type) {\n                const proto = Object.getPrototypeOf(decorator.type);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator.args[0];\n                }\n            }\n        }\n    }\n}\n/**\n * Keep track of compiled components. This is needed because in tests we often want to compile the\n * same component with more than one NgModule. This would cause an error unless we reset which\n * NgModule the component belongs to. We keep the list of compiled components here so that the\n * TestBed can reset it later.\n */\nlet ownerNgModule = new Map();\nlet verifiedNgModule = new Map();\nfunction resetCompiledComponents() {\n    ownerNgModule = new Map();\n    verifiedNgModule = new Map();\n    moduleQueue.length = 0;\n}\n/**\n * Computes the combined declarations of explicit declarations, as well as declarations inherited by\n * traversing the exports of imported modules.\n * @param type\n */\nfunction computeCombinedExports(type) {\n    type = resolveForwardRef(type);\n    const ngModuleDef = getNgModuleDef(type, true);\n    return [...flatten(maybeUnwrapFn(ngModuleDef.exports).map((type) => {\n            const ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type, false);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        }))];\n}\n/**\n * Some declared components may be compiled asynchronously, and thus may not have their\n * ɵcmp set yet. If this is the case, then a reference to the module is written into\n * the `ngSelectorScope` property of the declared type.\n */\nfunction setScopeOnDeclaredComponents(moduleType, ngModule) {\n    const declarations = flatten(ngModule.declarations || EMPTY_ARRAY$5);\n    const transitiveScopes = transitiveScopesFor(moduleType);\n    declarations.forEach(declaration => {\n        if (declaration.hasOwnProperty(NG_COMP_DEF)) {\n            // A `ɵcmp` field exists - go ahead and patch the component directly.\n            const component = declaration;\n            const componentDef = getComponentDef(component);\n            patchComponentDefWithScope(componentDef, transitiveScopes);\n        }\n        else if (!declaration.hasOwnProperty(NG_DIR_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n            // Set `ngSelectorScope` for future reference when the component compilation finishes.\n            declaration.ngSelectorScope = moduleType;\n        }\n    });\n}\n/**\n * Patch the definition of a component with directives and pipes from the compilation scope of\n * a given module.\n */\nfunction patchComponentDefWithScope(componentDef, transitiveScopes) {\n    componentDef.directiveDefs = () => Array.from(transitiveScopes.compilation.directives)\n        .map(dir => dir.hasOwnProperty(NG_COMP_DEF) ? getComponentDef(dir) : getDirectiveDef(dir))\n        .filter(def => !!def);\n    componentDef.pipeDefs = () => Array.from(transitiveScopes.compilation.pipes).map(pipe => getPipeDef(pipe));\n    componentDef.schemas = transitiveScopes.schemas;\n    // Since we avoid Components/Directives/Pipes recompiling in case there are no overrides, we\n    // may face a problem where previously compiled defs available to a given Component/Directive\n    // are cached in TView and may become stale (in case any of these defs gets recompiled). In\n    // order to avoid this problem, we force fresh TView to be created.\n    componentDef.tView = null;\n}\n/**\n * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n *\n * This operation is memoized and the result is cached on the module's definition. This function can\n * be called on modules with components that have not fully compiled yet, but the result should not\n * be used until they have.\n *\n * @param moduleType module that transitive scope should be calculated for.\n */\nfunction transitiveScopesFor(moduleType) {\n    if (!isNgModule(moduleType)) {\n        throw new Error(`${moduleType.name} does not have a module def (ɵmod property)`);\n    }\n    const def = getNgModuleDef(moduleType);\n    if (def.transitiveCompileScopes !== null) {\n        return def.transitiveCompileScopes;\n    }\n    const scopes = {\n        schemas: def.schemas || null,\n        compilation: {\n            directives: new Set(),\n            pipes: new Set(),\n        },\n        exported: {\n            directives: new Set(),\n            pipes: new Set(),\n        },\n    };\n    maybeUnwrapFn(def.imports).forEach((imported) => {\n        const importedType = imported;\n        if (!isNgModule(importedType)) {\n            throw new Error(`Importing ${importedType.name} which does not have a ɵmod property`);\n        }\n        // When this module imports another, the imported module's exported directives and pipes are\n        // added to the compilation scope of this module.\n        const importedScope = transitiveScopesFor(importedType);\n        importedScope.exported.directives.forEach(entry => scopes.compilation.directives.add(entry));\n        importedScope.exported.pipes.forEach(entry => scopes.compilation.pipes.add(entry));\n    });\n    maybeUnwrapFn(def.declarations).forEach(declared => {\n        const declaredWithDefs = declared;\n        if (getPipeDef(declaredWithDefs)) {\n            scopes.compilation.pipes.add(declared);\n        }\n        else {\n            // Either declared has a ɵcmp or ɵdir, or it's a component which hasn't\n            // had its template compiled yet. In either case, it gets added to the compilation's\n            // directives.\n            scopes.compilation.directives.add(declared);\n        }\n    });\n    maybeUnwrapFn(def.exports).forEach((exported) => {\n        const exportedType = exported;\n        // Either the type is a module, a pipe, or a component/directive (which may not have a\n        // ɵcmp as it might be compiled asynchronously).\n        if (isNgModule(exportedType)) {\n            // When this module exports another, the exported module's exported directives and pipes are\n            // added to both the compilation and exported scopes of this module.\n            const exportedScope = transitiveScopesFor(exportedType);\n            exportedScope.exported.directives.forEach(entry => {\n                scopes.compilation.directives.add(entry);\n                scopes.exported.directives.add(entry);\n            });\n            exportedScope.exported.pipes.forEach(entry => {\n                scopes.compilation.pipes.add(entry);\n                scopes.exported.pipes.add(entry);\n            });\n        }\n        else if (getPipeDef(exportedType)) {\n            scopes.exported.pipes.add(exportedType);\n        }\n        else {\n            scopes.exported.directives.add(exportedType);\n        }\n    });\n    def.transitiveCompileScopes = scopes;\n    return scopes;\n}\nfunction expandModuleWithProviders(value) {\n    if (isModuleWithProviders(value)) {\n        return value.ngModule;\n    }\n    return value;\n}\nfunction isModuleWithProviders(value) {\n    return value.ngModule !== undefined;\n}\nfunction isNgModule(value) {\n    return !!getNgModuleDef(value);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Keep track of the compilation depth to avoid reentrancy issues during JIT compilation. This\n * matters in the following scenario:\n *\n * Consider a component 'A' that extends component 'B', both declared in module 'M'. During\n * the compilation of 'A' the definition of 'B' is requested to capture the inheritance chain,\n * potentially triggering compilation of 'B'. If this nested compilation were to trigger\n * `flushModuleScopingQueueAsMuchAsPossible` it may happen that module 'M' is still pending in the\n * queue, resulting in 'A' and 'B' to be patched with the NgModule scope. As the compilation of\n * 'A' is still in progress, this would introduce a circular dependency on its compilation. To avoid\n * this issue, the module scope queue is only flushed for compilations at the depth 0, to ensure\n * all compilations have finished.\n */\nlet compilationDepth = 0;\n/**\n * Compile an Angular component according to its decorator metadata, and patch the resulting\n * component def (ɵcmp) onto the component type.\n *\n * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n * will enqueue resource resolution into a global queue and will fail to return the `ɵcmp`\n * until the global queue has been resolved with a call to `resolveComponentResources`.\n */\nfunction compileComponent(type, metadata) {\n    // Initialize ngDevMode. This must be the first statement in compileComponent.\n    // See the `initNgDevMode` docstring for more information.\n    (typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode();\n    let ngComponentDef = null;\n    // Metadata may have resources which need to be resolved.\n    maybeQueueResolutionOfComponentResources(type, metadata);\n    // Note that we're using the same function as `Directive`, because that's only subset of metadata\n    // that we need to create the ngFactoryDef. We're avoiding using the component metadata\n    // because we'd have to resolve the asynchronous templates.\n    addDirectiveFactoryDef(type, metadata);\n    Object.defineProperty(type, NG_COMP_DEF, {\n        get: () => {\n            if (ngComponentDef === null) {\n                const compiler = getCompilerFacade();\n                if (componentNeedsResolution(metadata)) {\n                    const error = [`Component '${type.name}' is not resolved:`];\n                    if (metadata.templateUrl) {\n                        error.push(` - templateUrl: ${metadata.templateUrl}`);\n                    }\n                    if (metadata.styleUrls && metadata.styleUrls.length) {\n                        error.push(` - styleUrls: ${JSON.stringify(metadata.styleUrls)}`);\n                    }\n                    error.push(`Did you run and wait for 'resolveComponentResources()'?`);\n                    throw new Error(error.join('\\n'));\n                }\n                // This const was called `jitOptions` previously but had to be renamed to `options` because\n                // of a bug with Terser that caused optimized JIT builds to throw a `ReferenceError`.\n                // This bug was investigated in https://github.com/angular/angular-cli/issues/17264.\n                // We should not rename it back until https://github.com/terser/terser/issues/615 is fixed.\n                const options = getJitOptions();\n                let preserveWhitespaces = metadata.preserveWhitespaces;\n                if (preserveWhitespaces === undefined) {\n                    if (options !== null && options.preserveWhitespaces !== undefined) {\n                        preserveWhitespaces = options.preserveWhitespaces;\n                    }\n                    else {\n                        preserveWhitespaces = false;\n                    }\n                }\n                let encapsulation = metadata.encapsulation;\n                if (encapsulation === undefined) {\n                    if (options !== null && options.defaultEncapsulation !== undefined) {\n                        encapsulation = options.defaultEncapsulation;\n                    }\n                    else {\n                        encapsulation = ViewEncapsulation$1.Emulated;\n                    }\n                }\n                const templateUrl = metadata.templateUrl || `ng:///${type.name}/template.html`;\n                const meta = Object.assign(Object.assign({}, directiveMetadata(type, metadata)), { typeSourceSpan: compiler.createParseSourceSpan('Component', type.name, templateUrl), template: metadata.template || '', preserveWhitespaces, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                compilationDepth++;\n                try {\n                    if (meta.usesInheritance) {\n                        addDirectiveDefToUndecoratedParents(type);\n                    }\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, templateUrl, meta);\n                }\n                finally {\n                    // Ensure that the compilation depth is decremented even when the compilation failed.\n                    compilationDepth--;\n                }\n                if (compilationDepth === 0) {\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                }\n                // If component compilation is async, then the @NgModule annotation which declares the\n                // component may execute and set an ngSelectorScope property on the component type. This\n                // allows the component to patch itself with directiveDefs from the module after it\n                // finishes compiling.\n                if (hasSelectorScope(type)) {\n                    const scopes = transitiveScopesFor(type.ngSelectorScope);\n                    patchComponentDefWithScope(ngComponentDef, scopes);\n                }\n            }\n            return ngComponentDef;\n        },\n        // Make the property configurable in dev mode to allow overriding in tests\n        configurable: !!ngDevMode,\n    });\n}\nfunction hasSelectorScope(component) {\n    return component.ngSelectorScope !== undefined;\n}\n/**\n * Compile an Angular directive according to its decorator metadata, and patch the resulting\n * directive def onto the component type.\n *\n * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n * will resolve when compilation completes and the directive becomes usable.\n */\nfunction compileDirective(type, directive) {\n    let ngDirectiveDef = null;\n    addDirectiveFactoryDef(type, directive || {});\n    Object.defineProperty(type, NG_DIR_DEF, {\n        get: () => {\n            if (ngDirectiveDef === null) {\n                // `directive` can be null in the case of abstract directives as a base class\n                // that use `@Directive()` with no selector. In that case, pass empty object to the\n                // `directiveMetadata` function instead of null.\n                const meta = getDirectiveMetadata(type, directive || {});\n                ngDirectiveDef =\n                    getCompilerFacade().compileDirective(angularCoreEnv, meta.sourceMapUrl, meta.metadata);\n            }\n            return ngDirectiveDef;\n        },\n        // Make the property configurable in dev mode to allow overriding in tests\n        configurable: !!ngDevMode,\n    });\n}\nfunction getDirectiveMetadata(type, metadata) {\n    const name = type && type.name;\n    const sourceMapUrl = `ng:///${name}/ɵdir.js`;\n    const compiler = getCompilerFacade();\n    const facade = directiveMetadata(type, metadata);\n    facade.typeSourceSpan = compiler.createParseSourceSpan('Directive', name, sourceMapUrl);\n    if (facade.usesInheritance) {\n        addDirectiveDefToUndecoratedParents(type);\n    }\n    return { metadata: facade, sourceMapUrl };\n}\nfunction addDirectiveFactoryDef(type, metadata) {\n    let ngFactoryDef = null;\n    Object.defineProperty(type, NG_FACTORY_DEF, {\n        get: () => {\n            if (ngFactoryDef === null) {\n                const meta = getDirectiveMetadata(type, metadata);\n                const compiler = getCompilerFacade();\n                ngFactoryDef = compiler.compileFactory(angularCoreEnv, `ng:///${type.name}/ɵfac.js`, Object.assign(Object.assign({}, meta.metadata), { injectFn: 'directiveInject', target: compiler.R3FactoryTarget.Directive }));\n            }\n            return ngFactoryDef;\n        },\n        // Make the property configurable in dev mode to allow overriding in tests\n        configurable: !!ngDevMode,\n    });\n}\nfunction extendsDirectlyFromObject(type) {\n    return Object.getPrototypeOf(type.prototype) === Object.prototype;\n}\n/**\n * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n * `Component`).\n */\nfunction directiveMetadata(type, metadata) {\n    // Reflect inputs and outputs.\n    const reflect = getReflect();\n    const propMetadata = reflect.ownPropMetadata(type);\n    return {\n        name: type.name,\n        type: type,\n        typeArgumentCount: 0,\n        selector: metadata.selector !== undefined ? metadata.selector : null,\n        deps: reflectDependencies(type),\n        host: metadata.host || EMPTY_OBJ,\n        propMetadata: propMetadata,\n        inputs: metadata.inputs || EMPTY_ARRAY,\n        outputs: metadata.outputs || EMPTY_ARRAY,\n        queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n        lifecycle: { usesOnChanges: reflect.hasLifecycleHook(type, 'ngOnChanges') },\n        typeSourceSpan: null,\n        usesInheritance: !extendsDirectlyFromObject(type),\n        exportAs: extractExportAs(metadata.exportAs),\n        providers: metadata.providers || null,\n        viewQueries: extractQueriesMetadata(type, propMetadata, isViewQuery)\n    };\n}\n/**\n * Adds a directive definition to all parent classes of a type that don't have an Angular decorator.\n */\nfunction addDirectiveDefToUndecoratedParents(type) {\n    const objPrototype = Object.prototype;\n    let parent = Object.getPrototypeOf(type.prototype).constructor;\n    // Go up the prototype until we hit `Object`.\n    while (parent && parent !== objPrototype) {\n        // Since inheritance works if the class was annotated already, we only need to add\n        // the def if there are no annotations and the def hasn't been created already.\n        if (!getDirectiveDef(parent) && !getComponentDef(parent) &&\n            shouldAddAbstractDirective(parent)) {\n            compileDirective(parent, null);\n        }\n        parent = Object.getPrototypeOf(parent);\n    }\n}\nfunction convertToR3QueryPredicate(selector) {\n    return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n}\nfunction convertToR3QueryMetadata(propertyName, ann) {\n    return {\n        propertyName: propertyName,\n        predicate: convertToR3QueryPredicate(ann.selector),\n        descendants: ann.descendants,\n        first: ann.first,\n        read: ann.read ? ann.read : null,\n        static: !!ann.static\n    };\n}\nfunction extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n    const queriesMeta = [];\n    for (const field in propMetadata) {\n        if (propMetadata.hasOwnProperty(field)) {\n            const annotations = propMetadata[field];\n            annotations.forEach(ann => {\n                if (isQueryAnn(ann)) {\n                    if (!ann.selector) {\n                        throw new Error(`Can't construct a query for the property \"${field}\" of ` +\n                            `\"${stringifyForError(type)}\" since the query selector wasn't defined.`);\n                    }\n                    if (annotations.some(isInputAnnotation)) {\n                        throw new Error(`Cannot combine @Input decorators with query decorators`);\n                    }\n                    queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                }\n            });\n        }\n    }\n    return queriesMeta;\n}\nfunction extractExportAs(exportAs) {\n    return exportAs === undefined ? null : splitByComma(exportAs);\n}\nfunction isContentQuery(value) {\n    const name = value.ngMetadataName;\n    return name === 'ContentChild' || name === 'ContentChildren';\n}\nfunction isViewQuery(value) {\n    const name = value.ngMetadataName;\n    return name === 'ViewChild' || name === 'ViewChildren';\n}\nfunction isInputAnnotation(value) {\n    return value.ngMetadataName === 'Input';\n}\nfunction splitByComma(value) {\n    return value.split(',').map(piece => piece.trim());\n}\nconst LIFECYCLE_HOOKS = [\n    'ngOnChanges', 'ngOnInit', 'ngOnDestroy', 'ngDoCheck', 'ngAfterViewInit', 'ngAfterViewChecked',\n    'ngAfterContentInit', 'ngAfterContentChecked'\n];\nfunction shouldAddAbstractDirective(type) {\n    const reflect = getReflect();\n    if (LIFECYCLE_HOOKS.some(hookName => reflect.hasLifecycleHook(type, hookName))) {\n        return true;\n    }\n    const propMetadata = reflect.propMetadata(type);\n    for (const field in propMetadata) {\n        const annotations = propMetadata[field];\n        for (let i = 0; i < annotations.length; i++) {\n            const current = annotations[i];\n            const metadataName = current.ngMetadataName;\n            if (isInputAnnotation(current) || isContentQuery(current) || isViewQuery(current) ||\n                metadataName === 'Output' || metadataName === 'HostBinding' ||\n                metadataName === 'HostListener') {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction compilePipe(type, meta) {\n    let ngPipeDef = null;\n    let ngFactoryDef = null;\n    Object.defineProperty(type, NG_FACTORY_DEF, {\n        get: () => {\n            if (ngFactoryDef === null) {\n                const metadata = getPipeMetadata(type, meta);\n                const compiler = getCompilerFacade();\n                ngFactoryDef = compiler.compileFactory(angularCoreEnv, `ng:///${metadata.name}/ɵfac.js`, Object.assign(Object.assign({}, metadata), { injectFn: 'directiveInject', target: compiler.R3FactoryTarget.Pipe }));\n            }\n            return ngFactoryDef;\n        },\n        // Make the property configurable in dev mode to allow overriding in tests\n        configurable: !!ngDevMode,\n    });\n    Object.defineProperty(type, NG_PIPE_DEF, {\n        get: () => {\n            if (ngPipeDef === null) {\n                const metadata = getPipeMetadata(type, meta);\n                ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, `ng:///${metadata.name}/ɵpipe.js`, metadata);\n            }\n            return ngPipeDef;\n        },\n        // Make the property configurable in dev mode to allow overriding in tests\n        configurable: !!ngDevMode,\n    });\n}\nfunction getPipeMetadata(type, meta) {\n    return {\n        type: type,\n        typeArgumentCount: 0,\n        name: type.name,\n        deps: reflectDependencies(type),\n        pipeName: meta.name,\n        pure: meta.pure !== undefined ? meta.pure : true\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ɵ0$e = (dir = {}) => dir, ɵ1$3 = (type, meta) => SWITCH_COMPILE_DIRECTIVE(type, meta);\n/**\n * Type of the Directive metadata.\n *\n * @publicApi\n */\nconst Directive = makeDecorator('Directive', ɵ0$e, undefined, undefined, ɵ1$3);\nconst ɵ2$1 = (c = {}) => (Object.assign({ changeDetection: ChangeDetectionStrategy.Default }, c)), ɵ3$1 = (type, meta) => SWITCH_COMPILE_COMPONENT(type, meta);\n/**\n * Component decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nconst Component = makeDecorator('Component', ɵ2$1, Directive, undefined, ɵ3$1);\nconst ɵ4 = (p) => (Object.assign({ pure: true }, p)), ɵ5 = (type, meta) => SWITCH_COMPILE_PIPE(type, meta);\n/**\n * @Annotation\n * @publicApi\n */\nconst Pipe = makeDecorator('Pipe', ɵ4, undefined, undefined, ɵ5);\nconst ɵ6 = (bindingPropertyName) => ({ bindingPropertyName });\n/**\n * @Annotation\n * @publicApi\n */\nconst Input = makePropDecorator('Input', ɵ6);\nconst ɵ7 = (bindingPropertyName) => ({ bindingPropertyName });\n/**\n * @Annotation\n * @publicApi\n */\nconst Output = makePropDecorator('Output', ɵ7);\nconst ɵ8 = (hostPropertyName) => ({ hostPropertyName });\n/**\n * @Annotation\n * @publicApi\n */\nconst HostBinding = makePropDecorator('HostBinding', ɵ8);\nconst ɵ9 = (eventName, args) => ({ eventName, args });\n/**\n * Decorator that binds a DOM event to a host listener and supplies configuration metadata.\n * Angular invokes the supplied handler method when the host element emits the specified event,\n * and updates the bound element with the result.\n *\n * If the handler method returns false, applies `preventDefault` on the bound element.\n *\n * @usageNotes\n *\n * The following example declares a directive\n * that attaches a click listener to a button and counts clicks.\n *\n * ```ts\n * @Directive({selector: 'button[counting]'})\n * class CountClicks {\n *   numberOfClicks = 0;\n *\n *   @HostListener('click', ['$event.target'])\n *   onClick(btn) {\n *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n *  }\n * }\n *\n * @Component({\n *   selector: 'app',\n *   template: '<button counting>Increment</button>',\n * })\n * class App {}\n *\n * ```\n *\n * The following example registers another DOM event handler that listens for key-press events.\n * ``` ts\n * import { HostListener, Component } from \"@angular/core\";\n *\n * @Component({\n *   selector: 'app',\n *   template: `<h1>Hello, you have pressed keys {{counter}} number of times!</h1> Press any key to\n * increment the counter.\n *   <button (click)=\"resetCounter()\">Reset Counter</button>`\n * })\n * class AppComponent {\n *   counter = 0;\n *   @HostListener('window:keydown', ['$event'])\n *   handleKeyDown(event: KeyboardEvent) {\n *     this.counter++;\n *   }\n *   resetCounter() {\n *     this.counter = 0;\n *   }\n * }\n * ```\n *\n * @Annotation\n * @publicApi\n */\nconst HostListener = makePropDecorator('HostListener', ɵ9);\nconst SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\nconst SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\nconst SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\nconst SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\nconst SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\nconst SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\nconst SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__POST_R3__;\nconst SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\nconst SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__POST_R3__;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ɵ0$f = (ngModule) => ngModule, ɵ1$4 = \n/**\n * Decorator that marks the following class as an NgModule, and supplies\n * configuration metadata for it.\n *\n * * The `declarations` and `entryComponents` options configure the compiler\n * with information about what belongs to the NgModule.\n * * The `providers` options configures the NgModule's injector to provide\n * dependencies the NgModule members.\n * * The `imports` and `exports` options bring in members from other modules, and make\n * this module's members available to others.\n */\n(type, meta) => SWITCH_COMPILE_NGMODULE(type, meta);\n/**\n * @Annotation\n * @publicApi\n */\nconst NgModule = makeDecorator('NgModule', ɵ0$f, undefined, undefined, ɵ1$4);\nfunction preR3NgModuleCompile(moduleType, metadata) {\n    let imports = (metadata && metadata.imports) || [];\n    if (metadata && metadata.exports) {\n        imports = [...imports, metadata.exports];\n    }\n    moduleType.ɵinj = ɵɵdefineInjector({\n        factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n        providers: metadata && metadata.providers,\n        imports: imports,\n    });\n}\nconst SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\nconst SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\nconst SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__POST_R3__;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A [DI token](guide/glossary#di-token \"DI token definition\") that you can use to provide\n * one or more initialization functions.\n *\n * The provided functions are injected at application startup and executed during\n * app initialization. If any of these functions returns a Promise, initialization\n * does not complete until the Promise is resolved.\n *\n * You can, for example, create a factory function that loads language data\n * or an external configuration, and provide that function to the `APP_INITIALIZER` token.\n * The function is executed during the application bootstrap process,\n * and the needed data is available on startup.\n *\n * @see `ApplicationInitStatus`\n *\n * @publicApi\n */\nconst APP_INITIALIZER = new InjectionToken('Application Initializer');\n/**\n * A class that reflects the state of running {@link APP_INITIALIZER} functions.\n *\n * @publicApi\n */\nclass ApplicationInitStatus {\n    constructor(appInits) {\n        this.appInits = appInits;\n        this.initialized = false;\n        this.done = false;\n        this.donePromise = new Promise((res, rej) => {\n            this.resolve = res;\n            this.reject = rej;\n        });\n    }\n    /** @internal */\n    runInitializers() {\n        if (this.initialized) {\n            return;\n        }\n        const asyncInitPromises = [];\n        const complete = () => {\n            this.done = true;\n            this.resolve();\n        };\n        if (this.appInits) {\n            for (let i = 0; i < this.appInits.length; i++) {\n                const initResult = this.appInits[i]();\n                if (isPromise(initResult)) {\n                    asyncInitPromises.push(initResult);\n                }\n            }\n        }\n        Promise.all(asyncInitPromises)\n            .then(() => {\n            complete();\n        })\n            .catch(e => {\n            this.reject(e);\n        });\n        if (asyncInitPromises.length === 0) {\n            complete();\n        }\n        this.initialized = true;\n    }\n}\nApplicationInitStatus.ɵfac = function ApplicationInitStatus_Factory(t) { return new (t || ApplicationInitStatus)(ɵɵinject(APP_INITIALIZER, 8)); };\nApplicationInitStatus.ɵprov = ɵɵdefineInjectable({ token: ApplicationInitStatus, factory: ApplicationInitStatus.ɵfac });\nApplicationInitStatus.ctorParameters = () => [\n    { type: Array, decorators: [{ type: Inject, args: [APP_INITIALIZER,] }, { type: Optional }] }\n];\n/*@__PURE__*/ (function () { setClassMetadata(ApplicationInitStatus, [{\n        type: Injectable\n    }], function () { return [{ type: Array, decorators: [{\n                type: Inject,\n                args: [APP_INITIALIZER]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A [DI token](guide/glossary#di-token \"DI token definition\") representing a unique string ID, used\n * primarily for prefixing application attributes and CSS styles when\n * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n *\n * BY default, the value is randomly generated and assigned to the application by Angular.\n * To provide a custom ID value, use a DI provider <!-- TODO: provider --> to configure\n * the root {@link Injector} that uses this token.\n *\n * @publicApi\n */\nconst APP_ID = new InjectionToken('AppId');\nfunction _appIdRandomProviderFactory() {\n    return `${_randomChar()}${_randomChar()}${_randomChar()}`;\n}\n/**\n * Providers that generate a random `APP_ID_TOKEN`.\n * @publicApi\n */\nconst APP_ID_RANDOM_PROVIDER = {\n    provide: APP_ID,\n    useFactory: _appIdRandomProviderFactory,\n    deps: [],\n};\nfunction _randomChar() {\n    return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n/**\n * A function that is executed when a platform is initialized.\n * @publicApi\n */\nconst PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n/**\n * A token that indicates an opaque platform ID.\n * @publicApi\n */\nconst PLATFORM_ID = new InjectionToken('Platform ID');\n/**\n * A [DI token](guide/glossary#di-token \"DI token definition\") that provides a set of callbacks to\n * be called for every component that is bootstrapped.\n *\n * Each callback must take a `ComponentRef` instance and return nothing.\n *\n * `(componentRef: ComponentRef) => void`\n *\n * @publicApi\n */\nconst APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n/**\n * A [DI token](guide/glossary#di-token \"DI token definition\") that indicates the root directory of\n * the application\n * @publicApi\n */\nconst PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass Console {\n    log(message) {\n        // tslint:disable-next-line:no-console\n        console.log(message);\n    }\n    // Note: for reporting errors use `DOM.logError()` as it is platform specific\n    warn(message) {\n        // tslint:disable-next-line:no-console\n        console.warn(message);\n    }\n}\nConsole.ɵfac = function Console_Factory(t) { return new (t || Console)(); };\nConsole.ɵprov = ɵɵdefineInjectable({ token: Console, factory: Console.ɵfac });\n/*@__PURE__*/ (function () { setClassMetadata(Console, [{\n        type: Injectable\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provide this token to set the locale of your application.\n * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n * DecimalPipe and PercentPipe) and by ICU expressions.\n *\n * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import { LOCALE_ID } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n * });\n * ```\n *\n * @publicApi\n */\nconst LOCALE_ID$1 = new InjectionToken('LocaleId');\n/**\n * Provide this token to set the default currency code your application uses for\n * CurrencyPipe when there is no currency code passed into it. This is only used by\n * CurrencyPipe and has no relation to locale currency. Defaults to USD if not configured.\n *\n * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n *\n * <div class=\"alert is-helpful\">\n *\n * **Deprecation notice:**\n *\n * The default currency code is currently always `USD` but this is deprecated from v9.\n *\n * **In v10 the default currency code will be taken from the current locale.**\n *\n * If you need the previous behavior then set it by creating a `DEFAULT_CURRENCY_CODE` provider in\n * your application `NgModule`:\n *\n * ```ts\n * {provide: DEFAULT_CURRENCY_CODE, useValue: 'USD'}\n * ```\n *\n * </div>\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: DEFAULT_CURRENCY_CODE, useValue: 'EUR' }]\n * });\n * ```\n *\n * @publicApi\n */\nconst DEFAULT_CURRENCY_CODE = new InjectionToken('DefaultCurrencyCode');\n/**\n * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n * `xlf` or `xlf2`) when you want to translate your application in another language.\n *\n * See the [i18n guide](guide/i18n#merge) for more information.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * // content of your translation file\n * const translations = '....';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n * });\n * ```\n *\n * @publicApi\n */\nconst TRANSLATIONS = new InjectionToken('Translations');\n/**\n * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n * `xlf` or `xlf2`.\n *\n * See the [i18n guide](guide/i18n#merge) for more information.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS_FORMAT } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n * });\n * ```\n *\n * @publicApi\n */\nconst TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n/**\n * Use this enum at bootstrap as an option of `bootstrapModule` to define the strategy\n * that the compiler should use in case of missing translations:\n * - Error: throw if you have missing translations.\n * - Warning (default): show a warning in the console and/or shell.\n * - Ignore: do nothing.\n *\n * See the [i18n guide](guide/i18n#missing-translation) for more information.\n *\n * @usageNotes\n * ### Example\n * ```typescript\n * import { MissingTranslationStrategy } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   missingTranslation: MissingTranslationStrategy.Error\n * });\n * ```\n *\n * @publicApi\n */\nvar MissingTranslationStrategy;\n(function (MissingTranslationStrategy) {\n    MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n    MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n    MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n})(MissingTranslationStrategy || (MissingTranslationStrategy = {}));\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst SWITCH_IVY_ENABLED__POST_R3__ = true;\nconst SWITCH_IVY_ENABLED__PRE_R3__ = false;\nconst ivyEnabled = SWITCH_IVY_ENABLED__POST_R3__;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Combination of NgModuleFactory and ComponentFactorys.\n *\n * @publicApi\n */\nclass ModuleWithComponentFactories {\n    constructor(ngModuleFactory, componentFactories) {\n        this.ngModuleFactory = ngModuleFactory;\n        this.componentFactories = componentFactories;\n    }\n}\nfunction _throwError() {\n    throw new Error(`Runtime compiler is not loaded`);\n}\nconst Compiler_compileModuleSync__PRE_R3__ = _throwError;\nconst Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n    return new NgModuleFactory$1(moduleType);\n};\nconst Compiler_compileModuleSync = Compiler_compileModuleSync__POST_R3__;\nconst Compiler_compileModuleAsync__PRE_R3__ = _throwError;\nconst Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n    return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n};\nconst Compiler_compileModuleAsync = Compiler_compileModuleAsync__POST_R3__;\nconst Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\nconst Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n    const ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n    const moduleDef = getNgModuleDef(moduleType);\n    const componentFactories = maybeUnwrapFn(moduleDef.declarations)\n        .reduce((factories, declaration) => {\n        const componentDef = getComponentDef(declaration);\n        componentDef && factories.push(new ComponentFactory$1(componentDef));\n        return factories;\n    }, []);\n    return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n};\nconst Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\nconst Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\nconst Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n    return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n};\nconst Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n *\n * Each `@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n *\n * @publicApi\n */\nclass Compiler {\n    constructor() {\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents` have to be inlined.\n         */\n        this.compileModuleSync = Compiler_compileModuleSync;\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        this.compileModuleAsync = Compiler_compileModuleAsync;\n        /**\n         * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n        /**\n         * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n    }\n    /**\n     * Clears all caches.\n     */\n    clearCache() { }\n    /**\n     * Clears the cache for the given component/ngModule.\n     */\n    clearCacheFor(type) { }\n    /**\n     * Returns the id for a given NgModule, if one is defined and known to the compiler.\n     */\n    getModuleId(moduleType) {\n        return undefined;\n    }\n}\nCompiler.ɵfac = function Compiler_Factory(t) { return new (t || Compiler)(); };\nCompiler.ɵprov = ɵɵdefineInjectable({ token: Compiler, factory: Compiler.ɵfac });\n/*@__PURE__*/ (function () { setClassMetadata(Compiler, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n/**\n * Token to provide CompilerOptions in the platform injector.\n *\n * @publicApi\n */\nconst COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n/**\n * A factory for creating a Compiler\n *\n * @publicApi\n */\nclass CompilerFactory {\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst promise = (() => Promise.resolve(0))();\nfunction scheduleMicroTask(fn) {\n    if (typeof Zone === 'undefined') {\n        // use promise to schedule microTask instead of use Zone\n        promise.then(() => {\n            fn && fn.apply(null, null);\n        });\n    }\n    else {\n        Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction getNativeRequestAnimationFrame() {\n    let nativeRequestAnimationFrame = _global['requestAnimationFrame'];\n    let nativeCancelAnimationFrame = _global['cancelAnimationFrame'];\n    if (typeof Zone !== 'undefined' && nativeRequestAnimationFrame && nativeCancelAnimationFrame) {\n        // use unpatched version of requestAnimationFrame(native delegate) if possible\n        // to avoid another Change detection\n        const unpatchedRequestAnimationFrame = nativeRequestAnimationFrame[Zone.__symbol__('OriginalDelegate')];\n        if (unpatchedRequestAnimationFrame) {\n            nativeRequestAnimationFrame = unpatchedRequestAnimationFrame;\n        }\n        const unpatchedCancelAnimationFrame = nativeCancelAnimationFrame[Zone.__symbol__('OriginalDelegate')];\n        if (unpatchedCancelAnimationFrame) {\n            nativeCancelAnimationFrame = unpatchedCancelAnimationFrame;\n        }\n    }\n    return { nativeRequestAnimationFrame, nativeCancelAnimationFrame };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '@angular/core';\n * import {NgIf} from '@angular/common';\n *\n * @Component({\n *   selector: 'ng-zone-demo',\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *         // reenter the Angular zone and display done\n *         this._ngZone.run(() => { console.log('Outside Done!'); });\n *       });\n *     });\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nclass NgZone {\n    constructor({ enableLongStackTrace = false, shouldCoalesceEventChangeDetection = false }) {\n        this.hasPendingMacrotasks = false;\n        this.hasPendingMicrotasks = false;\n        /**\n         * Whether there are no outstanding microtasks or macrotasks.\n         */\n        this.isStable = true;\n        /**\n         * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n         */\n        this.onUnstable = new EventEmitter(false);\n        /**\n         * Notifies when there is no more microtasks enqueued in the current VM Turn.\n         * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n         * For this reason this event can fire multiple times per VM Turn.\n         */\n        this.onMicrotaskEmpty = new EventEmitter(false);\n        /**\n         * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n         * implies we are about to relinquish VM turn.\n         * This event gets called just once.\n         */\n        this.onStable = new EventEmitter(false);\n        /**\n         * Notifies that an error has been delivered.\n         */\n        this.onError = new EventEmitter(false);\n        if (typeof Zone == 'undefined') {\n            throw new Error(`In this configuration Angular requires Zone.js`);\n        }\n        Zone.assertZonePatched();\n        const self = this;\n        self._nesting = 0;\n        self._outer = self._inner = Zone.current;\n        if (Zone['wtfZoneSpec']) {\n            self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n        }\n        if (Zone['TaskTrackingZoneSpec']) {\n            self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n        }\n        if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n            self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n        }\n        self.shouldCoalesceEventChangeDetection = shouldCoalesceEventChangeDetection;\n        self.lastRequestAnimationFrameId = -1;\n        self.nativeRequestAnimationFrame = getNativeRequestAnimationFrame().nativeRequestAnimationFrame;\n        forkInnerZoneWithAngularBehavior(self);\n    }\n    static isInAngularZone() {\n        return Zone.current.get('isAngularZone') === true;\n    }\n    static assertInAngularZone() {\n        if (!NgZone.isInAngularZone()) {\n            throw new Error('Expected to be in Angular Zone, but it is not!');\n        }\n    }\n    static assertNotInAngularZone() {\n        if (NgZone.isInAngularZone()) {\n            throw new Error('Expected to not be in Angular Zone, but it is!');\n        }\n    }\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    run(fn, applyThis, applyArgs) {\n        return this._inner.run(fn, applyThis, applyArgs);\n    }\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    runTask(fn, applyThis, applyArgs, name) {\n        const zone = this._inner;\n        const task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n        try {\n            return zone.runTask(task, applyThis, applyArgs);\n        }\n        finally {\n            zone.cancelTask(task);\n        }\n    }\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     */\n    runGuarded(fn, applyThis, applyArgs) {\n        return this._inner.runGuarded(fn, applyThis, applyArgs);\n    }\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n     */\n    runOutsideAngular(fn) {\n        return this._outer.run(fn);\n    }\n}\nfunction noop$1() { }\nconst EMPTY_PAYLOAD = {};\nfunction checkStable(zone) {\n    if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n        try {\n            zone._nesting++;\n            zone.onMicrotaskEmpty.emit(null);\n        }\n        finally {\n            zone._nesting--;\n            if (!zone.hasPendingMicrotasks) {\n                try {\n                    zone.runOutsideAngular(() => zone.onStable.emit(null));\n                }\n                finally {\n                    zone.isStable = true;\n                }\n            }\n        }\n    }\n}\nfunction delayChangeDetectionForEvents(zone) {\n    if (zone.lastRequestAnimationFrameId !== -1) {\n        return;\n    }\n    zone.lastRequestAnimationFrameId = zone.nativeRequestAnimationFrame.call(_global, () => {\n        // This is a work around for https://github.com/angular/angular/issues/36839.\n        // The core issue is that when event coalescing is enabled it is possible for microtasks\n        // to get flushed too early (As is the case with `Promise.then`) between the\n        // coalescing eventTasks.\n        //\n        // To workaround this we schedule a \"fake\" eventTask before we process the\n        // coalescing eventTasks. The benefit of this is that the \"fake\" container eventTask\n        //  will prevent the microtasks queue from getting drained in between the coalescing\n        // eventTask execution.\n        if (!zone.fakeTopEventTask) {\n            zone.fakeTopEventTask = Zone.root.scheduleEventTask('fakeTopEventTask', () => {\n                zone.lastRequestAnimationFrameId = -1;\n                updateMicroTaskStatus(zone);\n                checkStable(zone);\n            }, undefined, () => { }, () => { });\n        }\n        zone.fakeTopEventTask.invoke();\n    });\n    updateMicroTaskStatus(zone);\n}\nfunction forkInnerZoneWithAngularBehavior(zone) {\n    const delayChangeDetectionForEventsDelegate = () => {\n        delayChangeDetectionForEvents(zone);\n    };\n    const maybeDelayChangeDetection = !!zone.shouldCoalesceEventChangeDetection &&\n        zone.nativeRequestAnimationFrame && delayChangeDetectionForEventsDelegate;\n    zone._inner = zone._inner.fork({\n        name: 'angular',\n        properties: { 'isAngularZone': true, 'maybeDelayChangeDetection': maybeDelayChangeDetection },\n        onInvokeTask: (delegate, current, target, task, applyThis, applyArgs) => {\n            try {\n                onEnter(zone);\n                return delegate.invokeTask(target, task, applyThis, applyArgs);\n            }\n            finally {\n                if (maybeDelayChangeDetection && task.type === 'eventTask') {\n                    maybeDelayChangeDetection();\n                }\n                onLeave(zone);\n            }\n        },\n        onInvoke: (delegate, current, target, callback, applyThis, applyArgs, source) => {\n            try {\n                onEnter(zone);\n                return delegate.invoke(target, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onHasTask: (delegate, current, target, hasTaskState) => {\n            delegate.hasTask(target, hasTaskState);\n            if (current === target) {\n                // We are only interested in hasTask events which originate from our zone\n                // (A child hasTask event is not interesting to us)\n                if (hasTaskState.change == 'microTask') {\n                    zone._hasPendingMicrotasks = hasTaskState.microTask;\n                    updateMicroTaskStatus(zone);\n                    checkStable(zone);\n                }\n                else if (hasTaskState.change == 'macroTask') {\n                    zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                }\n            }\n        },\n        onHandleError: (delegate, current, target, error) => {\n            delegate.handleError(target, error);\n            zone.runOutsideAngular(() => zone.onError.emit(error));\n            return false;\n        }\n    });\n}\nfunction updateMicroTaskStatus(zone) {\n    if (zone._hasPendingMicrotasks ||\n        (zone.shouldCoalesceEventChangeDetection && zone.lastRequestAnimationFrameId !== -1)) {\n        zone.hasPendingMicrotasks = true;\n    }\n    else {\n        zone.hasPendingMicrotasks = false;\n    }\n}\nfunction onEnter(zone) {\n    zone._nesting++;\n    if (zone.isStable) {\n        zone.isStable = false;\n        zone.onUnstable.emit(null);\n    }\n}\nfunction onLeave(zone) {\n    zone._nesting--;\n    checkStable(zone);\n}\n/**\n * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n * to framework to perform rendering.\n */\nclass NoopNgZone {\n    constructor() {\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        this.isStable = true;\n        this.onUnstable = new EventEmitter();\n        this.onMicrotaskEmpty = new EventEmitter();\n        this.onStable = new EventEmitter();\n        this.onError = new EventEmitter();\n    }\n    run(fn, applyThis, applyArgs) {\n        return fn.apply(applyThis, applyArgs);\n    }\n    runGuarded(fn, applyThis, applyArgs) {\n        return fn.apply(applyThis, applyArgs);\n    }\n    runOutsideAngular(fn) {\n        return fn();\n    }\n    runTask(fn, applyThis, applyArgs, name) {\n        return fn.apply(applyThis, applyArgs);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser and by services such as Protractor. Each bootstrapped Angular\n * application on the page will have an instance of Testability.\n * @publicApi\n */\nclass Testability {\n    constructor(_ngZone) {\n        this._ngZone = _ngZone;\n        this._pendingCount = 0;\n        this._isZoneStable = true;\n        /**\n         * Whether any work was done since the last 'whenStable' callback. This is\n         * useful to detect if this could have potentially destabilized another\n         * component while it is stabilizing.\n         * @internal\n         */\n        this._didWork = false;\n        this._callbacks = [];\n        this.taskTrackingZone = null;\n        this._watchAngularEvents();\n        _ngZone.run(() => {\n            this.taskTrackingZone =\n                typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n        });\n    }\n    _watchAngularEvents() {\n        this._ngZone.onUnstable.subscribe({\n            next: () => {\n                this._didWork = true;\n                this._isZoneStable = false;\n            }\n        });\n        this._ngZone.runOutsideAngular(() => {\n            this._ngZone.onStable.subscribe({\n                next: () => {\n                    NgZone.assertNotInAngularZone();\n                    scheduleMicroTask(() => {\n                        this._isZoneStable = true;\n                        this._runCallbacksIfReady();\n                    });\n                }\n            });\n        });\n    }\n    /**\n     * Increases the number of pending request\n     * @deprecated pending requests are now tracked with zones.\n     */\n    increasePendingRequestCount() {\n        this._pendingCount += 1;\n        this._didWork = true;\n        return this._pendingCount;\n    }\n    /**\n     * Decreases the number of pending request\n     * @deprecated pending requests are now tracked with zones\n     */\n    decreasePendingRequestCount() {\n        this._pendingCount -= 1;\n        if (this._pendingCount < 0) {\n            throw new Error('pending async requests below zero');\n        }\n        this._runCallbacksIfReady();\n        return this._pendingCount;\n    }\n    /**\n     * Whether an associated application is stable\n     */\n    isStable() {\n        return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n    }\n    _runCallbacksIfReady() {\n        if (this.isStable()) {\n            // Schedules the call backs in a new frame so that it is always async.\n            scheduleMicroTask(() => {\n                while (this._callbacks.length !== 0) {\n                    let cb = this._callbacks.pop();\n                    clearTimeout(cb.timeoutId);\n                    cb.doneCb(this._didWork);\n                }\n                this._didWork = false;\n            });\n        }\n        else {\n            // Still not stable, send updates.\n            let pending = this.getPendingTasks();\n            this._callbacks = this._callbacks.filter((cb) => {\n                if (cb.updateCb && cb.updateCb(pending)) {\n                    clearTimeout(cb.timeoutId);\n                    return false;\n                }\n                return true;\n            });\n            this._didWork = true;\n        }\n    }\n    getPendingTasks() {\n        if (!this.taskTrackingZone) {\n            return [];\n        }\n        // Copy the tasks data so that we don't leak tasks.\n        return this.taskTrackingZone.macroTasks.map((t) => {\n            return {\n                source: t.source,\n                // From TaskTrackingZone:\n                // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                creationLocation: t.creationLocation,\n                data: t.data\n            };\n        });\n    }\n    addCallback(cb, timeout, updateCb) {\n        let timeoutId = -1;\n        if (timeout && timeout > 0) {\n            timeoutId = setTimeout(() => {\n                this._callbacks = this._callbacks.filter((cb) => cb.timeoutId !== timeoutId);\n                cb(this._didWork, this.getPendingTasks());\n            }, timeout);\n        }\n        this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n    }\n    /**\n     * Wait for the application to be stable with a timeout. If the timeout is reached before that\n     * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n     *\n     * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n     *    whichever comes first.\n     * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n     *    specified, whenStable() will wait forever.\n     * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n     *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n     *    and no further updates will be issued.\n     */\n    whenStable(doneCb, timeout, updateCb) {\n        if (updateCb && !this.taskTrackingZone) {\n            throw new Error('Task tracking zone is required when passing an update callback to ' +\n                'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n        }\n        // These arguments are 'Function' above to keep the public API simple.\n        this.addCallback(doneCb, timeout, updateCb);\n        this._runCallbacksIfReady();\n    }\n    /**\n     * Get the number of pending requests\n     * @deprecated pending requests are now tracked with zones\n     */\n    getPendingRequestCount() {\n        return this._pendingCount;\n    }\n    /**\n     * Find providers by name\n     * @param using The root element to search from\n     * @param provider The name of binding variable\n     * @param exactMatch Whether using exactMatch\n     */\n    findProviders(using, provider, exactMatch) {\n        // TODO(juliemr): implement.\n        return [];\n    }\n}\nTestability.ɵfac = function Testability_Factory(t) { return new (t || Testability)(ɵɵinject(NgZone)); };\nTestability.ɵprov = ɵɵdefineInjectable({ token: Testability, factory: Testability.ɵfac });\nTestability.ctorParameters = () => [\n    { type: NgZone }\n];\n/*@__PURE__*/ (function () { setClassMetadata(Testability, [{\n        type: Injectable\n    }], function () { return [{ type: NgZone }]; }, null); })();\n/**\n * A global registry of {@link Testability} instances for specific elements.\n * @publicApi\n */\nclass TestabilityRegistry {\n    constructor() {\n        /** @internal */\n        this._applications = new Map();\n        _testabilityGetter.addToWindow(this);\n    }\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param token token of application, root element\n     * @param testability Testability hook\n     */\n    registerApplication(token, testability) {\n        this._applications.set(token, testability);\n    }\n    /**\n     * Unregisters an application.\n     * @param token token of application, root element\n     */\n    unregisterApplication(token) {\n        this._applications.delete(token);\n    }\n    /**\n     * Unregisters all applications\n     */\n    unregisterAllApplications() {\n        this._applications.clear();\n    }\n    /**\n     * Get a testability hook associated with the application\n     * @param elem root element\n     */\n    getTestability(elem) {\n        return this._applications.get(elem) || null;\n    }\n    /**\n     * Get all registered testabilities\n     */\n    getAllTestabilities() {\n        return Array.from(this._applications.values());\n    }\n    /**\n     * Get all registered applications(root elements)\n     */\n    getAllRootElements() {\n        return Array.from(this._applications.keys());\n    }\n    /**\n     * Find testability of a node in the Tree\n     * @param elem node\n     * @param findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     */\n    findTestabilityInTree(elem, findInAncestors = true) {\n        return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n    }\n}\nTestabilityRegistry.ɵfac = function TestabilityRegistry_Factory(t) { return new (t || TestabilityRegistry)(); };\nTestabilityRegistry.ɵprov = ɵɵdefineInjectable({ token: TestabilityRegistry, factory: TestabilityRegistry.ɵfac });\nTestabilityRegistry.ctorParameters = () => [];\n/*@__PURE__*/ (function () { setClassMetadata(TestabilityRegistry, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\nclass _NoopGetTestability {\n    addToWindow(registry) { }\n    findTestabilityInTree(registry, elem, findInAncestors) {\n        return null;\n    }\n}\n/**\n * Set the {@link GetTestability} implementation used by the Angular testing framework.\n * @publicApi\n */\nfunction setTestabilityGetter(getter) {\n    _testabilityGetter = getter;\n}\nlet _testabilityGetter = new _NoopGetTestability();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet _platform;\nlet compileNgModuleFactory = compileNgModuleFactory__POST_R3__;\nfunction compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n    const compilerFactory = injector.get(CompilerFactory);\n    const compiler = compilerFactory.createCompiler([options]);\n    return compiler.compileModuleAsync(moduleType);\n}\nfunction compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n    ngDevMode && assertNgModuleType(moduleType);\n    const moduleFactory = new NgModuleFactory$1(moduleType);\n    // All of the logic below is irrelevant for AOT-compiled code.\n    if (typeof ngJitMode !== 'undefined' && !ngJitMode) {\n        return Promise.resolve(moduleFactory);\n    }\n    const compilerOptions = injector.get(COMPILER_OPTIONS, []).concat(options);\n    // Configure the compiler to use the provided options. This call may fail when multiple modules\n    // are bootstrapped with incompatible options, as a component can only be compiled according to\n    // a single set of options.\n    setJitOptions({\n        defaultEncapsulation: _lastDefined(compilerOptions.map(opts => opts.defaultEncapsulation)),\n        preserveWhitespaces: _lastDefined(compilerOptions.map(opts => opts.preserveWhitespaces)),\n    });\n    if (isComponentResourceResolutionQueueEmpty()) {\n        return Promise.resolve(moduleFactory);\n    }\n    const compilerProviders = _mergeArrays(compilerOptions.map(o => o.providers));\n    // In case there are no compiler providers, we just return the module factory as\n    // there won't be any resource loader. This can happen with Ivy, because AOT compiled\n    // modules can be still passed through \"bootstrapModule\". In that case we shouldn't\n    // unnecessarily require the JIT compiler.\n    if (compilerProviders.length === 0) {\n        return Promise.resolve(moduleFactory);\n    }\n    const compiler = getCompilerFacade();\n    const compilerInjector = Injector.create({ providers: compilerProviders });\n    const resourceLoader = compilerInjector.get(compiler.ResourceLoader);\n    // The resource loader can also return a string while the \"resolveComponentResources\"\n    // always expects a promise. Therefore we need to wrap the returned value in a promise.\n    return resolveComponentResources(url => Promise.resolve(resourceLoader.get(url)))\n        .then(() => moduleFactory);\n}\n// the `window.ng` global utilities are only available in non-VE versions of\n// Angular. The function switch below will make sure that the code is not\n// included into Angular when PRE mode is active.\nfunction publishDefaultGlobalUtils__PRE_R3__() { }\nfunction publishDefaultGlobalUtils__POST_R3__() {\n    ngDevMode && publishDefaultGlobalUtils();\n}\nlet publishDefaultGlobalUtils$1 = publishDefaultGlobalUtils__POST_R3__;\nlet isBoundToModule = isBoundToModule__POST_R3__;\nfunction isBoundToModule__PRE_R3__(cf) {\n    return cf instanceof ComponentFactoryBoundToModule;\n}\nfunction isBoundToModule__POST_R3__(cf) {\n    return cf.isBoundToModule;\n}\nconst ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n/**\n * A token for third-party components that can register themselves with NgProbe.\n *\n * @publicApi\n */\nclass NgProbeToken {\n    constructor(name, token) {\n        this.name = name;\n        this.token = token;\n    }\n}\n/**\n * Creates a platform.\n * Platforms must be created on launch using this function.\n *\n * @publicApi\n */\nfunction createPlatform(injector) {\n    if (_platform && !_platform.destroyed &&\n        !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n        throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n    }\n    publishDefaultGlobalUtils$1();\n    _platform = injector.get(PlatformRef);\n    const inits = injector.get(PLATFORM_INITIALIZER, null);\n    if (inits)\n        inits.forEach((init) => init());\n    return _platform;\n}\n/**\n * Creates a factory for a platform. Can be used to provide or override `Providers` specific to\n * your applciation's runtime needs, such as `PLATFORM_INITIALIZER` and `PLATFORM_ID`.\n * @param parentPlatformFactory Another platform factory to modify. Allows you to compose factories\n * to build up configurations that might be required by different libraries or parts of the\n * application.\n * @param name Identifies the new platform factory.\n * @param providers A set of dependency providers for platforms created with the new factory.\n *\n * @publicApi\n */\nfunction createPlatformFactory(parentPlatformFactory, name, providers = []) {\n    const desc = `Platform: ${name}`;\n    const marker = new InjectionToken(desc);\n    return (extraProviders = []) => {\n        let platform = getPlatform();\n        if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            if (parentPlatformFactory) {\n                parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n            }\n            else {\n                const injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true }, {\n                    provide: INJECTOR_SCOPE,\n                    useValue: 'platform'\n                });\n                createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n            }\n        }\n        return assertPlatform(marker);\n    };\n}\n/**\n * Checks that there is currently a platform that contains the given token as a provider.\n *\n * @publicApi\n */\nfunction assertPlatform(requiredToken) {\n    const platform = getPlatform();\n    if (!platform) {\n        throw new Error('No platform exists!');\n    }\n    if (!platform.injector.get(requiredToken, null)) {\n        throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n    }\n    return platform;\n}\n/**\n * Destroys the current Angular platform and all Angular applications on the page.\n * Destroys all modules and listeners registered with the platform.\n *\n * @publicApi\n */\nfunction destroyPlatform() {\n    if (_platform && !_platform.destroyed) {\n        _platform.destroy();\n    }\n}\n/**\n * Returns the current platform.\n *\n * @publicApi\n */\nfunction getPlatform() {\n    return _platform && !_platform.destroyed ? _platform : null;\n}\n/**\n * The Angular platform is the entry point for Angular on a web page.\n * Each page has exactly one platform. Services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n * A page's platform is initialized implicitly when a platform is created using a platform\n * factory such as `PlatformBrowser`, or explicitly by calling the `createPlatform()` function.\n *\n * @publicApi\n */\nclass PlatformRef {\n    /** @internal */\n    constructor(_injector) {\n        this._injector = _injector;\n        this._modules = [];\n        this._destroyListeners = [];\n        this._destroyed = false;\n    }\n    /**\n     * Creates an instance of an `@NgModule` for the given platform for offline compilation.\n     *\n     * @usageNotes\n     *\n     * The following example creates the NgModule for a browser platform.\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     */\n    bootstrapModuleFactory(moduleFactory, options) {\n        // Note: We need to create the NgZone _before_ we instantiate the module,\n        // as instantiating the module creates some providers eagerly.\n        // So we create a mini parent injector that just contains the new NgZone and\n        // pass that as parent to the NgModuleFactory.\n        const ngZoneOption = options ? options.ngZone : undefined;\n        const ngZoneEventCoalescing = (options && options.ngZoneEventCoalescing) || false;\n        const ngZone = getNgZone(ngZoneOption, ngZoneEventCoalescing);\n        const providers = [{ provide: NgZone, useValue: ngZone }];\n        // Attention: Don't use ApplicationRef.run here,\n        // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n        return ngZone.run(() => {\n            const ngZoneInjector = Injector.create({ providers: providers, parent: this.injector, name: moduleFactory.moduleType.name });\n            const moduleRef = moduleFactory.create(ngZoneInjector);\n            const exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n            if (!exceptionHandler) {\n                throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n            }\n            moduleRef.onDestroy(() => remove(this._modules, moduleRef));\n            ngZone.runOutsideAngular(() => ngZone.onError.subscribe({\n                next: (error) => {\n                    exceptionHandler.handleError(error);\n                }\n            }));\n            return _callAndReportToErrorHandler(exceptionHandler, ngZone, () => {\n                const initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                initStatus.runInitializers();\n                return initStatus.donePromise.then(() => {\n                    if (ivyEnabled) {\n                        // If the `LOCALE_ID` provider is defined at bootstrap then we set the value for ivy\n                        const localeId = moduleRef.injector.get(LOCALE_ID$1, DEFAULT_LOCALE_ID);\n                        setLocaleId(localeId || DEFAULT_LOCALE_ID);\n                    }\n                    this._moduleDoBootstrap(moduleRef);\n                    return moduleRef;\n                });\n            });\n        });\n    }\n    /**\n     * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n     *\n     * @usageNotes\n     * ### Simple Example\n     *\n     * ```typescript\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     *\n     */\n    bootstrapModule(moduleType, compilerOptions = []) {\n        const options = optionsReducer({}, compilerOptions);\n        return compileNgModuleFactory(this.injector, options, moduleType)\n            .then(moduleFactory => this.bootstrapModuleFactory(moduleFactory, options));\n    }\n    _moduleDoBootstrap(moduleRef) {\n        const appRef = moduleRef.injector.get(ApplicationRef);\n        if (moduleRef._bootstrapComponents.length > 0) {\n            moduleRef._bootstrapComponents.forEach(f => appRef.bootstrap(f));\n        }\n        else if (moduleRef.instance.ngDoBootstrap) {\n            moduleRef.instance.ngDoBootstrap(appRef);\n        }\n        else {\n            throw new Error(`The module ${stringify(moduleRef.instance\n                .constructor)} was bootstrapped, but it does not declare \"@NgModule.bootstrap\" components nor a \"ngDoBootstrap\" method. ` +\n                `Please define one of these.`);\n        }\n        this._modules.push(moduleRef);\n    }\n    /**\n     * Registers a listener to be called when the platform is destroyed.\n     */\n    onDestroy(callback) {\n        this._destroyListeners.push(callback);\n    }\n    /**\n     * Retrieves the platform {@link Injector}, which is the parent injector for\n     * every Angular application on the page and provides singleton providers.\n     */\n    get injector() {\n        return this._injector;\n    }\n    /**\n     * Destroys the current Angular platform and all Angular applications on the page.\n     * Destroys all modules and listeners registered with the platform.\n     */\n    destroy() {\n        if (this._destroyed) {\n            throw new Error('The platform has already been destroyed!');\n        }\n        this._modules.slice().forEach(module => module.destroy());\n        this._destroyListeners.forEach(listener => listener());\n        this._destroyed = true;\n    }\n    get destroyed() {\n        return this._destroyed;\n    }\n}\nPlatformRef.ɵfac = function PlatformRef_Factory(t) { return new (t || PlatformRef)(ɵɵinject(Injector)); };\nPlatformRef.ɵprov = ɵɵdefineInjectable({ token: PlatformRef, factory: PlatformRef.ɵfac });\nPlatformRef.ctorParameters = () => [\n    { type: Injector }\n];\n/*@__PURE__*/ (function () { setClassMetadata(PlatformRef, [{\n        type: Injectable\n    }], function () { return [{ type: Injector }]; }, null); })();\nfunction getNgZone(ngZoneOption, ngZoneEventCoalescing) {\n    let ngZone;\n    if (ngZoneOption === 'noop') {\n        ngZone = new NoopNgZone();\n    }\n    else {\n        ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) || new NgZone({\n            enableLongStackTrace: isDevMode(),\n            shouldCoalesceEventChangeDetection: ngZoneEventCoalescing\n        });\n    }\n    return ngZone;\n}\nfunction _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n    try {\n        const result = callback();\n        if (isPromise(result)) {\n            return result.catch((e) => {\n                ngZone.runOutsideAngular(() => errorHandler.handleError(e));\n                // rethrow as the exception handler might not do it\n                throw e;\n            });\n        }\n        return result;\n    }\n    catch (e) {\n        ngZone.runOutsideAngular(() => errorHandler.handleError(e));\n        // rethrow as the exception handler might not do it\n        throw e;\n    }\n}\nfunction optionsReducer(dst, objs) {\n    if (Array.isArray(objs)) {\n        dst = objs.reduce(optionsReducer, dst);\n    }\n    else {\n        dst = Object.assign(Object.assign({}, dst), objs);\n    }\n    return dst;\n}\n/**\n * A reference to an Angular application running on a page.\n *\n * @usageNotes\n *\n * {@a is-stable-examples}\n * ### isStable examples and caveats\n *\n * Note two important points about `isStable`, demonstrated in the examples below:\n * - the application will never be stable if you start any kind\n * of recurrent asynchronous task when the application starts\n * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n * or using RxJS operators like `interval`);\n * - the `isStable` Observable runs outside of the Angular zone.\n *\n * Let's imagine that you start a recurrent task\n * (here incrementing a counter, using RxJS `interval`),\n * and at the same time subscribe to `isStable`.\n *\n * ```\n * constructor(appRef: ApplicationRef) {\n *   appRef.isStable.pipe(\n *      filter(stable => stable)\n *   ).subscribe(() => console.log('App is stable now');\n *   interval(1000).subscribe(counter => console.log(counter));\n * }\n * ```\n * In this example, `isStable` will never emit `true`,\n * and the trace \"App is stable now\" will never get logged.\n *\n * If you want to execute something when the app is stable,\n * you have to wait for the application to be stable\n * before starting your polling process.\n *\n * ```\n * constructor(appRef: ApplicationRef) {\n *   appRef.isStable.pipe(\n *     first(stable => stable),\n *     tap(stable => console.log('App is stable now')),\n *     switchMap(() => interval(1000))\n *   ).subscribe(counter => console.log(counter));\n * }\n * ```\n * In this example, the trace \"App is stable now\" will be logged\n * and then the counter starts incrementing every second.\n *\n * Note also that this Observable runs outside of the Angular zone,\n * which means that the code in the subscription\n * to this Observable will not trigger the change detection.\n *\n * Let's imagine that instead of logging the counter value,\n * you update a field of your component\n * and display it in its template.\n *\n * ```\n * constructor(appRef: ApplicationRef) {\n *   appRef.isStable.pipe(\n *     first(stable => stable),\n *     switchMap(() => interval(1000))\n *   ).subscribe(counter => this.value = counter);\n * }\n * ```\n * As the `isStable` Observable runs outside the zone,\n * the `value` field will be updated properly,\n * but the template will not be refreshed!\n *\n * You'll have to manually trigger the change detection to update the template.\n *\n * ```\n * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n *   appRef.isStable.pipe(\n *     first(stable => stable),\n *     switchMap(() => interval(1000))\n *   ).subscribe(counter => {\n *     this.value = counter;\n *     cd.detectChanges();\n *   });\n * }\n * ```\n *\n * Or make the subscription callback run inside the zone.\n *\n * ```\n * constructor(appRef: ApplicationRef, zone: NgZone) {\n *   appRef.isStable.pipe(\n *     first(stable => stable),\n *     switchMap(() => interval(1000))\n *   ).subscribe(counter => zone.run(() => this.value = counter));\n * }\n * ```\n *\n * @publicApi\n */\nclass ApplicationRef {\n    /** @internal */\n    constructor(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n        this._zone = _zone;\n        this._console = _console;\n        this._injector = _injector;\n        this._exceptionHandler = _exceptionHandler;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._initStatus = _initStatus;\n        /** @internal */\n        this._bootstrapListeners = [];\n        this._views = [];\n        this._runningTick = false;\n        this._enforceNoNewChanges = false;\n        this._stable = true;\n        /**\n         * Get a list of component types registered to this application.\n         * This list is populated even before the component is created.\n         */\n        this.componentTypes = [];\n        /**\n         * Get a list of components registered to this application.\n         */\n        this.components = [];\n        this._enforceNoNewChanges = isDevMode();\n        this._zone.onMicrotaskEmpty.subscribe({\n            next: () => {\n                this._zone.run(() => {\n                    this.tick();\n                });\n            }\n        });\n        const isCurrentlyStable = new Observable((observer) => {\n            this._stable = this._zone.isStable && !this._zone.hasPendingMacrotasks &&\n                !this._zone.hasPendingMicrotasks;\n            this._zone.runOutsideAngular(() => {\n                observer.next(this._stable);\n                observer.complete();\n            });\n        });\n        const isStable = new Observable((observer) => {\n            // Create the subscription to onStable outside the Angular Zone so that\n            // the callback is run outside the Angular Zone.\n            let stableSub;\n            this._zone.runOutsideAngular(() => {\n                stableSub = this._zone.onStable.subscribe(() => {\n                    NgZone.assertNotInAngularZone();\n                    // Check whether there are no pending macro/micro tasks in the next tick\n                    // to allow for NgZone to update the state.\n                    scheduleMicroTask(() => {\n                        if (!this._stable && !this._zone.hasPendingMacrotasks &&\n                            !this._zone.hasPendingMicrotasks) {\n                            this._stable = true;\n                            observer.next(true);\n                        }\n                    });\n                });\n            });\n            const unstableSub = this._zone.onUnstable.subscribe(() => {\n                NgZone.assertInAngularZone();\n                if (this._stable) {\n                    this._stable = false;\n                    this._zone.runOutsideAngular(() => {\n                        observer.next(false);\n                    });\n                }\n            });\n            return () => {\n                stableSub.unsubscribe();\n                unstableSub.unsubscribe();\n            };\n        });\n        this.isStable =\n            merge$1(isCurrentlyStable, isStable.pipe(share()));\n    }\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * @usageNotes\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the componentType's\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * componentType's selector.\n     *\n     * ### Example\n     * {@example core/ts/platform/platform.ts region='longform'}\n     */\n    bootstrap(componentOrFactory, rootSelectorOrNode) {\n        if (!this._initStatus.done) {\n            throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n        }\n        let componentFactory;\n        if (componentOrFactory instanceof ComponentFactory) {\n            componentFactory = componentOrFactory;\n        }\n        else {\n            componentFactory =\n                this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n        }\n        this.componentTypes.push(componentFactory.componentType);\n        // Create a factory associated with the current module if it's not bound to some other\n        const ngModule = isBoundToModule(componentFactory) ? undefined : this._injector.get(NgModuleRef);\n        const selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n        const compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n        compRef.onDestroy(() => {\n            this._unloadComponent(compRef);\n        });\n        const testability = compRef.injector.get(Testability, null);\n        if (testability) {\n            compRef.injector.get(TestabilityRegistry)\n                .registerApplication(compRef.location.nativeElement, testability);\n        }\n        this._loadComponent(compRef);\n        if (isDevMode()) {\n            this._console.log(`Angular is running in development mode. Call enableProdMode() to enable production mode.`);\n        }\n        return compRef;\n    }\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     */\n    tick() {\n        if (this._runningTick) {\n            throw new Error('ApplicationRef.tick is called recursively');\n        }\n        try {\n            this._runningTick = true;\n            for (let view of this._views) {\n                view.detectChanges();\n            }\n            if (this._enforceNoNewChanges) {\n                for (let view of this._views) {\n                    view.checkNoChanges();\n                }\n            }\n        }\n        catch (e) {\n            // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n            this._zone.runOutsideAngular(() => this._exceptionHandler.handleError(e));\n        }\n        finally {\n            this._runningTick = false;\n        }\n    }\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     */\n    attachView(viewRef) {\n        const view = viewRef;\n        this._views.push(view);\n        view.attachToAppRef(this);\n    }\n    /**\n     * Detaches a view from dirty checking again.\n     */\n    detachView(viewRef) {\n        const view = viewRef;\n        remove(this._views, view);\n        view.detachFromAppRef();\n    }\n    _loadComponent(componentRef) {\n        this.attachView(componentRef.hostView);\n        this.tick();\n        this.components.push(componentRef);\n        // Get the listeners lazily to prevent DI cycles.\n        const listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n        listeners.forEach((listener) => listener(componentRef));\n    }\n    _unloadComponent(componentRef) {\n        this.detachView(componentRef.hostView);\n        remove(this.components, componentRef);\n    }\n    /** @internal */\n    ngOnDestroy() {\n        // TODO(alxhub): Dispose of the NgZone.\n        this._views.slice().forEach((view) => view.destroy());\n    }\n    /**\n     * Returns the number of attached views.\n     */\n    get viewCount() {\n        return this._views.length;\n    }\n}\nApplicationRef.ɵfac = function ApplicationRef_Factory(t) { return new (t || ApplicationRef)(ɵɵinject(NgZone), ɵɵinject(Console), ɵɵinject(Injector), ɵɵinject(ErrorHandler), ɵɵinject(ComponentFactoryResolver), ɵɵinject(ApplicationInitStatus)); };\nApplicationRef.ɵprov = ɵɵdefineInjectable({ token: ApplicationRef, factory: ApplicationRef.ɵfac });\nApplicationRef.ctorParameters = () => [\n    { type: NgZone },\n    { type: Console },\n    { type: Injector },\n    { type: ErrorHandler },\n    { type: ComponentFactoryResolver },\n    { type: ApplicationInitStatus }\n];\n/*@__PURE__*/ (function () { setClassMetadata(ApplicationRef, [{\n        type: Injectable\n    }], function () { return [{ type: NgZone }, { type: Console }, { type: Injector }, { type: ErrorHandler }, { type: ComponentFactoryResolver }, { type: ApplicationInitStatus }]; }, null); })();\nfunction remove(list, el) {\n    const index = list.indexOf(el);\n    if (index > -1) {\n        list.splice(index, 1);\n    }\n}\nfunction _lastDefined(args) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (args[i] !== undefined) {\n            return args[i];\n        }\n    }\n    return undefined;\n}\nfunction _mergeArrays(parts) {\n    const result = [];\n    parts.forEach((part) => part && result.push(...part));\n    return result;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to load ng module factories.\n *\n * @publicApi\n * @deprecated the `string` form of `loadChildren` is deprecated, and `NgModuleFactoryLoader` is\n * part of its implementation. See `LoadChildren` for more details.\n */\nclass NgModuleFactoryLoader {\n}\nfunction getModuleFactory__PRE_R3__(id) {\n    const factory = getRegisteredNgModuleType(id);\n    if (!factory)\n        throw noModuleError(id);\n    return factory;\n}\nfunction getModuleFactory__POST_R3__(id) {\n    const type = getRegisteredNgModuleType(id);\n    if (!type)\n        throw noModuleError(id);\n    return new NgModuleFactory$1(type);\n}\n/**\n * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n * cannot be found.\n * @publicApi\n */\nconst getModuleFactory = getModuleFactory__POST_R3__;\nfunction noModuleError(id) {\n    return new Error(`No module with ID ${id} loaded`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst _SEPARATOR = '#';\nconst FACTORY_CLASS_SUFFIX = 'NgFactory';\n/**\n * Configuration for SystemJsNgModuleLoader.\n * token.\n *\n * @publicApi\n * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoaderConfig`\n * is part of its implementation. See `LoadChildren` for more details.\n */\nclass SystemJsNgModuleLoaderConfig {\n}\nconst DEFAULT_CONFIG = {\n    factoryPathPrefix: '',\n    factoryPathSuffix: '.ngfactory',\n};\n/**\n * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n * @publicApi\n * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoader` is\n * part of its implementation. See `LoadChildren` for more details.\n */\nclass SystemJsNgModuleLoader {\n    constructor(_compiler, config) {\n        this._compiler = _compiler;\n        this._config = config || DEFAULT_CONFIG;\n    }\n    load(path) {\n        const legacyOfflineMode = !ivyEnabled && this._compiler instanceof Compiler;\n        return legacyOfflineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n    }\n    loadAndCompile(path) {\n        let [module, exportName] = path.split(_SEPARATOR);\n        if (exportName === undefined) {\n            exportName = 'default';\n        }\n        return System.import(module)\n            .then((module) => module[exportName])\n            .then((type) => checkNotEmpty(type, module, exportName))\n            .then((type) => this._compiler.compileModuleAsync(type));\n    }\n    loadFactory(path) {\n        let [module, exportName] = path.split(_SEPARATOR);\n        let factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n        if (exportName === undefined) {\n            exportName = 'default';\n            factoryClassSuffix = '';\n        }\n        return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n            .then((module) => module[exportName + factoryClassSuffix])\n            .then((factory) => checkNotEmpty(factory, module, exportName));\n    }\n}\nSystemJsNgModuleLoader.ɵfac = function SystemJsNgModuleLoader_Factory(t) { return new (t || SystemJsNgModuleLoader)(ɵɵinject(Compiler), ɵɵinject(SystemJsNgModuleLoaderConfig, 8)); };\nSystemJsNgModuleLoader.ɵprov = ɵɵdefineInjectable({ token: SystemJsNgModuleLoader, factory: SystemJsNgModuleLoader.ɵfac });\nSystemJsNgModuleLoader.ctorParameters = () => [\n    { type: Compiler },\n    { type: SystemJsNgModuleLoaderConfig, decorators: [{ type: Optional }] }\n];\n/*@__PURE__*/ (function () { setClassMetadata(SystemJsNgModuleLoader, [{\n        type: Injectable\n    }], function () { return [{ type: Compiler }, { type: SystemJsNgModuleLoaderConfig, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\nfunction checkNotEmpty(value, modulePath, exportName) {\n    if (!value) {\n        throw new Error(`Cannot find '${exportName}' in '${modulePath}'`);\n    }\n    return value;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an Angular [view](guide/glossary#view \"Definition\").\n *\n * @see {@link ChangeDetectorRef#usage-notes Change detection usage}\n *\n * @publicApi\n */\nclass ViewRef$1 extends ChangeDetectorRef {\n}\n/**\n * Represents an Angular [view](guide/glossary#view) in a view container.\n * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n * other than the hosting component whose template defines it, or it can be defined\n * independently by a `TemplateRef`.\n *\n * Properties of elements in a view can change, but the structure (number and order) of elements in\n * a view cannot. Change the structure of elements by inserting, moving, or\n * removing nested views in a view container.\n *\n * @see `ViewContainerRef`\n *\n * @usageNotes\n *\n * The following template breaks down into two separate `TemplateRef` instances,\n * an outer one and an inner one.\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n *\n * This is the outer `TemplateRef`:\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n *\n * This is the inner `TemplateRef`:\n *\n * ```\n *   <li>{{item}}</li>\n * ```\n *\n * The outer and inner `TemplateRef` instances are assembled into views as follows:\n *\n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * @publicApi\n */\nclass EmbeddedViewRef extends ViewRef$1 {\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nclass DebugEventListener {\n    constructor(name, callback) {\n        this.name = name;\n        this.callback = callback;\n    }\n}\nclass DebugNode__PRE_R3__ {\n    constructor(nativeNode, parent, _debugContext) {\n        this.listeners = [];\n        this.parent = null;\n        this._debugContext = _debugContext;\n        this.nativeNode = nativeNode;\n        if (parent && parent instanceof DebugElement__PRE_R3__) {\n            parent.addChild(this);\n        }\n    }\n    get injector() {\n        return this._debugContext.injector;\n    }\n    get componentInstance() {\n        return this._debugContext.component;\n    }\n    get context() {\n        return this._debugContext.context;\n    }\n    get references() {\n        return this._debugContext.references;\n    }\n    get providerTokens() {\n        return this._debugContext.providerTokens;\n    }\n}\nclass DebugElement__PRE_R3__ extends DebugNode__PRE_R3__ {\n    constructor(nativeNode, parent, _debugContext) {\n        super(nativeNode, parent, _debugContext);\n        this.properties = {};\n        this.attributes = {};\n        this.classes = {};\n        this.styles = {};\n        this.childNodes = [];\n        this.nativeElement = nativeNode;\n    }\n    addChild(child) {\n        if (child) {\n            this.childNodes.push(child);\n            child.parent = this;\n        }\n    }\n    removeChild(child) {\n        const childIndex = this.childNodes.indexOf(child);\n        if (childIndex !== -1) {\n            child.parent = null;\n            this.childNodes.splice(childIndex, 1);\n        }\n    }\n    insertChildrenAfter(child, newChildren) {\n        const siblingIndex = this.childNodes.indexOf(child);\n        if (siblingIndex !== -1) {\n            this.childNodes.splice(siblingIndex + 1, 0, ...newChildren);\n            newChildren.forEach(c => {\n                if (c.parent) {\n                    c.parent.removeChild(c);\n                }\n                child.parent = this;\n            });\n        }\n    }\n    insertBefore(refChild, newChild) {\n        const refIndex = this.childNodes.indexOf(refChild);\n        if (refIndex === -1) {\n            this.addChild(newChild);\n        }\n        else {\n            if (newChild.parent) {\n                newChild.parent.removeChild(newChild);\n            }\n            newChild.parent = this;\n            this.childNodes.splice(refIndex, 0, newChild);\n        }\n    }\n    query(predicate) {\n        const results = this.queryAll(predicate);\n        return results[0] || null;\n    }\n    queryAll(predicate) {\n        const matches = [];\n        _queryElementChildren(this, predicate, matches);\n        return matches;\n    }\n    queryAllNodes(predicate) {\n        const matches = [];\n        _queryNodeChildren(this, predicate, matches);\n        return matches;\n    }\n    get children() {\n        return this.childNodes //\n            .filter((node) => node instanceof DebugElement__PRE_R3__);\n    }\n    triggerEventHandler(eventName, eventObj) {\n        this.listeners.forEach((listener) => {\n            if (listener.name == eventName) {\n                listener.callback(eventObj);\n            }\n        });\n    }\n}\n/**\n * @publicApi\n */\nfunction asNativeElements(debugEls) {\n    return debugEls.map((el) => el.nativeElement);\n}\nfunction _queryElementChildren(element, predicate, matches) {\n    element.childNodes.forEach(node => {\n        if (node instanceof DebugElement__PRE_R3__) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            _queryElementChildren(node, predicate, matches);\n        }\n    });\n}\nfunction _queryNodeChildren(parentNode, predicate, matches) {\n    if (parentNode instanceof DebugElement__PRE_R3__) {\n        parentNode.childNodes.forEach(node => {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            if (node instanceof DebugElement__PRE_R3__) {\n                _queryNodeChildren(node, predicate, matches);\n            }\n        });\n    }\n}\nclass DebugNode__POST_R3__ {\n    constructor(nativeNode) {\n        this.nativeNode = nativeNode;\n    }\n    get parent() {\n        const parent = this.nativeNode.parentNode;\n        return parent ? new DebugElement__POST_R3__(parent) : null;\n    }\n    get injector() {\n        return getInjector(this.nativeNode);\n    }\n    get componentInstance() {\n        const nativeElement = this.nativeNode;\n        return nativeElement &&\n            (getComponent(nativeElement) || getOwningComponent(nativeElement));\n    }\n    get context() {\n        return getComponent(this.nativeNode) || getContext(this.nativeNode);\n    }\n    get listeners() {\n        return getListeners(this.nativeNode).filter(listener => listener.type === 'dom');\n    }\n    get references() {\n        return getLocalRefs(this.nativeNode);\n    }\n    get providerTokens() {\n        return getInjectionTokens(this.nativeNode);\n    }\n}\nclass DebugElement__POST_R3__ extends DebugNode__POST_R3__ {\n    constructor(nativeNode) {\n        ngDevMode && assertDomNode(nativeNode);\n        super(nativeNode);\n    }\n    get nativeElement() {\n        return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n    }\n    get name() {\n        try {\n            const context = loadLContext(this.nativeNode);\n            const lView = context.lView;\n            const tData = lView[TVIEW].data;\n            const tNode = tData[context.nodeIndex];\n            return tNode.tagName;\n        }\n        catch (e) {\n            return this.nativeNode.nodeName;\n        }\n    }\n    /**\n     *  Gets a map of property names to property values for an element.\n     *\n     *  This map includes:\n     *  - Regular property bindings (e.g. `[id]=\"id\"`)\n     *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n     *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n     *\n     *  It does not include:\n     *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n     *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n     */\n    get properties() {\n        const context = loadLContext(this.nativeNode, false);\n        if (context == null) {\n            return {};\n        }\n        const lView = context.lView;\n        const tData = lView[TVIEW].data;\n        const tNode = tData[context.nodeIndex];\n        const properties = {};\n        // Collect properties from the DOM.\n        copyDomProperties(this.nativeElement, properties);\n        // Collect properties from the bindings. This is needed for animation renderer which has\n        // synthetic properties which don't get reflected into the DOM.\n        collectPropertyBindings(properties, tNode, lView, tData);\n        return properties;\n    }\n    get attributes() {\n        const attributes = {};\n        const element = this.nativeElement;\n        if (!element) {\n            return attributes;\n        }\n        const context = loadLContext(element, false);\n        if (context == null) {\n            return {};\n        }\n        const lView = context.lView;\n        const tNodeAttrs = lView[TVIEW].data[context.nodeIndex].attrs;\n        const lowercaseTNodeAttrs = [];\n        // For debug nodes we take the element's attribute directly from the DOM since it allows us\n        // to account for ones that weren't set via bindings (e.g. ViewEngine keeps track of the ones\n        // that are set through `Renderer2`). The problem is that the browser will lowercase all names,\n        // however since we have the attributes already on the TNode, we can preserve the case by going\n        // through them once, adding them to the `attributes` map and putting their lower-cased name\n        // into an array. Afterwards when we're going through the native DOM attributes, we can check\n        // whether we haven't run into an attribute already through the TNode.\n        if (tNodeAttrs) {\n            let i = 0;\n            while (i < tNodeAttrs.length) {\n                const attrName = tNodeAttrs[i];\n                // Stop as soon as we hit a marker. We only care about the regular attributes. Everything\n                // else will be handled below when we read the final attributes off the DOM.\n                if (typeof attrName !== 'string')\n                    break;\n                const attrValue = tNodeAttrs[i + 1];\n                attributes[attrName] = attrValue;\n                lowercaseTNodeAttrs.push(attrName.toLowerCase());\n                i += 2;\n            }\n        }\n        const eAttrs = element.attributes;\n        for (let i = 0; i < eAttrs.length; i++) {\n            const attr = eAttrs[i];\n            const lowercaseName = attr.name.toLowerCase();\n            // Make sure that we don't assign the same attribute both in its\n            // case-sensitive form and the lower-cased one from the browser.\n            if (lowercaseTNodeAttrs.indexOf(lowercaseName) === -1) {\n                // Save the lowercase name to align the behavior between browsers.\n                // IE preserves the case, while all other browser convert it to lower case.\n                attributes[lowercaseName] = attr.value;\n            }\n        }\n        return attributes;\n    }\n    get styles() {\n        if (this.nativeElement && this.nativeElement.style) {\n            return this.nativeElement.style;\n        }\n        return {};\n    }\n    get classes() {\n        const result = {};\n        const element = this.nativeElement;\n        // SVG elements return an `SVGAnimatedString` instead of a plain string for the `className`.\n        const className = element.className;\n        const classes = className && typeof className !== 'string' ? className.baseVal.split(' ') :\n            className.split(' ');\n        classes.forEach((value) => result[value] = true);\n        return result;\n    }\n    get childNodes() {\n        const childNodes = this.nativeNode.childNodes;\n        const children = [];\n        for (let i = 0; i < childNodes.length; i++) {\n            const element = childNodes[i];\n            children.push(getDebugNode__POST_R3__(element));\n        }\n        return children;\n    }\n    get children() {\n        const nativeElement = this.nativeElement;\n        if (!nativeElement)\n            return [];\n        const childNodes = nativeElement.children;\n        const children = [];\n        for (let i = 0; i < childNodes.length; i++) {\n            const element = childNodes[i];\n            children.push(getDebugNode__POST_R3__(element));\n        }\n        return children;\n    }\n    query(predicate) {\n        const results = this.queryAll(predicate);\n        return results[0] || null;\n    }\n    queryAll(predicate) {\n        const matches = [];\n        _queryAllR3(this, predicate, matches, true);\n        return matches;\n    }\n    queryAllNodes(predicate) {\n        const matches = [];\n        _queryAllR3(this, predicate, matches, false);\n        return matches;\n    }\n    triggerEventHandler(eventName, eventObj) {\n        const node = this.nativeNode;\n        const invokedListeners = [];\n        this.listeners.forEach(listener => {\n            if (listener.name === eventName) {\n                const callback = listener.callback;\n                callback.call(node, eventObj);\n                invokedListeners.push(callback);\n            }\n        });\n        // We need to check whether `eventListeners` exists, because it's something\n        // that Zone.js only adds to `EventTarget` in browser environments.\n        if (typeof node.eventListeners === 'function') {\n            // Note that in Ivy we wrap event listeners with a call to `event.preventDefault` in some\n            // cases. We use '__ngUnwrap__' as a special token that gives us access to the actual event\n            // listener.\n            node.eventListeners(eventName).forEach((listener) => {\n                // In order to ensure that we can detect the special __ngUnwrap__ token described above, we\n                // use `toString` on the listener and see if it contains the token. We use this approach to\n                // ensure that it still worked with compiled code since it cannot remove or rename string\n                // literals. We also considered using a special function name (i.e. if(listener.name ===\n                // special)) but that was more cumbersome and we were also concerned the compiled code could\n                // strip the name, turning the condition in to (\"\" === \"\") and always returning true.\n                if (listener.toString().indexOf('__ngUnwrap__') !== -1) {\n                    const unwrappedListener = listener('__ngUnwrap__');\n                    return invokedListeners.indexOf(unwrappedListener) === -1 &&\n                        unwrappedListener.call(node, eventObj);\n                }\n            });\n        }\n    }\n}\nfunction copyDomProperties(element, properties) {\n    if (element) {\n        // Skip own properties (as those are patched)\n        let obj = Object.getPrototypeOf(element);\n        const NodePrototype = Node.prototype;\n        while (obj !== null && obj !== NodePrototype) {\n            const descriptors = Object.getOwnPropertyDescriptors(obj);\n            for (let key in descriptors) {\n                if (!key.startsWith('__') && !key.startsWith('on')) {\n                    // don't include properties starting with `__` and `on`.\n                    // `__` are patched values which should not be included.\n                    // `on` are listeners which also should not be included.\n                    const value = element[key];\n                    if (isPrimitiveValue(value)) {\n                        properties[key] = value;\n                    }\n                }\n            }\n            obj = Object.getPrototypeOf(obj);\n        }\n    }\n}\nfunction isPrimitiveValue(value) {\n    return typeof value === 'string' || typeof value === 'boolean' || typeof value === 'number' ||\n        value === null;\n}\nfunction _queryAllR3(parentElement, predicate, matches, elementsOnly) {\n    const context = loadLContext(parentElement.nativeNode, false);\n    if (context !== null) {\n        const parentTNode = context.lView[TVIEW].data[context.nodeIndex];\n        _queryNodeChildrenR3(parentTNode, context.lView, predicate, matches, elementsOnly, parentElement.nativeNode);\n    }\n    else {\n        // If the context is null, then `parentElement` was either created with Renderer2 or native DOM\n        // APIs.\n        _queryNativeNodeDescendants(parentElement.nativeNode, predicate, matches, elementsOnly);\n    }\n}\n/**\n * Recursively match the current TNode against the predicate, and goes on with the next ones.\n *\n * @param tNode the current TNode\n * @param lView the LView of this TNode\n * @param predicate the predicate to match\n * @param matches the list of positive matches\n * @param elementsOnly whether only elements should be searched\n * @param rootNativeNode the root native node on which predicate should not be matched\n */\nfunction _queryNodeChildrenR3(tNode, lView, predicate, matches, elementsOnly, rootNativeNode) {\n    const nativeNode = getNativeByTNodeOrNull(tNode, lView);\n    // For each type of TNode, specific logic is executed.\n    if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n        // Case 1: the TNode is an element\n        // The native node has to be checked.\n        _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode);\n        if (isComponentHost(tNode)) {\n            // If the element is the host of a component, then all nodes in its view have to be processed.\n            // Note: the component's content (tNode.child) will be processed from the insertion points.\n            const componentView = getComponentLViewByIndex(tNode.index, lView);\n            if (componentView && componentView[TVIEW].firstChild) {\n                _queryNodeChildrenR3(componentView[TVIEW].firstChild, componentView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else {\n            if (tNode.child) {\n                // Otherwise, its children have to be processed.\n                _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n            // We also have to query the DOM directly in order to catch elements inserted through\n            // Renderer2. Note that this is __not__ optimal, because we're walking similar trees multiple\n            // times. ViewEngine could do it more efficiently, because all the insertions go through\n            // Renderer2, however that's not the case in Ivy. This approach is being used because:\n            // 1. Matching the ViewEngine behavior would mean potentially introducing a depedency\n            //    from `Renderer2` to Ivy which could bring Ivy code into ViewEngine.\n            // 2. We would have to make `Renderer3` \"know\" about debug nodes.\n            // 3. It allows us to capture nodes that were inserted directly via the DOM.\n            nativeNode && _queryNativeNodeDescendants(nativeNode, predicate, matches, elementsOnly);\n        }\n        // In all cases, if a dynamic container exists for this node, each view inside it has to be\n        // processed.\n        const nodeOrContainer = lView[tNode.index];\n        if (isLContainer(nodeOrContainer)) {\n            _queryNodeChildrenInContainerR3(nodeOrContainer, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    else if (tNode.type === 0 /* Container */) {\n        // Case 2: the TNode is a container\n        // The native node has to be checked.\n        const lContainer = lView[tNode.index];\n        _addQueryMatchR3(lContainer[NATIVE], predicate, matches, elementsOnly, rootNativeNode);\n        // Each view inside the container has to be processed.\n        _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode);\n    }\n    else if (tNode.type === 1 /* Projection */) {\n        // Case 3: the TNode is a projection insertion point (i.e. a <ng-content>).\n        // The nodes projected at this location all need to be processed.\n        const componentView = lView[DECLARATION_COMPONENT_VIEW];\n        const componentHost = componentView[T_HOST];\n        const head = componentHost.projection[tNode.projection];\n        if (Array.isArray(head)) {\n            for (let nativeNode of head) {\n                _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (head) {\n            const nextLView = componentView[PARENT];\n            const nextTNode = nextLView[TVIEW].data[head.index];\n            _queryNodeChildrenR3(nextTNode, nextLView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    else if (tNode.child) {\n        // Case 4: the TNode is a view.\n        _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n    }\n    // We don't want to go to the next sibling of the root node.\n    if (rootNativeNode !== nativeNode) {\n        // To determine the next node to be processed, we need to use the next or the projectionNext\n        // link, depending on whether the current node has been projected.\n        const nextTNode = (tNode.flags & 4 /* isProjected */) ? tNode.projectionNext : tNode.next;\n        if (nextTNode) {\n            _queryNodeChildrenR3(nextTNode, lView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n}\n/**\n * Process all TNodes in a given container.\n *\n * @param lContainer the container to be processed\n * @param predicate the predicate to match\n * @param matches the list of positive matches\n * @param elementsOnly whether only elements should be searched\n * @param rootNativeNode the root native node on which predicate should not be matched\n */\nfunction _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode) {\n    for (let i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n        const childView = lContainer[i];\n        _queryNodeChildrenR3(childView[TVIEW].node, childView, predicate, matches, elementsOnly, rootNativeNode);\n    }\n}\n/**\n * Match the current native node against the predicate.\n *\n * @param nativeNode the current native node\n * @param predicate the predicate to match\n * @param matches the list of positive matches\n * @param elementsOnly whether only elements should be searched\n * @param rootNativeNode the root native node on which predicate should not be matched\n */\nfunction _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode) {\n    if (rootNativeNode !== nativeNode) {\n        const debugNode = getDebugNode$1(nativeNode);\n        if (!debugNode) {\n            return;\n        }\n        // Type of the \"predicate and \"matches\" array are set based on the value of\n        // the \"elementsOnly\" parameter. TypeScript is not able to properly infer these\n        // types with generics, so we manually cast the parameters accordingly.\n        if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n            matches.indexOf(debugNode) === -1) {\n            matches.push(debugNode);\n        }\n        else if (!elementsOnly && predicate(debugNode) &&\n            matches.indexOf(debugNode) === -1) {\n            matches.push(debugNode);\n        }\n    }\n}\n/**\n * Match all the descendants of a DOM node against a predicate.\n *\n * @param nativeNode the current native node\n * @param predicate the predicate to match\n * @param matches the list of positive matches\n * @param elementsOnly whether only elements should be searched\n */\nfunction _queryNativeNodeDescendants(parentNode, predicate, matches, elementsOnly) {\n    const nodes = parentNode.childNodes;\n    const length = nodes.length;\n    for (let i = 0; i < length; i++) {\n        const node = nodes[i];\n        const debugNode = getDebugNode$1(node);\n        if (debugNode) {\n            if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n            else if (!elementsOnly && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n            _queryNativeNodeDescendants(node, predicate, matches, elementsOnly);\n        }\n    }\n}\n/**\n * Iterates through the property bindings for a given node and generates\n * a map of property names to values. This map only contains property bindings\n * defined in templates, not in host bindings.\n */\nfunction collectPropertyBindings(properties, tNode, lView, tData) {\n    let bindingIndexes = tNode.propertyBindings;\n    if (bindingIndexes !== null) {\n        for (let i = 0; i < bindingIndexes.length; i++) {\n            const bindingIndex = bindingIndexes[i];\n            const propMetadata = tData[bindingIndex];\n            const metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n            const propertyName = metadataParts[0];\n            if (metadataParts.length > 1) {\n                let value = metadataParts[1];\n                for (let j = 1; j < metadataParts.length - 1; j++) {\n                    value += renderStringify(lView[bindingIndex + j - 1]) + metadataParts[j + 1];\n                }\n                properties[propertyName] = value;\n            }\n            else {\n                properties[propertyName] = lView[bindingIndex];\n            }\n        }\n    }\n}\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nconst _nativeNodeToDebugNode = new Map();\nfunction getDebugNode__PRE_R3__(nativeNode) {\n    return _nativeNodeToDebugNode.get(nativeNode) || null;\n}\nconst NG_DEBUG_PROPERTY = '__ng_debug__';\nfunction getDebugNode__POST_R3__(nativeNode) {\n    if (nativeNode instanceof Node) {\n        if (!(nativeNode.hasOwnProperty(NG_DEBUG_PROPERTY))) {\n            nativeNode[NG_DEBUG_PROPERTY] = nativeNode.nodeType == Node.ELEMENT_NODE ?\n                new DebugElement__POST_R3__(nativeNode) :\n                new DebugNode__POST_R3__(nativeNode);\n        }\n        return nativeNode[NG_DEBUG_PROPERTY];\n    }\n    return null;\n}\n/**\n * @publicApi\n */\nconst getDebugNode$1 = getDebugNode__POST_R3__;\nfunction getDebugNodeR2__PRE_R3__(nativeNode) {\n    return getDebugNode__PRE_R3__(nativeNode);\n}\nfunction getDebugNodeR2__POST_R3__(_nativeNode) {\n    return null;\n}\nconst getDebugNodeR2 = getDebugNodeR2__POST_R3__;\nfunction getAllDebugNodes() {\n    return Array.from(_nativeNodeToDebugNode.values());\n}\nfunction indexDebugNode(node) {\n    _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\nfunction removeDebugNodeFromIndex(node) {\n    _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n/**\n * @publicApi\n */\nconst DebugNode = DebugNode__POST_R3__;\n/**\n * @publicApi\n */\nconst DebugElement = DebugElement__POST_R3__;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst _CORE_PLATFORM_PROVIDERS = [\n    // Set a default platform name for platforms that don't set it explicitly.\n    { provide: PLATFORM_ID, useValue: 'unknown' },\n    { provide: PlatformRef, deps: [Injector] },\n    { provide: TestabilityRegistry, deps: [] },\n    { provide: Console, deps: [] },\n];\n/**\n * This platform has to be included in any other platform\n *\n * @publicApi\n */\nconst platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction _iterableDiffersFactory() {\n    return defaultIterableDiffers;\n}\nfunction _keyValueDiffersFactory() {\n    return defaultKeyValueDiffers;\n}\nfunction _localeFactory(locale) {\n    locale = locale || getGlobalLocale();\n    if (ivyEnabled) {\n        setLocaleId(locale);\n    }\n    return locale;\n}\n/**\n * Work out the locale from the potential global properties.\n *\n * * Closure Compiler: use `goog.LOCALE`.\n * * Ivy enabled: use `$localize.locale`\n */\nfunction getGlobalLocale() {\n    if (typeof ngI18nClosureMode !== 'undefined' && ngI18nClosureMode &&\n        typeof goog !== 'undefined' && goog.LOCALE !== 'en') {\n        // * The default `goog.LOCALE` value is `en`, while Angular used `en-US`.\n        // * In order to preserve backwards compatibility, we use Angular default value over\n        //   Closure Compiler's one.\n        return goog.LOCALE;\n    }\n    else {\n        // KEEP `typeof $localize !== 'undefined' && $localize.locale` IN SYNC WITH THE LOCALIZE\n        // COMPILE-TIME INLINER.\n        //\n        // * During compile time inlining of translations the expression will be replaced\n        //   with a string literal that is the current locale. Other forms of this expression are not\n        //   guaranteed to be replaced.\n        //\n        // * During runtime translation evaluation, the developer is required to set `$localize.locale`\n        //   if required, or just to provide their own `LOCALE_ID` provider.\n        return (ivyEnabled && typeof $localize !== 'undefined' && $localize.locale) ||\n            DEFAULT_LOCALE_ID;\n    }\n}\nconst ɵ0$g = USD_CURRENCY_CODE;\n/**\n * A built-in [dependency injection token](guide/glossary#di-token)\n * that is used to configure the root injector for bootstrapping.\n */\nconst APPLICATION_MODULE_PROVIDERS = [\n    {\n        provide: ApplicationRef,\n        useClass: ApplicationRef,\n        deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n    },\n    { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n    {\n        provide: ApplicationInitStatus,\n        useClass: ApplicationInitStatus,\n        deps: [[new Optional(), APP_INITIALIZER]]\n    },\n    { provide: Compiler, useClass: Compiler, deps: [] },\n    APP_ID_RANDOM_PROVIDER,\n    { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n    { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n    {\n        provide: LOCALE_ID$1,\n        useFactory: _localeFactory,\n        deps: [[new Inject(LOCALE_ID$1), new Optional(), new SkipSelf()]]\n    },\n    { provide: DEFAULT_CURRENCY_CODE, useValue: ɵ0$g },\n];\n/**\n * Schedule work at next available slot.\n *\n * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n *\n * @param ngZone NgZone to use for scheduling.\n */\nfunction zoneSchedulerFactory(ngZone) {\n    let queue = [];\n    ngZone.onStable.subscribe(() => {\n        while (queue.length) {\n            queue.pop()();\n        }\n    });\n    return function (fn) {\n        queue.push(fn);\n    };\n}\n/**\n * Configures the root injector for an app with\n * providers of `@angular/core` dependencies that `ApplicationRef` needs\n * to bootstrap components.\n *\n * Re-exported by `BrowserModule`, which is included automatically in the root\n * `AppModule` when you create a new app with the CLI `new` command.\n *\n * @publicApi\n */\nclass ApplicationModule {\n    // Inject ApplicationRef to make it eager...\n    constructor(appRef) { }\n}\nApplicationModule.ɵmod = ɵɵdefineNgModule({ type: ApplicationModule });\nApplicationModule.ɵinj = ɵɵdefineInjector({ factory: function ApplicationModule_Factory(t) { return new (t || ApplicationModule)(ɵɵinject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS });\nApplicationModule.ctorParameters = () => [\n    { type: ApplicationRef }\n];\n/*@__PURE__*/ (function () { setClassMetadata(ApplicationModule, [{\n        type: NgModule,\n        args: [{ providers: APPLICATION_MODULE_PROVIDERS }]\n    }], function () { return [{ type: ApplicationRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n    flags |= 1 /* TypeElement */;\n    const { matchedQueries, references, matchedQueryIds } = splitMatchedQueriesDsl(matchedQueriesDsl);\n    const template = templateFactory ? resolveDefinition(templateFactory) : null;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags,\n        checkIndex: -1,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries,\n        matchedQueryIds,\n        references,\n        ngContentIndex,\n        childCount,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: {\n            ns: null,\n            name: null,\n            attrs: null,\n            template,\n            componentProvider: null,\n            componentView: null,\n            componentRendererType: null,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\nfunction elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs = [], bindings, outputs, handleEvent, componentView, componentRendererType) {\n    if (!handleEvent) {\n        handleEvent = NOOP;\n    }\n    const { matchedQueries, references, matchedQueryIds } = splitMatchedQueriesDsl(matchedQueriesDsl);\n    let ns = null;\n    let name = null;\n    if (namespaceAndName) {\n        [ns, name] = splitNamespace(namespaceAndName);\n    }\n    bindings = bindings || [];\n    const bindingDefs = [];\n    for (let i = 0; i < bindings.length; i++) {\n        const [bindingFlags, namespaceAndName, suffixOrSecurityContext] = bindings[i];\n        const [ns, name] = splitNamespace(namespaceAndName);\n        let securityContext = undefined;\n        let suffix = undefined;\n        switch (bindingFlags & 15 /* Types */) {\n            case 4 /* TypeElementStyle */:\n                suffix = suffixOrSecurityContext;\n                break;\n            case 1 /* TypeElementAttribute */:\n            case 8 /* TypeProperty */:\n                securityContext = suffixOrSecurityContext;\n                break;\n        }\n        bindingDefs[i] =\n            { flags: bindingFlags, ns, name, nonMinifiedName: name, securityContext, suffix };\n    }\n    outputs = outputs || [];\n    const outputDefs = [];\n    for (let i = 0; i < outputs.length; i++) {\n        const [target, eventName] = outputs[i];\n        outputDefs[i] =\n            { type: 0 /* ElementOutput */, target: target, eventName, propName: null };\n    }\n    fixedAttrs = fixedAttrs || [];\n    const attrs = fixedAttrs.map(([namespaceAndName, value]) => {\n        const [ns, name] = splitNamespace(namespaceAndName);\n        return [ns, name, value];\n    });\n    componentRendererType = resolveRendererType2(componentRendererType);\n    if (componentView) {\n        flags |= 33554432 /* ComponentView */;\n    }\n    flags |= 1 /* TypeElement */;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex,\n        flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries,\n        matchedQueryIds,\n        references,\n        ngContentIndex,\n        childCount,\n        bindings: bindingDefs,\n        bindingFlags: calcBindingFlags(bindingDefs),\n        outputs: outputDefs,\n        element: {\n            ns,\n            name,\n            attrs,\n            template: null,\n            // will bet set by the view definition\n            componentProvider: null,\n            componentView: componentView || null,\n            componentRendererType: componentRendererType,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP,\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\nfunction createElement(view, renderHost, def) {\n    const elDef = def.element;\n    const rootSelectorOrNode = view.root.selectorOrNode;\n    const renderer = view.renderer;\n    let el;\n    if (view.parent || !rootSelectorOrNode) {\n        if (elDef.name) {\n            el = renderer.createElement(elDef.name, elDef.ns);\n        }\n        else {\n            el = renderer.createComment('');\n        }\n        const parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, el);\n        }\n    }\n    else {\n        // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n        const preserveContent = (!!elDef.componentRendererType &&\n            elDef.componentRendererType.encapsulation === ViewEncapsulation$1.ShadowDom);\n        el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n    }\n    if (elDef.attrs) {\n        for (let i = 0; i < elDef.attrs.length; i++) {\n            const [ns, name, value] = elDef.attrs[i];\n            renderer.setAttribute(el, name, value, ns);\n        }\n    }\n    return el;\n}\nfunction listenToElementOutputs(view, compView, def, el) {\n    for (let i = 0; i < def.outputs.length; i++) {\n        const output = def.outputs[i];\n        const handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n        let listenTarget = output.target;\n        let listenerView = view;\n        if (output.target === 'component') {\n            listenTarget = null;\n            listenerView = compView;\n        }\n        const disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n        view.disposables[def.outputIndex + i] = disposable;\n    }\n}\nfunction renderEventHandlerClosure(view, index, eventName) {\n    return (event) => dispatchEvent(view, index, eventName, event);\n}\nfunction checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    const bindLen = def.bindings.length;\n    let changed = false;\n    if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n        changed = true;\n    return changed;\n}\nfunction checkAndUpdateElementDynamic(view, def, values) {\n    let changed = false;\n    for (let i = 0; i < values.length; i++) {\n        if (checkAndUpdateElementValue(view, def, i, values[i]))\n            changed = true;\n    }\n    return changed;\n}\nfunction checkAndUpdateElementValue(view, def, bindingIdx, value) {\n    if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n        return false;\n    }\n    const binding = def.bindings[bindingIdx];\n    const elData = asElementData(view, def.nodeIndex);\n    const renderNode = elData.renderElement;\n    const name = binding.name;\n    switch (binding.flags & 15 /* Types */) {\n        case 1 /* TypeElementAttribute */:\n            setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n            break;\n        case 2 /* TypeElementClass */:\n            setElementClass(view, renderNode, name, value);\n            break;\n        case 4 /* TypeElementStyle */:\n            setElementStyle(view, binding, renderNode, name, value);\n            break;\n        case 8 /* TypeProperty */:\n            const bindView = (def.flags & 33554432 /* ComponentView */ &&\n                binding.flags & 32 /* SyntheticHostProperty */) ?\n                elData.componentView :\n                view;\n            setElementProperty(bindView, binding, renderNode, name, value);\n            break;\n    }\n    return true;\n}\nfunction setElementAttribute(view, binding, renderNode, ns, name, value) {\n    const securityContext = binding.securityContext;\n    let renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    renderValue = renderValue != null ? renderValue.toString() : null;\n    const renderer = view.renderer;\n    if (value != null) {\n        renderer.setAttribute(renderNode, name, renderValue, ns);\n    }\n    else {\n        renderer.removeAttribute(renderNode, name, ns);\n    }\n}\nfunction setElementClass(view, renderNode, name, value) {\n    const renderer = view.renderer;\n    if (value) {\n        renderer.addClass(renderNode, name);\n    }\n    else {\n        renderer.removeClass(renderNode, name);\n    }\n}\nfunction setElementStyle(view, binding, renderNode, name, value) {\n    let renderValue = view.root.sanitizer.sanitize(SecurityContext.STYLE, value);\n    if (renderValue != null) {\n        renderValue = renderValue.toString();\n        const unit = binding.suffix;\n        if (unit != null) {\n            renderValue = renderValue + unit;\n        }\n    }\n    else {\n        renderValue = null;\n    }\n    const renderer = view.renderer;\n    if (renderValue != null) {\n        renderer.setStyle(renderNode, name, renderValue);\n    }\n    else {\n        renderer.removeStyle(renderNode, name);\n    }\n}\nfunction setElementProperty(view, binding, renderNode, name, value) {\n    const securityContext = binding.securityContext;\n    let renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    view.renderer.setProperty(renderNode, name, renderValue);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction queryDef(flags, id, bindings) {\n    let bindingDefs = [];\n    for (let propName in bindings) {\n        const bindingType = bindings[propName];\n        bindingDefs.push({ propName, bindingType });\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        // TODO(vicb): check\n        checkIndex: -1,\n        flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        ngContentIndex: -1,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: { id, filterId: filterQueryId(id), bindings: bindingDefs },\n        ngContent: null\n    };\n}\nfunction createQuery() {\n    return new QueryList();\n}\nfunction dirtyParentQueries(view) {\n    const queryIds = view.def.nodeMatchedQueries;\n    while (view.parent && isEmbeddedView(view)) {\n        let tplDef = view.parentNodeDef;\n        view = view.parent;\n        // content queries\n        const end = tplDef.nodeIndex + tplDef.childCount;\n        for (let i = 0; i <= end; i++) {\n            const nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                asQueryList(view, i).setDirty();\n            }\n            if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                // skip elements that don't contain the template element or no query.\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    // view queries\n    if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n        for (let i = 0; i < view.def.nodes.length; i++) {\n            const nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                asQueryList(view, i).setDirty();\n            }\n            // only visit the root nodes\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction checkAndUpdateQuery(view, nodeDef) {\n    const queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (!queryList.dirty) {\n        return;\n    }\n    let directiveInstance;\n    let newValues = undefined;\n    if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n        const elementDef = nodeDef.parent.parent;\n        newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n        directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n    }\n    else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n        newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n        directiveInstance = view.component;\n    }\n    queryList.reset(newValues);\n    const bindings = nodeDef.query.bindings;\n    let notify = false;\n    for (let i = 0; i < bindings.length; i++) {\n        const binding = bindings[i];\n        let boundValue;\n        switch (binding.bindingType) {\n            case 0 /* First */:\n                boundValue = queryList.first;\n                break;\n            case 1 /* All */:\n                boundValue = queryList;\n                notify = true;\n                break;\n        }\n        directiveInstance[binding.propName] = boundValue;\n    }\n    if (notify) {\n        queryList.notifyOnChanges();\n    }\n}\nfunction calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n    for (let i = startIndex; i <= endIndex; i++) {\n        const nodeDef = view.def.nodes[i];\n        const valueType = nodeDef.matchedQueries[queryDef.id];\n        if (valueType != null) {\n            values.push(getQueryValue(view, nodeDef, valueType));\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n            (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                queryDef.filterId) {\n            const elementData = asElementData(view, i);\n            // check embedded views that were attached at the place of their template,\n            // but process child nodes first if some match the query (see issue #16568)\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                i += nodeDef.childCount;\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                const embeddedViews = elementData.viewContainer._embeddedViews;\n                for (let k = 0; k < embeddedViews.length; k++) {\n                    const embeddedView = embeddedViews[k];\n                    const dvc = declaredViewContainer(embeddedView);\n                    if (dvc && dvc === elementData) {\n                        calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            const projectedViews = elementData.template._projectedViews;\n            if (projectedViews) {\n                for (let k = 0; k < projectedViews.length; k++) {\n                    const projectedView = projectedViews[k];\n                    calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                }\n            }\n        }\n        if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n            // if no child matches the query, skip the children.\n            i += nodeDef.childCount;\n        }\n    }\n    return values;\n}\nfunction getQueryValue(view, nodeDef, queryValueType) {\n    if (queryValueType != null) {\n        // a match\n        switch (queryValueType) {\n            case 1 /* RenderElement */:\n                return asElementData(view, nodeDef.nodeIndex).renderElement;\n            case 0 /* ElementRef */:\n                return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n            case 2 /* TemplateRef */:\n                return asElementData(view, nodeDef.nodeIndex).template;\n            case 3 /* ViewContainerRef */:\n                return asElementData(view, nodeDef.nodeIndex).viewContainer;\n            case 4 /* Provider */:\n                return asProviderData(view, nodeDef.nodeIndex).instance;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction ngContentDef(ngContentIndex, index) {\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: -1,\n        flags: 8 /* TypeNgContent */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        ngContentIndex,\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: { index }\n    };\n}\nfunction appendNgContent(view, renderHost, def) {\n    const parentEl = getParentRenderElement(view, renderHost, def);\n    if (!parentEl) {\n        // Nothing to do if there is no parent element.\n        return;\n    }\n    const ngContentIndex = def.ngContent.index;\n    visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction purePipeDef(checkIndex, argCount) {\n    // argCount + 1 to include the pipe as first arg\n    return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, newArray(argCount + 1));\n}\nfunction pureArrayDef(checkIndex, argCount) {\n    return _pureExpressionDef(32 /* TypePureArray */, checkIndex, newArray(argCount));\n}\nfunction pureObjectDef(checkIndex, propToIndex) {\n    const keys = Object.keys(propToIndex);\n    const nbKeys = keys.length;\n    const propertyNames = [];\n    for (let i = 0; i < nbKeys; i++) {\n        const key = keys[i];\n        const index = propToIndex[key];\n        propertyNames.push(key);\n    }\n    return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n}\nfunction _pureExpressionDef(flags, checkIndex, propertyNames) {\n    const bindings = [];\n    for (let i = 0; i < propertyNames.length; i++) {\n        const prop = propertyNames[i];\n        bindings.push({\n            flags: 8 /* TypeProperty */,\n            name: prop,\n            ns: null,\n            nonMinifiedName: prop,\n            securityContext: null,\n            suffix: null\n        });\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex,\n        flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        ngContentIndex: -1,\n        childCount: 0,\n        bindings,\n        bindingFlags: calcBindingFlags(bindings),\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\nfunction createPureExpression(view, def) {\n    return { value: undefined };\n}\nfunction checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    const bindings = def.bindings;\n    let changed = false;\n    const bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        const data = asPureExpressionData(view, def.nodeIndex);\n        let value;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = [];\n                if (bindLen > 0)\n                    value.push(v0);\n                if (bindLen > 1)\n                    value.push(v1);\n                if (bindLen > 2)\n                    value.push(v2);\n                if (bindLen > 3)\n                    value.push(v3);\n                if (bindLen > 4)\n                    value.push(v4);\n                if (bindLen > 5)\n                    value.push(v5);\n                if (bindLen > 6)\n                    value.push(v6);\n                if (bindLen > 7)\n                    value.push(v7);\n                if (bindLen > 8)\n                    value.push(v8);\n                if (bindLen > 9)\n                    value.push(v9);\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                if (bindLen > 0)\n                    value[bindings[0].name] = v0;\n                if (bindLen > 1)\n                    value[bindings[1].name] = v1;\n                if (bindLen > 2)\n                    value[bindings[2].name] = v2;\n                if (bindLen > 3)\n                    value[bindings[3].name] = v3;\n                if (bindLen > 4)\n                    value[bindings[4].name] = v4;\n                if (bindLen > 5)\n                    value[bindings[5].name] = v5;\n                if (bindLen > 6)\n                    value[bindings[6].name] = v6;\n                if (bindLen > 7)\n                    value[bindings[7].name] = v7;\n                if (bindLen > 8)\n                    value[bindings[8].name] = v8;\n                if (bindLen > 9)\n                    value[bindings[9].name] = v9;\n                break;\n            case 128 /* TypePurePipe */:\n                const pipe = v0;\n                switch (bindLen) {\n                    case 1:\n                        value = pipe.transform(v0);\n                        break;\n                    case 2:\n                        value = pipe.transform(v1);\n                        break;\n                    case 3:\n                        value = pipe.transform(v1, v2);\n                        break;\n                    case 4:\n                        value = pipe.transform(v1, v2, v3);\n                        break;\n                    case 5:\n                        value = pipe.transform(v1, v2, v3, v4);\n                        break;\n                    case 6:\n                        value = pipe.transform(v1, v2, v3, v4, v5);\n                        break;\n                    case 7:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                        break;\n                    case 8:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                        break;\n                    case 9:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                        break;\n                    case 10:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                        break;\n                }\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\nfunction checkAndUpdatePureExpressionDynamic(view, def, values) {\n    const bindings = def.bindings;\n    let changed = false;\n    for (let i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        const data = asPureExpressionData(view, def.nodeIndex);\n        let value;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = values;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                for (let i = 0; i < values.length; i++) {\n                    value[bindings[i].name] = values[i];\n                }\n                break;\n            case 128 /* TypePurePipe */:\n                const pipe = values[0];\n                const params = values.slice(1);\n                value = pipe.transform(...params);\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction textDef(checkIndex, ngContentIndex, staticText) {\n    const bindings = [];\n    for (let i = 1; i < staticText.length; i++) {\n        bindings[i - 1] = {\n            flags: 8 /* TypeProperty */,\n            name: null,\n            ns: null,\n            nonMinifiedName: null,\n            securityContext: null,\n            suffix: staticText[i],\n        };\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex,\n        flags: 2 /* TypeText */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        ngContentIndex,\n        childCount: 0,\n        bindings,\n        bindingFlags: 8 /* TypeProperty */,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: { prefix: staticText[0] },\n        query: null,\n        ngContent: null,\n    };\n}\nfunction createText(view, renderHost, def) {\n    let renderNode;\n    const renderer = view.renderer;\n    renderNode = renderer.createText(def.text.prefix);\n    const parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n        renderer.appendChild(parentEl, renderNode);\n    }\n    return { renderText: renderNode };\n}\nfunction checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    let changed = false;\n    const bindings = def.bindings;\n    const bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        let value = def.text.prefix;\n        if (bindLen > 0)\n            value += _addInterpolationPart(v0, bindings[0]);\n        if (bindLen > 1)\n            value += _addInterpolationPart(v1, bindings[1]);\n        if (bindLen > 2)\n            value += _addInterpolationPart(v2, bindings[2]);\n        if (bindLen > 3)\n            value += _addInterpolationPart(v3, bindings[3]);\n        if (bindLen > 4)\n            value += _addInterpolationPart(v4, bindings[4]);\n        if (bindLen > 5)\n            value += _addInterpolationPart(v5, bindings[5]);\n        if (bindLen > 6)\n            value += _addInterpolationPart(v6, bindings[6]);\n        if (bindLen > 7)\n            value += _addInterpolationPart(v7, bindings[7]);\n        if (bindLen > 8)\n            value += _addInterpolationPart(v8, bindings[8]);\n        if (bindLen > 9)\n            value += _addInterpolationPart(v9, bindings[9]);\n        const renderNode = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode, value);\n    }\n    return changed;\n}\nfunction checkAndUpdateTextDynamic(view, def, values) {\n    const bindings = def.bindings;\n    let changed = false;\n    for (let i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        let value = '';\n        for (let i = 0; i < values.length; i++) {\n            value = value + _addInterpolationPart(values[i], bindings[i]);\n        }\n        value = def.text.prefix + value;\n        const renderNode = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode, value);\n    }\n    return changed;\n}\nfunction _addInterpolationPart(value, binding) {\n    const valueStr = value != null ? value.toString() : '';\n    return valueStr + binding.suffix;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction viewDef(flags, nodes, updateDirectives, updateRenderer) {\n    // clone nodes and set auto calculated values\n    let viewBindingCount = 0;\n    let viewDisposableCount = 0;\n    let viewNodeFlags = 0;\n    let viewRootNodeFlags = 0;\n    let viewMatchedQueries = 0;\n    let currentParent = null;\n    let currentRenderParent = null;\n    let currentElementHasPublicProviders = false;\n    let currentElementHasPrivateProviders = false;\n    let lastRenderRootNode = null;\n    for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        node.nodeIndex = i;\n        node.parent = currentParent;\n        node.bindingIndex = viewBindingCount;\n        node.outputIndex = viewDisposableCount;\n        node.renderParent = currentRenderParent;\n        viewNodeFlags |= node.flags;\n        viewMatchedQueries |= node.matchedQueryIds;\n        if (node.element) {\n            const elDef = node.element;\n            elDef.publicProviders =\n                currentParent ? currentParent.element.publicProviders : Object.create(null);\n            elDef.allProviders = elDef.publicProviders;\n            // Note: We assume that all providers of an element are before any child element!\n            currentElementHasPublicProviders = false;\n            currentElementHasPrivateProviders = false;\n            if (node.element.template) {\n                viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        validateNode(currentParent, node, nodes.length);\n        viewBindingCount += node.bindings.length;\n        viewDisposableCount += node.outputs.length;\n        if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n            lastRenderRootNode = node;\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            if (!currentElementHasPublicProviders) {\n                currentElementHasPublicProviders = true;\n                // Use prototypical inheritance to not get O(n^2) complexity...\n                currentParent.element.publicProviders =\n                    Object.create(currentParent.element.publicProviders);\n                currentParent.element.allProviders = currentParent.element.publicProviders;\n            }\n            const isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n            const isComponent = (node.flags & 32768 /* Component */) !== 0;\n            if (!isPrivateService || isComponent) {\n                currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n            }\n            else {\n                if (!currentElementHasPrivateProviders) {\n                    currentElementHasPrivateProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.allProviders =\n                        Object.create(currentParent.element.publicProviders);\n                }\n                currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n            }\n            if (isComponent) {\n                currentParent.element.componentProvider = node;\n            }\n        }\n        if (currentParent) {\n            currentParent.childFlags |= node.flags;\n            currentParent.directChildFlags |= node.flags;\n            currentParent.childMatchedQueries |= node.matchedQueryIds;\n            if (node.element && node.element.template) {\n                currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        else {\n            viewRootNodeFlags |= node.flags;\n        }\n        if (node.childCount > 0) {\n            currentParent = node;\n            if (!isNgContainer(node)) {\n                currentRenderParent = node;\n            }\n        }\n        else {\n            // When the current node has no children, check if it is the last children of its parent.\n            // When it is, propagate the flags up.\n            // The loop is required because an element could be the last transitive children of several\n            // elements. We loop to either the root or the highest opened element (= with remaining\n            // children)\n            while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                const newParent = currentParent.parent;\n                if (newParent) {\n                    newParent.childFlags |= currentParent.childFlags;\n                    newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                }\n                currentParent = newParent;\n                // We also need to update the render parent & account for ng-container\n                if (currentParent && isNgContainer(currentParent)) {\n                    currentRenderParent = currentParent.renderParent;\n                }\n                else {\n                    currentRenderParent = currentParent;\n                }\n            }\n        }\n    }\n    const handleEvent = (view, nodeIndex, eventName, event) => nodes[nodeIndex].element.handleEvent(view, eventName, event);\n    return {\n        // Will be filled later...\n        factory: null,\n        nodeFlags: viewNodeFlags,\n        rootNodeFlags: viewRootNodeFlags,\n        nodeMatchedQueries: viewMatchedQueries,\n        flags,\n        nodes: nodes,\n        updateDirectives: updateDirectives || NOOP,\n        updateRenderer: updateRenderer || NOOP,\n        handleEvent,\n        bindingCount: viewBindingCount,\n        outputCount: viewDisposableCount,\n        lastRenderRootNode\n    };\n}\nfunction isNgContainer(node) {\n    return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n}\nfunction validateNode(parent, node, nodeCount) {\n    const template = node.element && node.element.template;\n    if (template) {\n        if (!template.lastRenderRootNode) {\n            throw new Error(`Illegal State: Embedded templates without nodes are not allowed!`);\n        }\n        if (template.lastRenderRootNode &&\n            template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n            throw new Error(`Illegal State: Last root node of a template can't have embedded views, at index ${node.nodeIndex}!`);\n        }\n    }\n    if (node.flags & 20224 /* CatProvider */) {\n        const parentFlags = parent ? parent.flags : 0;\n        if ((parentFlags & 1 /* TypeElement */) === 0) {\n            throw new Error(`Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index ${node.nodeIndex}!`);\n        }\n    }\n    if (node.query) {\n        if (node.flags & 67108864 /* TypeContentQuery */ &&\n            (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n            throw new Error(`Illegal State: Content Query nodes need to be children of directives, at index ${node.nodeIndex}!`);\n        }\n        if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n            throw new Error(`Illegal State: View Query nodes have to be top level nodes, at index ${node.nodeIndex}!`);\n        }\n    }\n    if (node.childCount) {\n        const parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n        if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n            throw new Error(`Illegal State: childCount of node leads outside of parent, at index ${node.nodeIndex}!`);\n        }\n    }\n}\nfunction createEmbeddedView(parent, anchorDef, viewDef, context) {\n    // embedded views are seen as siblings to the anchor, so we need\n    // to get the parent of the anchor and use it as parentIndex.\n    const view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n    initView(view, parent.component, context);\n    createViewNodes(view);\n    return view;\n}\nfunction createRootView(root, def, context) {\n    const view = createView(root, root.renderer, null, null, def);\n    initView(view, context, context);\n    createViewNodes(view);\n    return view;\n}\nfunction createComponentView(parentView, nodeDef, viewDef, hostElement) {\n    const rendererType = nodeDef.element.componentRendererType;\n    let compRenderer;\n    if (!rendererType) {\n        compRenderer = parentView.root.renderer;\n    }\n    else {\n        compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n    }\n    return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n}\nfunction createView(root, renderer, parent, parentNodeDef, def) {\n    const nodes = new Array(def.nodes.length);\n    const disposables = def.outputCount ? new Array(def.outputCount) : null;\n    const view = {\n        def,\n        parent,\n        viewContainerParent: null,\n        parentNodeDef,\n        context: null,\n        component: null,\n        nodes,\n        state: 13 /* CatInit */,\n        root,\n        renderer,\n        oldValues: new Array(def.bindingCount),\n        disposables,\n        initIndex: -1\n    };\n    return view;\n}\nfunction initView(view, component, context) {\n    view.component = component;\n    view.context = context;\n}\nfunction createViewNodes(view) {\n    let renderHost;\n    if (isComponentView(view)) {\n        const hostDef = view.parentNodeDef;\n        renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n    }\n    const def = view.def;\n    const nodes = view.nodes;\n    for (let i = 0; i < def.nodes.length; i++) {\n        const nodeDef = def.nodes[i];\n        Services.setCurrentNode(view, i);\n        let nodeData;\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                const el = createElement(view, renderHost, nodeDef);\n                let componentView = undefined;\n                if (nodeDef.flags & 33554432 /* ComponentView */) {\n                    const compViewDef = resolveDefinition(nodeDef.element.componentView);\n                    componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                }\n                listenToElementOutputs(view, componentView, nodeDef, el);\n                nodeData = {\n                    renderElement: el,\n                    componentView,\n                    viewContainer: null,\n                    template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                };\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                }\n                break;\n            case 2 /* TypeText */:\n                nodeData = createText(view, renderHost, nodeDef);\n                break;\n            case 512 /* TypeClassProvider */:\n            case 1024 /* TypeFactoryProvider */:\n            case 2048 /* TypeUseExistingProvider */:\n            case 256 /* TypeValueProvider */: {\n                nodeData = nodes[i];\n                if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                    const instance = createProviderInstance(view, nodeDef);\n                    nodeData = { instance };\n                }\n                break;\n            }\n            case 16 /* TypePipe */: {\n                const instance = createPipeInstance(view, nodeDef);\n                nodeData = { instance };\n                break;\n            }\n            case 16384 /* TypeDirective */: {\n                nodeData = nodes[i];\n                if (!nodeData) {\n                    const instance = createDirectiveInstance(view, nodeDef);\n                    nodeData = { instance };\n                }\n                if (nodeDef.flags & 32768 /* Component */) {\n                    const compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                    initView(compView, nodeData.instance, nodeData.instance);\n                }\n                break;\n            }\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                nodeData = createPureExpression(view, nodeDef);\n                break;\n            case 67108864 /* TypeContentQuery */:\n            case 134217728 /* TypeViewQuery */:\n                nodeData = createQuery();\n                break;\n            case 8 /* TypeNgContent */:\n                appendNgContent(view, renderHost, nodeDef);\n                // no runtime data needed for NgContent...\n                nodeData = undefined;\n                break;\n        }\n        nodes[i] = nodeData;\n    }\n    // Create the ViewData.nodes of component views after we created everything else,\n    // so that e.g. ng-content works\n    execComponentViewsAction(view, ViewAction.CreateViewNodes);\n    // fill static content and view queries\n    execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n}\nfunction checkNoChangesView(view) {\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 1 /* CheckNoChanges */);\n    execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n    Services.updateRenderer(view, 1 /* CheckNoChanges */);\n    execComponentViewsAction(view, ViewAction.CheckNoChanges);\n    // Note: We don't check queries for changes as we didn't do this in v2.x.\n    // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n}\nfunction checkAndUpdateView(view) {\n    if (view.state & 1 /* BeforeFirstCheck */) {\n        view.state &= ~1 /* BeforeFirstCheck */;\n        view.state |= 2 /* FirstCheck */;\n    }\n    else {\n        view.state &= ~2 /* FirstCheck */;\n    }\n    shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n    execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    let callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n    callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n    Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n    execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n    callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n    if (view.def.flags & 2 /* OnPush */) {\n        view.state &= ~8 /* ChecksEnabled */;\n    }\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n}\nfunction checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n    }\n}\nfunction markProjectedViewsForCheck(view) {\n    const def = view.def;\n    if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n        return;\n    }\n    for (let i = 0; i < def.nodes.length; i++) {\n        const nodeDef = def.nodes[i];\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            const projectedViews = asElementData(view, i).template._projectedViews;\n            if (projectedViews) {\n                for (let i = 0; i < projectedViews.length; i++) {\n                    const projectedView = projectedViews[i];\n                    projectedView.state |= 32 /* CheckProjectedView */;\n                    markParentViewsForCheckProjectedViews(projectedView, view);\n                }\n            }\n        }\n        else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        default:\n            throw 'unreachable';\n    }\n}\nfunction checkAndUpdateNodeDynamic(view, nodeDef, values) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementDynamic(view, nodeDef, values);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextDynamic(view, nodeDef, values);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n        default:\n            throw 'unreachable';\n    }\n}\nfunction checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        checkNoChangesNodeDynamic(view, nodeDef, v0);\n    }\n    // Returning false is ok here as we would have thrown in case of a change.\n    return false;\n}\nfunction checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    const bindLen = nodeDef.bindings.length;\n    if (bindLen > 0)\n        checkBindingNoChanges(view, nodeDef, 0, v0);\n    if (bindLen > 1)\n        checkBindingNoChanges(view, nodeDef, 1, v1);\n    if (bindLen > 2)\n        checkBindingNoChanges(view, nodeDef, 2, v2);\n    if (bindLen > 3)\n        checkBindingNoChanges(view, nodeDef, 3, v3);\n    if (bindLen > 4)\n        checkBindingNoChanges(view, nodeDef, 4, v4);\n    if (bindLen > 5)\n        checkBindingNoChanges(view, nodeDef, 5, v5);\n    if (bindLen > 6)\n        checkBindingNoChanges(view, nodeDef, 6, v6);\n    if (bindLen > 7)\n        checkBindingNoChanges(view, nodeDef, 7, v7);\n    if (bindLen > 8)\n        checkBindingNoChanges(view, nodeDef, 8, v8);\n    if (bindLen > 9)\n        checkBindingNoChanges(view, nodeDef, 9, v9);\n}\nfunction checkNoChangesNodeDynamic(view, nodeDef, values) {\n    for (let i = 0; i < values.length; i++) {\n        checkBindingNoChanges(view, nodeDef, i, values[i]);\n    }\n}\n/**\n * Workaround https://github.com/angular/tsickle/issues/497\n * @suppress {misplacedTypeAnnotation}\n */\nfunction checkNoChangesQuery(view, nodeDef) {\n    const queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (queryList.dirty) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), `Query ${nodeDef.query.id} not dirty`, `Query ${nodeDef.query.id} dirty`, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\nfunction destroyView(view) {\n    if (view.state & 128 /* Destroyed */) {\n        return;\n    }\n    execEmbeddedViewsAction(view, ViewAction.Destroy);\n    execComponentViewsAction(view, ViewAction.Destroy);\n    callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n    if (view.disposables) {\n        for (let i = 0; i < view.disposables.length; i++) {\n            view.disposables[i]();\n        }\n    }\n    detachProjectedView(view);\n    if (view.renderer.destroyNode) {\n        destroyViewNodes(view);\n    }\n    if (isComponentView(view)) {\n        view.renderer.destroy();\n    }\n    view.state |= 128 /* Destroyed */;\n}\nfunction destroyViewNodes(view) {\n    const len = view.def.nodes.length;\n    for (let i = 0; i < len; i++) {\n        const def = view.def.nodes[i];\n        if (def.flags & 1 /* TypeElement */) {\n            view.renderer.destroyNode(asElementData(view, i).renderElement);\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            view.renderer.destroyNode(asTextData(view, i).renderText);\n        }\n        else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n            asQueryList(view, i).destroy();\n        }\n    }\n}\nvar ViewAction;\n(function (ViewAction) {\n    ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n    ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n    ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n    ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n    ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n    ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n})(ViewAction || (ViewAction = {}));\nfunction execComponentViewsAction(view, action) {\n    const def = view.def;\n    if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n        return;\n    }\n    for (let i = 0; i < def.nodes.length; i++) {\n        const nodeDef = def.nodes[i];\n        if (nodeDef.flags & 33554432 /* ComponentView */) {\n            // a leaf\n            callViewAction(asElementData(view, i).componentView, action);\n        }\n        else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction execEmbeddedViewsAction(view, action) {\n    const def = view.def;\n    if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n        return;\n    }\n    for (let i = 0; i < def.nodes.length; i++) {\n        const nodeDef = def.nodes[i];\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            // a leaf\n            const embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n            for (let k = 0; k < embeddedViews.length; k++) {\n                callViewAction(embeddedViews[k], action);\n            }\n        }\n        else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction callViewAction(view, action) {\n    const viewState = view.state;\n    switch (action) {\n        case ViewAction.CheckNoChanges:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckNoChangesProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdate:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdateProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.Destroy:\n            // Note: destroyView recurses over all views,\n            // so we don't need to special case projected views here.\n            destroyView(view);\n            break;\n        case ViewAction.CreateViewNodes:\n            createViewNodes(view);\n            break;\n    }\n}\nfunction execProjectedViewsAction(view, action) {\n    execEmbeddedViewsAction(view, action);\n    execComponentViewsAction(view, action);\n}\nfunction execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n    if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n        return;\n    }\n    const nodeCount = view.def.nodes.length;\n    for (let i = 0; i < nodeCount; i++) {\n        const nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n            Services.setCurrentNode(view, nodeDef.nodeIndex);\n            switch (checkType) {\n                case 0 /* CheckAndUpdate */:\n                    checkAndUpdateQuery(view, nodeDef);\n                    break;\n                case 1 /* CheckNoChanges */:\n                    checkNoChangesQuery(view, nodeDef);\n                    break;\n            }\n        }\n        if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n            // no child has a matching query\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet initialized = false;\nfunction initServicesIfNeeded() {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    const services = isDevMode() ? createDebugServices() : createProdServices();\n    Services.setCurrentNode = services.setCurrentNode;\n    Services.createRootView = services.createRootView;\n    Services.createEmbeddedView = services.createEmbeddedView;\n    Services.createComponentView = services.createComponentView;\n    Services.createNgModuleRef = services.createNgModuleRef;\n    Services.overrideProvider = services.overrideProvider;\n    Services.overrideComponentView = services.overrideComponentView;\n    Services.clearOverrides = services.clearOverrides;\n    Services.checkAndUpdateView = services.checkAndUpdateView;\n    Services.checkNoChangesView = services.checkNoChangesView;\n    Services.destroyView = services.destroyView;\n    Services.resolveDep = resolveDep;\n    Services.createDebugContext = services.createDebugContext;\n    Services.handleEvent = services.handleEvent;\n    Services.updateDirectives = services.updateDirectives;\n    Services.updateRenderer = services.updateRenderer;\n    Services.dirtyParentQueries = dirtyParentQueries;\n}\nfunction createProdServices() {\n    return {\n        setCurrentNode: () => { },\n        createRootView: createProdRootView,\n        createEmbeddedView: createEmbeddedView,\n        createComponentView: createComponentView,\n        createNgModuleRef: createNgModuleRef,\n        overrideProvider: NOOP,\n        overrideComponentView: NOOP,\n        clearOverrides: NOOP,\n        checkAndUpdateView: checkAndUpdateView,\n        checkNoChangesView: checkNoChangesView,\n        destroyView: destroyView,\n        createDebugContext: (view, nodeIndex) => new DebugContext_(view, nodeIndex),\n        handleEvent: (view, nodeIndex, eventName, event) => view.def.handleEvent(view, nodeIndex, eventName, event),\n        updateDirectives: (view, checkType) => view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode : prodCheckNoChangesNode, view),\n        updateRenderer: (view, checkType) => view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode : prodCheckNoChangesNode, view),\n    };\n}\nfunction createDebugServices() {\n    return {\n        setCurrentNode: debugSetCurrentNode,\n        createRootView: debugCreateRootView,\n        createEmbeddedView: debugCreateEmbeddedView,\n        createComponentView: debugCreateComponentView,\n        createNgModuleRef: debugCreateNgModuleRef,\n        overrideProvider: debugOverrideProvider,\n        overrideComponentView: debugOverrideComponentView,\n        clearOverrides: debugClearOverrides,\n        checkAndUpdateView: debugCheckAndUpdateView,\n        checkNoChangesView: debugCheckNoChangesView,\n        destroyView: debugDestroyView,\n        createDebugContext: (view, nodeIndex) => new DebugContext_(view, nodeIndex),\n        handleEvent: debugHandleEvent,\n        updateDirectives: debugUpdateDirectives,\n        updateRenderer: debugUpdateRenderer,\n    };\n}\nfunction createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    const rendererFactory = ngModule.injector.get(RendererFactory2);\n    return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n}\nfunction debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    const rendererFactory = ngModule.injector.get(RendererFactory2);\n    const root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n    const defWithOverride = applyProviderOverridesToView(def);\n    return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n}\nfunction createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n    const sanitizer = ngModule.injector.get(Sanitizer);\n    const errorHandler = ngModule.injector.get(ErrorHandler);\n    const renderer = rendererFactory.createRenderer(null, null);\n    return {\n        ngModule,\n        injector: elInjector,\n        projectableNodes,\n        selectorOrNode: rootSelectorOrNode,\n        sanitizer,\n        rendererFactory,\n        renderer,\n        errorHandler\n    };\n}\nfunction debugCreateEmbeddedView(parentView, anchorDef, viewDef, context) {\n    const defWithOverride = applyProviderOverridesToView(viewDef);\n    return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n}\nfunction debugCreateComponentView(parentView, nodeDef, viewDef, hostElement) {\n    const overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n    if (overrideComponentView) {\n        viewDef = overrideComponentView;\n    }\n    else {\n        viewDef = applyProviderOverridesToView(viewDef);\n    }\n    return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n}\nfunction debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n    const defWithOverride = applyProviderOverridesToNgModule(def);\n    return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n}\nconst providerOverrides = new Map();\nconst providerOverridesWithScope = new Map();\nconst viewDefOverrides = new Map();\nfunction debugOverrideProvider(override) {\n    providerOverrides.set(override.token, override);\n    let injectableDef;\n    if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n        typeof injectableDef.providedIn === 'function') {\n        providerOverridesWithScope.set(override.token, override);\n    }\n}\nfunction debugOverrideComponentView(comp, compFactory) {\n    const hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n    const compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n    viewDefOverrides.set(comp, compViewDef);\n}\nfunction debugClearOverrides() {\n    providerOverrides.clear();\n    providerOverridesWithScope.clear();\n    viewDefOverrides.clear();\n}\n// Notes about the algorithm:\n// 1) Locate the providers of an element and check if one of them was overwritten\n// 2) Change the providers of that element\n//\n// We only create new datastructures if we need to, to keep perf impact\n// reasonable.\nfunction applyProviderOverridesToView(def) {\n    if (providerOverrides.size === 0) {\n        return def;\n    }\n    const elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n    if (elementIndicesWithOverwrittenProviders.length === 0) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = def.factory(() => NOOP);\n    for (let i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n        applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n    }\n    return def;\n    function findElementIndicesWithOverwrittenProviders(def) {\n        const elIndicesWithOverwrittenProviders = [];\n        let lastElementDef = null;\n        for (let i = 0; i < def.nodes.length; i++) {\n            const nodeDef = def.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                lastElementDef = nodeDef;\n            }\n            if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                providerOverrides.has(nodeDef.provider.token)) {\n                elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                lastElementDef = null;\n            }\n        }\n        return elIndicesWithOverwrittenProviders;\n    }\n    function applyProviderOverridesToElement(viewDef, elIndex) {\n        for (let i = elIndex + 1; i < viewDef.nodes.length; i++) {\n            const nodeDef = viewDef.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                // stop at the next element\n                return;\n            }\n            if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                const provider = nodeDef.provider;\n                const override = providerOverrides.get(provider.token);\n                if (override) {\n                    nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n        }\n    }\n}\n// Notes about the algorithm:\n// We only create new datastructures if we need to, to keep perf impact\n// reasonable.\nfunction applyProviderOverridesToNgModule(def) {\n    const { hasOverrides, hasDeprecatedOverrides } = calcHasOverrides(def);\n    if (!hasOverrides) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = def.factory(() => NOOP);\n    applyProviderOverrides(def);\n    return def;\n    function calcHasOverrides(def) {\n        let hasOverrides = false;\n        let hasDeprecatedOverrides = false;\n        if (providerOverrides.size === 0) {\n            return { hasOverrides, hasDeprecatedOverrides };\n        }\n        def.providers.forEach(node => {\n            const override = providerOverrides.get(node.token);\n            if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                hasOverrides = true;\n                hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n            }\n        });\n        def.modules.forEach(module => {\n            providerOverridesWithScope.forEach((override, token) => {\n                if (getInjectableDef(token).providedIn === module) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n        });\n        return { hasOverrides, hasDeprecatedOverrides };\n    }\n    function applyProviderOverrides(def) {\n        for (let i = 0; i < def.providers.length; i++) {\n            const provider = def.providers[i];\n            if (hasDeprecatedOverrides) {\n                // We had a bug where me made\n                // all providers lazy. Keep this logic behind a flag\n                // for migrating existing users.\n                provider.flags |= 4096 /* LazyProvider */;\n            }\n            const override = providerOverrides.get(provider.token);\n            if (override) {\n                provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                provider.deps = splitDepsDsl(override.deps);\n                provider.value = override.value;\n            }\n        }\n        if (providerOverridesWithScope.size > 0) {\n            let moduleSet = new Set(def.modules);\n            providerOverridesWithScope.forEach((override, token) => {\n                if (moduleSet.has(getInjectableDef(token).providedIn)) {\n                    let provider = {\n                        token: token,\n                        flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                        deps: splitDepsDsl(override.deps),\n                        value: override.value,\n                        index: def.providers.length,\n                    };\n                    def.providers.push(provider);\n                    def.providersByKey[tokenKey(token)] = provider;\n                }\n            });\n        }\n    }\n}\nfunction prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    const nodeDef = view.def.nodes[checkIndex];\n    checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\nfunction prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    const nodeDef = view.def.nodes[checkIndex];\n    checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\nfunction debugCheckAndUpdateView(view) {\n    return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\nfunction debugCheckNoChangesView(view) {\n    return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\nfunction debugDestroyView(view) {\n    return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\nvar DebugAction;\n(function (DebugAction) {\n    DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n    DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n    DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n    DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n    DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n})(DebugAction || (DebugAction = {}));\nlet _currentAction;\nlet _currentView;\nlet _currentNodeIndex;\nfunction debugSetCurrentNode(view, nodeIndex) {\n    _currentView = view;\n    _currentNodeIndex = nodeIndex;\n}\nfunction debugHandleEvent(view, nodeIndex, eventName, event) {\n    debugSetCurrentNode(view, nodeIndex);\n    return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\nfunction debugUpdateDirectives(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n    return view.def.updateDirectives(debugCheckDirectivesFn, view);\n    function debugCheckDirectivesFn(view, nodeIndex, argStyle, ...values) {\n        const nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\nfunction debugUpdateRenderer(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n    return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n    function debugCheckRenderNodeFn(view, nodeIndex, argStyle, ...values) {\n        const nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\nfunction debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n    const changed = checkAndUpdateNode(view, nodeDef, argStyle, ...givenValues);\n    if (changed) {\n        const values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            const bindingValues = {};\n            for (let i = 0; i < nodeDef.bindings.length; i++) {\n                const binding = nodeDef.bindings[i];\n                const value = values[i];\n                if (binding.flags & 8 /* TypeProperty */) {\n                    bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                        normalizeDebugBindingValue(value);\n                }\n            }\n            const elDef = nodeDef.parent;\n            const el = asElementData(view, elDef.nodeIndex).renderElement;\n            if (!elDef.element.name) {\n                // a comment.\n                view.renderer.setValue(el, `bindings=${JSON.stringify(bindingValues, null, 2)}`);\n            }\n            else {\n                // a regular element.\n                for (let attr in bindingValues) {\n                    const value = bindingValues[attr];\n                    if (value != null) {\n                        view.renderer.setAttribute(el, attr, value);\n                    }\n                    else {\n                        view.renderer.removeAttribute(el, attr);\n                    }\n                }\n            }\n        }\n    }\n}\nfunction debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n    checkNoChangesNode(view, nodeDef, argStyle, ...values);\n}\nfunction nextDirectiveWithBinding(view, nodeIndex) {\n    for (let i = nodeIndex; i < view.def.nodes.length; i++) {\n        const nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\nfunction nextRenderNodeWithBinding(view, nodeIndex) {\n    for (let i = nodeIndex; i < view.def.nodes.length; i++) {\n        const nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\nclass DebugContext_ {\n    constructor(view, nodeIndex) {\n        this.view = view;\n        this.nodeIndex = nodeIndex;\n        if (nodeIndex == null) {\n            this.nodeIndex = nodeIndex = 0;\n        }\n        this.nodeDef = view.def.nodes[nodeIndex];\n        let elDef = this.nodeDef;\n        let elView = view;\n        while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n            elDef = elDef.parent;\n        }\n        if (!elDef) {\n            while (!elDef && elView) {\n                elDef = viewParentEl(elView);\n                elView = elView.parent;\n            }\n        }\n        this.elDef = elDef;\n        this.elView = elView;\n    }\n    get elOrCompView() {\n        // Has to be done lazily as we use the DebugContext also during creation of elements...\n        return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n    }\n    get injector() {\n        return createInjector$1(this.elView, this.elDef);\n    }\n    get component() {\n        return this.elOrCompView.component;\n    }\n    get context() {\n        return this.elOrCompView.context;\n    }\n    get providerTokens() {\n        const tokens = [];\n        if (this.elDef) {\n            for (let i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                const childDef = this.elView.def.nodes[i];\n                if (childDef.flags & 20224 /* CatProvider */) {\n                    tokens.push(childDef.provider.token);\n                }\n                i += childDef.childCount;\n            }\n        }\n        return tokens;\n    }\n    get references() {\n        const references = {};\n        if (this.elDef) {\n            collectReferences(this.elView, this.elDef, references);\n            for (let i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                const childDef = this.elView.def.nodes[i];\n                if (childDef.flags & 20224 /* CatProvider */) {\n                    collectReferences(this.elView, childDef, references);\n                }\n                i += childDef.childCount;\n            }\n        }\n        return references;\n    }\n    get componentRenderElement() {\n        const elData = findHostElement(this.elOrCompView);\n        return elData ? elData.renderElement : undefined;\n    }\n    get renderNode() {\n        return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n            renderNode(this.elView, this.elDef);\n    }\n    logError(console, ...values) {\n        let logViewDef;\n        let logNodeIndex;\n        if (this.nodeDef.flags & 2 /* TypeText */) {\n            logViewDef = this.view.def;\n            logNodeIndex = this.nodeDef.nodeIndex;\n        }\n        else {\n            logViewDef = this.elView.def;\n            logNodeIndex = this.elDef.nodeIndex;\n        }\n        // Note: we only generate a log function for text and element nodes\n        // to make the generated code as small as possible.\n        const renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n        let currRenderNodeIndex = -1;\n        let nodeLogger = () => {\n            currRenderNodeIndex++;\n            if (currRenderNodeIndex === renderNodeIndex) {\n                return console.error.bind(console, ...values);\n            }\n            else {\n                return NOOP;\n            }\n        };\n        logViewDef.factory(nodeLogger);\n        if (currRenderNodeIndex < renderNodeIndex) {\n            console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n            console.error(...values);\n        }\n    }\n}\nfunction getRenderNodeIndex(viewDef, nodeIndex) {\n    let renderNodeIndex = -1;\n    for (let i = 0; i <= nodeIndex; i++) {\n        const nodeDef = viewDef.nodes[i];\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            renderNodeIndex++;\n        }\n    }\n    return renderNodeIndex;\n}\nfunction findHostElement(view) {\n    while (view && !isComponentView(view)) {\n        view = view.parent;\n    }\n    if (view.parent) {\n        return asElementData(view.parent, viewParentEl(view).nodeIndex);\n    }\n    return null;\n}\nfunction collectReferences(view, nodeDef, references) {\n    for (let refName in nodeDef.references) {\n        references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n    }\n}\nfunction callWithDebugContext(action, fn, self, args) {\n    const oldAction = _currentAction;\n    const oldView = _currentView;\n    const oldNodeIndex = _currentNodeIndex;\n    try {\n        _currentAction = action;\n        const result = fn.apply(self, args);\n        _currentView = oldView;\n        _currentNodeIndex = oldNodeIndex;\n        _currentAction = oldAction;\n        return result;\n    }\n    catch (e) {\n        if (isViewDebugError(e) || !_currentView) {\n            throw e;\n        }\n        throw viewWrappedDebugError(e, getCurrentDebugContext());\n    }\n}\nfunction getCurrentDebugContext() {\n    return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\nclass DebugRendererFactory2 {\n    constructor(delegate) {\n        this.delegate = delegate;\n    }\n    createRenderer(element, renderData) {\n        return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n    }\n    begin() {\n        if (this.delegate.begin) {\n            this.delegate.begin();\n        }\n    }\n    end() {\n        if (this.delegate.end) {\n            this.delegate.end();\n        }\n    }\n    whenRenderingDone() {\n        if (this.delegate.whenRenderingDone) {\n            return this.delegate.whenRenderingDone();\n        }\n        return Promise.resolve(null);\n    }\n}\nclass DebugRenderer2 {\n    constructor(delegate) {\n        this.delegate = delegate;\n        /**\n         * Factory function used to create a `DebugContext` when a node is created.\n         *\n         * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n         *\n         * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n         * or a Render context.\n         */\n        this.debugContextFactory = getCurrentDebugContext;\n        this.data = this.delegate.data;\n    }\n    createDebugContext(nativeElement) {\n        return this.debugContextFactory(nativeElement);\n    }\n    destroyNode(node) {\n        const debugNode = getDebugNode$1(node);\n        removeDebugNodeFromIndex(debugNode);\n        if (debugNode instanceof DebugNode__PRE_R3__) {\n            debugNode.listeners.length = 0;\n        }\n        if (this.delegate.destroyNode) {\n            this.delegate.destroyNode(node);\n        }\n    }\n    destroy() {\n        this.delegate.destroy();\n    }\n    createElement(name, namespace) {\n        const el = this.delegate.createElement(name, namespace);\n        const debugCtx = this.createDebugContext(el);\n        if (debugCtx) {\n            const debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n            debugEl.name = name;\n            indexDebugNode(debugEl);\n        }\n        return el;\n    }\n    createComment(value) {\n        const comment = this.delegate.createComment(value);\n        const debugCtx = this.createDebugContext(comment);\n        if (debugCtx) {\n            indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n        }\n        return comment;\n    }\n    createText(value) {\n        const text = this.delegate.createText(value);\n        const debugCtx = this.createDebugContext(text);\n        if (debugCtx) {\n            indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n        }\n        return text;\n    }\n    appendChild(parent, newChild) {\n        const debugEl = getDebugNode$1(parent);\n        const debugChildEl = getDebugNode$1(newChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n            debugEl.addChild(debugChildEl);\n        }\n        this.delegate.appendChild(parent, newChild);\n    }\n    insertBefore(parent, newChild, refChild) {\n        const debugEl = getDebugNode$1(parent);\n        const debugChildEl = getDebugNode$1(newChild);\n        const debugRefEl = getDebugNode$1(refChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n            debugEl.insertBefore(debugRefEl, debugChildEl);\n        }\n        this.delegate.insertBefore(parent, newChild, refChild);\n    }\n    removeChild(parent, oldChild) {\n        const debugEl = getDebugNode$1(parent);\n        const debugChildEl = getDebugNode$1(oldChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n            debugEl.removeChild(debugChildEl);\n        }\n        this.delegate.removeChild(parent, oldChild);\n    }\n    selectRootElement(selectorOrNode, preserveContent) {\n        const el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n        const debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n        }\n        return el;\n    }\n    setAttribute(el, name, value, namespace) {\n        const debugEl = getDebugNode$1(el);\n        if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n            const fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = value;\n        }\n        this.delegate.setAttribute(el, name, value, namespace);\n    }\n    removeAttribute(el, name, namespace) {\n        const debugEl = getDebugNode$1(el);\n        if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n            const fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = null;\n        }\n        this.delegate.removeAttribute(el, name, namespace);\n    }\n    addClass(el, name) {\n        const debugEl = getDebugNode$1(el);\n        if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n            debugEl.classes[name] = true;\n        }\n        this.delegate.addClass(el, name);\n    }\n    removeClass(el, name) {\n        const debugEl = getDebugNode$1(el);\n        if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n            debugEl.classes[name] = false;\n        }\n        this.delegate.removeClass(el, name);\n    }\n    setStyle(el, style, value, flags) {\n        const debugEl = getDebugNode$1(el);\n        if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n            debugEl.styles[style] = value;\n        }\n        this.delegate.setStyle(el, style, value, flags);\n    }\n    removeStyle(el, style, flags) {\n        const debugEl = getDebugNode$1(el);\n        if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n            debugEl.styles[style] = null;\n        }\n        this.delegate.removeStyle(el, style, flags);\n    }\n    setProperty(el, name, value) {\n        const debugEl = getDebugNode$1(el);\n        if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n            debugEl.properties[name] = value;\n        }\n        this.delegate.setProperty(el, name, value);\n    }\n    listen(target, eventName, callback) {\n        if (typeof target !== 'string') {\n            const debugEl = getDebugNode$1(target);\n            if (debugEl) {\n                debugEl.listeners.push(new DebugEventListener(eventName, callback));\n            }\n        }\n        return this.delegate.listen(target, eventName, callback);\n    }\n    parentNode(node) {\n        return this.delegate.parentNode(node);\n    }\n    nextSibling(node) {\n        return this.delegate.nextSibling(node);\n    }\n    setValue(node, value) {\n        return this.delegate.setValue(node, value);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction overrideProvider(override) {\n    initServicesIfNeeded();\n    return Services.overrideProvider(override);\n}\nfunction overrideComponentView(comp, componentFactory) {\n    initServicesIfNeeded();\n    return Services.overrideComponentView(comp, componentFactory);\n}\nfunction clearOverrides() {\n    initServicesIfNeeded();\n    return Services.clearOverrides();\n}\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nfunction createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n    return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n}\nfunction cloneNgModuleDefinition(def) {\n    const providers = Array.from(def.providers);\n    const modules = Array.from(def.modules);\n    const providersByKey = {};\n    for (const key in def.providersByKey) {\n        providersByKey[key] = def.providersByKey[key];\n    }\n    return {\n        factory: def.factory,\n        scope: def.scope,\n        providers,\n        modules,\n        providersByKey,\n    };\n}\nclass NgModuleFactory_ extends NgModuleFactory {\n    constructor(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        super();\n        this.moduleType = moduleType;\n        this._bootstrapComponents = _bootstrapComponents;\n        this._ngModuleDefFactory = _ngModuleDefFactory;\n    }\n    create(parentInjector) {\n        initServicesIfNeeded();\n        // Clone the NgModuleDefinition so that any tree shakeable provider definition\n        // added to this instance of the NgModuleRef doesn't affect the cached copy.\n        // See https://github.com/angular/angular/issues/25018.\n        const def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n        return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// clang-format on\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nif (ngDevMode) {\n    // This helper is to give a reasonable error message to people upgrading to v9 that have not yet\n    // installed `@angular/localize` in their app.\n    // tslint:disable-next-line: no-toplevel-property-access\n    _global.$localize = _global.$localize || function () {\n        throw new Error('It looks like your application or one of its dependencies is using i18n.\\n' +\n            'Angular 9 introduced a global `$localize()` function that needs to be loaded.\\n' +\n            'Please run `ng add @angular/localize` from the Angular CLI.\\n' +\n            '(For non-CLI projects, add `import \\'@angular/localize/init\\';` to your `polyfills.ts` file.\\n' +\n            'For server-side rendering applications add the import to your `main.server.ts` file.)');\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ANALYZE_FOR_ENTRY_COMPONENTS, APP_BOOTSTRAP_LISTENER, APP_ID, APP_INITIALIZER, ApplicationInitStatus, ApplicationModule, ApplicationRef, Attribute, COMPILER_OPTIONS, CUSTOM_ELEMENTS_SCHEMA, ChangeDetectionStrategy, ChangeDetectorRef, Compiler, CompilerFactory, Component, ComponentFactory, ComponentFactoryResolver, ComponentRef, ContentChild, ContentChildren, DEFAULT_CURRENCY_CODE, DebugElement, DebugEventListener, DebugNode, DefaultIterableDiffer, Directive, ElementRef, EmbeddedViewRef, ErrorHandler, EventEmitter, Host, HostBinding, HostListener, INJECTOR, Inject, InjectFlags, Injectable, InjectionToken, Injector, Input, IterableDiffers, KeyValueDiffers, LOCALE_ID$1 as LOCALE_ID, MissingTranslationStrategy, ModuleWithComponentFactories, NO_ERRORS_SCHEMA, NgModule, NgModuleFactory, NgModuleFactoryLoader, NgModuleRef, NgProbeToken, NgZone, Optional, Output, PACKAGE_ROOT_URL, PLATFORM_ID, PLATFORM_INITIALIZER, Pipe, PlatformRef, Query, QueryList, ReflectiveInjector, ReflectiveKey, Renderer2, RendererFactory2, RendererStyleFlags2, ResolvedReflectiveFactory, Sanitizer, SecurityContext, Self, SimpleChange, SkipSelf, SystemJsNgModuleLoader, SystemJsNgModuleLoaderConfig, TRANSLATIONS, TRANSLATIONS_FORMAT, TemplateRef, Testability, TestabilityRegistry, Type, VERSION, Version, ViewChild, ViewChildren, ViewContainerRef, ViewEncapsulation$1 as ViewEncapsulation, ViewRef$1 as ViewRef, WrappedValue, asNativeElements, assertPlatform, createPlatform, createPlatformFactory, defineInjectable, destroyPlatform, enableProdMode, forwardRef, getDebugNode$1 as getDebugNode, getModuleFactory, getPlatform, inject, isDevMode, platformCore, resolveForwardRef, setTestabilityGetter, ɵ0, ɵ1, ALLOW_MULTIPLE_PLATFORMS as ɵALLOW_MULTIPLE_PLATFORMS, APP_ID_RANDOM_PROVIDER as ɵAPP_ID_RANDOM_PROVIDER, ChangeDetectorStatus as ɵChangeDetectorStatus, CodegenComponentFactoryResolver as ɵCodegenComponentFactoryResolver, Compiler_compileModuleAndAllComponentsAsync__POST_R3__ as ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__, Compiler_compileModuleAndAllComponentsSync__POST_R3__ as ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__, Compiler_compileModuleAsync__POST_R3__ as ɵCompiler_compileModuleAsync__POST_R3__, Compiler_compileModuleSync__POST_R3__ as ɵCompiler_compileModuleSync__POST_R3__, ComponentFactory as ɵComponentFactory, Console as ɵConsole, DEFAULT_LOCALE_ID as ɵDEFAULT_LOCALE_ID, EMPTY_ARRAY$4 as ɵEMPTY_ARRAY, EMPTY_MAP as ɵEMPTY_MAP, INJECTOR_IMPL__POST_R3__ as ɵINJECTOR_IMPL__POST_R3__, INJECTOR_SCOPE as ɵINJECTOR_SCOPE, LifecycleHooksFeature as ɵLifecycleHooksFeature, LocaleDataIndex as ɵLocaleDataIndex, NG_COMP_DEF as ɵNG_COMP_DEF, NG_DIR_DEF as ɵNG_DIR_DEF, NG_ELEMENT_ID as ɵNG_ELEMENT_ID, NG_INJ_DEF as ɵNG_INJ_DEF, NG_MOD_DEF as ɵNG_MOD_DEF, NG_PIPE_DEF as ɵNG_PIPE_DEF, NG_PROV_DEF as ɵNG_PROV_DEF, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR as ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, NO_CHANGE as ɵNO_CHANGE, NgModuleFactory$1 as ɵNgModuleFactory, NoopNgZone as ɵNoopNgZone, ReflectionCapabilities as ɵReflectionCapabilities, ComponentFactory$1 as ɵRender3ComponentFactory, ComponentRef$1 as ɵRender3ComponentRef, NgModuleRef$1 as ɵRender3NgModuleRef, SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ as ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__, SWITCH_COMPILE_COMPONENT__POST_R3__ as ɵSWITCH_COMPILE_COMPONENT__POST_R3__, SWITCH_COMPILE_DIRECTIVE__POST_R3__ as ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__, SWITCH_COMPILE_INJECTABLE__POST_R3__ as ɵSWITCH_COMPILE_INJECTABLE__POST_R3__, SWITCH_COMPILE_NGMODULE__POST_R3__ as ɵSWITCH_COMPILE_NGMODULE__POST_R3__, SWITCH_COMPILE_PIPE__POST_R3__ as ɵSWITCH_COMPILE_PIPE__POST_R3__, SWITCH_ELEMENT_REF_FACTORY__POST_R3__ as ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__, SWITCH_IVY_ENABLED__POST_R3__ as ɵSWITCH_IVY_ENABLED__POST_R3__, SWITCH_RENDERER2_FACTORY__POST_R3__ as ɵSWITCH_RENDERER2_FACTORY__POST_R3__, SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ as ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__, SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ as ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__, _sanitizeHtml as ɵ_sanitizeHtml, _sanitizeUrl as ɵ_sanitizeUrl, allowSanitizationBypassAndThrow as ɵallowSanitizationBypassAndThrow, anchorDef as ɵand, isForwardRef as ɵangular_packages_core_core_a, injectInjectorOnly as ɵangular_packages_core_core_b, instructionState as ɵangular_packages_core_core_ba, getLView as ɵangular_packages_core_core_bb, getPreviousOrParentTNode as ɵangular_packages_core_core_bc, getBindingRoot as ɵangular_packages_core_core_bd, nextContextImpl as ɵangular_packages_core_core_be, pureFunction1Internal as ɵangular_packages_core_core_bg, pureFunction2Internal as ɵangular_packages_core_core_bh, pureFunction3Internal as ɵangular_packages_core_core_bi, pureFunction4Internal as ɵangular_packages_core_core_bj, pureFunctionVInternal as ɵangular_packages_core_core_bk, getUrlSanitizer as ɵangular_packages_core_core_bl, makeParamDecorator as ɵangular_packages_core_core_bm, makePropDecorator as ɵangular_packages_core_core_bn, getClosureSafeProperty as ɵangular_packages_core_core_bo, getRootContext as ɵangular_packages_core_core_bq, i18nPostprocess as ɵangular_packages_core_core_br, NullInjector as ɵangular_packages_core_core_c, ReflectiveInjector_ as ɵangular_packages_core_core_d, ReflectiveDependency as ɵangular_packages_core_core_e, resolveReflectiveProviders as ɵangular_packages_core_core_f, _appIdRandomProviderFactory as ɵangular_packages_core_core_g, createElementRef as ɵangular_packages_core_core_h, createTemplateRef as ɵangular_packages_core_core_i, getModuleFactory__PRE_R3__ as ɵangular_packages_core_core_j, DebugNode__PRE_R3__ as ɵangular_packages_core_core_k, DebugElement__PRE_R3__ as ɵangular_packages_core_core_l, getDebugNodeR2__PRE_R3__ as ɵangular_packages_core_core_m, DefaultIterableDifferFactory as ɵangular_packages_core_core_n, DefaultKeyValueDifferFactory as ɵangular_packages_core_core_o, _iterableDiffersFactory as ɵangular_packages_core_core_p, _keyValueDiffersFactory as ɵangular_packages_core_core_q, _localeFactory as ɵangular_packages_core_core_r, APPLICATION_MODULE_PROVIDERS as ɵangular_packages_core_core_s, zoneSchedulerFactory as ɵangular_packages_core_core_t, USD_CURRENCY_CODE as ɵangular_packages_core_core_u, _def as ɵangular_packages_core_core_v, DebugContext as ɵangular_packages_core_core_w, NgOnChangesFeatureImpl as ɵangular_packages_core_core_x, SCHEDULER as ɵangular_packages_core_core_y, injectAttributeImpl as ɵangular_packages_core_core_z, bypassSanitizationTrustHtml as ɵbypassSanitizationTrustHtml, bypassSanitizationTrustResourceUrl as ɵbypassSanitizationTrustResourceUrl, bypassSanitizationTrustScript as ɵbypassSanitizationTrustScript, bypassSanitizationTrustStyle as ɵbypassSanitizationTrustStyle, bypassSanitizationTrustUrl as ɵbypassSanitizationTrustUrl, createComponentFactory as ɵccf, clearOverrides as ɵclearOverrides, clearResolutionOfComponentResourcesQueue as ɵclearResolutionOfComponentResourcesQueue, createNgModuleFactory as ɵcmf, compileComponent as ɵcompileComponent, compileDirective as ɵcompileDirective, compileNgModule as ɵcompileNgModule, compileNgModuleDefs as ɵcompileNgModuleDefs, compileNgModuleFactory__POST_R3__ as ɵcompileNgModuleFactory__POST_R3__, compilePipe as ɵcompilePipe, createInjector as ɵcreateInjector, createRendererType2 as ɵcrt, defaultIterableDiffers as ɵdefaultIterableDiffers, defaultKeyValueDiffers as ɵdefaultKeyValueDiffers, detectChanges as ɵdetectChanges, devModeEqual as ɵdevModeEqual, directiveDef as ɵdid, elementDef as ɵeld, findLocaleData as ɵfindLocaleData, flushModuleScopingQueueAsMuchAsPossible as ɵflushModuleScopingQueueAsMuchAsPossible, getComponentViewDefinitionFactory as ɵgetComponentViewDefinitionFactory, getDebugNodeR2 as ɵgetDebugNodeR2, getDebugNode__POST_R3__ as ɵgetDebugNode__POST_R3__, getDirectives as ɵgetDirectives, getHostElement as ɵgetHostElement, getInjectableDef as ɵgetInjectableDef, getLContext as ɵgetLContext, getLocaleCurrencyCode as ɵgetLocaleCurrencyCode, getLocalePluralCase as ɵgetLocalePluralCase, getModuleFactory__POST_R3__ as ɵgetModuleFactory__POST_R3__, getSanitizationBypassType as ɵgetSanitizationBypassType, _global as ɵglobal, initServicesIfNeeded as ɵinitServicesIfNeeded, inlineInterpolate as ɵinlineInterpolate, interpolate as ɵinterpolate, isBoundToModule__POST_R3__ as ɵisBoundToModule__POST_R3__, isDefaultChangeDetectionStrategy as ɵisDefaultChangeDetectionStrategy, isListLikeIterable as ɵisListLikeIterable, isObservable as ɵisObservable, isPromise as ɵisPromise, ivyEnabled as ɵivyEnabled, makeDecorator as ɵmakeDecorator, markDirty as ɵmarkDirty, moduleDef as ɵmod, moduleProvideDef as ɵmpd, ngContentDef as ɵncd, noSideEffects as ɵnoSideEffects, nodeValue as ɵnov, overrideComponentView as ɵoverrideComponentView, overrideProvider as ɵoverrideProvider, pureArrayDef as ɵpad, patchComponentDefWithScope as ɵpatchComponentDefWithScope, pipeDef as ɵpid, pureObjectDef as ɵpod, purePipeDef as ɵppd, providerDef as ɵprd, publishDefaultGlobalUtils as ɵpublishDefaultGlobalUtils, publishGlobalUtil as ɵpublishGlobalUtil, queryDef as ɵqud, registerLocaleData as ɵregisterLocaleData, registerModuleFactory as ɵregisterModuleFactory, registerNgModuleType as ɵregisterNgModuleType, renderComponent$1 as ɵrenderComponent, resetCompiledComponents as ɵresetCompiledComponents, resetJitOptions as ɵresetJitOptions, resolveComponentResources as ɵresolveComponentResources, setClassMetadata as ɵsetClassMetadata, setCurrentInjector as ɵsetCurrentInjector, setDocument as ɵsetDocument, setLocaleId as ɵsetLocaleId, store as ɵstore, stringify as ɵstringify, textDef as ɵted, transitiveScopesFor as ɵtransitiveScopesFor, unregisterAllLocaleData as ɵunregisterLocaleData, unwrapValue as ɵunv, unwrapSafeValue as ɵunwrapSafeValue, viewDef as ɵvid, whenRendered as ɵwhenRendered, ɵɵCopyDefinitionFeature, ɵɵInheritDefinitionFeature, ɵɵNgOnChangesFeature, ɵɵProvidersFeature, ɵɵadvance, ɵɵattribute, ɵɵattributeInterpolate1, ɵɵattributeInterpolate2, ɵɵattributeInterpolate3, ɵɵattributeInterpolate4, ɵɵattributeInterpolate5, ɵɵattributeInterpolate6, ɵɵattributeInterpolate7, ɵɵattributeInterpolate8, ɵɵattributeInterpolateV, ɵɵclassMap, ɵɵclassMapInterpolate1, ɵɵclassMapInterpolate2, ɵɵclassMapInterpolate3, ɵɵclassMapInterpolate4, ɵɵclassMapInterpolate5, ɵɵclassMapInterpolate6, ɵɵclassMapInterpolate7, ɵɵclassMapInterpolate8, ɵɵclassMapInterpolateV, ɵɵclassProp, ɵɵcontentQuery, ɵɵdefineComponent, ɵɵdefineDirective, ɵɵdefineInjectable, ɵɵdefineInjector, ɵɵdefineNgModule, ɵɵdefinePipe, ɵɵdirectiveInject, ɵɵdisableBindings, ɵɵelement, ɵɵelementContainer, ɵɵelementContainerEnd, ɵɵelementContainerStart, ɵɵelementEnd, ɵɵelementStart, ɵɵenableBindings, ɵɵgetCurrentView, ɵɵgetFactoryOf, ɵɵgetInheritedFactory, ɵɵhostProperty, ɵɵi18n, ɵɵi18nApply, ɵɵi18nAttributes, ɵɵi18nEnd, ɵɵi18nExp, ɵɵi18nPostprocess, ɵɵi18nStart, ɵɵinject, ɵɵinjectAttribute, ɵɵinjectPipeChangeDetectorRef, ɵɵinvalidFactory, ɵɵinvalidFactoryDep, ɵɵlistener, ɵɵloadQuery, ɵɵnamespaceHTML, ɵɵnamespaceMathML, ɵɵnamespaceSVG, ɵɵnextContext, ɵɵpipe, ɵɵpipeBind1, ɵɵpipeBind2, ɵɵpipeBind3, ɵɵpipeBind4, ɵɵpipeBindV, ɵɵprojection, ɵɵprojectionDef, ɵɵproperty, ɵɵpropertyInterpolate, ɵɵpropertyInterpolate1, ɵɵpropertyInterpolate2, ɵɵpropertyInterpolate3, ɵɵpropertyInterpolate4, ɵɵpropertyInterpolate5, ɵɵpropertyInterpolate6, ɵɵpropertyInterpolate7, ɵɵpropertyInterpolate8, ɵɵpropertyInterpolateV, ɵɵpureFunction0, ɵɵpureFunction1, ɵɵpureFunction2, ɵɵpureFunction3, ɵɵpureFunction4, ɵɵpureFunction5, ɵɵpureFunction6, ɵɵpureFunction7, ɵɵpureFunction8, ɵɵpureFunctionV, ɵɵqueryRefresh, ɵɵreference, ɵɵresolveBody, ɵɵresolveDocument, ɵɵresolveWindow, ɵɵrestoreView, ɵɵsanitizeHtml, ɵɵsanitizeResourceUrl, ɵɵsanitizeScript, ɵɵsanitizeStyle, ɵɵsanitizeUrl, ɵɵsanitizeUrlOrResourceUrl, ɵɵselect, ɵɵsetComponentScope, ɵɵsetNgModuleScope, ɵɵstaticContentQuery, ɵɵstaticViewQuery, ɵɵstyleMap, ɵɵstyleMapInterpolate1, ɵɵstyleMapInterpolate2, ɵɵstyleMapInterpolate3, ɵɵstyleMapInterpolate4, ɵɵstyleMapInterpolate5, ɵɵstyleMapInterpolate6, ɵɵstyleMapInterpolate7, ɵɵstyleMapInterpolate8, ɵɵstyleMapInterpolateV, ɵɵstyleProp, ɵɵstylePropInterpolate1, ɵɵstylePropInterpolate2, ɵɵstylePropInterpolate3, ɵɵstylePropInterpolate4, ɵɵstylePropInterpolate5, ɵɵstylePropInterpolate6, ɵɵstylePropInterpolate7, ɵɵstylePropInterpolate8, ɵɵstylePropInterpolateV, ɵɵsyntheticHostListener, ɵɵsyntheticHostProperty, ɵɵtemplate, ɵɵtemplateRefExtractor, ɵɵtext, ɵɵtextInterpolate, ɵɵtextInterpolate1, ɵɵtextInterpolate2, ɵɵtextInterpolate3, ɵɵtextInterpolate4, ɵɵtextInterpolate5, ɵɵtextInterpolate6, ɵɵtextInterpolate7, ɵɵtextInterpolate8, ɵɵtextInterpolateV, ɵɵviewQuery };\n\n//# sourceMappingURL=core.js.map","import { connectableObservableDescriptor } from '../observable/ConnectableObservable';\nexport function multicast(subjectOrSubjectFactory, selector) {\n    return function multicastOperatorFunction(source) {\n        let subjectFactory;\n        if (typeof subjectOrSubjectFactory === 'function') {\n            subjectFactory = subjectOrSubjectFactory;\n        }\n        else {\n            subjectFactory = function subjectFactory() {\n                return subjectOrSubjectFactory;\n            };\n        }\n        if (typeof selector === 'function') {\n            return source.lift(new MulticastOperator(subjectFactory, selector));\n        }\n        const connectable = Object.create(source, connectableObservableDescriptor);\n        connectable.source = source;\n        connectable.subjectFactory = subjectFactory;\n        return connectable;\n    };\n}\nexport class MulticastOperator {\n    constructor(subjectFactory, selector) {\n        this.subjectFactory = subjectFactory;\n        this.selector = selector;\n    }\n    call(subscriber, source) {\n        const { selector } = this;\n        const subject = this.subjectFactory();\n        const subscription = selector(subject).subscribe(subscriber);\n        subscription.add(source.subscribe(subject));\n        return subscription;\n    }\n}\n//# sourceMappingURL=multicast.js.map","/**\n * @license Angular v10.0.11\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { InjectionToken, ɵɵdefineInjectable, Injectable, ɵɵinject, Inject, Optional, EventEmitter, ɵfindLocaleData, ɵLocaleDataIndex, ɵgetLocaleCurrencyCode, ɵgetLocalePluralCase, LOCALE_ID, ɵregisterLocaleData, ɵisListLikeIterable, ɵstringify, Directive, IterableDiffers, KeyValueDiffers, ElementRef, Renderer2, Input, NgModuleRef, ComponentFactoryResolver, ViewContainerRef, isDevMode, TemplateRef, Host, Attribute, ɵisPromise, ɵisObservable, Pipe, ChangeDetectorRef, DEFAULT_CURRENCY_CODE, NgModule, Version, ErrorHandler } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nlet _DOM = null;\nfunction getDOM() {\n    return _DOM;\n}\nfunction setDOM(adapter) {\n    _DOM = adapter;\n}\nfunction setRootDomAdapter(adapter) {\n    if (!_DOM) {\n        _DOM = adapter;\n    }\n}\n/* tslint:disable:requireParameterType */\n/**\n * Provides DOM operations in an environment-agnostic way.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nclass DomAdapter {\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A DI Token representing the main rendering context. In a browser this is the DOM Document.\n *\n * Note: Document might not be available in the Application Context when Application and Rendering\n * Contexts are not the same (e.g. when running the application in a Web Worker).\n *\n * @publicApi\n */\nconst DOCUMENT = new InjectionToken('DocumentToken');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This class should not be used directly by an application developer. Instead, use\n * {@link Location}.\n *\n * `PlatformLocation` encapsulates all calls to DOM APIs, which allows the Router to be\n * platform-agnostic.\n * This means that we can have different implementation of `PlatformLocation` for the different\n * platforms that Angular supports. For example, `@angular/platform-browser` provides an\n * implementation specific to the browser environment, while `@angular/platform-server` provides\n * one suitable for use with server-side rendering.\n *\n * The `PlatformLocation` class is used directly by all implementations of {@link LocationStrategy}\n * when they need to interact with the DOM APIs like pushState, popState, etc.\n *\n * {@link LocationStrategy} in turn is used by the {@link Location} service which is used directly\n * by the {@link Router} in order to navigate between routes. Since all interactions between {@link\n * Router} /\n * {@link Location} / {@link LocationStrategy} and DOM APIs flow through the `PlatformLocation`\n * class, they are all platform-agnostic.\n *\n * @publicApi\n */\nclass PlatformLocation {\n}\nPlatformLocation.ɵfac = function PlatformLocation_Factory(t) { return new (t || PlatformLocation)(); };\nPlatformLocation.ɵprov = ɵɵdefineInjectable({ factory: useBrowserPlatformLocation, token: PlatformLocation, providedIn: \"platform\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PlatformLocation, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'platform',\n                // See #23917\n                useFactory: useBrowserPlatformLocation\n            }]\n    }], null, null); })();\nfunction useBrowserPlatformLocation() {\n    return ɵɵinject(BrowserPlatformLocation);\n}\n/**\n * @description\n * Indicates when a location is initialized.\n *\n * @publicApi\n */\nconst LOCATION_INITIALIZED = new InjectionToken('Location Initialized');\n/**\n * `PlatformLocation` encapsulates all of the direct calls to platform APIs.\n * This class should not be used directly by an application developer. Instead, use\n * {@link Location}.\n */\nclass BrowserPlatformLocation extends PlatformLocation {\n    constructor(_doc) {\n        super();\n        this._doc = _doc;\n        this._init();\n    }\n    // This is moved to its own method so that `MockPlatformLocationStrategy` can overwrite it\n    /** @internal */\n    _init() {\n        this.location = getDOM().getLocation();\n        this._history = getDOM().getHistory();\n    }\n    getBaseHrefFromDOM() {\n        return getDOM().getBaseHref(this._doc);\n    }\n    onPopState(fn) {\n        getDOM().getGlobalEventTarget(this._doc, 'window').addEventListener('popstate', fn, false);\n    }\n    onHashChange(fn) {\n        getDOM().getGlobalEventTarget(this._doc, 'window').addEventListener('hashchange', fn, false);\n    }\n    get href() {\n        return this.location.href;\n    }\n    get protocol() {\n        return this.location.protocol;\n    }\n    get hostname() {\n        return this.location.hostname;\n    }\n    get port() {\n        return this.location.port;\n    }\n    get pathname() {\n        return this.location.pathname;\n    }\n    get search() {\n        return this.location.search;\n    }\n    get hash() {\n        return this.location.hash;\n    }\n    set pathname(newPath) {\n        this.location.pathname = newPath;\n    }\n    pushState(state, title, url) {\n        if (supportsState()) {\n            this._history.pushState(state, title, url);\n        }\n        else {\n            this.location.hash = url;\n        }\n    }\n    replaceState(state, title, url) {\n        if (supportsState()) {\n            this._history.replaceState(state, title, url);\n        }\n        else {\n            this.location.hash = url;\n        }\n    }\n    forward() {\n        this._history.forward();\n    }\n    back() {\n        this._history.back();\n    }\n    getState() {\n        return this._history.state;\n    }\n}\nBrowserPlatformLocation.ɵfac = function BrowserPlatformLocation_Factory(t) { return new (t || BrowserPlatformLocation)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nBrowserPlatformLocation.ɵprov = ɵɵdefineInjectable({ factory: createBrowserPlatformLocation, token: BrowserPlatformLocation, providedIn: \"platform\" });\nBrowserPlatformLocation.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BrowserPlatformLocation, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'platform',\n                // See #23917\n                useFactory: createBrowserPlatformLocation\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nfunction supportsState() {\n    return !!window.history.pushState;\n}\nfunction createBrowserPlatformLocation() {\n    return new BrowserPlatformLocation(ɵɵinject(DOCUMENT));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Joins two parts of a URL with a slash if needed.\n *\n * @param start  URL string\n * @param end    URL string\n *\n *\n * @returns The joined URL string.\n */\nfunction joinWithSlash(start, end) {\n    if (start.length == 0) {\n        return end;\n    }\n    if (end.length == 0) {\n        return start;\n    }\n    let slashes = 0;\n    if (start.endsWith('/')) {\n        slashes++;\n    }\n    if (end.startsWith('/')) {\n        slashes++;\n    }\n    if (slashes == 2) {\n        return start + end.substring(1);\n    }\n    if (slashes == 1) {\n        return start + end;\n    }\n    return start + '/' + end;\n}\n/**\n * Removes a trailing slash from a URL string if needed.\n * Looks for the first occurrence of either `#`, `?`, or the end of the\n * line as `/` characters and removes the trailing slash if one exists.\n *\n * @param url URL string.\n *\n * @returns The URL string, modified if needed.\n */\nfunction stripTrailingSlash(url) {\n    const match = url.match(/#|\\?|$/);\n    const pathEndIdx = match && match.index || url.length;\n    const droppedSlashIdx = pathEndIdx - (url[pathEndIdx - 1] === '/' ? 1 : 0);\n    return url.slice(0, droppedSlashIdx) + url.slice(pathEndIdx);\n}\n/**\n * Normalizes URL parameters by prepending with `?` if needed.\n *\n * @param  params String of URL parameters.\n *\n * @returns The normalized URL parameters string.\n */\nfunction normalizeQueryParams(params) {\n    return params && params[0] !== '?' ? '?' + params : params;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Enables the `Location` service to read route state from the browser's URL.\n * Angular provides two strategies:\n * `HashLocationStrategy` and `PathLocationStrategy`.\n *\n * Applications should use the `Router` or `Location` services to\n * interact with application route state.\n *\n * For instance, `HashLocationStrategy` produces URLs like\n * <code class=\"no-auto-link\">http://example.com#/foo</code>,\n * and `PathLocationStrategy` produces\n * <code class=\"no-auto-link\">http://example.com/foo</code> as an equivalent URL.\n *\n * See these two classes for more.\n *\n * @publicApi\n */\nclass LocationStrategy {\n}\nLocationStrategy.ɵfac = function LocationStrategy_Factory(t) { return new (t || LocationStrategy)(); };\nLocationStrategy.ɵprov = ɵɵdefineInjectable({ factory: provideLocationStrategy, token: LocationStrategy, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LocationStrategy, [{\n        type: Injectable,\n        args: [{ providedIn: 'root', useFactory: provideLocationStrategy }]\n    }], null, null); })();\nfunction provideLocationStrategy(platformLocation) {\n    // See #23917\n    const location = ɵɵinject(DOCUMENT).location;\n    return new PathLocationStrategy(ɵɵinject(PlatformLocation), location && location.origin || '');\n}\n/**\n * A predefined [DI token](guide/glossary#di-token) for the base href\n * to be used with the `PathLocationStrategy`.\n * The base href is the URL prefix that should be preserved when generating\n * and recognizing URLs.\n *\n * @usageNotes\n *\n * The following example shows how to use this token to configure the root app injector\n * with a base href value, so that the DI framework can supply the dependency anywhere in the app.\n *\n * ```typescript\n * import {Component, NgModule} from '@angular/core';\n * import {APP_BASE_HREF} from '@angular/common';\n *\n * @NgModule({\n *   providers: [{provide: APP_BASE_HREF, useValue: '/my/app'}]\n * })\n * class AppModule {}\n * ```\n *\n * @publicApi\n */\nconst APP_BASE_HREF = new InjectionToken('appBaseHref');\n/**\n * @description\n * A {@link LocationStrategy} used to configure the {@link Location} service to\n * represent its state in the\n * [path](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax) of the\n * browser's URL.\n *\n * If you're using `PathLocationStrategy`, you must provide a {@link APP_BASE_HREF}\n * or add a `<base href>` element to the document.\n *\n * For instance, if you provide an `APP_BASE_HREF` of `'/my/app/'` and call\n * `location.go('/foo')`, the browser's URL will become\n * `example.com/my/app/foo`. To ensure all relative URIs resolve correctly,\n * the `<base href>` and/or `APP_BASE_HREF` should end with a `/`.\n *\n * Similarly, if you add `<base href='/my/app/'/>` to the document and call\n * `location.go('/foo')`, the browser's URL will become\n * `example.com/my/app/foo`.\n *\n * Note that when using `PathLocationStrategy`, neither the query nor\n * the fragment in the `<base href>` will be preserved, as outlined\n * by the [RFC](https://tools.ietf.org/html/rfc3986#section-5.2.2).\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example common/location/ts/path_location_component.ts region='LocationComponent'}\n *\n * @publicApi\n */\nclass PathLocationStrategy extends LocationStrategy {\n    constructor(_platformLocation, href) {\n        super();\n        this._platformLocation = _platformLocation;\n        if (href == null) {\n            href = this._platformLocation.getBaseHrefFromDOM();\n        }\n        if (href == null) {\n            throw new Error(`No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.`);\n        }\n        this._baseHref = href;\n    }\n    onPopState(fn) {\n        this._platformLocation.onPopState(fn);\n        this._platformLocation.onHashChange(fn);\n    }\n    getBaseHref() {\n        return this._baseHref;\n    }\n    prepareExternalUrl(internal) {\n        return joinWithSlash(this._baseHref, internal);\n    }\n    path(includeHash = false) {\n        const pathname = this._platformLocation.pathname + normalizeQueryParams(this._platformLocation.search);\n        const hash = this._platformLocation.hash;\n        return hash && includeHash ? `${pathname}${hash}` : pathname;\n    }\n    pushState(state, title, url, queryParams) {\n        const externalUrl = this.prepareExternalUrl(url + normalizeQueryParams(queryParams));\n        this._platformLocation.pushState(state, title, externalUrl);\n    }\n    replaceState(state, title, url, queryParams) {\n        const externalUrl = this.prepareExternalUrl(url + normalizeQueryParams(queryParams));\n        this._platformLocation.replaceState(state, title, externalUrl);\n    }\n    forward() {\n        this._platformLocation.forward();\n    }\n    back() {\n        this._platformLocation.back();\n    }\n}\nPathLocationStrategy.ɵfac = function PathLocationStrategy_Factory(t) { return new (t || PathLocationStrategy)(ɵngcc0.ɵɵinject(PlatformLocation), ɵngcc0.ɵɵinject(APP_BASE_HREF, 8)); };\nPathLocationStrategy.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: PathLocationStrategy, factory: PathLocationStrategy.ɵfac });\nPathLocationStrategy.ctorParameters = () => [\n    { type: PlatformLocation },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [APP_BASE_HREF,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PathLocationStrategy, [{\n        type: Injectable\n    }], function () { return [{ type: PlatformLocation }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [APP_BASE_HREF]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n * A {@link LocationStrategy} used to configure the {@link Location} service to\n * represent its state in the\n * [hash fragment](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax)\n * of the browser's URL.\n *\n * For instance, if you call `location.go('/foo')`, the browser's URL will become\n * `example.com#/foo`.\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example common/location/ts/hash_location_component.ts region='LocationComponent'}\n *\n * @publicApi\n */\nclass HashLocationStrategy extends LocationStrategy {\n    constructor(_platformLocation, _baseHref) {\n        super();\n        this._platformLocation = _platformLocation;\n        this._baseHref = '';\n        if (_baseHref != null) {\n            this._baseHref = _baseHref;\n        }\n    }\n    onPopState(fn) {\n        this._platformLocation.onPopState(fn);\n        this._platformLocation.onHashChange(fn);\n    }\n    getBaseHref() {\n        return this._baseHref;\n    }\n    path(includeHash = false) {\n        // the hash value is always prefixed with a `#`\n        // and if it is empty then it will stay empty\n        let path = this._platformLocation.hash;\n        if (path == null)\n            path = '#';\n        return path.length > 0 ? path.substring(1) : path;\n    }\n    prepareExternalUrl(internal) {\n        const url = joinWithSlash(this._baseHref, internal);\n        return url.length > 0 ? ('#' + url) : url;\n    }\n    pushState(state, title, path, queryParams) {\n        let url = this.prepareExternalUrl(path + normalizeQueryParams(queryParams));\n        if (url.length == 0) {\n            url = this._platformLocation.pathname;\n        }\n        this._platformLocation.pushState(state, title, url);\n    }\n    replaceState(state, title, path, queryParams) {\n        let url = this.prepareExternalUrl(path + normalizeQueryParams(queryParams));\n        if (url.length == 0) {\n            url = this._platformLocation.pathname;\n        }\n        this._platformLocation.replaceState(state, title, url);\n    }\n    forward() {\n        this._platformLocation.forward();\n    }\n    back() {\n        this._platformLocation.back();\n    }\n}\nHashLocationStrategy.ɵfac = function HashLocationStrategy_Factory(t) { return new (t || HashLocationStrategy)(ɵngcc0.ɵɵinject(PlatformLocation), ɵngcc0.ɵɵinject(APP_BASE_HREF, 8)); };\nHashLocationStrategy.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: HashLocationStrategy, factory: HashLocationStrategy.ɵfac });\nHashLocationStrategy.ctorParameters = () => [\n    { type: PlatformLocation },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [APP_BASE_HREF,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HashLocationStrategy, [{\n        type: Injectable\n    }], function () { return [{ type: PlatformLocation }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [APP_BASE_HREF]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * A service that applications can use to interact with a browser's URL.\n *\n * Depending on the `LocationStrategy` used, `Location` persists\n * to the URL's path or the URL's hash segment.\n *\n * @usageNotes\n *\n * It's better to use the `Router#navigate` service to trigger route changes. Use\n * `Location` only if you need to interact with or create normalized URLs outside of\n * routing.\n *\n * `Location` is responsible for normalizing the URL against the application's base href.\n * A normalized URL is absolute from the URL host, includes the application's base href, and has no\n * trailing slash:\n * - `/my/app/user/123` is normalized\n * - `my/app/user/123` **is not** normalized\n * - `/my/app/user/123/` **is not** normalized\n *\n * ### Example\n *\n * <code-example path='common/location/ts/path_location_component.ts'\n * region='LocationComponent'></code-example>\n *\n * @publicApi\n */\nclass Location {\n    constructor(platformStrategy, platformLocation) {\n        /** @internal */\n        this._subject = new EventEmitter();\n        /** @internal */\n        this._urlChangeListeners = [];\n        this._platformStrategy = platformStrategy;\n        const browserBaseHref = this._platformStrategy.getBaseHref();\n        this._platformLocation = platformLocation;\n        this._baseHref = stripTrailingSlash(_stripIndexHtml(browserBaseHref));\n        this._platformStrategy.onPopState((ev) => {\n            this._subject.emit({\n                'url': this.path(true),\n                'pop': true,\n                'state': ev.state,\n                'type': ev.type,\n            });\n        });\n    }\n    /**\n     * Normalizes the URL path for this location.\n     *\n     * @param includeHash True to include an anchor fragment in the path.\n     *\n     * @returns The normalized URL path.\n     */\n    // TODO: vsavkin. Remove the boolean flag and always include hash once the deprecated router is\n    // removed.\n    path(includeHash = false) {\n        return this.normalize(this._platformStrategy.path(includeHash));\n    }\n    /**\n     * Reports the current state of the location history.\n     * @returns The current value of the `history.state` object.\n     */\n    getState() {\n        return this._platformLocation.getState();\n    }\n    /**\n     * Normalizes the given path and compares to the current normalized path.\n     *\n     * @param path The given URL path.\n     * @param query Query parameters.\n     *\n     * @returns True if the given URL path is equal to the current normalized path, false\n     * otherwise.\n     */\n    isCurrentPathEqualTo(path, query = '') {\n        return this.path() == this.normalize(path + normalizeQueryParams(query));\n    }\n    /**\n     * Normalizes a URL path by stripping any trailing slashes.\n     *\n     * @param url String representing a URL.\n     *\n     * @returns The normalized URL string.\n     */\n    normalize(url) {\n        return Location.stripTrailingSlash(_stripBaseHref(this._baseHref, _stripIndexHtml(url)));\n    }\n    /**\n     * Normalizes an external URL path.\n     * If the given URL doesn't begin with a leading slash (`'/'`), adds one\n     * before normalizing. Adds a hash if `HashLocationStrategy` is\n     * in use, or the `APP_BASE_HREF` if the `PathLocationStrategy` is in use.\n     *\n     * @param url String representing a URL.\n     *\n     * @returns  A normalized platform-specific URL.\n     */\n    prepareExternalUrl(url) {\n        if (url && url[0] !== '/') {\n            url = '/' + url;\n        }\n        return this._platformStrategy.prepareExternalUrl(url);\n    }\n    // TODO: rename this method to pushState\n    /**\n     * Changes the browser's URL to a normalized version of a given URL, and pushes a\n     * new item onto the platform's history.\n     *\n     * @param path  URL path to normalize.\n     * @param query Query parameters.\n     * @param state Location history state.\n     *\n     */\n    go(path, query = '', state = null) {\n        this._platformStrategy.pushState(state, '', path, query);\n        this._notifyUrlChangeListeners(this.prepareExternalUrl(path + normalizeQueryParams(query)), state);\n    }\n    /**\n     * Changes the browser's URL to a normalized version of the given URL, and replaces\n     * the top item on the platform's history stack.\n     *\n     * @param path  URL path to normalize.\n     * @param query Query parameters.\n     * @param state Location history state.\n     */\n    replaceState(path, query = '', state = null) {\n        this._platformStrategy.replaceState(state, '', path, query);\n        this._notifyUrlChangeListeners(this.prepareExternalUrl(path + normalizeQueryParams(query)), state);\n    }\n    /**\n     * Navigates forward in the platform's history.\n     */\n    forward() {\n        this._platformStrategy.forward();\n    }\n    /**\n     * Navigates back in the platform's history.\n     */\n    back() {\n        this._platformStrategy.back();\n    }\n    /**\n     * Registers a URL change listener. Use to catch updates performed by the Angular\n     * framework that are not detectible through \"popstate\" or \"hashchange\" events.\n     *\n     * @param fn The change handler function, which take a URL and a location history state.\n     */\n    onUrlChange(fn) {\n        this._urlChangeListeners.push(fn);\n        if (!this._urlChangeSubscription) {\n            this._urlChangeSubscription = this.subscribe(v => {\n                this._notifyUrlChangeListeners(v.url, v.state);\n            });\n        }\n    }\n    /** @internal */\n    _notifyUrlChangeListeners(url = '', state) {\n        this._urlChangeListeners.forEach(fn => fn(url, state));\n    }\n    /**\n     * Subscribes to the platform's `popState` events.\n     *\n     * @param value Event that is triggered when the state history changes.\n     * @param exception The exception to throw.\n     *\n     * @returns Subscribed events.\n     */\n    subscribe(onNext, onThrow, onReturn) {\n        return this._subject.subscribe({ next: onNext, error: onThrow, complete: onReturn });\n    }\n}\nLocation.ɵfac = function Location_Factory(t) { return new (t || Location)(ɵngcc0.ɵɵinject(LocationStrategy), ɵngcc0.ɵɵinject(PlatformLocation)); };\n/**\n * Normalizes URL parameters by prepending with `?` if needed.\n *\n * @param  params String of URL parameters.\n *\n * @returns The normalized URL parameters string.\n */\nLocation.normalizeQueryParams = normalizeQueryParams;\n/**\n * Joins two parts of a URL with a slash if needed.\n *\n * @param start  URL string\n * @param end    URL string\n *\n *\n * @returns The joined URL string.\n */\nLocation.joinWithSlash = joinWithSlash;\n/**\n * Removes a trailing slash from a URL string if needed.\n * Looks for the first occurrence of either `#`, `?`, or the end of the\n * line as `/` characters and removes the trailing slash if one exists.\n *\n * @param url URL string.\n *\n * @returns The URL string, modified if needed.\n */\nLocation.stripTrailingSlash = stripTrailingSlash;\nLocation.ɵprov = ɵɵdefineInjectable({ factory: createLocation, token: Location, providedIn: \"root\" });\nLocation.ctorParameters = () => [\n    { type: LocationStrategy },\n    { type: PlatformLocation }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Location, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root',\n                // See #23917\n                useFactory: createLocation\n            }]\n    }], function () { return [{ type: LocationStrategy }, { type: PlatformLocation }]; }, null); })();\nfunction createLocation() {\n    return new Location(ɵɵinject(LocationStrategy), ɵɵinject(PlatformLocation));\n}\nfunction _stripBaseHref(baseHref, url) {\n    return baseHref && url.startsWith(baseHref) ? url.substring(baseHref.length) : url;\n}\nfunction _stripIndexHtml(url) {\n    return url.replace(/\\/index.html$/, '');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @internal */\nconst CURRENCIES_EN = {\n    'ADP': [undefined, undefined, 0],\n    'AFN': [undefined, undefined, 0],\n    'ALL': [undefined, undefined, 0],\n    'AMD': [undefined, undefined, 2],\n    'AOA': [undefined, 'Kz'],\n    'ARS': [undefined, '$'],\n    'AUD': ['A$', '$'],\n    'BAM': [undefined, 'KM'],\n    'BBD': [undefined, '$'],\n    'BDT': [undefined, '৳'],\n    'BHD': [undefined, undefined, 3],\n    'BIF': [undefined, undefined, 0],\n    'BMD': [undefined, '$'],\n    'BND': [undefined, '$'],\n    'BOB': [undefined, 'Bs'],\n    'BRL': ['R$'],\n    'BSD': [undefined, '$'],\n    'BWP': [undefined, 'P'],\n    'BYN': [undefined, 'р.', 2],\n    'BYR': [undefined, undefined, 0],\n    'BZD': [undefined, '$'],\n    'CAD': ['CA$', '$', 2],\n    'CHF': [undefined, undefined, 2],\n    'CLF': [undefined, undefined, 4],\n    'CLP': [undefined, '$', 0],\n    'CNY': ['CN¥', '¥'],\n    'COP': [undefined, '$', 2],\n    'CRC': [undefined, '₡', 2],\n    'CUC': [undefined, '$'],\n    'CUP': [undefined, '$'],\n    'CZK': [undefined, 'Kč', 2],\n    'DJF': [undefined, undefined, 0],\n    'DKK': [undefined, 'kr', 2],\n    'DOP': [undefined, '$'],\n    'EGP': [undefined, 'E£'],\n    'ESP': [undefined, '₧', 0],\n    'EUR': ['€'],\n    'FJD': [undefined, '$'],\n    'FKP': [undefined, '£'],\n    'GBP': ['£'],\n    'GEL': [undefined, '₾'],\n    'GIP': [undefined, '£'],\n    'GNF': [undefined, 'FG', 0],\n    'GTQ': [undefined, 'Q'],\n    'GYD': [undefined, '$', 2],\n    'HKD': ['HK$', '$'],\n    'HNL': [undefined, 'L'],\n    'HRK': [undefined, 'kn'],\n    'HUF': [undefined, 'Ft', 2],\n    'IDR': [undefined, 'Rp', 2],\n    'ILS': ['₪'],\n    'INR': ['₹'],\n    'IQD': [undefined, undefined, 0],\n    'IRR': [undefined, undefined, 0],\n    'ISK': [undefined, 'kr', 0],\n    'ITL': [undefined, undefined, 0],\n    'JMD': [undefined, '$'],\n    'JOD': [undefined, undefined, 3],\n    'JPY': ['¥', undefined, 0],\n    'KHR': [undefined, '៛'],\n    'KMF': [undefined, 'CF', 0],\n    'KPW': [undefined, '₩', 0],\n    'KRW': ['₩', undefined, 0],\n    'KWD': [undefined, undefined, 3],\n    'KYD': [undefined, '$'],\n    'KZT': [undefined, '₸'],\n    'LAK': [undefined, '₭', 0],\n    'LBP': [undefined, 'L£', 0],\n    'LKR': [undefined, 'Rs'],\n    'LRD': [undefined, '$'],\n    'LTL': [undefined, 'Lt'],\n    'LUF': [undefined, undefined, 0],\n    'LVL': [undefined, 'Ls'],\n    'LYD': [undefined, undefined, 3],\n    'MGA': [undefined, 'Ar', 0],\n    'MGF': [undefined, undefined, 0],\n    'MMK': [undefined, 'K', 0],\n    'MNT': [undefined, '₮', 2],\n    'MRO': [undefined, undefined, 0],\n    'MUR': [undefined, 'Rs', 2],\n    'MXN': ['MX$', '$'],\n    'MYR': [undefined, 'RM'],\n    'NAD': [undefined, '$'],\n    'NGN': [undefined, '₦'],\n    'NIO': [undefined, 'C$'],\n    'NOK': [undefined, 'kr', 2],\n    'NPR': [undefined, 'Rs'],\n    'NZD': ['NZ$', '$'],\n    'OMR': [undefined, undefined, 3],\n    'PHP': [undefined, '₱'],\n    'PKR': [undefined, 'Rs', 2],\n    'PLN': [undefined, 'zł'],\n    'PYG': [undefined, '₲', 0],\n    'RON': [undefined, 'lei'],\n    'RSD': [undefined, undefined, 0],\n    'RUB': [undefined, '₽'],\n    'RUR': [undefined, 'р.'],\n    'RWF': [undefined, 'RF', 0],\n    'SBD': [undefined, '$'],\n    'SEK': [undefined, 'kr', 2],\n    'SGD': [undefined, '$'],\n    'SHP': [undefined, '£'],\n    'SLL': [undefined, undefined, 0],\n    'SOS': [undefined, undefined, 0],\n    'SRD': [undefined, '$'],\n    'SSP': [undefined, '£'],\n    'STD': [undefined, undefined, 0],\n    'STN': [undefined, 'Db'],\n    'SYP': [undefined, '£', 0],\n    'THB': [undefined, '฿'],\n    'TMM': [undefined, undefined, 0],\n    'TND': [undefined, undefined, 3],\n    'TOP': [undefined, 'T$'],\n    'TRL': [undefined, undefined, 0],\n    'TRY': [undefined, '₺'],\n    'TTD': [undefined, '$'],\n    'TWD': ['NT$', '$', 2],\n    'TZS': [undefined, undefined, 2],\n    'UAH': [undefined, '₴'],\n    'UGX': [undefined, undefined, 0],\n    'USD': ['$'],\n    'UYI': [undefined, undefined, 0],\n    'UYU': [undefined, '$'],\n    'UYW': [undefined, undefined, 4],\n    'UZS': [undefined, undefined, 2],\n    'VEF': [undefined, 'Bs', 2],\n    'VND': ['₫', undefined, 0],\n    'VUV': [undefined, undefined, 0],\n    'XAF': ['FCFA', undefined, 0],\n    'XCD': ['EC$', '$'],\n    'XOF': ['CFA', undefined, 0],\n    'XPF': ['CFPF', undefined, 0],\n    'XXX': ['¤'],\n    'YER': [undefined, undefined, 0],\n    'ZAR': [undefined, 'R'],\n    'ZMK': [undefined, undefined, 0],\n    'ZMW': [undefined, 'ZK'],\n    'ZWD': [undefined, undefined, 0]\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Format styles that can be used to represent numbers.\n * @see `getLocaleNumberFormat()`.\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nvar NumberFormatStyle;\n(function (NumberFormatStyle) {\n    NumberFormatStyle[NumberFormatStyle[\"Decimal\"] = 0] = \"Decimal\";\n    NumberFormatStyle[NumberFormatStyle[\"Percent\"] = 1] = \"Percent\";\n    NumberFormatStyle[NumberFormatStyle[\"Currency\"] = 2] = \"Currency\";\n    NumberFormatStyle[NumberFormatStyle[\"Scientific\"] = 3] = \"Scientific\";\n})(NumberFormatStyle || (NumberFormatStyle = {}));\n/**\n * Plurality cases used for translating plurals to different languages.\n *\n * @see `NgPlural`\n * @see `NgPluralCase`\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nvar Plural;\n(function (Plural) {\n    Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n    Plural[Plural[\"One\"] = 1] = \"One\";\n    Plural[Plural[\"Two\"] = 2] = \"Two\";\n    Plural[Plural[\"Few\"] = 3] = \"Few\";\n    Plural[Plural[\"Many\"] = 4] = \"Many\";\n    Plural[Plural[\"Other\"] = 5] = \"Other\";\n})(Plural || (Plural = {}));\n/**\n * Context-dependant translation forms for strings.\n * Typically the standalone version is for the nominative form of the word,\n * and the format version is used for the genitive case.\n * @see [CLDR website](http://cldr.unicode.org/translation/date-time-1/date-time#TOC-Standalone-vs.-Format-Styles)\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nvar FormStyle;\n(function (FormStyle) {\n    FormStyle[FormStyle[\"Format\"] = 0] = \"Format\";\n    FormStyle[FormStyle[\"Standalone\"] = 1] = \"Standalone\";\n})(FormStyle || (FormStyle = {}));\n/**\n * String widths available for translations.\n * The specific character widths are locale-specific.\n * Examples are given for the word \"Sunday\" in English.\n *\n * @publicApi\n */\nvar TranslationWidth;\n(function (TranslationWidth) {\n    /** 1 character for `en-US`. For example: 'S' */\n    TranslationWidth[TranslationWidth[\"Narrow\"] = 0] = \"Narrow\";\n    /** 3 characters for `en-US`. For example: 'Sun' */\n    TranslationWidth[TranslationWidth[\"Abbreviated\"] = 1] = \"Abbreviated\";\n    /** Full length for `en-US`. For example: \"Sunday\" */\n    TranslationWidth[TranslationWidth[\"Wide\"] = 2] = \"Wide\";\n    /** 2 characters for `en-US`, For example: \"Su\" */\n    TranslationWidth[TranslationWidth[\"Short\"] = 3] = \"Short\";\n})(TranslationWidth || (TranslationWidth = {}));\n/**\n * String widths available for date-time formats.\n * The specific character widths are locale-specific.\n * Examples are given for `en-US`.\n *\n * @see `getLocaleDateFormat()`\n * @see `getLocaleTimeFormat()``\n * @see `getLocaleDateTimeFormat()`\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n * @publicApi\n */\nvar FormatWidth;\n(function (FormatWidth) {\n    /**\n     * For `en-US`, 'M/d/yy, h:mm a'`\n     * (Example: `6/15/15, 9:03 AM`)\n     */\n    FormatWidth[FormatWidth[\"Short\"] = 0] = \"Short\";\n    /**\n     * For `en-US`, `'MMM d, y, h:mm:ss a'`\n     * (Example: `Jun 15, 2015, 9:03:01 AM`)\n     */\n    FormatWidth[FormatWidth[\"Medium\"] = 1] = \"Medium\";\n    /**\n     * For `en-US`, `'MMMM d, y, h:mm:ss a z'`\n     * (Example: `June 15, 2015 at 9:03:01 AM GMT+1`)\n     */\n    FormatWidth[FormatWidth[\"Long\"] = 2] = \"Long\";\n    /**\n     * For `en-US`, `'EEEE, MMMM d, y, h:mm:ss a zzzz'`\n     * (Example: `Monday, June 15, 2015 at 9:03:01 AM GMT+01:00`)\n     */\n    FormatWidth[FormatWidth[\"Full\"] = 3] = \"Full\";\n})(FormatWidth || (FormatWidth = {}));\n/**\n * Symbols that can be used to replace placeholders in number patterns.\n * Examples are based on `en-US` values.\n *\n * @see `getLocaleNumberSymbol()`\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nvar NumberSymbol;\n(function (NumberSymbol) {\n    /**\n     * Decimal separator.\n     * For `en-US`, the dot character.\n     * Example : 2,345`.`67\n     */\n    NumberSymbol[NumberSymbol[\"Decimal\"] = 0] = \"Decimal\";\n    /**\n     * Grouping separator, typically for thousands.\n     * For `en-US`, the comma character.\n     * Example: 2`,`345.67\n     */\n    NumberSymbol[NumberSymbol[\"Group\"] = 1] = \"Group\";\n    /**\n     * List-item separator.\n     * Example: \"one, two, and three\"\n     */\n    NumberSymbol[NumberSymbol[\"List\"] = 2] = \"List\";\n    /**\n     * Sign for percentage (out of 100).\n     * Example: 23.4%\n     */\n    NumberSymbol[NumberSymbol[\"PercentSign\"] = 3] = \"PercentSign\";\n    /**\n     * Sign for positive numbers.\n     * Example: +23\n     */\n    NumberSymbol[NumberSymbol[\"PlusSign\"] = 4] = \"PlusSign\";\n    /**\n     * Sign for negative numbers.\n     * Example: -23\n     */\n    NumberSymbol[NumberSymbol[\"MinusSign\"] = 5] = \"MinusSign\";\n    /**\n     * Computer notation for exponential value (n times a power of 10).\n     * Example: 1.2E3\n     */\n    NumberSymbol[NumberSymbol[\"Exponential\"] = 6] = \"Exponential\";\n    /**\n     * Human-readable format of exponential.\n     * Example: 1.2x103\n     */\n    NumberSymbol[NumberSymbol[\"SuperscriptingExponent\"] = 7] = \"SuperscriptingExponent\";\n    /**\n     * Sign for permille (out of 1000).\n     * Example: 23.4‰\n     */\n    NumberSymbol[NumberSymbol[\"PerMille\"] = 8] = \"PerMille\";\n    /**\n     * Infinity, can be used with plus and minus.\n     * Example: ∞, +∞, -∞\n     */\n    NumberSymbol[NumberSymbol[\"Infinity\"] = 9] = \"Infinity\";\n    /**\n     * Not a number.\n     * Example: NaN\n     */\n    NumberSymbol[NumberSymbol[\"NaN\"] = 10] = \"NaN\";\n    /**\n     * Symbol used between time units.\n     * Example: 10:52\n     */\n    NumberSymbol[NumberSymbol[\"TimeSeparator\"] = 11] = \"TimeSeparator\";\n    /**\n     * Decimal separator for currency values (fallback to `Decimal`).\n     * Example: $2,345.67\n     */\n    NumberSymbol[NumberSymbol[\"CurrencyDecimal\"] = 12] = \"CurrencyDecimal\";\n    /**\n     * Group separator for currency values (fallback to `Group`).\n     * Example: $2,345.67\n     */\n    NumberSymbol[NumberSymbol[\"CurrencyGroup\"] = 13] = \"CurrencyGroup\";\n})(NumberSymbol || (NumberSymbol = {}));\n/**\n * The value for each day of the week, based on the `en-US` locale\n *\n * @publicApi\n */\nvar WeekDay;\n(function (WeekDay) {\n    WeekDay[WeekDay[\"Sunday\"] = 0] = \"Sunday\";\n    WeekDay[WeekDay[\"Monday\"] = 1] = \"Monday\";\n    WeekDay[WeekDay[\"Tuesday\"] = 2] = \"Tuesday\";\n    WeekDay[WeekDay[\"Wednesday\"] = 3] = \"Wednesday\";\n    WeekDay[WeekDay[\"Thursday\"] = 4] = \"Thursday\";\n    WeekDay[WeekDay[\"Friday\"] = 5] = \"Friday\";\n    WeekDay[WeekDay[\"Saturday\"] = 6] = \"Saturday\";\n})(WeekDay || (WeekDay = {}));\n/**\n * Retrieves the locale ID from the currently loaded locale.\n * The loaded locale could be, for example, a global one rather than a regional one.\n * @param locale A locale code, such as `fr-FR`.\n * @returns The locale code. For example, `fr`.\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLocaleId(locale) {\n    return ɵfindLocaleData(locale)[ɵLocaleDataIndex.LocaleId];\n}\n/**\n * Retrieves day period strings for the given locale.\n *\n * @param locale A locale code for the locale format rules to use.\n * @param formStyle The required grammatical form.\n * @param width The required character width.\n * @returns An array of localized period strings. For example, `[AM, PM]` for `en-US`.\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLocaleDayPeriods(locale, formStyle, width) {\n    const data = ɵfindLocaleData(locale);\n    const amPmData = [\n        data[ɵLocaleDataIndex.DayPeriodsFormat], data[ɵLocaleDataIndex.DayPeriodsStandalone]\n    ];\n    const amPm = getLastDefinedValue(amPmData, formStyle);\n    return getLastDefinedValue(amPm, width);\n}\n/**\n * Retrieves days of the week for the given locale, using the Gregorian calendar.\n *\n * @param locale A locale code for the locale format rules to use.\n * @param formStyle The required grammatical form.\n * @param width The required character width.\n * @returns An array of localized name strings.\n * For example,`[Sunday, Monday, ... Saturday]` for `en-US`.\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLocaleDayNames(locale, formStyle, width) {\n    const data = ɵfindLocaleData(locale);\n    const daysData = [data[ɵLocaleDataIndex.DaysFormat], data[ɵLocaleDataIndex.DaysStandalone]];\n    const days = getLastDefinedValue(daysData, formStyle);\n    return getLastDefinedValue(days, width);\n}\n/**\n * Retrieves months of the year for the given locale, using the Gregorian calendar.\n *\n * @param locale A locale code for the locale format rules to use.\n * @param formStyle The required grammatical form.\n * @param width The required character width.\n * @returns An array of localized name strings.\n * For example,  `[January, February, ...]` for `en-US`.\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLocaleMonthNames(locale, formStyle, width) {\n    const data = ɵfindLocaleData(locale);\n    const monthsData = [data[ɵLocaleDataIndex.MonthsFormat], data[ɵLocaleDataIndex.MonthsStandalone]];\n    const months = getLastDefinedValue(monthsData, formStyle);\n    return getLastDefinedValue(months, width);\n}\n/**\n * Retrieves Gregorian-calendar eras for the given locale.\n * @param locale A locale code for the locale format rules to use.\n * @param formStyle The required grammatical form.\n * @param width The required character width.\n\n * @returns An array of localized era strings.\n * For example, `[AD, BC]` for `en-US`.\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLocaleEraNames(locale, width) {\n    const data = ɵfindLocaleData(locale);\n    const erasData = data[ɵLocaleDataIndex.Eras];\n    return getLastDefinedValue(erasData, width);\n}\n/**\n * Retrieves the first day of the week for the given locale.\n *\n * @param locale A locale code for the locale format rules to use.\n * @returns A day index number, using the 0-based week-day index for `en-US`\n * (Sunday = 0, Monday = 1, ...).\n * For example, for `fr-FR`, returns 1 to indicate that the first day is Monday.\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLocaleFirstDayOfWeek(locale) {\n    const data = ɵfindLocaleData(locale);\n    return data[ɵLocaleDataIndex.FirstDayOfWeek];\n}\n/**\n * Range of week days that are considered the week-end for the given locale.\n *\n * @param locale A locale code for the locale format rules to use.\n * @returns The range of day values, `[startDay, endDay]`.\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLocaleWeekEndRange(locale) {\n    const data = ɵfindLocaleData(locale);\n    return data[ɵLocaleDataIndex.WeekendRange];\n}\n/**\n * Retrieves a localized date-value formating string.\n *\n * @param locale A locale code for the locale format rules to use.\n * @param width The format type.\n * @returns The localized formating string.\n * @see `FormatWidth`\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLocaleDateFormat(locale, width) {\n    const data = ɵfindLocaleData(locale);\n    return getLastDefinedValue(data[ɵLocaleDataIndex.DateFormat], width);\n}\n/**\n * Retrieves a localized time-value formatting string.\n *\n * @param locale A locale code for the locale format rules to use.\n * @param width The format type.\n * @returns The localized formatting string.\n * @see `FormatWidth`\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n\n * @publicApi\n */\nfunction getLocaleTimeFormat(locale, width) {\n    const data = ɵfindLocaleData(locale);\n    return getLastDefinedValue(data[ɵLocaleDataIndex.TimeFormat], width);\n}\n/**\n * Retrieves a localized date-time formatting string.\n *\n * @param locale A locale code for the locale format rules to use.\n * @param width The format type.\n * @returns The localized formatting string.\n * @see `FormatWidth`\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLocaleDateTimeFormat(locale, width) {\n    const data = ɵfindLocaleData(locale);\n    const dateTimeFormatData = data[ɵLocaleDataIndex.DateTimeFormat];\n    return getLastDefinedValue(dateTimeFormatData, width);\n}\n/**\n * Retrieves a localized number symbol that can be used to replace placeholders in number formats.\n * @param locale The locale code.\n * @param symbol The symbol to localize.\n * @returns The character for the localized symbol.\n * @see `NumberSymbol`\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLocaleNumberSymbol(locale, symbol) {\n    const data = ɵfindLocaleData(locale);\n    const res = data[ɵLocaleDataIndex.NumberSymbols][symbol];\n    if (typeof res === 'undefined') {\n        if (symbol === NumberSymbol.CurrencyDecimal) {\n            return data[ɵLocaleDataIndex.NumberSymbols][NumberSymbol.Decimal];\n        }\n        else if (symbol === NumberSymbol.CurrencyGroup) {\n            return data[ɵLocaleDataIndex.NumberSymbols][NumberSymbol.Group];\n        }\n    }\n    return res;\n}\n/**\n * Retrieves a number format for a given locale.\n *\n * Numbers are formatted using patterns, like `#,###.00`. For example, the pattern `#,###.00`\n * when used to format the number 12345.678 could result in \"12'345,678\". That would happen if the\n * grouping separator for your language is an apostrophe, and the decimal separator is a comma.\n *\n * <b>Important:</b> The characters `.` `,` `0` `#` (and others below) are special placeholders\n * that stand for the decimal separator, and so on, and are NOT real characters.\n * You must NOT \"translate\" the placeholders. For example, don't change `.` to `,` even though in\n * your language the decimal point is written with a comma. The symbols should be replaced by the\n * local equivalents, using the appropriate `NumberSymbol` for your language.\n *\n * Here are the special characters used in number patterns:\n *\n * | Symbol | Meaning |\n * |--------|---------|\n * | . | Replaced automatically by the character used for the decimal point. |\n * | , | Replaced by the \"grouping\" (thousands) separator. |\n * | 0 | Replaced by a digit (or zero if there aren't enough digits). |\n * | # | Replaced by a digit (or nothing if there aren't enough). |\n * | ¤ | Replaced by a currency symbol, such as $ or USD. |\n * | % | Marks a percent format. The % symbol may change position, but must be retained. |\n * | E | Marks a scientific format. The E symbol may change position, but must be retained. |\n * | ' | Special characters used as literal characters are quoted with ASCII single quotes. |\n *\n * @param locale A locale code for the locale format rules to use.\n * @param type The type of numeric value to be formatted (such as `Decimal` or `Currency`.)\n * @returns The localized format string.\n * @see `NumberFormatStyle`\n * @see [CLDR website](http://cldr.unicode.org/translation/number-patterns)\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLocaleNumberFormat(locale, type) {\n    const data = ɵfindLocaleData(locale);\n    return data[ɵLocaleDataIndex.NumberFormats][type];\n}\n/**\n * Retrieves the symbol used to represent the currency for the main country\n * corresponding to a given locale. For example, '$' for `en-US`.\n *\n * @param locale A locale code for the locale format rules to use.\n * @returns The localized symbol character,\n * or `null` if the main country cannot be determined.\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLocaleCurrencySymbol(locale) {\n    const data = ɵfindLocaleData(locale);\n    return data[ɵLocaleDataIndex.CurrencySymbol] || null;\n}\n/**\n * Retrieves the name of the currency for the main country corresponding\n * to a given locale. For example, 'US Dollar' for `en-US`.\n * @param locale A locale code for the locale format rules to use.\n * @returns The currency name,\n * or `null` if the main country cannot be determined.\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLocaleCurrencyName(locale) {\n    const data = ɵfindLocaleData(locale);\n    return data[ɵLocaleDataIndex.CurrencyName] || null;\n}\n/**\n * Retrieves the default currency code for the given locale.\n *\n * The default is defined as the first currency which is still in use.\n *\n * @param locale The code of the locale whose currency code we want.\n * @returns The code of the default currency for the given locale.\n *\n * @publicApi\n */\nfunction getLocaleCurrencyCode(locale) {\n    return ɵgetLocaleCurrencyCode(locale);\n}\n/**\n * Retrieves the currency values for a given locale.\n * @param locale A locale code for the locale format rules to use.\n * @returns The currency values.\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n */\nfunction getLocaleCurrencies(locale) {\n    const data = ɵfindLocaleData(locale);\n    return data[ɵLocaleDataIndex.Currencies];\n}\n/**\n * @alias core/ɵgetLocalePluralCase\n * @publicApi\n */\nconst getLocalePluralCase = ɵgetLocalePluralCase;\nfunction checkFullData(data) {\n    if (!data[ɵLocaleDataIndex.ExtraData]) {\n        throw new Error(`Missing extra locale data for the locale \"${data[ɵLocaleDataIndex\n            .LocaleId]}\". Use \"registerLocaleData\" to load new data. See the \"I18n guide\" on angular.io to know more.`);\n    }\n}\n/**\n * Retrieves locale-specific rules used to determine which day period to use\n * when more than one period is defined for a locale.\n *\n * There is a rule for each defined day period. The\n * first rule is applied to the first day period and so on.\n * Fall back to AM/PM when no rules are available.\n *\n * A rule can specify a period as time range, or as a single time value.\n *\n * This functionality is only available when you have loaded the full locale data.\n * See the [\"I18n guide\"](guide/i18n#i18n-pipes).\n *\n * @param locale A locale code for the locale format rules to use.\n * @returns The rules for the locale, a single time value or array of *from-time, to-time*,\n * or null if no periods are available.\n *\n * @see `getLocaleExtraDayPeriods()`\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLocaleExtraDayPeriodRules(locale) {\n    const data = ɵfindLocaleData(locale);\n    checkFullData(data);\n    const rules = data[ɵLocaleDataIndex.ExtraData][2 /* ExtraDayPeriodsRules */] || [];\n    return rules.map((rule) => {\n        if (typeof rule === 'string') {\n            return extractTime(rule);\n        }\n        return [extractTime(rule[0]), extractTime(rule[1])];\n    });\n}\n/**\n * Retrieves locale-specific day periods, which indicate roughly how a day is broken up\n * in different languages.\n * For example, for `en-US`, periods are morning, noon, afternoon, evening, and midnight.\n *\n * This functionality is only available when you have loaded the full locale data.\n * See the [\"I18n guide\"](guide/i18n#i18n-pipes).\n *\n * @param locale A locale code for the locale format rules to use.\n * @param formStyle The required grammatical form.\n * @param width The required character width.\n * @returns The translated day-period strings.\n * @see `getLocaleExtraDayPeriodRules()`\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLocaleExtraDayPeriods(locale, formStyle, width) {\n    const data = ɵfindLocaleData(locale);\n    checkFullData(data);\n    const dayPeriodsData = [\n        data[ɵLocaleDataIndex.ExtraData][0 /* ExtraDayPeriodFormats */],\n        data[ɵLocaleDataIndex.ExtraData][1 /* ExtraDayPeriodStandalone */]\n    ];\n    const dayPeriods = getLastDefinedValue(dayPeriodsData, formStyle) || [];\n    return getLastDefinedValue(dayPeriods, width) || [];\n}\n/**\n * Retrieves the writing direction of a specified locale\n * @param locale A locale code for the locale format rules to use.\n * @publicApi\n * @returns 'rtl' or 'ltr'\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n */\nfunction getLocaleDirection(locale) {\n    const data = ɵfindLocaleData(locale);\n    return data[ɵLocaleDataIndex.Directionality];\n}\n/**\n * Retrieves the first value that is defined in an array, going backwards from an index position.\n *\n * To avoid repeating the same data (as when the \"format\" and \"standalone\" forms are the same)\n * add the first value to the locale data arrays, and add other values only if they are different.\n *\n * @param data The data array to retrieve from.\n * @param index A 0-based index into the array to start from.\n * @returns The value immediately before the given index position.\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLastDefinedValue(data, index) {\n    for (let i = index; i > -1; i--) {\n        if (typeof data[i] !== 'undefined') {\n            return data[i];\n        }\n    }\n    throw new Error('Locale data API: locale data undefined');\n}\n/**\n * Extracts the hours and minutes from a string like \"15:45\"\n */\nfunction extractTime(time) {\n    const [h, m] = time.split(':');\n    return { hours: +h, minutes: +m };\n}\n/**\n * Retrieves the currency symbol for a given currency code.\n *\n * For example, for the default `en-US` locale, the code `USD` can\n * be represented by the narrow symbol `$` or the wide symbol `US$`.\n *\n * @param code The currency code.\n * @param format The format, `wide` or `narrow`.\n * @param locale A locale code for the locale format rules to use.\n *\n * @returns The symbol, or the currency code if no symbol is available.\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getCurrencySymbol(code, format, locale = 'en') {\n    const currency = getLocaleCurrencies(locale)[code] || CURRENCIES_EN[code] || [];\n    const symbolNarrow = currency[1 /* SymbolNarrow */];\n    if (format === 'narrow' && typeof symbolNarrow === 'string') {\n        return symbolNarrow;\n    }\n    return currency[0 /* Symbol */] || code;\n}\n// Most currencies have cents, that's why the default is 2\nconst DEFAULT_NB_OF_CURRENCY_DIGITS = 2;\n/**\n * Reports the number of decimal digits for a given currency.\n * The value depends upon the presence of cents in that particular currency.\n *\n * @param code The currency code.\n * @returns The number of decimal digits, typically 0 or 2.\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getNumberOfCurrencyDigits(code) {\n    let digits;\n    const currency = CURRENCIES_EN[code];\n    if (currency) {\n        digits = currency[2 /* NbOfDigits */];\n    }\n    return typeof digits === 'number' ? digits : DEFAULT_NB_OF_CURRENCY_DIGITS;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ISO8601_DATE_REGEX = /^(\\d{4})-?(\\d\\d)-?(\\d\\d)(?:T(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:\\.(\\d+))?)?)?(Z|([+-])(\\d\\d):?(\\d\\d))?)?$/;\n//    1        2       3         4          5          6          7          8  9     10      11\nconst NAMED_FORMATS = {};\nconst DATE_FORMATS_SPLIT = /((?:[^GyMLwWdEabBhHmsSzZO']+)|(?:'(?:[^']|'')*')|(?:G{1,5}|y{1,4}|M{1,5}|L{1,5}|w{1,2}|W{1}|d{1,2}|E{1,6}|a{1,5}|b{1,5}|B{1,5}|h{1,2}|H{1,2}|m{1,2}|s{1,2}|S{1,3}|z{1,4}|Z{1,5}|O{1,4}))([\\s\\S]*)/;\nvar ZoneWidth;\n(function (ZoneWidth) {\n    ZoneWidth[ZoneWidth[\"Short\"] = 0] = \"Short\";\n    ZoneWidth[ZoneWidth[\"ShortGMT\"] = 1] = \"ShortGMT\";\n    ZoneWidth[ZoneWidth[\"Long\"] = 2] = \"Long\";\n    ZoneWidth[ZoneWidth[\"Extended\"] = 3] = \"Extended\";\n})(ZoneWidth || (ZoneWidth = {}));\nvar DateType;\n(function (DateType) {\n    DateType[DateType[\"FullYear\"] = 0] = \"FullYear\";\n    DateType[DateType[\"Month\"] = 1] = \"Month\";\n    DateType[DateType[\"Date\"] = 2] = \"Date\";\n    DateType[DateType[\"Hours\"] = 3] = \"Hours\";\n    DateType[DateType[\"Minutes\"] = 4] = \"Minutes\";\n    DateType[DateType[\"Seconds\"] = 5] = \"Seconds\";\n    DateType[DateType[\"FractionalSeconds\"] = 6] = \"FractionalSeconds\";\n    DateType[DateType[\"Day\"] = 7] = \"Day\";\n})(DateType || (DateType = {}));\nvar TranslationType;\n(function (TranslationType) {\n    TranslationType[TranslationType[\"DayPeriods\"] = 0] = \"DayPeriods\";\n    TranslationType[TranslationType[\"Days\"] = 1] = \"Days\";\n    TranslationType[TranslationType[\"Months\"] = 2] = \"Months\";\n    TranslationType[TranslationType[\"Eras\"] = 3] = \"Eras\";\n})(TranslationType || (TranslationType = {}));\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a date according to locale rules.\n *\n * @param value The date to format, as a Date, or a number (milliseconds since UTC epoch)\n * or an [ISO date-time string](https://www.w3.org/TR/NOTE-datetime).\n * @param format The date-time components to include. See `DatePipe` for details.\n * @param locale A locale code for the locale format rules to use.\n * @param timezone The time zone. A time zone offset from GMT (such as `'+0430'`),\n * or a standard UTC/GMT or continental US time zone abbreviation.\n * If not specified, uses host system settings.\n *\n * @returns The formatted date string.\n *\n * @see `DatePipe`\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction formatDate(value, format, locale, timezone) {\n    let date = toDate(value);\n    const namedFormat = getNamedFormat(locale, format);\n    format = namedFormat || format;\n    let parts = [];\n    let match;\n    while (format) {\n        match = DATE_FORMATS_SPLIT.exec(format);\n        if (match) {\n            parts = parts.concat(match.slice(1));\n            const part = parts.pop();\n            if (!part) {\n                break;\n            }\n            format = part;\n        }\n        else {\n            parts.push(format);\n            break;\n        }\n    }\n    let dateTimezoneOffset = date.getTimezoneOffset();\n    if (timezone) {\n        dateTimezoneOffset = timezoneToOffset(timezone, dateTimezoneOffset);\n        date = convertTimezoneToLocal(date, timezone, true);\n    }\n    let text = '';\n    parts.forEach(value => {\n        const dateFormatter = getDateFormatter(value);\n        text += dateFormatter ?\n            dateFormatter(date, locale, dateTimezoneOffset) :\n            value === '\\'\\'' ? '\\'' : value.replace(/(^'|'$)/g, '').replace(/''/g, '\\'');\n    });\n    return text;\n}\nfunction getNamedFormat(locale, format) {\n    const localeId = getLocaleId(locale);\n    NAMED_FORMATS[localeId] = NAMED_FORMATS[localeId] || {};\n    if (NAMED_FORMATS[localeId][format]) {\n        return NAMED_FORMATS[localeId][format];\n    }\n    let formatValue = '';\n    switch (format) {\n        case 'shortDate':\n            formatValue = getLocaleDateFormat(locale, FormatWidth.Short);\n            break;\n        case 'mediumDate':\n            formatValue = getLocaleDateFormat(locale, FormatWidth.Medium);\n            break;\n        case 'longDate':\n            formatValue = getLocaleDateFormat(locale, FormatWidth.Long);\n            break;\n        case 'fullDate':\n            formatValue = getLocaleDateFormat(locale, FormatWidth.Full);\n            break;\n        case 'shortTime':\n            formatValue = getLocaleTimeFormat(locale, FormatWidth.Short);\n            break;\n        case 'mediumTime':\n            formatValue = getLocaleTimeFormat(locale, FormatWidth.Medium);\n            break;\n        case 'longTime':\n            formatValue = getLocaleTimeFormat(locale, FormatWidth.Long);\n            break;\n        case 'fullTime':\n            formatValue = getLocaleTimeFormat(locale, FormatWidth.Full);\n            break;\n        case 'short':\n            const shortTime = getNamedFormat(locale, 'shortTime');\n            const shortDate = getNamedFormat(locale, 'shortDate');\n            formatValue = formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Short), [shortTime, shortDate]);\n            break;\n        case 'medium':\n            const mediumTime = getNamedFormat(locale, 'mediumTime');\n            const mediumDate = getNamedFormat(locale, 'mediumDate');\n            formatValue = formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Medium), [mediumTime, mediumDate]);\n            break;\n        case 'long':\n            const longTime = getNamedFormat(locale, 'longTime');\n            const longDate = getNamedFormat(locale, 'longDate');\n            formatValue =\n                formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Long), [longTime, longDate]);\n            break;\n        case 'full':\n            const fullTime = getNamedFormat(locale, 'fullTime');\n            const fullDate = getNamedFormat(locale, 'fullDate');\n            formatValue =\n                formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Full), [fullTime, fullDate]);\n            break;\n    }\n    if (formatValue) {\n        NAMED_FORMATS[localeId][format] = formatValue;\n    }\n    return formatValue;\n}\nfunction formatDateTime(str, opt_values) {\n    if (opt_values) {\n        str = str.replace(/\\{([^}]+)}/g, function (match, key) {\n            return (opt_values != null && key in opt_values) ? opt_values[key] : match;\n        });\n    }\n    return str;\n}\nfunction padNumber(num, digits, minusSign = '-', trim, negWrap) {\n    let neg = '';\n    if (num < 0 || (negWrap && num <= 0)) {\n        if (negWrap) {\n            num = -num + 1;\n        }\n        else {\n            num = -num;\n            neg = minusSign;\n        }\n    }\n    let strNum = String(num);\n    while (strNum.length < digits) {\n        strNum = '0' + strNum;\n    }\n    if (trim) {\n        strNum = strNum.substr(strNum.length - digits);\n    }\n    return neg + strNum;\n}\nfunction formatFractionalSeconds(milliseconds, digits) {\n    const strMs = padNumber(milliseconds, 3);\n    return strMs.substr(0, digits);\n}\n/**\n * Returns a date formatter that transforms a date into its locale digit representation\n */\nfunction dateGetter(name, size, offset = 0, trim = false, negWrap = false) {\n    return function (date, locale) {\n        let part = getDatePart(name, date);\n        if (offset > 0 || part > -offset) {\n            part += offset;\n        }\n        if (name === DateType.Hours) {\n            if (part === 0 && offset === -12) {\n                part = 12;\n            }\n        }\n        else if (name === DateType.FractionalSeconds) {\n            return formatFractionalSeconds(part, size);\n        }\n        const localeMinus = getLocaleNumberSymbol(locale, NumberSymbol.MinusSign);\n        return padNumber(part, size, localeMinus, trim, negWrap);\n    };\n}\nfunction getDatePart(part, date) {\n    switch (part) {\n        case DateType.FullYear:\n            return date.getFullYear();\n        case DateType.Month:\n            return date.getMonth();\n        case DateType.Date:\n            return date.getDate();\n        case DateType.Hours:\n            return date.getHours();\n        case DateType.Minutes:\n            return date.getMinutes();\n        case DateType.Seconds:\n            return date.getSeconds();\n        case DateType.FractionalSeconds:\n            return date.getMilliseconds();\n        case DateType.Day:\n            return date.getDay();\n        default:\n            throw new Error(`Unknown DateType value \"${part}\".`);\n    }\n}\n/**\n * Returns a date formatter that transforms a date into its locale string representation\n */\nfunction dateStrGetter(name, width, form = FormStyle.Format, extended = false) {\n    return function (date, locale) {\n        return getDateTranslation(date, locale, name, width, form, extended);\n    };\n}\n/**\n * Returns the locale translation of a date for a given form, type and width\n */\nfunction getDateTranslation(date, locale, name, width, form, extended) {\n    switch (name) {\n        case TranslationType.Months:\n            return getLocaleMonthNames(locale, form, width)[date.getMonth()];\n        case TranslationType.Days:\n            return getLocaleDayNames(locale, form, width)[date.getDay()];\n        case TranslationType.DayPeriods:\n            const currentHours = date.getHours();\n            const currentMinutes = date.getMinutes();\n            if (extended) {\n                const rules = getLocaleExtraDayPeriodRules(locale);\n                const dayPeriods = getLocaleExtraDayPeriods(locale, form, width);\n                const index = rules.findIndex(rule => {\n                    if (Array.isArray(rule)) {\n                        // morning, afternoon, evening, night\n                        const [from, to] = rule;\n                        const afterFrom = currentHours >= from.hours && currentMinutes >= from.minutes;\n                        const beforeTo = (currentHours < to.hours ||\n                            (currentHours === to.hours && currentMinutes < to.minutes));\n                        // We must account for normal rules that span a period during the day (e.g. 6am-9am)\n                        // where `from` is less (earlier) than `to`. But also rules that span midnight (e.g.\n                        // 10pm - 5am) where `from` is greater (later!) than `to`.\n                        //\n                        // In the first case the current time must be BOTH after `from` AND before `to`\n                        // (e.g. 8am is after 6am AND before 10am).\n                        //\n                        // In the second case the current time must be EITHER after `from` OR before `to`\n                        // (e.g. 4am is before 5am but not after 10pm; and 11pm is not before 5am but it is\n                        // after 10pm).\n                        if (from.hours < to.hours) {\n                            if (afterFrom && beforeTo) {\n                                return true;\n                            }\n                        }\n                        else if (afterFrom || beforeTo) {\n                            return true;\n                        }\n                    }\n                    else { // noon or midnight\n                        if (rule.hours === currentHours && rule.minutes === currentMinutes) {\n                            return true;\n                        }\n                    }\n                    return false;\n                });\n                if (index !== -1) {\n                    return dayPeriods[index];\n                }\n            }\n            // if no rules for the day periods, we use am/pm by default\n            return getLocaleDayPeriods(locale, form, width)[currentHours < 12 ? 0 : 1];\n        case TranslationType.Eras:\n            return getLocaleEraNames(locale, width)[date.getFullYear() <= 0 ? 0 : 1];\n        default:\n            // This default case is not needed by TypeScript compiler, as the switch is exhaustive.\n            // However Closure Compiler does not understand that and reports an error in typed mode.\n            // The `throw new Error` below works around the problem, and the unexpected: never variable\n            // makes sure tsc still checks this code is unreachable.\n            const unexpected = name;\n            throw new Error(`unexpected translation type ${unexpected}`);\n    }\n}\n/**\n * Returns a date formatter that transforms a date and an offset into a timezone with ISO8601 or\n * GMT format depending on the width (eg: short = +0430, short:GMT = GMT+4, long = GMT+04:30,\n * extended = +04:30)\n */\nfunction timeZoneGetter(width) {\n    return function (date, locale, offset) {\n        const zone = -1 * offset;\n        const minusSign = getLocaleNumberSymbol(locale, NumberSymbol.MinusSign);\n        const hours = zone > 0 ? Math.floor(zone / 60) : Math.ceil(zone / 60);\n        switch (width) {\n            case ZoneWidth.Short:\n                return ((zone >= 0) ? '+' : '') + padNumber(hours, 2, minusSign) +\n                    padNumber(Math.abs(zone % 60), 2, minusSign);\n            case ZoneWidth.ShortGMT:\n                return 'GMT' + ((zone >= 0) ? '+' : '') + padNumber(hours, 1, minusSign);\n            case ZoneWidth.Long:\n                return 'GMT' + ((zone >= 0) ? '+' : '') + padNumber(hours, 2, minusSign) + ':' +\n                    padNumber(Math.abs(zone % 60), 2, minusSign);\n            case ZoneWidth.Extended:\n                if (offset === 0) {\n                    return 'Z';\n                }\n                else {\n                    return ((zone >= 0) ? '+' : '') + padNumber(hours, 2, minusSign) + ':' +\n                        padNumber(Math.abs(zone % 60), 2, minusSign);\n                }\n            default:\n                throw new Error(`Unknown zone width \"${width}\"`);\n        }\n    };\n}\nconst JANUARY = 0;\nconst THURSDAY = 4;\nfunction getFirstThursdayOfYear(year) {\n    const firstDayOfYear = (new Date(year, JANUARY, 1)).getDay();\n    return new Date(year, 0, 1 + ((firstDayOfYear <= THURSDAY) ? THURSDAY : THURSDAY + 7) - firstDayOfYear);\n}\nfunction getThursdayThisWeek(datetime) {\n    return new Date(datetime.getFullYear(), datetime.getMonth(), datetime.getDate() + (THURSDAY - datetime.getDay()));\n}\nfunction weekGetter(size, monthBased = false) {\n    return function (date, locale) {\n        let result;\n        if (monthBased) {\n            const nbDaysBefore1stDayOfMonth = new Date(date.getFullYear(), date.getMonth(), 1).getDay() - 1;\n            const today = date.getDate();\n            result = 1 + Math.floor((today + nbDaysBefore1stDayOfMonth) / 7);\n        }\n        else {\n            const firstThurs = getFirstThursdayOfYear(date.getFullYear());\n            const thisThurs = getThursdayThisWeek(date);\n            const diff = thisThurs.getTime() - firstThurs.getTime();\n            result = 1 + Math.round(diff / 6.048e8); // 6.048e8 ms per week\n        }\n        return padNumber(result, size, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));\n    };\n}\nconst DATE_FORMATS = {};\n// Based on CLDR formats:\n// See complete list: http://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n// See also explanations: http://cldr.unicode.org/translation/date-time\n// TODO(ocombe): support all missing cldr formats: Y, U, Q, D, F, e, c, j, J, C, A, v, V, X, x\nfunction getDateFormatter(format) {\n    if (DATE_FORMATS[format]) {\n        return DATE_FORMATS[format];\n    }\n    let formatter;\n    switch (format) {\n        // Era name (AD/BC)\n        case 'G':\n        case 'GG':\n        case 'GGG':\n            formatter = dateStrGetter(TranslationType.Eras, TranslationWidth.Abbreviated);\n            break;\n        case 'GGGG':\n            formatter = dateStrGetter(TranslationType.Eras, TranslationWidth.Wide);\n            break;\n        case 'GGGGG':\n            formatter = dateStrGetter(TranslationType.Eras, TranslationWidth.Narrow);\n            break;\n        // 1 digit representation of the year, e.g. (AD 1 => 1, AD 199 => 199)\n        case 'y':\n            formatter = dateGetter(DateType.FullYear, 1, 0, false, true);\n            break;\n        // 2 digit representation of the year, padded (00-99). (e.g. AD 2001 => 01, AD 2010 => 10)\n        case 'yy':\n            formatter = dateGetter(DateType.FullYear, 2, 0, true, true);\n            break;\n        // 3 digit representation of the year, padded (000-999). (e.g. AD 2001 => 01, AD 2010 => 10)\n        case 'yyy':\n            formatter = dateGetter(DateType.FullYear, 3, 0, false, true);\n            break;\n        // 4 digit representation of the year (e.g. AD 1 => 0001, AD 2010 => 2010)\n        case 'yyyy':\n            formatter = dateGetter(DateType.FullYear, 4, 0, false, true);\n            break;\n        // Month of the year (1-12), numeric\n        case 'M':\n        case 'L':\n            formatter = dateGetter(DateType.Month, 1, 1);\n            break;\n        case 'MM':\n        case 'LL':\n            formatter = dateGetter(DateType.Month, 2, 1);\n            break;\n        // Month of the year (January, ...), string, format\n        case 'MMM':\n            formatter = dateStrGetter(TranslationType.Months, TranslationWidth.Abbreviated);\n            break;\n        case 'MMMM':\n            formatter = dateStrGetter(TranslationType.Months, TranslationWidth.Wide);\n            break;\n        case 'MMMMM':\n            formatter = dateStrGetter(TranslationType.Months, TranslationWidth.Narrow);\n            break;\n        // Month of the year (January, ...), string, standalone\n        case 'LLL':\n            formatter =\n                dateStrGetter(TranslationType.Months, TranslationWidth.Abbreviated, FormStyle.Standalone);\n            break;\n        case 'LLLL':\n            formatter =\n                dateStrGetter(TranslationType.Months, TranslationWidth.Wide, FormStyle.Standalone);\n            break;\n        case 'LLLLL':\n            formatter =\n                dateStrGetter(TranslationType.Months, TranslationWidth.Narrow, FormStyle.Standalone);\n            break;\n        // Week of the year (1, ... 52)\n        case 'w':\n            formatter = weekGetter(1);\n            break;\n        case 'ww':\n            formatter = weekGetter(2);\n            break;\n        // Week of the month (1, ...)\n        case 'W':\n            formatter = weekGetter(1, true);\n            break;\n        // Day of the month (1-31)\n        case 'd':\n            formatter = dateGetter(DateType.Date, 1);\n            break;\n        case 'dd':\n            formatter = dateGetter(DateType.Date, 2);\n            break;\n        // Day of the Week\n        case 'E':\n        case 'EE':\n        case 'EEE':\n            formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Abbreviated);\n            break;\n        case 'EEEE':\n            formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Wide);\n            break;\n        case 'EEEEE':\n            formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Narrow);\n            break;\n        case 'EEEEEE':\n            formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Short);\n            break;\n        // Generic period of the day (am-pm)\n        case 'a':\n        case 'aa':\n        case 'aaa':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Abbreviated);\n            break;\n        case 'aaaa':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Wide);\n            break;\n        case 'aaaaa':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Narrow);\n            break;\n        // Extended period of the day (midnight, at night, ...), standalone\n        case 'b':\n        case 'bb':\n        case 'bbb':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Abbreviated, FormStyle.Standalone, true);\n            break;\n        case 'bbbb':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Wide, FormStyle.Standalone, true);\n            break;\n        case 'bbbbb':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Narrow, FormStyle.Standalone, true);\n            break;\n        // Extended period of the day (midnight, night, ...), standalone\n        case 'B':\n        case 'BB':\n        case 'BBB':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Abbreviated, FormStyle.Format, true);\n            break;\n        case 'BBBB':\n            formatter =\n                dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Wide, FormStyle.Format, true);\n            break;\n        case 'BBBBB':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Narrow, FormStyle.Format, true);\n            break;\n        // Hour in AM/PM, (1-12)\n        case 'h':\n            formatter = dateGetter(DateType.Hours, 1, -12);\n            break;\n        case 'hh':\n            formatter = dateGetter(DateType.Hours, 2, -12);\n            break;\n        // Hour of the day (0-23)\n        case 'H':\n            formatter = dateGetter(DateType.Hours, 1);\n            break;\n        // Hour in day, padded (00-23)\n        case 'HH':\n            formatter = dateGetter(DateType.Hours, 2);\n            break;\n        // Minute of the hour (0-59)\n        case 'm':\n            formatter = dateGetter(DateType.Minutes, 1);\n            break;\n        case 'mm':\n            formatter = dateGetter(DateType.Minutes, 2);\n            break;\n        // Second of the minute (0-59)\n        case 's':\n            formatter = dateGetter(DateType.Seconds, 1);\n            break;\n        case 'ss':\n            formatter = dateGetter(DateType.Seconds, 2);\n            break;\n        // Fractional second\n        case 'S':\n            formatter = dateGetter(DateType.FractionalSeconds, 1);\n            break;\n        case 'SS':\n            formatter = dateGetter(DateType.FractionalSeconds, 2);\n            break;\n        case 'SSS':\n            formatter = dateGetter(DateType.FractionalSeconds, 3);\n            break;\n        // Timezone ISO8601 short format (-0430)\n        case 'Z':\n        case 'ZZ':\n        case 'ZZZ':\n            formatter = timeZoneGetter(ZoneWidth.Short);\n            break;\n        // Timezone ISO8601 extended format (-04:30)\n        case 'ZZZZZ':\n            formatter = timeZoneGetter(ZoneWidth.Extended);\n            break;\n        // Timezone GMT short format (GMT+4)\n        case 'O':\n        case 'OO':\n        case 'OOO':\n        // Should be location, but fallback to format O instead because we don't have the data yet\n        case 'z':\n        case 'zz':\n        case 'zzz':\n            formatter = timeZoneGetter(ZoneWidth.ShortGMT);\n            break;\n        // Timezone GMT long format (GMT+0430)\n        case 'OOOO':\n        case 'ZZZZ':\n        // Should be location, but fallback to format O instead because we don't have the data yet\n        case 'zzzz':\n            formatter = timeZoneGetter(ZoneWidth.Long);\n            break;\n        default:\n            return null;\n    }\n    DATE_FORMATS[format] = formatter;\n    return formatter;\n}\nfunction timezoneToOffset(timezone, fallback) {\n    // Support: IE 9-11 only, Edge 13-15+\n    // IE/Edge do not \"understand\" colon (`:`) in timezone\n    timezone = timezone.replace(/:/g, '');\n    const requestedTimezoneOffset = Date.parse('Jan 01, 1970 00:00:00 ' + timezone) / 60000;\n    return isNaN(requestedTimezoneOffset) ? fallback : requestedTimezoneOffset;\n}\nfunction addDateMinutes(date, minutes) {\n    date = new Date(date.getTime());\n    date.setMinutes(date.getMinutes() + minutes);\n    return date;\n}\nfunction convertTimezoneToLocal(date, timezone, reverse) {\n    const reverseValue = reverse ? -1 : 1;\n    const dateTimezoneOffset = date.getTimezoneOffset();\n    const timezoneOffset = timezoneToOffset(timezone, dateTimezoneOffset);\n    return addDateMinutes(date, reverseValue * (timezoneOffset - dateTimezoneOffset));\n}\n/**\n * Converts a value to date.\n *\n * Supported input formats:\n * - `Date`\n * - number: timestamp\n * - string: numeric (e.g. \"1234\"), ISO and date strings in a format supported by\n *   [Date.parse()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse).\n *   Note: ISO strings without time return a date without timeoffset.\n *\n * Throws if unable to convert to a date.\n */\nfunction toDate(value) {\n    if (isDate(value)) {\n        return value;\n    }\n    if (typeof value === 'number' && !isNaN(value)) {\n        return new Date(value);\n    }\n    if (typeof value === 'string') {\n        value = value.trim();\n        const parsedNb = parseFloat(value);\n        // any string that only contains numbers, like \"1234\" but not like \"1234hello\"\n        if (!isNaN(value - parsedNb)) {\n            return new Date(parsedNb);\n        }\n        if (/^(\\d{4}-\\d{1,2}-\\d{1,2})$/.test(value)) {\n            /* For ISO Strings without time the day, month and year must be extracted from the ISO String\n            before Date creation to avoid time offset and errors in the new Date.\n            If we only replace '-' with ',' in the ISO String (\"2015,01,01\"), and try to create a new\n            date, some browsers (e.g. IE 9) will throw an invalid Date error.\n            If we leave the '-' (\"2015-01-01\") and try to create a new Date(\"2015-01-01\") the timeoffset\n            is applied.\n            Note: ISO months are 0 for January, 1 for February, ... */\n            const [y, m, d] = value.split('-').map((val) => +val);\n            return new Date(y, m - 1, d);\n        }\n        let match;\n        if (match = value.match(ISO8601_DATE_REGEX)) {\n            return isoStringToDate(match);\n        }\n    }\n    const date = new Date(value);\n    if (!isDate(date)) {\n        throw new Error(`Unable to convert \"${value}\" into a date`);\n    }\n    return date;\n}\n/**\n * Converts a date in ISO8601 to a Date.\n * Used instead of `Date.parse` because of browser discrepancies.\n */\nfunction isoStringToDate(match) {\n    const date = new Date(0);\n    let tzHour = 0;\n    let tzMin = 0;\n    // match[8] means that the string contains \"Z\" (UTC) or a timezone like \"+01:00\" or \"+0100\"\n    const dateSetter = match[8] ? date.setUTCFullYear : date.setFullYear;\n    const timeSetter = match[8] ? date.setUTCHours : date.setHours;\n    // if there is a timezone defined like \"+01:00\" or \"+0100\"\n    if (match[9]) {\n        tzHour = Number(match[9] + match[10]);\n        tzMin = Number(match[9] + match[11]);\n    }\n    dateSetter.call(date, Number(match[1]), Number(match[2]) - 1, Number(match[3]));\n    const h = Number(match[4] || 0) - tzHour;\n    const m = Number(match[5] || 0) - tzMin;\n    const s = Number(match[6] || 0);\n    const ms = Math.round(parseFloat('0.' + (match[7] || 0)) * 1000);\n    timeSetter.call(date, h, m, s, ms);\n    return date;\n}\nfunction isDate(value) {\n    return value instanceof Date && !isNaN(value.valueOf());\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst NUMBER_FORMAT_REGEXP = /^(\\d+)?\\.((\\d+)(-(\\d+))?)?$/;\nconst MAX_DIGITS = 22;\nconst DECIMAL_SEP = '.';\nconst ZERO_CHAR = '0';\nconst PATTERN_SEP = ';';\nconst GROUP_SEP = ',';\nconst DIGIT_CHAR = '#';\nconst CURRENCY_CHAR = '¤';\nconst PERCENT_CHAR = '%';\n/**\n * Transforms a number to a locale string based on a style and a format.\n */\nfunction formatNumberToLocaleString(value, pattern, locale, groupSymbol, decimalSymbol, digitsInfo, isPercent = false) {\n    let formattedText = '';\n    let isZero = false;\n    if (!isFinite(value)) {\n        formattedText = getLocaleNumberSymbol(locale, NumberSymbol.Infinity);\n    }\n    else {\n        let parsedNumber = parseNumber(value);\n        if (isPercent) {\n            parsedNumber = toPercent(parsedNumber);\n        }\n        let minInt = pattern.minInt;\n        let minFraction = pattern.minFrac;\n        let maxFraction = pattern.maxFrac;\n        if (digitsInfo) {\n            const parts = digitsInfo.match(NUMBER_FORMAT_REGEXP);\n            if (parts === null) {\n                throw new Error(`${digitsInfo} is not a valid digit info`);\n            }\n            const minIntPart = parts[1];\n            const minFractionPart = parts[3];\n            const maxFractionPart = parts[5];\n            if (minIntPart != null) {\n                minInt = parseIntAutoRadix(minIntPart);\n            }\n            if (minFractionPart != null) {\n                minFraction = parseIntAutoRadix(minFractionPart);\n            }\n            if (maxFractionPart != null) {\n                maxFraction = parseIntAutoRadix(maxFractionPart);\n            }\n            else if (minFractionPart != null && minFraction > maxFraction) {\n                maxFraction = minFraction;\n            }\n        }\n        roundNumber(parsedNumber, minFraction, maxFraction);\n        let digits = parsedNumber.digits;\n        let integerLen = parsedNumber.integerLen;\n        const exponent = parsedNumber.exponent;\n        let decimals = [];\n        isZero = digits.every(d => !d);\n        // pad zeros for small numbers\n        for (; integerLen < minInt; integerLen++) {\n            digits.unshift(0);\n        }\n        // pad zeros for small numbers\n        for (; integerLen < 0; integerLen++) {\n            digits.unshift(0);\n        }\n        // extract decimals digits\n        if (integerLen > 0) {\n            decimals = digits.splice(integerLen, digits.length);\n        }\n        else {\n            decimals = digits;\n            digits = [0];\n        }\n        // format the integer digits with grouping separators\n        const groups = [];\n        if (digits.length >= pattern.lgSize) {\n            groups.unshift(digits.splice(-pattern.lgSize, digits.length).join(''));\n        }\n        while (digits.length > pattern.gSize) {\n            groups.unshift(digits.splice(-pattern.gSize, digits.length).join(''));\n        }\n        if (digits.length) {\n            groups.unshift(digits.join(''));\n        }\n        formattedText = groups.join(getLocaleNumberSymbol(locale, groupSymbol));\n        // append the decimal digits\n        if (decimals.length) {\n            formattedText += getLocaleNumberSymbol(locale, decimalSymbol) + decimals.join('');\n        }\n        if (exponent) {\n            formattedText += getLocaleNumberSymbol(locale, NumberSymbol.Exponential) + '+' + exponent;\n        }\n    }\n    if (value < 0 && !isZero) {\n        formattedText = pattern.negPre + formattedText + pattern.negSuf;\n    }\n    else {\n        formattedText = pattern.posPre + formattedText + pattern.posSuf;\n    }\n    return formattedText;\n}\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a number as currency using locale rules.\n *\n * @param value The number to format.\n * @param locale A locale code for the locale format rules to use.\n * @param currency A string containing the currency symbol or its name,\n * such as \"$\" or \"Canadian Dollar\". Used in output string, but does not affect the operation\n * of the function.\n * @param currencyCode The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)\n * currency code, such as `USD` for the US dollar and `EUR` for the euro.\n * Used to determine the number of digits in the decimal part.\n * @param digitInfo Decimal representation options, specified by a string in the following format:\n * `{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}`. See `DecimalPipe` for more details.\n *\n * @returns The formatted currency value.\n *\n * @see `formatNumber()`\n * @see `DecimalPipe`\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction formatCurrency(value, locale, currency, currencyCode, digitsInfo) {\n    const format = getLocaleNumberFormat(locale, NumberFormatStyle.Currency);\n    const pattern = parseNumberFormat(format, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));\n    pattern.minFrac = getNumberOfCurrencyDigits(currencyCode);\n    pattern.maxFrac = pattern.minFrac;\n    const res = formatNumberToLocaleString(value, pattern, locale, NumberSymbol.CurrencyGroup, NumberSymbol.CurrencyDecimal, digitsInfo);\n    return res\n        .replace(CURRENCY_CHAR, currency)\n        // if we have 2 time the currency character, the second one is ignored\n        .replace(CURRENCY_CHAR, '')\n        // If there is a spacing between currency character and the value and\n        // the currency character is supressed by passing an empty string, the\n        // spacing character would remain as part of the string. Then we\n        // should remove it.\n        .trim();\n}\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a number as a percentage according to locale rules.\n *\n * @param value The number to format.\n * @param locale A locale code for the locale format rules to use.\n * @param digitInfo Decimal representation options, specified by a string in the following format:\n * `{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}`. See `DecimalPipe` for more details.\n *\n * @returns The formatted percentage value.\n *\n * @see `formatNumber()`\n * @see `DecimalPipe`\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n * @publicApi\n *\n */\nfunction formatPercent(value, locale, digitsInfo) {\n    const format = getLocaleNumberFormat(locale, NumberFormatStyle.Percent);\n    const pattern = parseNumberFormat(format, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));\n    const res = formatNumberToLocaleString(value, pattern, locale, NumberSymbol.Group, NumberSymbol.Decimal, digitsInfo, true);\n    return res.replace(new RegExp(PERCENT_CHAR, 'g'), getLocaleNumberSymbol(locale, NumberSymbol.PercentSign));\n}\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a number as text, with group sizing, separator, and other\n * parameters based on the locale.\n *\n * @param value The number to format.\n * @param locale A locale code for the locale format rules to use.\n * @param digitInfo Decimal representation options, specified by a string in the following format:\n * `{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}`. See `DecimalPipe` for more details.\n *\n * @returns The formatted text string.\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction formatNumber(value, locale, digitsInfo) {\n    const format = getLocaleNumberFormat(locale, NumberFormatStyle.Decimal);\n    const pattern = parseNumberFormat(format, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));\n    return formatNumberToLocaleString(value, pattern, locale, NumberSymbol.Group, NumberSymbol.Decimal, digitsInfo);\n}\nfunction parseNumberFormat(format, minusSign = '-') {\n    const p = {\n        minInt: 1,\n        minFrac: 0,\n        maxFrac: 0,\n        posPre: '',\n        posSuf: '',\n        negPre: '',\n        negSuf: '',\n        gSize: 0,\n        lgSize: 0\n    };\n    const patternParts = format.split(PATTERN_SEP);\n    const positive = patternParts[0];\n    const negative = patternParts[1];\n    const positiveParts = positive.indexOf(DECIMAL_SEP) !== -1 ?\n        positive.split(DECIMAL_SEP) :\n        [\n            positive.substring(0, positive.lastIndexOf(ZERO_CHAR) + 1),\n            positive.substring(positive.lastIndexOf(ZERO_CHAR) + 1)\n        ], integer = positiveParts[0], fraction = positiveParts[1] || '';\n    p.posPre = integer.substr(0, integer.indexOf(DIGIT_CHAR));\n    for (let i = 0; i < fraction.length; i++) {\n        const ch = fraction.charAt(i);\n        if (ch === ZERO_CHAR) {\n            p.minFrac = p.maxFrac = i + 1;\n        }\n        else if (ch === DIGIT_CHAR) {\n            p.maxFrac = i + 1;\n        }\n        else {\n            p.posSuf += ch;\n        }\n    }\n    const groups = integer.split(GROUP_SEP);\n    p.gSize = groups[1] ? groups[1].length : 0;\n    p.lgSize = (groups[2] || groups[1]) ? (groups[2] || groups[1]).length : 0;\n    if (negative) {\n        const trunkLen = positive.length - p.posPre.length - p.posSuf.length, pos = negative.indexOf(DIGIT_CHAR);\n        p.negPre = negative.substr(0, pos).replace(/'/g, '');\n        p.negSuf = negative.substr(pos + trunkLen).replace(/'/g, '');\n    }\n    else {\n        p.negPre = minusSign + p.posPre;\n        p.negSuf = p.posSuf;\n    }\n    return p;\n}\n// Transforms a parsed number into a percentage by multiplying it by 100\nfunction toPercent(parsedNumber) {\n    // if the number is 0, don't do anything\n    if (parsedNumber.digits[0] === 0) {\n        return parsedNumber;\n    }\n    // Getting the current number of decimals\n    const fractionLen = parsedNumber.digits.length - parsedNumber.integerLen;\n    if (parsedNumber.exponent) {\n        parsedNumber.exponent += 2;\n    }\n    else {\n        if (fractionLen === 0) {\n            parsedNumber.digits.push(0, 0);\n        }\n        else if (fractionLen === 1) {\n            parsedNumber.digits.push(0);\n        }\n        parsedNumber.integerLen += 2;\n    }\n    return parsedNumber;\n}\n/**\n * Parses a number.\n * Significant bits of this parse algorithm came from https://github.com/MikeMcl/big.js/\n */\nfunction parseNumber(num) {\n    let numStr = Math.abs(num) + '';\n    let exponent = 0, digits, integerLen;\n    let i, j, zeros;\n    // Decimal point?\n    if ((integerLen = numStr.indexOf(DECIMAL_SEP)) > -1) {\n        numStr = numStr.replace(DECIMAL_SEP, '');\n    }\n    // Exponential form?\n    if ((i = numStr.search(/e/i)) > 0) {\n        // Work out the exponent.\n        if (integerLen < 0)\n            integerLen = i;\n        integerLen += +numStr.slice(i + 1);\n        numStr = numStr.substring(0, i);\n    }\n    else if (integerLen < 0) {\n        // There was no decimal point or exponent so it is an integer.\n        integerLen = numStr.length;\n    }\n    // Count the number of leading zeros.\n    for (i = 0; numStr.charAt(i) === ZERO_CHAR; i++) { /* empty */\n    }\n    if (i === (zeros = numStr.length)) {\n        // The digits are all zero.\n        digits = [0];\n        integerLen = 1;\n    }\n    else {\n        // Count the number of trailing zeros\n        zeros--;\n        while (numStr.charAt(zeros) === ZERO_CHAR)\n            zeros--;\n        // Trailing zeros are insignificant so ignore them\n        integerLen -= i;\n        digits = [];\n        // Convert string to array of digits without leading/trailing zeros.\n        for (j = 0; i <= zeros; i++, j++) {\n            digits[j] = Number(numStr.charAt(i));\n        }\n    }\n    // If the number overflows the maximum allowed digits then use an exponent.\n    if (integerLen > MAX_DIGITS) {\n        digits = digits.splice(0, MAX_DIGITS - 1);\n        exponent = integerLen - 1;\n        integerLen = 1;\n    }\n    return { digits, exponent, integerLen };\n}\n/**\n * Round the parsed number to the specified number of decimal places\n * This function changes the parsedNumber in-place\n */\nfunction roundNumber(parsedNumber, minFrac, maxFrac) {\n    if (minFrac > maxFrac) {\n        throw new Error(`The minimum number of digits after fraction (${minFrac}) is higher than the maximum (${maxFrac}).`);\n    }\n    let digits = parsedNumber.digits;\n    let fractionLen = digits.length - parsedNumber.integerLen;\n    const fractionSize = Math.min(Math.max(minFrac, fractionLen), maxFrac);\n    // The index of the digit to where rounding is to occur\n    let roundAt = fractionSize + parsedNumber.integerLen;\n    let digit = digits[roundAt];\n    if (roundAt > 0) {\n        // Drop fractional digits beyond `roundAt`\n        digits.splice(Math.max(parsedNumber.integerLen, roundAt));\n        // Set non-fractional digits beyond `roundAt` to 0\n        for (let j = roundAt; j < digits.length; j++) {\n            digits[j] = 0;\n        }\n    }\n    else {\n        // We rounded to zero so reset the parsedNumber\n        fractionLen = Math.max(0, fractionLen);\n        parsedNumber.integerLen = 1;\n        digits.length = Math.max(1, roundAt = fractionSize + 1);\n        digits[0] = 0;\n        for (let i = 1; i < roundAt; i++)\n            digits[i] = 0;\n    }\n    if (digit >= 5) {\n        if (roundAt - 1 < 0) {\n            for (let k = 0; k > roundAt; k--) {\n                digits.unshift(0);\n                parsedNumber.integerLen++;\n            }\n            digits.unshift(1);\n            parsedNumber.integerLen++;\n        }\n        else {\n            digits[roundAt - 1]++;\n        }\n    }\n    // Pad out with zeros to get the required fraction length\n    for (; fractionLen < Math.max(0, fractionSize); fractionLen++)\n        digits.push(0);\n    let dropTrailingZeros = fractionSize !== 0;\n    // Minimal length = nb of decimals required + current nb of integers\n    // Any number besides that is optional and can be removed if it's a trailing 0\n    const minLen = minFrac + parsedNumber.integerLen;\n    // Do any carrying, e.g. a digit was rounded up to 10\n    const carry = digits.reduceRight(function (carry, d, i, digits) {\n        d = d + carry;\n        digits[i] = d < 10 ? d : d - 10; // d % 10\n        if (dropTrailingZeros) {\n            // Do not keep meaningless fractional trailing zeros (e.g. 15.52000 --> 15.52)\n            if (digits[i] === 0 && i >= minLen) {\n                digits.pop();\n            }\n            else {\n                dropTrailingZeros = false;\n            }\n        }\n        return d >= 10 ? 1 : 0; // Math.floor(d / 10);\n    }, 0);\n    if (carry) {\n        digits.unshift(carry);\n        parsedNumber.integerLen++;\n    }\n}\nfunction parseIntAutoRadix(text) {\n    const result = parseInt(text);\n    if (isNaN(result)) {\n        throw new Error('Invalid integer literal when parsing ' + text);\n    }\n    return result;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nclass NgLocalization {\n}\n/**\n * Returns the plural category for a given value.\n * - \"=value\" when the case exists,\n * - the plural category otherwise\n */\nfunction getPluralCategory(value, cases, ngLocalization, locale) {\n    let key = `=${value}`;\n    if (cases.indexOf(key) > -1) {\n        return key;\n    }\n    key = ngLocalization.getPluralCategory(value, locale);\n    if (cases.indexOf(key) > -1) {\n        return key;\n    }\n    if (cases.indexOf('other') > -1) {\n        return 'other';\n    }\n    throw new Error(`No plural message found for value \"${value}\"`);\n}\n/**\n * Returns the plural case based on the locale\n *\n * @publicApi\n */\nclass NgLocaleLocalization extends NgLocalization {\n    constructor(locale) {\n        super();\n        this.locale = locale;\n    }\n    getPluralCategory(value, locale) {\n        const plural = getLocalePluralCase(locale || this.locale)(value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n}\nNgLocaleLocalization.ɵfac = function NgLocaleLocalization_Factory(t) { return new (t || NgLocaleLocalization)(ɵngcc0.ɵɵinject(LOCALE_ID)); };\nNgLocaleLocalization.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgLocaleLocalization, factory: NgLocaleLocalization.ɵfac });\nNgLocaleLocalization.ctorParameters = () => [\n    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgLocaleLocalization, [{\n        type: Injectable\n    }], function () { return [{ type: String, decorators: [{\n                type: Inject,\n                args: [LOCALE_ID]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Register global data to be used internally by Angular. See the\n * [\"I18n guide\"](guide/i18n#i18n-pipes) to know how to import additional locale data.\n *\n * The signature registerLocaleData(data: any, extraData?: any) is deprecated since v5.1\n *\n * @publicApi\n */\nfunction registerLocaleData(data, localeId, extraData) {\n    return ɵregisterLocaleData(data, localeId, extraData);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction parseCookieValue(cookieStr, name) {\n    name = encodeURIComponent(name);\n    for (const cookie of cookieStr.split(';')) {\n        const eqIndex = cookie.indexOf('=');\n        const [cookieName, cookieValue] = eqIndex == -1 ? [cookie, ''] : [cookie.slice(0, eqIndex), cookie.slice(eqIndex + 1)];\n        if (cookieName.trim() === name) {\n            return decodeURIComponent(cookieValue);\n        }\n    }\n    return null;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @ngModule CommonModule\n *\n * @usageNotes\n * ```\n *     <some-element [ngClass]=\"'first second'\">...</some-element>\n *\n *     <some-element [ngClass]=\"['first', 'second']\">...</some-element>\n *\n *     <some-element [ngClass]=\"{'first': true, 'second': true, 'third': false}\">...</some-element>\n *\n *     <some-element [ngClass]=\"stringExp|arrayExp|objExp\">...</some-element>\n *\n *     <some-element [ngClass]=\"{'class1 class2 class3' : true}\">...</some-element>\n * ```\n *\n * @description\n *\n * Adds and removes CSS classes on an HTML element.\n *\n * The CSS classes are updated as follows, depending on the type of the expression evaluation:\n * - `string` - the CSS classes listed in the string (space delimited) are added,\n * - `Array` - the CSS classes declared as Array elements are added,\n * - `Object` - keys are CSS classes that get added when the expression given in the value\n *              evaluates to a truthy value, otherwise they are removed.\n *\n * @publicApi\n */\nclass NgClass {\n    constructor(_iterableDiffers, _keyValueDiffers, _ngEl, _renderer) {\n        this._iterableDiffers = _iterableDiffers;\n        this._keyValueDiffers = _keyValueDiffers;\n        this._ngEl = _ngEl;\n        this._renderer = _renderer;\n        this._iterableDiffer = null;\n        this._keyValueDiffer = null;\n        this._initialClasses = [];\n        this._rawClass = null;\n    }\n    set klass(value) {\n        this._removeClasses(this._initialClasses);\n        this._initialClasses = typeof value === 'string' ? value.split(/\\s+/) : [];\n        this._applyClasses(this._initialClasses);\n        this._applyClasses(this._rawClass);\n    }\n    set ngClass(value) {\n        this._removeClasses(this._rawClass);\n        this._applyClasses(this._initialClasses);\n        this._iterableDiffer = null;\n        this._keyValueDiffer = null;\n        this._rawClass = typeof value === 'string' ? value.split(/\\s+/) : value;\n        if (this._rawClass) {\n            if (ɵisListLikeIterable(this._rawClass)) {\n                this._iterableDiffer = this._iterableDiffers.find(this._rawClass).create();\n            }\n            else {\n                this._keyValueDiffer = this._keyValueDiffers.find(this._rawClass).create();\n            }\n        }\n    }\n    ngDoCheck() {\n        if (this._iterableDiffer) {\n            const iterableChanges = this._iterableDiffer.diff(this._rawClass);\n            if (iterableChanges) {\n                this._applyIterableChanges(iterableChanges);\n            }\n        }\n        else if (this._keyValueDiffer) {\n            const keyValueChanges = this._keyValueDiffer.diff(this._rawClass);\n            if (keyValueChanges) {\n                this._applyKeyValueChanges(keyValueChanges);\n            }\n        }\n    }\n    _applyKeyValueChanges(changes) {\n        changes.forEachAddedItem((record) => this._toggleClass(record.key, record.currentValue));\n        changes.forEachChangedItem((record) => this._toggleClass(record.key, record.currentValue));\n        changes.forEachRemovedItem((record) => {\n            if (record.previousValue) {\n                this._toggleClass(record.key, false);\n            }\n        });\n    }\n    _applyIterableChanges(changes) {\n        changes.forEachAddedItem((record) => {\n            if (typeof record.item === 'string') {\n                this._toggleClass(record.item, true);\n            }\n            else {\n                throw new Error(`NgClass can only toggle CSS classes expressed as strings, got ${ɵstringify(record.item)}`);\n            }\n        });\n        changes.forEachRemovedItem((record) => this._toggleClass(record.item, false));\n    }\n    /**\n     * Applies a collection of CSS classes to the DOM element.\n     *\n     * For argument of type Set and Array CSS class names contained in those collections are always\n     * added.\n     * For argument of type Map CSS class name in the map's key is toggled based on the value (added\n     * for truthy and removed for falsy).\n     */\n    _applyClasses(rawClassVal) {\n        if (rawClassVal) {\n            if (Array.isArray(rawClassVal) || rawClassVal instanceof Set) {\n                rawClassVal.forEach((klass) => this._toggleClass(klass, true));\n            }\n            else {\n                Object.keys(rawClassVal).forEach(klass => this._toggleClass(klass, !!rawClassVal[klass]));\n            }\n        }\n    }\n    /**\n     * Removes a collection of CSS classes from the DOM element. This is mostly useful for cleanup\n     * purposes.\n     */\n    _removeClasses(rawClassVal) {\n        if (rawClassVal) {\n            if (Array.isArray(rawClassVal) || rawClassVal instanceof Set) {\n                rawClassVal.forEach((klass) => this._toggleClass(klass, false));\n            }\n            else {\n                Object.keys(rawClassVal).forEach(klass => this._toggleClass(klass, false));\n            }\n        }\n    }\n    _toggleClass(klass, enabled) {\n        klass = klass.trim();\n        if (klass) {\n            klass.split(/\\s+/g).forEach(klass => {\n                if (enabled) {\n                    this._renderer.addClass(this._ngEl.nativeElement, klass);\n                }\n                else {\n                    this._renderer.removeClass(this._ngEl.nativeElement, klass);\n                }\n            });\n        }\n    }\n}\nNgClass.ɵfac = function NgClass_Factory(t) { return new (t || NgClass)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.KeyValueDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\nNgClass.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgClass, selectors: [[\"\", \"ngClass\", \"\"]], inputs: { klass: [\"class\", \"klass\"], ngClass: \"ngClass\" } });\nNgClass.ctorParameters = () => [\n    { type: IterableDiffers },\n    { type: KeyValueDiffers },\n    { type: ElementRef },\n    { type: Renderer2 }\n];\nNgClass.propDecorators = {\n    klass: [{ type: Input, args: ['class',] }],\n    ngClass: [{ type: Input, args: ['ngClass',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgClass, [{\n        type: Directive,\n        args: [{ selector: '[ngClass]' }]\n    }], function () { return [{ type: ɵngcc0.IterableDiffers }, { type: ɵngcc0.KeyValueDiffers }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { klass: [{\n            type: Input,\n            args: ['class']\n        }], ngClass: [{\n            type: Input,\n            args: ['ngClass']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Instantiates a single {@link Component} type and inserts its Host View into current View.\n * `NgComponentOutlet` provides a declarative approach for dynamic component creation.\n *\n * `NgComponentOutlet` requires a component type, if a falsy value is set the view will clear and\n * any existing component will get destroyed.\n *\n * @usageNotes\n *\n * ### Fine tune control\n *\n * You can control the component creation process by using the following optional attributes:\n *\n * * `ngComponentOutletInjector`: Optional custom {@link Injector} that will be used as parent for\n * the Component. Defaults to the injector of the current view container.\n *\n * * `ngComponentOutletContent`: Optional list of projectable nodes to insert into the content\n * section of the component, if exists.\n *\n * * `ngComponentOutletNgModuleFactory`: Optional module factory to allow dynamically loading other\n * module, then load a component from that module.\n *\n * ### Syntax\n *\n * Simple\n * ```\n * <ng-container *ngComponentOutlet=\"componentTypeExpression\"></ng-container>\n * ```\n *\n * Customized injector/content\n * ```\n * <ng-container *ngComponentOutlet=\"componentTypeExpression;\n *                                   injector: injectorExpression;\n *                                   content: contentNodesExpression;\">\n * </ng-container>\n * ```\n *\n * Customized ngModuleFactory\n * ```\n * <ng-container *ngComponentOutlet=\"componentTypeExpression;\n *                                   ngModuleFactory: moduleFactory;\">\n * </ng-container>\n * ```\n *\n * ### A simple example\n *\n * {@example common/ngComponentOutlet/ts/module.ts region='SimpleExample'}\n *\n * A more complete example with additional options:\n *\n * {@example common/ngComponentOutlet/ts/module.ts region='CompleteExample'}\n *\n * @publicApi\n * @ngModule CommonModule\n */\nclass NgComponentOutlet {\n    constructor(_viewContainerRef) {\n        this._viewContainerRef = _viewContainerRef;\n        this._componentRef = null;\n        this._moduleRef = null;\n    }\n    ngOnChanges(changes) {\n        this._viewContainerRef.clear();\n        this._componentRef = null;\n        if (this.ngComponentOutlet) {\n            const elInjector = this.ngComponentOutletInjector || this._viewContainerRef.parentInjector;\n            if (changes['ngComponentOutletNgModuleFactory']) {\n                if (this._moduleRef)\n                    this._moduleRef.destroy();\n                if (this.ngComponentOutletNgModuleFactory) {\n                    const parentModule = elInjector.get(NgModuleRef);\n                    this._moduleRef = this.ngComponentOutletNgModuleFactory.create(parentModule.injector);\n                }\n                else {\n                    this._moduleRef = null;\n                }\n            }\n            const componentFactoryResolver = this._moduleRef ? this._moduleRef.componentFactoryResolver :\n                elInjector.get(ComponentFactoryResolver);\n            const componentFactory = componentFactoryResolver.resolveComponentFactory(this.ngComponentOutlet);\n            this._componentRef = this._viewContainerRef.createComponent(componentFactory, this._viewContainerRef.length, elInjector, this.ngComponentOutletContent);\n        }\n    }\n    ngOnDestroy() {\n        if (this._moduleRef)\n            this._moduleRef.destroy();\n    }\n}\nNgComponentOutlet.ɵfac = function NgComponentOutlet_Factory(t) { return new (t || NgComponentOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nNgComponentOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgComponentOutlet, selectors: [[\"\", \"ngComponentOutlet\", \"\"]], inputs: { ngComponentOutlet: \"ngComponentOutlet\", ngComponentOutletInjector: \"ngComponentOutletInjector\", ngComponentOutletContent: \"ngComponentOutletContent\", ngComponentOutletNgModuleFactory: \"ngComponentOutletNgModuleFactory\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nNgComponentOutlet.ctorParameters = () => [\n    { type: ViewContainerRef }\n];\nNgComponentOutlet.propDecorators = {\n    ngComponentOutlet: [{ type: Input }],\n    ngComponentOutletInjector: [{ type: Input }],\n    ngComponentOutletContent: [{ type: Input }],\n    ngComponentOutletNgModuleFactory: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgComponentOutlet, [{\n        type: Directive,\n        args: [{ selector: '[ngComponentOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }]; }, { ngComponentOutlet: [{\n            type: Input\n        }], ngComponentOutletInjector: [{\n            type: Input\n        }], ngComponentOutletContent: [{\n            type: Input\n        }], ngComponentOutletNgModuleFactory: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nclass NgForOfContext {\n    constructor($implicit, ngForOf, index, count) {\n        this.$implicit = $implicit;\n        this.ngForOf = ngForOf;\n        this.index = index;\n        this.count = count;\n    }\n    get first() {\n        return this.index === 0;\n    }\n    get last() {\n        return this.index === this.count - 1;\n    }\n    get even() {\n        return this.index % 2 === 0;\n    }\n    get odd() {\n        return !this.even;\n    }\n}\n/**\n * A [structural directive](guide/structural-directives) that renders\n * a template for each item in a collection.\n * The directive is placed on an element, which becomes the parent\n * of the cloned templates.\n *\n * The `ngForOf` directive is generally used in the\n * [shorthand form](guide/structural-directives#the-asterisk--prefix) `*ngFor`.\n * In this form, the template to be rendered for each iteration is the content\n * of an anchor element containing the directive.\n *\n * The following example shows the shorthand syntax with some options,\n * contained in an `<li>` element.\n *\n * ```\n * <li *ngFor=\"let item of items; index as i; trackBy: trackByFn\">...</li>\n * ```\n *\n * The shorthand form expands into a long form that uses the `ngForOf` selector\n * on an `<ng-template>` element.\n * The content of the `<ng-template>` element is the `<li>` element that held the\n * short-form directive.\n *\n * Here is the expanded version of the short-form example.\n *\n * ```\n * <ng-template ngFor let-item [ngForOf]=\"items\" let-i=\"index\" [ngForTrackBy]=\"trackByFn\">\n *   <li>...</li>\n * </ng-template>\n * ```\n *\n * Angular automatically expands the shorthand syntax as it compiles the template.\n * The context for each embedded view is logically merged to the current component\n * context according to its lexical position.\n *\n * When using the shorthand syntax, Angular allows only [one structural directive\n * on an element](guide/structural-directives#one-structural-directive-per-host-element).\n * If you want to iterate conditionally, for example,\n * put the `*ngIf` on a container element that wraps the `*ngFor` element.\n * For futher discussion, see\n * [Structural Directives](guide/structural-directives#one-per-element).\n *\n * @usageNotes\n *\n * ### Local variables\n *\n * `NgForOf` provides exported values that can be aliased to local variables.\n * For example:\n *\n *  ```\n * <li *ngFor=\"let user of users; index as i; first as isFirst\">\n *    {{i}}/{{users.length}}. {{user}} <span *ngIf=\"isFirst\">default</span>\n * </li>\n * ```\n *\n * The following exported values can be aliased to local variables:\n *\n * - `$implicit: T`: The value of the individual items in the iterable (`ngForOf`).\n * - `ngForOf: NgIterable<T>`: The value of the iterable expression. Useful when the expression is\n * more complex then a property access, for example when using the async pipe (`userStreams |\n * async`).\n * - `index: number`: The index of the current item in the iterable.\n * - `count: number`: The length of the iterable.\n * - `first: boolean`: True when the item is the first item in the iterable.\n * - `last: boolean`: True when the item is the last item in the iterable.\n * - `even: boolean`: True when the item has an even index in the iterable.\n * - `odd: boolean`: True when the item has an odd index in the iterable.\n *\n * ### Change propagation\n *\n * When the contents of the iterator changes, `NgForOf` makes the corresponding changes to the DOM:\n *\n * * When an item is added, a new instance of the template is added to the DOM.\n * * When an item is removed, its template instance is removed from the DOM.\n * * When items are reordered, their respective templates are reordered in the DOM.\n *\n * Angular uses object identity to track insertions and deletions within the iterator and reproduce\n * those changes in the DOM. This has important implications for animations and any stateful\n * controls that are present, such as `<input>` elements that accept user input. Inserted rows can\n * be animated in, deleted rows can be animated out, and unchanged rows retain any unsaved state\n * such as user input.\n * For more on animations, see [Transitions and Triggers](guide/transition-and-triggers).\n *\n * The identities of elements in the iterator can change while the data does not.\n * This can happen, for example, if the iterator is produced from an RPC to the server, and that\n * RPC is re-run. Even if the data hasn't changed, the second response produces objects with\n * different identities, and Angular must tear down the entire DOM and rebuild it (as if all old\n * elements were deleted and all new elements inserted).\n *\n * To avoid this expensive operation, you can customize the default tracking algorithm.\n * by supplying the `trackBy` option to `NgForOf`.\n * `trackBy` takes a function that has two arguments: `index` and `item`.\n * If `trackBy` is given, Angular tracks changes by the return value of the function.\n *\n * @see [Structural Directives](guide/structural-directives)\n * @ngModule CommonModule\n * @publicApi\n */\nclass NgForOf {\n    constructor(_viewContainer, _template, _differs) {\n        this._viewContainer = _viewContainer;\n        this._template = _template;\n        this._differs = _differs;\n        this._ngForOf = null;\n        this._ngForOfDirty = true;\n        this._differ = null;\n    }\n    /**\n     * The value of the iterable expression, which can be used as a\n     * [template input variable](guide/structural-directives#template-input-variable).\n     */\n    set ngForOf(ngForOf) {\n        this._ngForOf = ngForOf;\n        this._ngForOfDirty = true;\n    }\n    /**\n     * A function that defines how to track changes for items in the iterable.\n     *\n     * When items are added, moved, or removed in the iterable,\n     * the directive must re-render the appropriate DOM nodes.\n     * To minimize churn in the DOM, only nodes that have changed\n     * are re-rendered.\n     *\n     * By default, the change detector assumes that\n     * the object instance identifies the node in the iterable.\n     * When this function is supplied, the directive uses\n     * the result of calling this function to identify the item node,\n     * rather than the identity of the object itself.\n     *\n     * The function receives two inputs,\n     * the iteration index and the associated node data.\n     */\n    set ngForTrackBy(fn) {\n        if (isDevMode() && fn != null && typeof fn !== 'function') {\n            // TODO(vicb): use a log service once there is a public one available\n            if (console && console.warn) {\n                console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}. ` +\n                    `See https://angular.io/api/common/NgForOf#change-propagation for more information.`);\n            }\n        }\n        this._trackByFn = fn;\n    }\n    get ngForTrackBy() {\n        return this._trackByFn;\n    }\n    /**\n     * A reference to the template that is stamped out for each item in the iterable.\n     * @see [template reference variable](guide/template-reference-variables)\n     */\n    set ngForTemplate(value) {\n        // TODO(TS2.1): make TemplateRef<Partial<NgForRowOf<T>>> once we move to TS v2.1\n        // The current type is too restrictive; a template that just uses index, for example,\n        // should be acceptable.\n        if (value) {\n            this._template = value;\n        }\n    }\n    /**\n     * Applies the changes when needed.\n     */\n    ngDoCheck() {\n        if (this._ngForOfDirty) {\n            this._ngForOfDirty = false;\n            // React on ngForOf changes only once all inputs have been initialized\n            const value = this._ngForOf;\n            if (!this._differ && value) {\n                try {\n                    this._differ = this._differs.find(value).create(this.ngForTrackBy);\n                }\n                catch (_a) {\n                    throw new Error(`Cannot find a differ supporting object '${value}' of type '${getTypeName(value)}'. NgFor only supports binding to Iterables such as Arrays.`);\n                }\n            }\n        }\n        if (this._differ) {\n            const changes = this._differ.diff(this._ngForOf);\n            if (changes)\n                this._applyChanges(changes);\n        }\n    }\n    _applyChanges(changes) {\n        const insertTuples = [];\n        changes.forEachOperation((item, adjustedPreviousIndex, currentIndex) => {\n            if (item.previousIndex == null) {\n                // NgForOf is never \"null\" or \"undefined\" here because the differ detected\n                // that a new item needs to be inserted from the iterable. This implies that\n                // there is an iterable value for \"_ngForOf\".\n                const view = this._viewContainer.createEmbeddedView(this._template, new NgForOfContext(null, this._ngForOf, -1, -1), currentIndex === null ? undefined : currentIndex);\n                const tuple = new RecordViewTuple(item, view);\n                insertTuples.push(tuple);\n            }\n            else if (currentIndex == null) {\n                this._viewContainer.remove(adjustedPreviousIndex === null ? undefined : adjustedPreviousIndex);\n            }\n            else if (adjustedPreviousIndex !== null) {\n                const view = this._viewContainer.get(adjustedPreviousIndex);\n                this._viewContainer.move(view, currentIndex);\n                const tuple = new RecordViewTuple(item, view);\n                insertTuples.push(tuple);\n            }\n        });\n        for (let i = 0; i < insertTuples.length; i++) {\n            this._perViewChange(insertTuples[i].view, insertTuples[i].record);\n        }\n        for (let i = 0, ilen = this._viewContainer.length; i < ilen; i++) {\n            const viewRef = this._viewContainer.get(i);\n            viewRef.context.index = i;\n            viewRef.context.count = ilen;\n            viewRef.context.ngForOf = this._ngForOf;\n        }\n        changes.forEachIdentityChange((record) => {\n            const viewRef = this._viewContainer.get(record.currentIndex);\n            viewRef.context.$implicit = record.item;\n        });\n    }\n    _perViewChange(view, record) {\n        view.context.$implicit = record.item;\n    }\n    /**\n     * Asserts the correct type of the context for the template that `NgForOf` will render.\n     *\n     * The presence of this method is a signal to the Ivy template type-check compiler that the\n     * `NgForOf` structural directive renders its template with a specific context type.\n     */\n    static ngTemplateContextGuard(dir, ctx) {\n        return true;\n    }\n}\nNgForOf.ɵfac = function NgForOf_Factory(t) { return new (t || NgForOf)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers)); };\nNgForOf.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgForOf, selectors: [[\"\", \"ngFor\", \"\", \"ngForOf\", \"\"]], inputs: { ngForOf: \"ngForOf\", ngForTrackBy: \"ngForTrackBy\", ngForTemplate: \"ngForTemplate\" } });\nNgForOf.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: TemplateRef },\n    { type: IterableDiffers }\n];\nNgForOf.propDecorators = {\n    ngForOf: [{ type: Input }],\n    ngForTrackBy: [{ type: Input }],\n    ngForTemplate: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgForOf, [{\n        type: Directive,\n        args: [{ selector: '[ngFor][ngForOf]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }]; }, { ngForOf: [{\n            type: Input\n        }], ngForTrackBy: [{\n            type: Input\n        }], ngForTemplate: [{\n            type: Input\n        }] }); })();\nclass RecordViewTuple {\n    constructor(record, view) {\n        this.record = record;\n        this.view = view;\n    }\n}\nfunction getTypeName(type) {\n    return type['name'] || typeof type;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A structural directive that conditionally includes a template based on the value of\n * an expression coerced to Boolean.\n * When the expression evaluates to true, Angular renders the template\n * provided in a `then` clause, and when  false or null,\n * Angular renders the template provided in an optional `else` clause. The default\n * template for the `else` clause is blank.\n *\n * A [shorthand form](guide/structural-directives#the-asterisk--prefix) of the directive,\n * `*ngIf=\"condition\"`, is generally used, provided\n * as an attribute of the anchor element for the inserted template.\n * Angular expands this into a more explicit version, in which the anchor element\n * is contained in an `<ng-template>` element.\n *\n * Simple form with shorthand syntax:\n *\n * ```\n * <div *ngIf=\"condition\">Content to render when condition is true.</div>\n * ```\n *\n * Simple form with expanded syntax:\n *\n * ```\n * <ng-template [ngIf]=\"condition\"><div>Content to render when condition is\n * true.</div></ng-template>\n * ```\n *\n * Form with an \"else\" block:\n *\n * ```\n * <div *ngIf=\"condition; else elseBlock\">Content to render when condition is true.</div>\n * <ng-template #elseBlock>Content to render when condition is false.</ng-template>\n * ```\n *\n * Shorthand form with \"then\" and \"else\" blocks:\n *\n * ```\n * <div *ngIf=\"condition; then thenBlock else elseBlock\"></div>\n * <ng-template #thenBlock>Content to render when condition is true.</ng-template>\n * <ng-template #elseBlock>Content to render when condition is false.</ng-template>\n * ```\n *\n * Form with storing the value locally:\n *\n * ```\n * <div *ngIf=\"condition as value; else elseBlock\">{{value}}</div>\n * <ng-template #elseBlock>Content to render when value is null.</ng-template>\n * ```\n *\n * @usageNotes\n *\n * The `*ngIf` directive is most commonly used to conditionally show an inline template,\n * as seen in the following  example.\n * The default `else` template is blank.\n *\n * {@example common/ngIf/ts/module.ts region='NgIfSimple'}\n *\n * ### Showing an alternative template using `else`\n *\n * To display a template when `expression` evaluates to false, use an `else` template\n * binding as shown in the following example.\n * The `else` binding points to an `<ng-template>`  element labeled `#elseBlock`.\n * The template can be defined anywhere in the component view, but is typically placed right after\n * `ngIf` for readability.\n *\n * {@example common/ngIf/ts/module.ts region='NgIfElse'}\n *\n * ### Using an external `then` template\n *\n * In the previous example, the then-clause template is specified inline, as the content of the\n * tag that contains the `ngIf` directive. You can also specify a template that is defined\n * externally, by referencing a labeled `<ng-template>` element. When you do this, you can\n * change which template to use at runtime, as shown in the following example.\n *\n * {@example common/ngIf/ts/module.ts region='NgIfThenElse'}\n *\n * ### Storing a conditional result in a variable\n *\n * You might want to show a set of properties from the same object. If you are waiting\n * for asynchronous data, the object can be undefined.\n * In this case, you can use `ngIf` and store the result of the condition in a local\n * variable as shown in the the following example.\n *\n * {@example common/ngIf/ts/module.ts region='NgIfAs'}\n *\n * This code uses only one `AsyncPipe`, so only one subscription is created.\n * The conditional statement stores the result of `userStream|async` in the local variable `user`.\n * You can then bind the local `user` repeatedly.\n *\n * The conditional displays the data only if `userStream` returns a value,\n * so you don't need to use the\n * [safe-navigation-operator](guide/template-expression-operators#safe-navigation-operator) (`?.`)\n * to guard against null values when accessing properties.\n * You can display an alternative template while waiting for the data.\n *\n * ### Shorthand syntax\n *\n * The shorthand syntax `*ngIf` expands into two separate template specifications\n * for the \"then\" and \"else\" clauses. For example, consider the following shorthand statement,\n * that is meant to show a loading page while waiting for data to be loaded.\n *\n * ```\n * <div class=\"hero-list\" *ngIf=\"heroes else loading\">\n *  ...\n * </div>\n *\n * <ng-template #loading>\n *  <div>Loading...</div>\n * </ng-template>\n * ```\n *\n * You can see that the \"else\" clause references the `<ng-template>`\n * with the `#loading` label, and the template for the \"then\" clause\n * is provided as the content of the anchor element.\n *\n * However, when Angular expands the shorthand syntax, it creates\n * another `<ng-template>` tag, with `ngIf` and `ngIfElse` directives.\n * The anchor element containing the template for the \"then\" clause becomes\n * the content of this unlabeled `<ng-template>` tag.\n *\n * ```\n * <ng-template [ngIf]=\"heroes\" [ngIfElse]=\"loading\">\n *  <div class=\"hero-list\">\n *   ...\n *  </div>\n * </ng-template>\n *\n * <ng-template #loading>\n *  <div>Loading...</div>\n * </ng-template>\n * ```\n *\n * The presence of the implicit template object has implications for the nesting of\n * structural directives. For more on this subject, see\n * [Structural Directives](https://angular.io/guide/structural-directives#one-per-element).\n *\n * @ngModule CommonModule\n * @publicApi\n */\nclass NgIf {\n    constructor(_viewContainer, templateRef) {\n        this._viewContainer = _viewContainer;\n        this._context = new NgIfContext();\n        this._thenTemplateRef = null;\n        this._elseTemplateRef = null;\n        this._thenViewRef = null;\n        this._elseViewRef = null;\n        this._thenTemplateRef = templateRef;\n    }\n    /**\n     * The Boolean expression to evaluate as the condition for showing a template.\n     */\n    set ngIf(condition) {\n        this._context.$implicit = this._context.ngIf = condition;\n        this._updateView();\n    }\n    /**\n     * A template to show if the condition expression evaluates to true.\n     */\n    set ngIfThen(templateRef) {\n        assertTemplate('ngIfThen', templateRef);\n        this._thenTemplateRef = templateRef;\n        this._thenViewRef = null; // clear previous view if any.\n        this._updateView();\n    }\n    /**\n     * A template to show if the condition expression evaluates to false.\n     */\n    set ngIfElse(templateRef) {\n        assertTemplate('ngIfElse', templateRef);\n        this._elseTemplateRef = templateRef;\n        this._elseViewRef = null; // clear previous view if any.\n        this._updateView();\n    }\n    _updateView() {\n        if (this._context.$implicit) {\n            if (!this._thenViewRef) {\n                this._viewContainer.clear();\n                this._elseViewRef = null;\n                if (this._thenTemplateRef) {\n                    this._thenViewRef =\n                        this._viewContainer.createEmbeddedView(this._thenTemplateRef, this._context);\n                }\n            }\n        }\n        else {\n            if (!this._elseViewRef) {\n                this._viewContainer.clear();\n                this._thenViewRef = null;\n                if (this._elseTemplateRef) {\n                    this._elseViewRef =\n                        this._viewContainer.createEmbeddedView(this._elseTemplateRef, this._context);\n                }\n            }\n        }\n    }\n    /**\n     * Asserts the correct type of the context for the template that `NgIf` will render.\n     *\n     * The presence of this method is a signal to the Ivy template type-check compiler that the\n     * `NgIf` structural directive renders its template with a specific context type.\n     */\n    static ngTemplateContextGuard(dir, ctx) {\n        return true;\n    }\n}\nNgIf.ɵfac = function NgIf_Factory(t) { return new (t || NgIf)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nNgIf.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgIf, selectors: [[\"\", \"ngIf\", \"\"]], inputs: { ngIf: \"ngIf\", ngIfThen: \"ngIfThen\", ngIfElse: \"ngIfElse\" } });\nNgIf.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: TemplateRef }\n];\nNgIf.propDecorators = {\n    ngIf: [{ type: Input }],\n    ngIfThen: [{ type: Input }],\n    ngIfElse: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgIf, [{\n        type: Directive,\n        args: [{ selector: '[ngIf]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.TemplateRef }]; }, { ngIf: [{\n            type: Input\n        }], ngIfThen: [{\n            type: Input\n        }], ngIfElse: [{\n            type: Input\n        }] }); })();\n/**\n * @publicApi\n */\nclass NgIfContext {\n    constructor() {\n        this.$implicit = null;\n        this.ngIf = null;\n    }\n}\nfunction assertTemplate(property, templateRef) {\n    const isTemplateRefOrNull = !!(!templateRef || templateRef.createEmbeddedView);\n    if (!isTemplateRefOrNull) {\n        throw new Error(`${property} must be a TemplateRef, but received '${ɵstringify(templateRef)}'.`);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass SwitchView {\n    constructor(_viewContainerRef, _templateRef) {\n        this._viewContainerRef = _viewContainerRef;\n        this._templateRef = _templateRef;\n        this._created = false;\n    }\n    create() {\n        this._created = true;\n        this._viewContainerRef.createEmbeddedView(this._templateRef);\n    }\n    destroy() {\n        this._created = false;\n        this._viewContainerRef.clear();\n    }\n    enforceState(created) {\n        if (created && !this._created) {\n            this.create();\n        }\n        else if (!created && this._created) {\n            this.destroy();\n        }\n    }\n}\n/**\n * @ngModule CommonModule\n *\n * @description\n * The `[ngSwitch]` directive on a container specifies an expression to match against.\n * The expressions to match are provided by `ngSwitchCase` directives on views within the container.\n * - Every view that matches is rendered.\n * - If there are no matches, a view with the `ngSwitchDefault` directive is rendered.\n * - Elements within the `[NgSwitch]` statement but outside of any `NgSwitchCase`\n * or `ngSwitchDefault` directive are preserved at the location.\n *\n * @usageNotes\n * Define a container element for the directive, and specify the switch expression\n * to match against as an attribute:\n *\n * ```\n * <container-element [ngSwitch]=\"switch_expression\">\n * ```\n *\n * Within the container, `*ngSwitchCase` statements specify the match expressions\n * as attributes. Include `*ngSwitchDefault` as the final case.\n *\n * ```\n * <container-element [ngSwitch]=\"switch_expression\">\n *    <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n * ...\n *    <some-element *ngSwitchDefault>...</some-element>\n * </container-element>\n * ```\n *\n * ### Usage Examples\n *\n * The following example shows how to use more than one case to display the same view:\n *\n * ```\n * <container-element [ngSwitch]=\"switch_expression\">\n *   <!-- the same view can be shown in more than one case -->\n *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n *   <some-element *ngSwitchCase=\"match_expression_2\">...</some-element>\n *   <some-other-element *ngSwitchCase=\"match_expression_3\">...</some-other-element>\n *   <!--default case when there are no matches -->\n *   <some-element *ngSwitchDefault>...</some-element>\n * </container-element>\n * ```\n *\n * The following example shows how cases can be nested:\n * ```\n * <container-element [ngSwitch]=\"switch_expression\">\n *       <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n *       <some-element *ngSwitchCase=\"match_expression_2\">...</some-element>\n *       <some-other-element *ngSwitchCase=\"match_expression_3\">...</some-other-element>\n *       <ng-container *ngSwitchCase=\"match_expression_3\">\n *         <!-- use a ng-container to group multiple root nodes -->\n *         <inner-element></inner-element>\n *         <inner-other-element></inner-other-element>\n *       </ng-container>\n *       <some-element *ngSwitchDefault>...</some-element>\n *     </container-element>\n * ```\n *\n * @publicApi\n * @see `NgSwitchCase`\n * @see `NgSwitchDefault`\n * @see [Structural Directives](guide/structural-directives)\n *\n */\nclass NgSwitch {\n    constructor() {\n        this._defaultUsed = false;\n        this._caseCount = 0;\n        this._lastCaseCheckIndex = 0;\n        this._lastCasesMatched = false;\n    }\n    set ngSwitch(newValue) {\n        this._ngSwitch = newValue;\n        if (this._caseCount === 0) {\n            this._updateDefaultCases(true);\n        }\n    }\n    /** @internal */\n    _addCase() {\n        return this._caseCount++;\n    }\n    /** @internal */\n    _addDefault(view) {\n        if (!this._defaultViews) {\n            this._defaultViews = [];\n        }\n        this._defaultViews.push(view);\n    }\n    /** @internal */\n    _matchCase(value) {\n        const matched = value == this._ngSwitch;\n        this._lastCasesMatched = this._lastCasesMatched || matched;\n        this._lastCaseCheckIndex++;\n        if (this._lastCaseCheckIndex === this._caseCount) {\n            this._updateDefaultCases(!this._lastCasesMatched);\n            this._lastCaseCheckIndex = 0;\n            this._lastCasesMatched = false;\n        }\n        return matched;\n    }\n    _updateDefaultCases(useDefault) {\n        if (this._defaultViews && useDefault !== this._defaultUsed) {\n            this._defaultUsed = useDefault;\n            for (let i = 0; i < this._defaultViews.length; i++) {\n                const defaultView = this._defaultViews[i];\n                defaultView.enforceState(useDefault);\n            }\n        }\n    }\n}\nNgSwitch.ɵfac = function NgSwitch_Factory(t) { return new (t || NgSwitch)(); };\nNgSwitch.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgSwitch, selectors: [[\"\", \"ngSwitch\", \"\"]], inputs: { ngSwitch: \"ngSwitch\" } });\nNgSwitch.propDecorators = {\n    ngSwitch: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgSwitch, [{\n        type: Directive,\n        args: [{ selector: '[ngSwitch]' }]\n    }], function () { return []; }, { ngSwitch: [{\n            type: Input\n        }] }); })();\n/**\n * @ngModule CommonModule\n *\n * @description\n * Provides a switch case expression to match against an enclosing `ngSwitch` expression.\n * When the expressions match, the given `NgSwitchCase` template is rendered.\n * If multiple match expressions match the switch expression value, all of them are displayed.\n *\n * @usageNotes\n *\n * Within a switch container, `*ngSwitchCase` statements specify the match expressions\n * as attributes. Include `*ngSwitchDefault` as the final case.\n *\n * ```\n * <container-element [ngSwitch]=\"switch_expression\">\n *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n *   ...\n *   <some-element *ngSwitchDefault>...</some-element>\n * </container-element>\n * ```\n *\n * Each switch-case statement contains an in-line HTML template or template reference\n * that defines the subtree to be selected if the value of the match expression\n * matches the value of the switch expression.\n *\n * Unlike JavaScript, which uses strict equality, Angular uses loose equality.\n * This means that the empty string, `\"\"` matches 0.\n *\n * @publicApi\n * @see `NgSwitch`\n * @see `NgSwitchDefault`\n *\n */\nclass NgSwitchCase {\n    constructor(viewContainer, templateRef, ngSwitch) {\n        this.ngSwitch = ngSwitch;\n        ngSwitch._addCase();\n        this._view = new SwitchView(viewContainer, templateRef);\n    }\n    /**\n     * Performs case matching. For internal use only.\n     */\n    ngDoCheck() {\n        this._view.enforceState(this.ngSwitch._matchCase(this.ngSwitchCase));\n    }\n}\nNgSwitchCase.ɵfac = function NgSwitchCase_Factory(t) { return new (t || NgSwitchCase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(NgSwitch, 1)); };\nNgSwitchCase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgSwitchCase, selectors: [[\"\", \"ngSwitchCase\", \"\"]], inputs: { ngSwitchCase: \"ngSwitchCase\" } });\nNgSwitchCase.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: TemplateRef },\n    { type: NgSwitch, decorators: [{ type: Host }] }\n];\nNgSwitchCase.propDecorators = {\n    ngSwitchCase: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgSwitchCase, [{\n        type: Directive,\n        args: [{ selector: '[ngSwitchCase]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.TemplateRef }, { type: NgSwitch, decorators: [{\n                type: Host\n            }] }]; }, { ngSwitchCase: [{\n            type: Input\n        }] }); })();\n/**\n * @ngModule CommonModule\n *\n * @description\n *\n * Creates a view that is rendered when no `NgSwitchCase` expressions\n * match the `NgSwitch` expression.\n * This statement should be the final case in an `NgSwitch`.\n *\n * @publicApi\n * @see `NgSwitch`\n * @see `NgSwitchCase`\n *\n */\nclass NgSwitchDefault {\n    constructor(viewContainer, templateRef, ngSwitch) {\n        ngSwitch._addDefault(new SwitchView(viewContainer, templateRef));\n    }\n}\nNgSwitchDefault.ɵfac = function NgSwitchDefault_Factory(t) { return new (t || NgSwitchDefault)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(NgSwitch, 1)); };\nNgSwitchDefault.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgSwitchDefault, selectors: [[\"\", \"ngSwitchDefault\", \"\"]] });\nNgSwitchDefault.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: TemplateRef },\n    { type: NgSwitch, decorators: [{ type: Host }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgSwitchDefault, [{\n        type: Directive,\n        args: [{ selector: '[ngSwitchDefault]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.TemplateRef }, { type: NgSwitch, decorators: [{\n                type: Host\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @ngModule CommonModule\n *\n * @usageNotes\n * ```\n * <some-element [ngPlural]=\"value\">\n *   <ng-template ngPluralCase=\"=0\">there is nothing</ng-template>\n *   <ng-template ngPluralCase=\"=1\">there is one</ng-template>\n *   <ng-template ngPluralCase=\"few\">there are a few</ng-template>\n * </some-element>\n * ```\n *\n * @description\n *\n * Adds / removes DOM sub-trees based on a numeric value. Tailored for pluralization.\n *\n * Displays DOM sub-trees that match the switch expression value, or failing that, DOM sub-trees\n * that match the switch expression's pluralization category.\n *\n * To use this directive you must provide a container element that sets the `[ngPlural]` attribute\n * to a switch expression. Inner elements with a `[ngPluralCase]` will display based on their\n * expression:\n * - if `[ngPluralCase]` is set to a value starting with `=`, it will only display if the value\n *   matches the switch expression exactly,\n * - otherwise, the view will be treated as a \"category match\", and will only display if exact\n *   value matches aren't found and the value maps to its category for the defined locale.\n *\n * See http://cldr.unicode.org/index/cldr-spec/plural-rules\n *\n * @publicApi\n */\nclass NgPlural {\n    constructor(_localization) {\n        this._localization = _localization;\n        this._caseViews = {};\n    }\n    set ngPlural(value) {\n        this._switchValue = value;\n        this._updateView();\n    }\n    addCase(value, switchView) {\n        this._caseViews[value] = switchView;\n    }\n    _updateView() {\n        this._clearViews();\n        const cases = Object.keys(this._caseViews);\n        const key = getPluralCategory(this._switchValue, cases, this._localization);\n        this._activateView(this._caseViews[key]);\n    }\n    _clearViews() {\n        if (this._activeView)\n            this._activeView.destroy();\n    }\n    _activateView(view) {\n        if (view) {\n            this._activeView = view;\n            this._activeView.create();\n        }\n    }\n}\nNgPlural.ɵfac = function NgPlural_Factory(t) { return new (t || NgPlural)(ɵngcc0.ɵɵdirectiveInject(NgLocalization)); };\nNgPlural.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgPlural, selectors: [[\"\", \"ngPlural\", \"\"]], inputs: { ngPlural: \"ngPlural\" } });\nNgPlural.ctorParameters = () => [\n    { type: NgLocalization }\n];\nNgPlural.propDecorators = {\n    ngPlural: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgPlural, [{\n        type: Directive,\n        args: [{ selector: '[ngPlural]' }]\n    }], function () { return [{ type: NgLocalization }]; }, { ngPlural: [{\n            type: Input\n        }] }); })();\n/**\n * @ngModule CommonModule\n *\n * @description\n *\n * Creates a view that will be added/removed from the parent {@link NgPlural} when the\n * given expression matches the plural expression according to CLDR rules.\n *\n * @usageNotes\n * ```\n * <some-element [ngPlural]=\"value\">\n *   <ng-template ngPluralCase=\"=0\">...</ng-template>\n *   <ng-template ngPluralCase=\"other\">...</ng-template>\n * </some-element>\n *```\n *\n * See {@link NgPlural} for more details and example.\n *\n * @publicApi\n */\nclass NgPluralCase {\n    constructor(value, template, viewContainer, ngPlural) {\n        this.value = value;\n        const isANumber = !isNaN(Number(value));\n        ngPlural.addCase(isANumber ? `=${value}` : value, new SwitchView(viewContainer, template));\n    }\n}\nNgPluralCase.ɵfac = function NgPluralCase_Factory(t) { return new (t || NgPluralCase)(ɵngcc0.ɵɵinjectAttribute('ngPluralCase'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(NgPlural, 1)); };\nNgPluralCase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgPluralCase, selectors: [[\"\", \"ngPluralCase\", \"\"]] });\nNgPluralCase.ctorParameters = () => [\n    { type: String, decorators: [{ type: Attribute, args: ['ngPluralCase',] }] },\n    { type: TemplateRef },\n    { type: ViewContainerRef },\n    { type: NgPlural, decorators: [{ type: Host }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgPluralCase, [{\n        type: Directive,\n        args: [{ selector: '[ngPluralCase]' }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Attribute,\n                args: ['ngPluralCase']\n            }] }, { type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ViewContainerRef }, { type: NgPlural, decorators: [{\n                type: Host\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @ngModule CommonModule\n *\n * @usageNotes\n *\n * Set the font of the containing element to the result of an expression.\n *\n * ```\n * <some-element [ngStyle]=\"{'font-style': styleExp}\">...</some-element>\n * ```\n *\n * Set the width of the containing element to a pixel value returned by an expression.\n *\n * ```\n * <some-element [ngStyle]=\"{'max-width.px': widthExp}\">...</some-element>\n * ```\n *\n * Set a collection of style values using an expression that returns key-value pairs.\n *\n * ```\n * <some-element [ngStyle]=\"objExp\">...</some-element>\n * ```\n *\n * @description\n *\n * An attribute directive that updates styles for the containing HTML element.\n * Sets one or more style properties, specified as colon-separated key-value pairs.\n * The key is a style name, with an optional `.<unit>` suffix\n * (such as 'top.px', 'font-style.em').\n * The value is an expression to be evaluated.\n * The resulting non-null value, expressed in the given unit,\n * is assigned to the given style property.\n * If the result of evaluation is null, the corresponding style is removed.\n *\n * @publicApi\n */\nclass NgStyle {\n    constructor(_ngEl, _differs, _renderer) {\n        this._ngEl = _ngEl;\n        this._differs = _differs;\n        this._renderer = _renderer;\n        this._ngStyle = null;\n        this._differ = null;\n    }\n    set ngStyle(values) {\n        this._ngStyle = values;\n        if (!this._differ && values) {\n            this._differ = this._differs.find(values).create();\n        }\n    }\n    ngDoCheck() {\n        if (this._differ) {\n            const changes = this._differ.diff(this._ngStyle);\n            if (changes) {\n                this._applyChanges(changes);\n            }\n        }\n    }\n    _setStyle(nameAndUnit, value) {\n        const [name, unit] = nameAndUnit.split('.');\n        value = value != null && unit ? `${value}${unit}` : value;\n        if (value != null) {\n            this._renderer.setStyle(this._ngEl.nativeElement, name, value);\n        }\n        else {\n            this._renderer.removeStyle(this._ngEl.nativeElement, name);\n        }\n    }\n    _applyChanges(changes) {\n        changes.forEachRemovedItem((record) => this._setStyle(record.key, null));\n        changes.forEachAddedItem((record) => this._setStyle(record.key, record.currentValue));\n        changes.forEachChangedItem((record) => this._setStyle(record.key, record.currentValue));\n    }\n}\nNgStyle.ɵfac = function NgStyle_Factory(t) { return new (t || NgStyle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.KeyValueDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\nNgStyle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgStyle, selectors: [[\"\", \"ngStyle\", \"\"]], inputs: { ngStyle: \"ngStyle\" } });\nNgStyle.ctorParameters = () => [\n    { type: ElementRef },\n    { type: KeyValueDiffers },\n    { type: Renderer2 }\n];\nNgStyle.propDecorators = {\n    ngStyle: [{ type: Input, args: ['ngStyle',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgStyle, [{\n        type: Directive,\n        args: [{ selector: '[ngStyle]' }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.KeyValueDiffers }, { type: ɵngcc0.Renderer2 }]; }, { ngStyle: [{\n            type: Input,\n            args: ['ngStyle']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @ngModule CommonModule\n *\n * @description\n *\n * Inserts an embedded view from a prepared `TemplateRef`.\n *\n * You can attach a context object to the `EmbeddedViewRef` by setting `[ngTemplateOutletContext]`.\n * `[ngTemplateOutletContext]` should be an object, the object's keys will be available for binding\n * by the local template `let` declarations.\n *\n * @usageNotes\n * ```\n * <ng-container *ngTemplateOutlet=\"templateRefExp; context: contextExp\"></ng-container>\n * ```\n *\n * Using the key `$implicit` in the context object will set its value as default.\n *\n * ### Example\n *\n * {@example common/ngTemplateOutlet/ts/module.ts region='NgTemplateOutlet'}\n *\n * @publicApi\n */\nclass NgTemplateOutlet {\n    constructor(_viewContainerRef) {\n        this._viewContainerRef = _viewContainerRef;\n        this._viewRef = null;\n        /**\n         * A context object to attach to the {@link EmbeddedViewRef}. This should be an\n         * object, the object's keys will be available for binding by the local template `let`\n         * declarations.\n         * Using the key `$implicit` in the context object will set its value as default.\n         */\n        this.ngTemplateOutletContext = null;\n        /**\n         * A string defining the template reference and optionally the context object for the template.\n         */\n        this.ngTemplateOutlet = null;\n    }\n    ngOnChanges(changes) {\n        const recreateView = this._shouldRecreateView(changes);\n        if (recreateView) {\n            const viewContainerRef = this._viewContainerRef;\n            if (this._viewRef) {\n                viewContainerRef.remove(viewContainerRef.indexOf(this._viewRef));\n            }\n            this._viewRef = this.ngTemplateOutlet ?\n                viewContainerRef.createEmbeddedView(this.ngTemplateOutlet, this.ngTemplateOutletContext) :\n                null;\n        }\n        else if (this._viewRef && this.ngTemplateOutletContext) {\n            this._updateExistingContext(this.ngTemplateOutletContext);\n        }\n    }\n    /**\n     * We need to re-create existing embedded view if:\n     * - templateRef has changed\n     * - context has changes\n     *\n     * We mark context object as changed when the corresponding object\n     * shape changes (new properties are added or existing properties are removed).\n     * In other words we consider context with the same properties as \"the same\" even\n     * if object reference changes (see https://github.com/angular/angular/issues/13407).\n     */\n    _shouldRecreateView(changes) {\n        const ctxChange = changes['ngTemplateOutletContext'];\n        return !!changes['ngTemplateOutlet'] || (ctxChange && this._hasContextShapeChanged(ctxChange));\n    }\n    _hasContextShapeChanged(ctxChange) {\n        const prevCtxKeys = Object.keys(ctxChange.previousValue || {});\n        const currCtxKeys = Object.keys(ctxChange.currentValue || {});\n        if (prevCtxKeys.length === currCtxKeys.length) {\n            for (let propName of currCtxKeys) {\n                if (prevCtxKeys.indexOf(propName) === -1) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        return true;\n    }\n    _updateExistingContext(ctx) {\n        for (let propName of Object.keys(ctx)) {\n            this._viewRef.context[propName] = this.ngTemplateOutletContext[propName];\n        }\n    }\n}\nNgTemplateOutlet.ɵfac = function NgTemplateOutlet_Factory(t) { return new (t || NgTemplateOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nNgTemplateOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgTemplateOutlet, selectors: [[\"\", \"ngTemplateOutlet\", \"\"]], inputs: { ngTemplateOutletContext: \"ngTemplateOutletContext\", ngTemplateOutlet: \"ngTemplateOutlet\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nNgTemplateOutlet.ctorParameters = () => [\n    { type: ViewContainerRef }\n];\nNgTemplateOutlet.propDecorators = {\n    ngTemplateOutletContext: [{ type: Input }],\n    ngTemplateOutlet: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgTemplateOutlet, [{\n        type: Directive,\n        args: [{ selector: '[ngTemplateOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }]; }, { ngTemplateOutletContext: [{\n            type: Input\n        }], ngTemplateOutlet: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A collection of Angular directives that are likely to be used in each and every Angular\n * application.\n */\nconst COMMON_DIRECTIVES = [\n    NgClass,\n    NgComponentOutlet,\n    NgForOf,\n    NgIf,\n    NgTemplateOutlet,\n    NgStyle,\n    NgSwitch,\n    NgSwitchCase,\n    NgSwitchDefault,\n    NgPlural,\n    NgPluralCase,\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction invalidPipeArgumentError(type, value) {\n    return Error(`InvalidPipeArgument: '${value}' for pipe '${ɵstringify(type)}'`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ObservableStrategy {\n    createSubscription(async, updateLatestValue) {\n        return async.subscribe({\n            next: updateLatestValue,\n            error: (e) => {\n                throw e;\n            }\n        });\n    }\n    dispose(subscription) {\n        subscription.unsubscribe();\n    }\n    onDestroy(subscription) {\n        subscription.unsubscribe();\n    }\n}\nclass PromiseStrategy {\n    createSubscription(async, updateLatestValue) {\n        return async.then(updateLatestValue, e => {\n            throw e;\n        });\n    }\n    dispose(subscription) { }\n    onDestroy(subscription) { }\n}\nconst _promiseStrategy = new PromiseStrategy();\nconst _observableStrategy = new ObservableStrategy();\n/**\n * @ngModule CommonModule\n * @description\n *\n * Unwraps a value from an asynchronous primitive.\n *\n * The `async` pipe subscribes to an `Observable` or `Promise` and returns the latest value it has\n * emitted. When a new value is emitted, the `async` pipe marks the component to be checked for\n * changes. When the component gets destroyed, the `async` pipe unsubscribes automatically to avoid\n * potential memory leaks.\n *\n * @usageNotes\n *\n * ### Examples\n *\n * This example binds a `Promise` to the view. Clicking the `Resolve` button resolves the\n * promise.\n *\n * {@example common/pipes/ts/async_pipe.ts region='AsyncPipePromise'}\n *\n * It's also possible to use `async` with Observables. The example below binds the `time` Observable\n * to the view. The Observable continuously updates the view with the current time.\n *\n * {@example common/pipes/ts/async_pipe.ts region='AsyncPipeObservable'}\n *\n * @publicApi\n */\nclass AsyncPipe {\n    constructor(_ref) {\n        this._ref = _ref;\n        this._latestValue = null;\n        this._subscription = null;\n        this._obj = null;\n        this._strategy = null;\n    }\n    ngOnDestroy() {\n        if (this._subscription) {\n            this._dispose();\n        }\n    }\n    transform(obj) {\n        if (!this._obj) {\n            if (obj) {\n                this._subscribe(obj);\n            }\n            return this._latestValue;\n        }\n        if (obj !== this._obj) {\n            this._dispose();\n            return this.transform(obj);\n        }\n        return this._latestValue;\n    }\n    _subscribe(obj) {\n        this._obj = obj;\n        this._strategy = this._selectStrategy(obj);\n        this._subscription = this._strategy.createSubscription(obj, (value) => this._updateLatestValue(obj, value));\n    }\n    _selectStrategy(obj) {\n        if (ɵisPromise(obj)) {\n            return _promiseStrategy;\n        }\n        if (ɵisObservable(obj)) {\n            return _observableStrategy;\n        }\n        throw invalidPipeArgumentError(AsyncPipe, obj);\n    }\n    _dispose() {\n        this._strategy.dispose(this._subscription);\n        this._latestValue = null;\n        this._subscription = null;\n        this._obj = null;\n    }\n    _updateLatestValue(async, value) {\n        if (async === this._obj) {\n            this._latestValue = value;\n            this._ref.markForCheck();\n        }\n    }\n}\nAsyncPipe.ɵfac = function AsyncPipe_Factory(t) { return new (t || AsyncPipe)(ɵngcc0.ɵɵinjectPipeChangeDetectorRef()); };\nAsyncPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: \"async\", type: AsyncPipe, pure: false });\nAsyncPipe.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AsyncPipe, [{\n        type: Pipe,\n        args: [{ name: 'async', pure: false }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Transforms text to all lower case.\n *\n * @see `UpperCasePipe`\n * @see `TitleCasePipe`\n * @usageNotes\n *\n * The following example defines a view that allows the user to enter\n * text, and then uses the pipe to convert the input text to all lower case.\n *\n * <code-example path=\"common/pipes/ts/lowerupper_pipe.ts\" region='LowerUpperPipe'></code-example>\n *\n * @ngModule CommonModule\n * @publicApi\n */\nclass LowerCasePipe {\n    /**\n     * @param value The string to transform to lower case.\n     */\n    transform(value) {\n        if (!value)\n            return value;\n        if (typeof value !== 'string') {\n            throw invalidPipeArgumentError(LowerCasePipe, value);\n        }\n        return value.toLowerCase();\n    }\n}\nLowerCasePipe.ɵfac = function LowerCasePipe_Factory(t) { return new (t || LowerCasePipe)(); };\nLowerCasePipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: \"lowercase\", type: LowerCasePipe, pure: true });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LowerCasePipe, [{\n        type: Pipe,\n        args: [{ name: 'lowercase' }]\n    }], null, null); })();\n//\n// Regex below matches any Unicode word and compatible with ES5. In ES2018 the same result\n// can be achieved by using /\\p{L}\\S*/gu and also known as Unicode Property Escapes\n// (http://2ality.com/2017/07/regexp-unicode-property-escapes.html). Since there is no\n// transpilation of this functionality down to ES5 without external tool, the only solution is\n// to use already transpiled form. Example can be found here -\n// https://mothereff.in/regexpu#input=var+regex+%3D+/%5Cp%7BL%7D/u%3B&unicodePropertyEscape=1\n//\nconst unicodeWordMatch = /(?:[A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312E\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE83\\uDE86-\\uDE89\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D])\\S*/g;\n/**\n * Transforms text to title case.\n * Capitalizes the first letter of each word and transforms the\n * rest of the word to lower case.\n * Words are delimited by any whitespace character, such as a space, tab, or line-feed character.\n *\n * @see `LowerCasePipe`\n * @see `UpperCasePipe`\n *\n * @usageNotes\n * The following example shows the result of transforming various strings into title case.\n *\n * <code-example path=\"common/pipes/ts/titlecase_pipe.ts\" region='TitleCasePipe'></code-example>\n *\n * @ngModule CommonModule\n * @publicApi\n */\nclass TitleCasePipe {\n    /**\n     * @param value The string to transform to title case.\n     */\n    transform(value) {\n        if (!value)\n            return value;\n        if (typeof value !== 'string') {\n            throw invalidPipeArgumentError(TitleCasePipe, value);\n        }\n        return value.replace(unicodeWordMatch, (txt => txt[0].toUpperCase() + txt.substr(1).toLowerCase()));\n    }\n}\nTitleCasePipe.ɵfac = function TitleCasePipe_Factory(t) { return new (t || TitleCasePipe)(); };\nTitleCasePipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: \"titlecase\", type: TitleCasePipe, pure: true });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TitleCasePipe, [{\n        type: Pipe,\n        args: [{ name: 'titlecase' }]\n    }], null, null); })();\n/**\n * Transforms text to all upper case.\n * @see `LowerCasePipe`\n * @see `TitleCasePipe`\n *\n * @ngModule CommonModule\n * @publicApi\n */\nclass UpperCasePipe {\n    /**\n     * @param value The string to transform to upper case.\n     */\n    transform(value) {\n        if (!value)\n            return value;\n        if (typeof value !== 'string') {\n            throw invalidPipeArgumentError(UpperCasePipe, value);\n        }\n        return value.toUpperCase();\n    }\n}\nUpperCasePipe.ɵfac = function UpperCasePipe_Factory(t) { return new (t || UpperCasePipe)(); };\nUpperCasePipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: \"uppercase\", type: UpperCasePipe, pure: true });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(UpperCasePipe, [{\n        type: Pipe,\n        args: [{ name: 'uppercase' }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// clang-format off\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a date value according to locale rules.\n *\n * Only the `en-US` locale data comes with Angular. To localize dates\n * in another language, you must import the corresponding locale data.\n * See the [I18n guide](guide/i18n#i18n-pipes) for more information.\n *\n * @see `formatDate()`\n *\n *\n * @usageNotes\n *\n * The result of this pipe is not reevaluated when the input is mutated. To avoid the need to\n * reformat the date on every change-detection cycle, treat the date as an immutable object\n * and change the reference when the pipe needs to run again.\n *\n * ### Pre-defined format options\n *\n * Examples are given in `en-US` locale.\n *\n * - `'short'`: equivalent to `'M/d/yy, h:mm a'` (`6/15/15, 9:03 AM`).\n * - `'medium'`: equivalent to `'MMM d, y, h:mm:ss a'` (`Jun 15, 2015, 9:03:01 AM`).\n * - `'long'`: equivalent to `'MMMM d, y, h:mm:ss a z'` (`June 15, 2015 at 9:03:01 AM\n * GMT+1`).\n * - `'full'`: equivalent to `'EEEE, MMMM d, y, h:mm:ss a zzzz'` (`Monday, June 15, 2015 at\n * 9:03:01 AM GMT+01:00`).\n * - `'shortDate'`: equivalent to `'M/d/yy'` (`6/15/15`).\n * - `'mediumDate'`: equivalent to `'MMM d, y'` (`Jun 15, 2015`).\n * - `'longDate'`: equivalent to `'MMMM d, y'` (`June 15, 2015`).\n * - `'fullDate'`: equivalent to `'EEEE, MMMM d, y'` (`Monday, June 15, 2015`).\n * - `'shortTime'`: equivalent to `'h:mm a'` (`9:03 AM`).\n * - `'mediumTime'`: equivalent to `'h:mm:ss a'` (`9:03:01 AM`).\n * - `'longTime'`: equivalent to `'h:mm:ss a z'` (`9:03:01 AM GMT+1`).\n * - `'fullTime'`: equivalent to `'h:mm:ss a zzzz'` (`9:03:01 AM GMT+01:00`).\n *\n * ### Custom format options\n *\n * You can construct a format string using symbols to specify the components\n * of a date-time value, as described in the following table.\n * Format details depend on the locale.\n * Fields marked with (*) are only available in the extra data set for the given locale.\n *\n *  | Field type         | Format      | Description                                                   | Example Value                                              |\n *  |--------------------|-------------|---------------------------------------------------------------|------------------------------------------------------------|\n *  | Era                | G, GG & GGG | Abbreviated                                                   | AD                                                         |\n *  |                    | GGGG        | Wide                                                          | Anno Domini                                                |\n *  |                    | GGGGG       | Narrow                                                        | A                                                          |\n *  | Year               | y           | Numeric: minimum digits                                       | 2, 20, 201, 2017, 20173                                    |\n *  |                    | yy          | Numeric: 2 digits + zero padded                               | 02, 20, 01, 17, 73                                         |\n *  |                    | yyy         | Numeric: 3 digits + zero padded                               | 002, 020, 201, 2017, 20173                                 |\n *  |                    | yyyy        | Numeric: 4 digits or more + zero padded                       | 0002, 0020, 0201, 2017, 20173                              |\n *  | Month              | M           | Numeric: 1 digit                                              | 9, 12                                                      |\n *  |                    | MM          | Numeric: 2 digits + zero padded                               | 09, 12                                                     |\n *  |                    | MMM         | Abbreviated                                                   | Sep                                                        |\n *  |                    | MMMM        | Wide                                                          | September                                                  |\n *  |                    | MMMMM       | Narrow                                                        | S                                                          |\n *  | Month standalone   | L           | Numeric: 1 digit                                              | 9, 12                                                      |\n *  |                    | LL          | Numeric: 2 digits + zero padded                               | 09, 12                                                     |\n *  |                    | LLL         | Abbreviated                                                   | Sep                                                        |\n *  |                    | LLLL        | Wide                                                          | September                                                  |\n *  |                    | LLLLL       | Narrow                                                        | S                                                          |\n *  | Week of year       | w           | Numeric: minimum digits                                       | 1... 53                                                    |\n *  |                    | ww          | Numeric: 2 digits + zero padded                               | 01... 53                                                   |\n *  | Week of month      | W           | Numeric: 1 digit                                              | 1... 5                                                     |\n *  | Day of month       | d           | Numeric: minimum digits                                       | 1                                                          |\n *  |                    | dd          | Numeric: 2 digits + zero padded                               | 01                                                          |\n *  | Week day           | E, EE & EEE | Abbreviated                                                   | Tue                                                        |\n *  |                    | EEEE        | Wide                                                          | Tuesday                                                    |\n *  |                    | EEEEE       | Narrow                                                        | T                                                          |\n *  |                    | EEEEEE      | Short                                                         | Tu                                                         |\n *  | Period             | a, aa & aaa | Abbreviated                                                   | am/pm or AM/PM                                             |\n *  |                    | aaaa        | Wide (fallback to `a` when missing)                           | ante meridiem/post meridiem                                |\n *  |                    | aaaaa       | Narrow                                                        | a/p                                                        |\n *  | Period*            | B, BB & BBB | Abbreviated                                                   | mid.                                                       |\n *  |                    | BBBB        | Wide                                                          | am, pm, midnight, noon, morning, afternoon, evening, night |\n *  |                    | BBBBB       | Narrow                                                        | md                                                         |\n *  | Period standalone* | b, bb & bbb | Abbreviated                                                   | mid.                                                       |\n *  |                    | bbbb        | Wide                                                          | am, pm, midnight, noon, morning, afternoon, evening, night |\n *  |                    | bbbbb       | Narrow                                                        | md                                                         |\n *  | Hour 1-12          | h           | Numeric: minimum digits                                       | 1, 12                                                      |\n *  |                    | hh          | Numeric: 2 digits + zero padded                               | 01, 12                                                     |\n *  | Hour 0-23          | H           | Numeric: minimum digits                                       | 0, 23                                                      |\n *  |                    | HH          | Numeric: 2 digits + zero padded                               | 00, 23                                                     |\n *  | Minute             | m           | Numeric: minimum digits                                       | 8, 59                                                      |\n *  |                    | mm          | Numeric: 2 digits + zero padded                               | 08, 59                                                     |\n *  | Second             | s           | Numeric: minimum digits                                       | 0... 59                                                    |\n *  |                    | ss          | Numeric: 2 digits + zero padded                               | 00... 59                                                   |\n *  | Fractional seconds | S           | Numeric: 1 digit                                              | 0... 9                                                     |\n *  |                    | SS          | Numeric: 2 digits + zero padded                               | 00... 99                                                   |\n *  |                    | SSS         | Numeric: 3 digits + zero padded (= milliseconds)              | 000... 999                                                 |\n *  | Zone               | z, zz & zzz | Short specific non location format (fallback to O)            | GMT-8                                                      |\n *  |                    | zzzz        | Long specific non location format (fallback to OOOO)          | GMT-08:00                                                  |\n *  |                    | Z, ZZ & ZZZ | ISO8601 basic format                                          | -0800                                                      |\n *  |                    | ZZZZ        | Long localized GMT format                                     | GMT-8:00                                                   |\n *  |                    | ZZZZZ       | ISO8601 extended format + Z indicator for offset 0 (= XXXXX)  | -08:00                                                     |\n *  |                    | O, OO & OOO | Short localized GMT format                                    | GMT-8                                                      |\n *  |                    | OOOO        | Long localized GMT format                                     | GMT-08:00                                                  |\n *\n * Note that timezone correction is not applied to an ISO string that has no time component, such as \"2016-09-19\"\n *\n * ### Format examples\n *\n * These examples transform a date into various formats,\n * assuming that `dateObj` is a JavaScript `Date` object for\n * year: 2015, month: 6, day: 15, hour: 21, minute: 43, second: 11,\n * given in the local time for the `en-US` locale.\n *\n * ```\n * {{ dateObj | date }}               // output is 'Jun 15, 2015'\n * {{ dateObj | date:'medium' }}      // output is 'Jun 15, 2015, 9:43:11 PM'\n * {{ dateObj | date:'shortTime' }}   // output is '9:43 PM'\n * {{ dateObj | date:'mm:ss' }}       // output is '43:11'\n * ```\n *\n * ### Usage example\n *\n * The following component uses a date pipe to display the current date in different formats.\n *\n * ```\n * @Component({\n *  selector: 'date-pipe',\n *  template: `<div>\n *    <p>Today is {{today | date}}</p>\n *    <p>Or if you prefer, {{today | date:'fullDate'}}</p>\n *    <p>The time is {{today | date:'h:mm a z'}}</p>\n *  </div>`\n * })\n * // Get the current date and time as a date-time value.\n * export class DatePipeComponent {\n *   today: number = Date.now();\n * }\n * ```\n *\n * @publicApi\n */\n// clang-format on\nclass DatePipe {\n    constructor(locale) {\n        this.locale = locale;\n    }\n    /**\n     * @param value The date expression: a `Date` object,  a number\n     * (milliseconds since UTC epoch), or an ISO string (https://www.w3.org/TR/NOTE-datetime).\n     * @param format The date/time components to include, using predefined options or a\n     * custom format string.\n     * @param timezone A timezone offset (such as `'+0430'`), or a standard\n     * UTC/GMT or continental US timezone abbreviation.\n     * When not supplied, uses the end-user's local system timezone.\n     * @param locale A locale code for the locale format rules to use.\n     * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.\n     * See [Setting your app locale](guide/i18n#setting-up-the-locale-of-your-app).\n     * @returns A date string in the desired format.\n     */\n    transform(value, format = 'mediumDate', timezone, locale) {\n        if (value == null || value === '' || value !== value)\n            return null;\n        try {\n            return formatDate(value, format, locale || this.locale, timezone);\n        }\n        catch (error) {\n            throw invalidPipeArgumentError(DatePipe, error.message);\n        }\n    }\n}\nDatePipe.ɵfac = function DatePipe_Factory(t) { return new (t || DatePipe)(ɵngcc0.ɵɵdirectiveInject(LOCALE_ID)); };\nDatePipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: \"date\", type: DatePipe, pure: true });\nDatePipe.ctorParameters = () => [\n    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DatePipe, [{\n        type: Pipe,\n        args: [{ name: 'date', pure: true }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Inject,\n                args: [LOCALE_ID]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst _INTERPOLATION_REGEXP = /#/g;\n/**\n * @ngModule CommonModule\n * @description\n *\n * Maps a value to a string that pluralizes the value according to locale rules.\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example common/pipes/ts/i18n_pipe.ts region='I18nPluralPipeComponent'}\n *\n * @publicApi\n */\nclass I18nPluralPipe {\n    constructor(_localization) {\n        this._localization = _localization;\n    }\n    /**\n     * @param value the number to be formatted\n     * @param pluralMap an object that mimics the ICU format, see\n     * http://userguide.icu-project.org/formatparse/messages.\n     * @param locale a `string` defining the locale to use (uses the current {@link LOCALE_ID} by\n     * default).\n     */\n    transform(value, pluralMap, locale) {\n        if (value == null)\n            return '';\n        if (typeof pluralMap !== 'object' || pluralMap === null) {\n            throw invalidPipeArgumentError(I18nPluralPipe, pluralMap);\n        }\n        const key = getPluralCategory(value, Object.keys(pluralMap), this._localization, locale);\n        return pluralMap[key].replace(_INTERPOLATION_REGEXP, value.toString());\n    }\n}\nI18nPluralPipe.ɵfac = function I18nPluralPipe_Factory(t) { return new (t || I18nPluralPipe)(ɵngcc0.ɵɵdirectiveInject(NgLocalization)); };\nI18nPluralPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: \"i18nPlural\", type: I18nPluralPipe, pure: true });\nI18nPluralPipe.ctorParameters = () => [\n    { type: NgLocalization }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(I18nPluralPipe, [{\n        type: Pipe,\n        args: [{ name: 'i18nPlural', pure: true }]\n    }], function () { return [{ type: NgLocalization }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @ngModule CommonModule\n * @description\n *\n * Generic selector that displays the string that matches the current value.\n *\n * If none of the keys of the `mapping` match the `value`, then the content\n * of the `other` key is returned when present, otherwise an empty string is returned.\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example common/pipes/ts/i18n_pipe.ts region='I18nSelectPipeComponent'}\n *\n * @publicApi\n */\nclass I18nSelectPipe {\n    /**\n     * @param value a string to be internationalized.\n     * @param mapping an object that indicates the text that should be displayed\n     * for different values of the provided `value`.\n     */\n    transform(value, mapping) {\n        if (value == null)\n            return '';\n        if (typeof mapping !== 'object' || typeof value !== 'string') {\n            throw invalidPipeArgumentError(I18nSelectPipe, mapping);\n        }\n        if (mapping.hasOwnProperty(value)) {\n            return mapping[value];\n        }\n        if (mapping.hasOwnProperty('other')) {\n            return mapping['other'];\n        }\n        return '';\n    }\n}\nI18nSelectPipe.ɵfac = function I18nSelectPipe_Factory(t) { return new (t || I18nSelectPipe)(); };\nI18nSelectPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: \"i18nSelect\", type: I18nSelectPipe, pure: true });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(I18nSelectPipe, [{\n        type: Pipe,\n        args: [{ name: 'i18nSelect', pure: true }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @ngModule CommonModule\n * @description\n *\n * Converts a value into its JSON-format representation.  Useful for debugging.\n *\n * @usageNotes\n *\n * The following component uses a JSON pipe to convert an object\n * to JSON format, and displays the string in both formats for comparison.\n *\n * {@example common/pipes/ts/json_pipe.ts region='JsonPipe'}\n *\n * @publicApi\n */\nclass JsonPipe {\n    /**\n     * @param value A value of any type to convert into a JSON-format string.\n     */\n    transform(value) {\n        return JSON.stringify(value, null, 2);\n    }\n}\nJsonPipe.ɵfac = function JsonPipe_Factory(t) { return new (t || JsonPipe)(); };\nJsonPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: \"json\", type: JsonPipe, pure: false });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JsonPipe, [{\n        type: Pipe,\n        args: [{ name: 'json', pure: false }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction makeKeyValuePair(key, value) {\n    return { key: key, value: value };\n}\n/**\n * @ngModule CommonModule\n * @description\n *\n * Transforms Object or Map into an array of key value pairs.\n *\n * The output array will be ordered by keys.\n * By default the comparator will be by Unicode point value.\n * You can optionally pass a compareFn if your keys are complex types.\n *\n * @usageNotes\n * ### Examples\n *\n * This examples show how an Object or a Map can be iterated by ngFor with the use of this keyvalue\n * pipe.\n *\n * {@example common/pipes/ts/keyvalue_pipe.ts region='KeyValuePipe'}\n *\n * @publicApi\n */\nclass KeyValuePipe {\n    constructor(differs) {\n        this.differs = differs;\n        this.keyValues = [];\n    }\n    transform(input, compareFn = defaultComparator) {\n        if (!input || (!(input instanceof Map) && typeof input !== 'object')) {\n            return null;\n        }\n        if (!this.differ) {\n            // make a differ for whatever type we've been passed in\n            this.differ = this.differs.find(input).create();\n        }\n        const differChanges = this.differ.diff(input);\n        if (differChanges) {\n            this.keyValues = [];\n            differChanges.forEachItem((r) => {\n                this.keyValues.push(makeKeyValuePair(r.key, r.currentValue));\n            });\n            this.keyValues.sort(compareFn);\n        }\n        return this.keyValues;\n    }\n}\nKeyValuePipe.ɵfac = function KeyValuePipe_Factory(t) { return new (t || KeyValuePipe)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.KeyValueDiffers)); };\nKeyValuePipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: \"keyvalue\", type: KeyValuePipe, pure: false });\nKeyValuePipe.ctorParameters = () => [\n    { type: KeyValueDiffers }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(KeyValuePipe, [{\n        type: Pipe,\n        args: [{ name: 'keyvalue', pure: false }]\n    }], function () { return [{ type: ɵngcc0.KeyValueDiffers }]; }, null); })();\nfunction defaultComparator(keyValueA, keyValueB) {\n    const a = keyValueA.key;\n    const b = keyValueB.key;\n    // if same exit with 0;\n    if (a === b)\n        return 0;\n    // make sure that undefined are at the end of the sort.\n    if (a === undefined)\n        return 1;\n    if (b === undefined)\n        return -1;\n    // make sure that nulls are at the end of the sort.\n    if (a === null)\n        return 1;\n    if (b === null)\n        return -1;\n    if (typeof a == 'string' && typeof b == 'string') {\n        return a < b ? -1 : 1;\n    }\n    if (typeof a == 'number' && typeof b == 'number') {\n        return a - b;\n    }\n    if (typeof a == 'boolean' && typeof b == 'boolean') {\n        return a < b ? -1 : 1;\n    }\n    // `a` and `b` are of different types. Compare their string values.\n    const aString = String(a);\n    const bString = String(b);\n    return aString == bString ? 0 : aString < bString ? -1 : 1;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @ngModule CommonModule\n * @description\n *\n * Transforms a number into a string,\n * formatted according to locale rules that determine group sizing and\n * separator, decimal-point character, and other locale-specific\n * configurations.\n *\n * If no parameters are specified, the function rounds off to the nearest value using this\n * [rounding method](https://en.wikibooks.org/wiki/Arithmetic/Rounding).\n * The behavior differs from that of the JavaScript ```Math.round()``` function.\n * In the following case for example, the pipe rounds down where\n * ```Math.round()``` rounds up:\n *\n * ```html\n * -2.5 | number:'1.0-0'\n * > -3\n * Math.round(-2.5)\n * > -2\n * ```\n *\n * @see `formatNumber()`\n *\n * @usageNotes\n * The following code shows how the pipe transforms numbers\n * into text strings, according to various format specifications,\n * where the caller's default locale is `en-US`.\n *\n * ### Example\n *\n * <code-example path=\"common/pipes/ts/number_pipe.ts\" region='NumberPipe'></code-example>\n *\n * @publicApi\n */\nclass DecimalPipe {\n    constructor(_locale) {\n        this._locale = _locale;\n    }\n    /**\n     * @param value The number to be formatted.\n     * @param digitsInfo Decimal representation options, specified by a string\n     * in the following format:<br>\n     * <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>.\n     *   - `minIntegerDigits`: The minimum number of integer digits before the decimal point.\n     * Default is `1`.\n     *   - `minFractionDigits`: The minimum number of digits after the decimal point.\n     * Default is `0`.\n     *   - `maxFractionDigits`: The maximum number of digits after the decimal point.\n     * Default is `3`.\n     * @param locale A locale code for the locale format rules to use.\n     * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.\n     * See [Setting your app locale](guide/i18n#setting-up-the-locale-of-your-app).\n     */\n    transform(value, digitsInfo, locale) {\n        if (isEmpty(value))\n            return null;\n        locale = locale || this._locale;\n        try {\n            const num = strToNumber(value);\n            return formatNumber(num, locale, digitsInfo);\n        }\n        catch (error) {\n            throw invalidPipeArgumentError(DecimalPipe, error.message);\n        }\n    }\n}\nDecimalPipe.ɵfac = function DecimalPipe_Factory(t) { return new (t || DecimalPipe)(ɵngcc0.ɵɵdirectiveInject(LOCALE_ID)); };\nDecimalPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: \"number\", type: DecimalPipe, pure: true });\nDecimalPipe.ctorParameters = () => [\n    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DecimalPipe, [{\n        type: Pipe,\n        args: [{ name: 'number' }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Inject,\n                args: [LOCALE_ID]\n            }] }]; }, null); })();\n/**\n * @ngModule CommonModule\n * @description\n *\n * Transforms a number to a percentage\n * string, formatted according to locale rules that determine group sizing and\n * separator, decimal-point character, and other locale-specific\n * configurations.\n *\n * @see `formatPercent()`\n *\n * @usageNotes\n * The following code shows how the pipe transforms numbers\n * into text strings, according to various format specifications,\n * where the caller's default locale is `en-US`.\n *\n * <code-example path=\"common/pipes/ts/percent_pipe.ts\" region='PercentPipe'></code-example>\n *\n * @publicApi\n */\nclass PercentPipe {\n    constructor(_locale) {\n        this._locale = _locale;\n    }\n    /**\n     *\n     * @param value The number to be formatted as a percentage.\n     * @param digitsInfo Decimal representation options, specified by a string\n     * in the following format:<br>\n     * <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>.\n     *   - `minIntegerDigits`: The minimum number of integer digits before the decimal point.\n     * Default is `1`.\n     *   - `minFractionDigits`: The minimum number of digits after the decimal point.\n     * Default is `0`.\n     *   - `maxFractionDigits`: The maximum number of digits after the decimal point.\n     * Default is `0`.\n     * @param locale A locale code for the locale format rules to use.\n     * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.\n     * See [Setting your app locale](guide/i18n#setting-up-the-locale-of-your-app).\n     */\n    transform(value, digitsInfo, locale) {\n        if (isEmpty(value))\n            return null;\n        locale = locale || this._locale;\n        try {\n            const num = strToNumber(value);\n            return formatPercent(num, locale, digitsInfo);\n        }\n        catch (error) {\n            throw invalidPipeArgumentError(PercentPipe, error.message);\n        }\n    }\n}\nPercentPipe.ɵfac = function PercentPipe_Factory(t) { return new (t || PercentPipe)(ɵngcc0.ɵɵdirectiveInject(LOCALE_ID)); };\nPercentPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: \"percent\", type: PercentPipe, pure: true });\nPercentPipe.ctorParameters = () => [\n    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PercentPipe, [{\n        type: Pipe,\n        args: [{ name: 'percent' }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Inject,\n                args: [LOCALE_ID]\n            }] }]; }, null); })();\n/**\n * @ngModule CommonModule\n * @description\n *\n * Transforms a number to a currency string, formatted according to locale rules\n * that determine group sizing and separator, decimal-point character,\n * and other locale-specific configurations.\n *\n * {@a currency-code-deprecation}\n * <div class=\"alert is-helpful\">\n *\n * **Deprecation notice:**\n *\n * The default currency code is currently always `USD` but this is deprecated from v9.\n *\n * **In v11 the default currency code will be taken from the current locale identified by\n * the `LOCAL_ID` token. See the [i18n guide](guide/i18n#setting-up-the-locale-of-your-app) for\n * more information.**\n *\n * If you need the previous behavior then set it by creating a `DEFAULT_CURRENCY_CODE` provider in\n * your application `NgModule`:\n *\n * ```ts\n * {provide: DEFAULT_CURRENCY_CODE, useValue: 'USD'}\n * ```\n *\n * </div>\n *\n * @see `getCurrencySymbol()`\n * @see `formatCurrency()`\n *\n * @usageNotes\n * The following code shows how the pipe transforms numbers\n * into text strings, according to various format specifications,\n * where the caller's default locale is `en-US`.\n *\n * <code-example path=\"common/pipes/ts/currency_pipe.ts\" region='CurrencyPipe'></code-example>\n *\n * @publicApi\n */\nclass CurrencyPipe {\n    constructor(_locale, _defaultCurrencyCode = 'USD') {\n        this._locale = _locale;\n        this._defaultCurrencyCode = _defaultCurrencyCode;\n    }\n    /**\n     *\n     * @param value The number to be formatted as currency.\n     * @param currencyCode The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code,\n     * such as `USD` for the US dollar and `EUR` for the euro. The default currency code can be\n     * configured using the `DEFAULT_CURRENCY_CODE` injection token.\n     * @param display The format for the currency indicator. One of the following:\n     *   - `code`: Show the code (such as `USD`).\n     *   - `symbol`(default): Show the symbol (such as `$`).\n     *   - `symbol-narrow`: Use the narrow symbol for locales that have two symbols for their\n     * currency.\n     * For example, the Canadian dollar CAD has the symbol `CA$` and the symbol-narrow `$`. If the\n     * locale has no narrow symbol, uses the standard symbol for the locale.\n     *   - String: Use the given string value instead of a code or a symbol.\n     * For example, an empty string will suppress the currency & symbol.\n     *   - Boolean (marked deprecated in v5): `true` for symbol and false for `code`.\n     *\n     * @param digitsInfo Decimal representation options, specified by a string\n     * in the following format:<br>\n     * <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>.\n     *   - `minIntegerDigits`: The minimum number of integer digits before the decimal point.\n     * Default is `1`.\n     *   - `minFractionDigits`: The minimum number of digits after the decimal point.\n     * Default is `2`.\n     *   - `maxFractionDigits`: The maximum number of digits after the decimal point.\n     * Default is `2`.\n     * If not provided, the number will be formatted with the proper amount of digits,\n     * depending on what the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) specifies.\n     * For example, the Canadian dollar has 2 digits, whereas the Chilean peso has none.\n     * @param locale A locale code for the locale format rules to use.\n     * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.\n     * See [Setting your app locale](guide/i18n#setting-up-the-locale-of-your-app).\n     */\n    transform(value, currencyCode, display = 'symbol', digitsInfo, locale) {\n        if (isEmpty(value))\n            return null;\n        locale = locale || this._locale;\n        if (typeof display === 'boolean') {\n            if (console && console.warn) {\n                console.warn(`Warning: the currency pipe has been changed in Angular v5. The symbolDisplay option (third parameter) is now a string instead of a boolean. The accepted values are \"code\", \"symbol\" or \"symbol-narrow\".`);\n            }\n            display = display ? 'symbol' : 'code';\n        }\n        let currency = currencyCode || this._defaultCurrencyCode;\n        if (display !== 'code') {\n            if (display === 'symbol' || display === 'symbol-narrow') {\n                currency = getCurrencySymbol(currency, display === 'symbol' ? 'wide' : 'narrow', locale);\n            }\n            else {\n                currency = display;\n            }\n        }\n        try {\n            const num = strToNumber(value);\n            return formatCurrency(num, locale, currency, currencyCode, digitsInfo);\n        }\n        catch (error) {\n            throw invalidPipeArgumentError(CurrencyPipe, error.message);\n        }\n    }\n}\nCurrencyPipe.ɵfac = function CurrencyPipe_Factory(t) { return new (t || CurrencyPipe)(ɵngcc0.ɵɵdirectiveInject(LOCALE_ID), ɵngcc0.ɵɵdirectiveInject(DEFAULT_CURRENCY_CODE)); };\nCurrencyPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: \"currency\", type: CurrencyPipe, pure: true });\nCurrencyPipe.ctorParameters = () => [\n    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] },\n    { type: String, decorators: [{ type: Inject, args: [DEFAULT_CURRENCY_CODE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CurrencyPipe, [{\n        type: Pipe,\n        args: [{ name: 'currency' }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Inject,\n                args: [LOCALE_ID]\n            }] }, { type: String, decorators: [{\n                type: Inject,\n                args: [DEFAULT_CURRENCY_CODE]\n            }] }]; }, null); })();\nfunction isEmpty(value) {\n    return value == null || value === '' || value !== value;\n}\n/**\n * Transforms a string into a number (if needed).\n */\nfunction strToNumber(value) {\n    // Convert strings to numbers\n    if (typeof value === 'string' && !isNaN(Number(value) - parseFloat(value))) {\n        return Number(value);\n    }\n    if (typeof value !== 'number') {\n        throw new Error(`${value} is not a number`);\n    }\n    return value;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @ngModule CommonModule\n * @description\n *\n * Creates a new `Array` or `String` containing a subset (slice) of the elements.\n *\n * @usageNotes\n *\n * All behavior is based on the expected behavior of the JavaScript API `Array.prototype.slice()`\n * and `String.prototype.slice()`.\n *\n * When operating on an `Array`, the returned `Array` is always a copy even when all\n * the elements are being returned.\n *\n * When operating on a blank value, the pipe returns the blank value.\n *\n * ### List Example\n *\n * This `ngFor` example:\n *\n * {@example common/pipes/ts/slice_pipe.ts region='SlicePipe_list'}\n *\n * produces the following:\n *\n * ```html\n * <li>b</li>\n * <li>c</li>\n * ```\n *\n * ### String Examples\n *\n * {@example common/pipes/ts/slice_pipe.ts region='SlicePipe_string'}\n *\n * @publicApi\n */\nclass SlicePipe {\n    transform(value, start, end) {\n        if (value == null)\n            return value;\n        if (!this.supports(value)) {\n            throw invalidPipeArgumentError(SlicePipe, value);\n        }\n        return value.slice(start, end);\n    }\n    supports(obj) {\n        return typeof obj === 'string' || Array.isArray(obj);\n    }\n}\nSlicePipe.ɵfac = function SlicePipe_Factory(t) { return new (t || SlicePipe)(); };\nSlicePipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: \"slice\", type: SlicePipe, pure: false });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SlicePipe, [{\n        type: Pipe,\n        args: [{ name: 'slice', pure: false }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A collection of Angular pipes that are likely to be used in each and every application.\n */\nconst COMMON_PIPES = [\n    AsyncPipe,\n    UpperCasePipe,\n    LowerCasePipe,\n    JsonPipe,\n    SlicePipe,\n    DecimalPipe,\n    PercentPipe,\n    TitleCasePipe,\n    CurrencyPipe,\n    DatePipe,\n    I18nPluralPipe,\n    I18nSelectPipe,\n    KeyValuePipe,\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This does not contain the location providers,\n// as they need some platform specific implementations to work.\n/**\n * Exports all the basic Angular directives and pipes,\n * such as `NgIf`, `NgForOf`, `DecimalPipe`, and so on.\n * Re-exported by `BrowserModule`, which is included automatically in the root\n * `AppModule` when you create a new app with the CLI `new` command.\n *\n * * The `providers` options configure the NgModule's injector to provide\n * localization dependencies to members.\n * * The `exports` options make the declared directives and pipes available for import\n * by other NgModules.\n *\n * @publicApi\n */\nclass CommonModule {\n}\nCommonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CommonModule });\nCommonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CommonModule_Factory(t) { return new (t || CommonModule)(); }, providers: [\n        { provide: NgLocalization, useClass: NgLocaleLocalization },\n    ] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CommonModule, { declarations: [NgClass, NgComponentOutlet, NgForOf, NgIf, NgTemplateOutlet, NgStyle, NgSwitch, NgSwitchCase, NgSwitchDefault, NgPlural, NgPluralCase, AsyncPipe, UpperCasePipe, LowerCasePipe, JsonPipe, SlicePipe, DecimalPipe, PercentPipe, TitleCasePipe, CurrencyPipe, DatePipe, I18nPluralPipe, I18nSelectPipe, KeyValuePipe], exports: [NgClass, NgComponentOutlet, NgForOf, NgIf, NgTemplateOutlet, NgStyle, NgSwitch, NgSwitchCase, NgSwitchDefault, NgPlural, NgPluralCase, AsyncPipe, UpperCasePipe, LowerCasePipe, JsonPipe, SlicePipe, DecimalPipe, PercentPipe, TitleCasePipe, CurrencyPipe, DatePipe, I18nPluralPipe, I18nSelectPipe, KeyValuePipe] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CommonModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [COMMON_DIRECTIVES, COMMON_PIPES],\n                exports: [COMMON_DIRECTIVES, COMMON_PIPES],\n                providers: [\n                    { provide: NgLocalization, useClass: NgLocaleLocalization },\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst PLATFORM_BROWSER_ID = 'browser';\nconst PLATFORM_SERVER_ID = 'server';\nconst PLATFORM_WORKER_APP_ID = 'browserWorkerApp';\nconst PLATFORM_WORKER_UI_ID = 'browserWorkerUi';\n/**\n * Returns whether a platform id represents a browser platform.\n * @publicApi\n */\nfunction isPlatformBrowser(platformId) {\n    return platformId === PLATFORM_BROWSER_ID;\n}\n/**\n * Returns whether a platform id represents a server platform.\n * @publicApi\n */\nfunction isPlatformServer(platformId) {\n    return platformId === PLATFORM_SERVER_ID;\n}\n/**\n * Returns whether a platform id represents a web worker app platform.\n * @publicApi\n */\nfunction isPlatformWorkerApp(platformId) {\n    return platformId === PLATFORM_WORKER_APP_ID;\n}\n/**\n * Returns whether a platform id represents a web worker UI platform.\n * @publicApi\n */\nfunction isPlatformWorkerUi(platformId) {\n    return platformId === PLATFORM_WORKER_UI_ID;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('10.0.11');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines a scroll position manager. Implemented by `BrowserViewportScroller`.\n *\n * @publicApi\n */\nclass ViewportScroller {\n}\n// De-sugared tree-shakable injection\n// See #23917\n/** @nocollapse */\nViewportScroller.ɵprov = ɵɵdefineInjectable({\n    token: ViewportScroller,\n    providedIn: 'root',\n    factory: () => new BrowserViewportScroller(ɵɵinject(DOCUMENT), window, ɵɵinject(ErrorHandler))\n});\n/**\n * Manages the scroll position for a browser window.\n */\nclass BrowserViewportScroller {\n    constructor(document, window, errorHandler) {\n        this.document = document;\n        this.window = window;\n        this.errorHandler = errorHandler;\n        this.offset = () => [0, 0];\n    }\n    /**\n     * Configures the top offset used when scrolling to an anchor.\n     * @param offset A position in screen coordinates (a tuple with x and y values)\n     * or a function that returns the top offset position.\n     *\n     */\n    setOffset(offset) {\n        if (Array.isArray(offset)) {\n            this.offset = () => offset;\n        }\n        else {\n            this.offset = offset;\n        }\n    }\n    /**\n     * Retrieves the current scroll position.\n     * @returns The position in screen coordinates.\n     */\n    getScrollPosition() {\n        if (this.supportsScrolling()) {\n            return [this.window.scrollX, this.window.scrollY];\n        }\n        else {\n            return [0, 0];\n        }\n    }\n    /**\n     * Sets the scroll position.\n     * @param position The new position in screen coordinates.\n     */\n    scrollToPosition(position) {\n        if (this.supportsScrolling()) {\n            this.window.scrollTo(position[0], position[1]);\n        }\n    }\n    /**\n     * Scrolls to an anchor element.\n     * @param anchor The ID of the anchor element.\n     */\n    scrollToAnchor(anchor) {\n        if (this.supportsScrolling()) {\n            const elSelected = this.document.getElementById(anchor) || this.document.getElementsByName(anchor)[0];\n            if (elSelected) {\n                this.scrollToElement(elSelected);\n            }\n        }\n    }\n    /**\n     * Disables automatic scroll restoration provided by the browser.\n     */\n    setHistoryScrollRestoration(scrollRestoration) {\n        if (this.supportScrollRestoration()) {\n            const history = this.window.history;\n            if (history && history.scrollRestoration) {\n                history.scrollRestoration = scrollRestoration;\n            }\n        }\n    }\n    scrollToElement(el) {\n        const rect = el.getBoundingClientRect();\n        const left = rect.left + this.window.pageXOffset;\n        const top = rect.top + this.window.pageYOffset;\n        const offset = this.offset();\n        this.window.scrollTo(left - offset[0], top - offset[1]);\n    }\n    /**\n     * We only support scroll restoration when we can get a hold of window.\n     * This means that we do not support this behavior when running in a web worker.\n     *\n     * Lifting this restriction right now would require more changes in the dom adapter.\n     * Since webworkers aren't widely used, we will lift it once RouterScroller is\n     * battle-tested.\n     */\n    supportScrollRestoration() {\n        try {\n            if (!this.window || !this.window.scrollTo) {\n                return false;\n            }\n            // The `scrollRestoration` property could be on the `history` instance or its prototype.\n            const scrollRestorationDescriptor = getScrollRestorationProperty(this.window.history) ||\n                getScrollRestorationProperty(Object.getPrototypeOf(this.window.history));\n            // We can write to the `scrollRestoration` property if it is a writable data field or it has a\n            // setter function.\n            return !!scrollRestorationDescriptor &&\n                !!(scrollRestorationDescriptor.writable || scrollRestorationDescriptor.set);\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n    supportsScrolling() {\n        try {\n            return !!this.window.scrollTo;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n}\nfunction getScrollRestorationProperty(obj) {\n    return Object.getOwnPropertyDescriptor(obj, 'scrollRestoration');\n}\n/**\n * Provides an empty implementation of the viewport scroller. This will\n * live in @angular/common as it will be used by both platform-server and platform-webworker.\n */\nclass NullViewportScroller {\n    /**\n     * Empty implementation\n     */\n    setOffset(offset) { }\n    /**\n     * Empty implementation\n     */\n    getScrollPosition() {\n        return [0, 0];\n    }\n    /**\n     * Empty implementation\n     */\n    scrollToPosition(position) { }\n    /**\n     * Empty implementation\n     */\n    scrollToAnchor(anchor) { }\n    /**\n     * Empty implementation\n     */\n    setHistoryScrollRestoration(scrollRestoration) { }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { APP_BASE_HREF, AsyncPipe, CommonModule, CurrencyPipe, DOCUMENT, DatePipe, DecimalPipe, FormStyle, FormatWidth, HashLocationStrategy, I18nPluralPipe, I18nSelectPipe, JsonPipe, KeyValuePipe, LOCATION_INITIALIZED, Location, LocationStrategy, LowerCasePipe, NgClass, NgComponentOutlet, NgForOf, NgForOfContext, NgIf, NgIfContext, NgLocaleLocalization, NgLocalization, NgPlural, NgPluralCase, NgStyle, NgSwitch, NgSwitchCase, NgSwitchDefault, NgTemplateOutlet, NumberFormatStyle, NumberSymbol, PathLocationStrategy, PercentPipe, PlatformLocation, Plural, SlicePipe, TitleCasePipe, TranslationWidth, UpperCasePipe, VERSION, ViewportScroller, WeekDay, formatCurrency, formatDate, formatNumber, formatPercent, getCurrencySymbol, getLocaleCurrencyCode, getLocaleCurrencyName, getLocaleCurrencySymbol, getLocaleDateFormat, getLocaleDateTimeFormat, getLocaleDayNames, getLocaleDayPeriods, getLocaleDirection, getLocaleEraNames, getLocaleExtraDayPeriodRules, getLocaleExtraDayPeriods, getLocaleFirstDayOfWeek, getLocaleId, getLocaleMonthNames, getLocaleNumberFormat, getLocaleNumberSymbol, getLocalePluralCase, getLocaleTimeFormat, getLocaleWeekEndRange, getNumberOfCurrencyDigits, isPlatformBrowser, isPlatformServer, isPlatformWorkerApp, isPlatformWorkerUi, registerLocaleData, BrowserPlatformLocation as ɵBrowserPlatformLocation, DomAdapter as ɵDomAdapter, NullViewportScroller as ɵNullViewportScroller, PLATFORM_BROWSER_ID as ɵPLATFORM_BROWSER_ID, PLATFORM_SERVER_ID as ɵPLATFORM_SERVER_ID, PLATFORM_WORKER_APP_ID as ɵPLATFORM_WORKER_APP_ID, PLATFORM_WORKER_UI_ID as ɵPLATFORM_WORKER_UI_ID, useBrowserPlatformLocation as ɵangular_packages_common_common_a, createBrowserPlatformLocation as ɵangular_packages_common_common_b, createLocation as ɵangular_packages_common_common_c, provideLocationStrategy as ɵangular_packages_common_common_d, COMMON_DIRECTIVES as ɵangular_packages_common_common_e, COMMON_PIPES as ɵangular_packages_common_common_f, getDOM as ɵgetDOM, parseCookieValue as ɵparseCookieValue, setRootDomAdapter as ɵsetRootDomAdapter };\n\n//# sourceMappingURL=common.js.map","/**\n * @license Angular v10.0.11\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { ɵDomAdapter, ɵsetRootDomAdapter, ɵparseCookieValue, ɵgetDOM, DOCUMENT, ɵPLATFORM_BROWSER_ID, CommonModule } from '@angular/common';\nimport * as ɵngcc0 from '@angular/core';\nexport { ɵgetDOM } from '@angular/common';\nimport { ɵglobal, InjectionToken, ApplicationInitStatus, APP_INITIALIZER, Injector, setTestabilityGetter, ApplicationRef, NgZone, ɵgetDebugNodeR2, NgProbeToken, Optional, Injectable, Inject, ViewEncapsulation, APP_ID, RendererStyleFlags2, ɵConsole, NgModule, ɵɵdefineInjectable, ɵɵinject, forwardRef, SecurityContext, ɵallowSanitizationBypassAndThrow, ɵunwrapSafeValue, ɵgetSanitizationBypassType, ɵ_sanitizeUrl, ɵ_sanitizeHtml, ɵbypassSanitizationTrustHtml, ɵbypassSanitizationTrustStyle, ɵbypassSanitizationTrustScript, ɵbypassSanitizationTrustUrl, ɵbypassSanitizationTrustResourceUrl, INJECTOR, ErrorHandler, ɵsetDocument, PLATFORM_ID, PLATFORM_INITIALIZER, Sanitizer, createPlatformFactory, platformCore, ɵINJECTOR_SCOPE, RendererFactory2, Testability, ApplicationModule, SkipSelf, Version } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides DOM operations in any browser environment.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nclass GenericBrowserDomAdapter extends ɵDomAdapter {\n    constructor() {\n        super();\n    }\n    supportsDOMEvents() {\n        return true;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ɵ0 = () => {\n    if (ɵglobal['Node']) {\n        return ɵglobal['Node'].prototype.contains || function (node) {\n            return !!(this.compareDocumentPosition(node) & 16);\n        };\n    }\n    return undefined;\n};\nconst nodeContains = (ɵ0)();\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n/* tslint:disable:requireParameterType no-console */\nclass BrowserDomAdapter extends GenericBrowserDomAdapter {\n    static makeCurrent() {\n        ɵsetRootDomAdapter(new BrowserDomAdapter());\n    }\n    getProperty(el, name) {\n        return el[name];\n    }\n    log(error) {\n        if (window.console) {\n            window.console.log && window.console.log(error);\n        }\n    }\n    logGroup(error) {\n        if (window.console) {\n            window.console.group && window.console.group(error);\n        }\n    }\n    logGroupEnd() {\n        if (window.console) {\n            window.console.groupEnd && window.console.groupEnd();\n        }\n    }\n    onAndCancel(el, evt, listener) {\n        el.addEventListener(evt, listener, false);\n        // Needed to follow Dart's subscription semantic, until fix of\n        // https://code.google.com/p/dart/issues/detail?id=17406\n        return () => {\n            el.removeEventListener(evt, listener, false);\n        };\n    }\n    dispatchEvent(el, evt) {\n        el.dispatchEvent(evt);\n    }\n    remove(node) {\n        if (node.parentNode) {\n            node.parentNode.removeChild(node);\n        }\n        return node;\n    }\n    getValue(el) {\n        return el.value;\n    }\n    createElement(tagName, doc) {\n        doc = doc || this.getDefaultDocument();\n        return doc.createElement(tagName);\n    }\n    createHtmlDocument() {\n        return document.implementation.createHTMLDocument('fakeTitle');\n    }\n    getDefaultDocument() {\n        return document;\n    }\n    isElementNode(node) {\n        return node.nodeType === Node.ELEMENT_NODE;\n    }\n    isShadowRoot(node) {\n        return node instanceof DocumentFragment;\n    }\n    getGlobalEventTarget(doc, target) {\n        if (target === 'window') {\n            return window;\n        }\n        if (target === 'document') {\n            return doc;\n        }\n        if (target === 'body') {\n            return doc.body;\n        }\n        return null;\n    }\n    getHistory() {\n        return window.history;\n    }\n    getLocation() {\n        return window.location;\n    }\n    getBaseHref(doc) {\n        const href = getBaseElementHref();\n        return href == null ? null : relativePath(href);\n    }\n    resetBaseElement() {\n        baseElement = null;\n    }\n    getUserAgent() {\n        return window.navigator.userAgent;\n    }\n    performanceNow() {\n        // performance.now() is not available in all browsers, see\n        // http://caniuse.com/#search=performance.now\n        return window.performance && window.performance.now ? window.performance.now() :\n            new Date().getTime();\n    }\n    supportsCookies() {\n        return true;\n    }\n    getCookie(name) {\n        return ɵparseCookieValue(document.cookie, name);\n    }\n}\nlet baseElement = null;\nfunction getBaseElementHref() {\n    if (!baseElement) {\n        baseElement = document.querySelector('base');\n        if (!baseElement) {\n            return null;\n        }\n    }\n    return baseElement.getAttribute('href');\n}\n// based on urlUtils.js in AngularJS 1\nlet urlParsingNode;\nfunction relativePath(url) {\n    if (!urlParsingNode) {\n        urlParsingNode = document.createElement('a');\n    }\n    urlParsingNode.setAttribute('href', url);\n    return (urlParsingNode.pathname.charAt(0) === '/') ? urlParsingNode.pathname :\n        '/' + urlParsingNode.pathname;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An id that identifies a particular application being bootstrapped, that should\n * match across the client/server boundary.\n */\nconst TRANSITION_ID = new InjectionToken('TRANSITION_ID');\nfunction appInitializerFactory(transitionId, document, injector) {\n    return () => {\n        // Wait for all application initializers to be completed before removing the styles set by\n        // the server.\n        injector.get(ApplicationInitStatus).donePromise.then(() => {\n            const dom = ɵgetDOM();\n            const styles = Array.prototype.slice.apply(document.querySelectorAll(`style[ng-transition]`));\n            styles.filter(el => el.getAttribute('ng-transition') === transitionId)\n                .forEach(el => dom.remove(el));\n        });\n    };\n}\nconst SERVER_TRANSITION_PROVIDERS = [\n    {\n        provide: APP_INITIALIZER,\n        useFactory: appInitializerFactory,\n        deps: [TRANSITION_ID, DOCUMENT, Injector],\n        multi: true\n    },\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass BrowserGetTestability {\n    static init() {\n        setTestabilityGetter(new BrowserGetTestability());\n    }\n    addToWindow(registry) {\n        ɵglobal['getAngularTestability'] = (elem, findInAncestors = true) => {\n            const testability = registry.findTestabilityInTree(elem, findInAncestors);\n            if (testability == null) {\n                throw new Error('Could not find testability for element.');\n            }\n            return testability;\n        };\n        ɵglobal['getAllAngularTestabilities'] = () => registry.getAllTestabilities();\n        ɵglobal['getAllAngularRootElements'] = () => registry.getAllRootElements();\n        const whenAllStable = (callback /** TODO #9100 */) => {\n            const testabilities = ɵglobal['getAllAngularTestabilities']();\n            let count = testabilities.length;\n            let didWork = false;\n            const decrement = function (didWork_ /** TODO #9100 */) {\n                didWork = didWork || didWork_;\n                count--;\n                if (count == 0) {\n                    callback(didWork);\n                }\n            };\n            testabilities.forEach(function (testability /** TODO #9100 */) {\n                testability.whenStable(decrement);\n            });\n        };\n        if (!ɵglobal['frameworkStabilizers']) {\n            ɵglobal['frameworkStabilizers'] = [];\n        }\n        ɵglobal['frameworkStabilizers'].push(whenAllStable);\n    }\n    findTestabilityInTree(registry, elem, findInAncestors) {\n        if (elem == null) {\n            return null;\n        }\n        const t = registry.getTestability(elem);\n        if (t != null) {\n            return t;\n        }\n        else if (!findInAncestors) {\n            return null;\n        }\n        if (ɵgetDOM().isShadowRoot(elem)) {\n            return this.findTestabilityInTree(registry, elem.host, true);\n        }\n        return this.findTestabilityInTree(registry, elem.parentElement, true);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst CAMEL_CASE_REGEXP = /([A-Z])/g;\nconst DASH_CASE_REGEXP = /-([a-z])/g;\nfunction camelCaseToDashCase(input) {\n    return input.replace(CAMEL_CASE_REGEXP, (...m) => '-' + m[1].toLowerCase());\n}\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, (...m) => m[1].toUpperCase());\n}\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param value The value to export.\n */\nfunction exportNgVar(name, value) {\n    if (typeof COMPILED === 'undefined' || !COMPILED) {\n        // Note: we can't export `ng` when using closure enhanced optimization as:\n        // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n        // - we can't declare a closure extern as the namespace `ng` is already used within Google\n        //   for typings for angularJS (via `goog.provide('ng....')`).\n        const ng = ɵglobal['ng'] = ɵglobal['ng'] || {};\n        ng[name] = value;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ɵ0$1 = () => ({\n    'ApplicationRef': ApplicationRef,\n    'NgZone': NgZone,\n});\nconst CORE_TOKENS = (ɵ0$1)();\nconst INSPECT_GLOBAL_NAME = 'probe';\nconst CORE_TOKENS_GLOBAL_NAME = 'coreTokens';\n/**\n * Returns a {@link DebugElement} for the given native DOM element, or\n * null if the given native element does not have an Angular view associated\n * with it.\n */\nfunction inspectNativeElementR2(element) {\n    return ɵgetDebugNodeR2(element);\n}\nfunction _createNgProbeR2(coreTokens) {\n    exportNgVar(INSPECT_GLOBAL_NAME, inspectNativeElementR2);\n    exportNgVar(CORE_TOKENS_GLOBAL_NAME, Object.assign(Object.assign({}, CORE_TOKENS), _ngProbeTokensToMap(coreTokens || [])));\n    return () => inspectNativeElementR2;\n}\nfunction _ngProbeTokensToMap(tokens) {\n    return tokens.reduce((prev, t) => (prev[t.name] = t.token, prev), {});\n}\n/**\n * In Ivy, we don't support NgProbe because we have our own set of testing utilities\n * with more robust functionality.\n *\n * We shouldn't bring in NgProbe because it prevents DebugNode and friends from\n * tree-shaking properly.\n */\nconst ELEMENT_PROBE_PROVIDERS__POST_R3__ = [];\n/**\n * Providers which support debugging Angular applications (e.g. via `ng.probe`).\n */\nconst ELEMENT_PROBE_PROVIDERS__PRE_R3__ = [\n    {\n        provide: APP_INITIALIZER,\n        useFactory: _createNgProbeR2,\n        deps: [\n            [NgProbeToken, new Optional()],\n        ],\n        multi: true,\n    },\n];\nconst ELEMENT_PROBE_PROVIDERS = ELEMENT_PROBE_PROVIDERS__POST_R3__;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The injection token for the event-manager plug-in service.\n *\n * @publicApi\n */\nconst EVENT_MANAGER_PLUGINS = new InjectionToken('EventManagerPlugins');\n/**\n * An injectable service that provides event management for Angular\n * through a browser plug-in.\n *\n * @publicApi\n */\nclass EventManager {\n    /**\n     * Initializes an instance of the event-manager service.\n     */\n    constructor(plugins, _zone) {\n        this._zone = _zone;\n        this._eventNameToPlugin = new Map();\n        plugins.forEach(p => p.manager = this);\n        this._plugins = plugins.slice().reverse();\n    }\n    /**\n     * Registers a handler for a specific element and event.\n     *\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns  A callback function that can be used to remove the handler.\n     */\n    addEventListener(element, eventName, handler) {\n        const plugin = this._findPluginFor(eventName);\n        return plugin.addEventListener(element, eventName, handler);\n    }\n    /**\n     * Registers a global handler for an event in a target view.\n     *\n     * @param target A target for global event notifications. One of \"window\", \"document\", or \"body\".\n     * @param eventName The name of the event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns A callback function that can be used to remove the handler.\n     */\n    addGlobalEventListener(target, eventName, handler) {\n        const plugin = this._findPluginFor(eventName);\n        return plugin.addGlobalEventListener(target, eventName, handler);\n    }\n    /**\n     * Retrieves the compilation zone in which event listeners are registered.\n     */\n    getZone() {\n        return this._zone;\n    }\n    /** @internal */\n    _findPluginFor(eventName) {\n        const plugin = this._eventNameToPlugin.get(eventName);\n        if (plugin) {\n            return plugin;\n        }\n        const plugins = this._plugins;\n        for (let i = 0; i < plugins.length; i++) {\n            const plugin = plugins[i];\n            if (plugin.supports(eventName)) {\n                this._eventNameToPlugin.set(eventName, plugin);\n                return plugin;\n            }\n        }\n        throw new Error(`No event manager plugin found for event ${eventName}`);\n    }\n}\nEventManager.ɵfac = function EventManager_Factory(t) { return new (t || EventManager)(ɵngcc0.ɵɵinject(EVENT_MANAGER_PLUGINS), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nEventManager.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: EventManager, factory: EventManager.ɵfac });\nEventManager.ctorParameters = () => [\n    { type: Array, decorators: [{ type: Inject, args: [EVENT_MANAGER_PLUGINS,] }] },\n    { type: NgZone }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(EventManager, [{\n        type: Injectable\n    }], function () { return [{ type: Array, decorators: [{\n                type: Inject,\n                args: [EVENT_MANAGER_PLUGINS]\n            }] }, { type: ɵngcc0.NgZone }]; }, null); })();\nclass EventManagerPlugin {\n    constructor(_doc) {\n        this._doc = _doc;\n    }\n    addGlobalEventListener(element, eventName, handler) {\n        const target = ɵgetDOM().getGlobalEventTarget(this._doc, element);\n        if (!target) {\n            throw new Error(`Unsupported event target ${target} for event ${eventName}`);\n        }\n        return this.addEventListener(target, eventName, handler);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass SharedStylesHost {\n    constructor() {\n        /** @internal */\n        this._stylesSet = new Set();\n    }\n    addStyles(styles) {\n        const additions = new Set();\n        styles.forEach(style => {\n            if (!this._stylesSet.has(style)) {\n                this._stylesSet.add(style);\n                additions.add(style);\n            }\n        });\n        this.onStylesAdded(additions);\n    }\n    onStylesAdded(additions) { }\n    getAllStyles() {\n        return Array.from(this._stylesSet);\n    }\n}\nSharedStylesHost.ɵfac = function SharedStylesHost_Factory(t) { return new (t || SharedStylesHost)(); };\nSharedStylesHost.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: SharedStylesHost, factory: SharedStylesHost.ɵfac });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SharedStylesHost, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\nclass DomSharedStylesHost extends SharedStylesHost {\n    constructor(_doc) {\n        super();\n        this._doc = _doc;\n        this._hostNodes = new Set();\n        this._styleNodes = new Set();\n        this._hostNodes.add(_doc.head);\n    }\n    _addStylesToHost(styles, host) {\n        styles.forEach((style) => {\n            const styleEl = this._doc.createElement('style');\n            styleEl.textContent = style;\n            this._styleNodes.add(host.appendChild(styleEl));\n        });\n    }\n    addHost(hostNode) {\n        this._addStylesToHost(this._stylesSet, hostNode);\n        this._hostNodes.add(hostNode);\n    }\n    removeHost(hostNode) {\n        this._hostNodes.delete(hostNode);\n    }\n    onStylesAdded(additions) {\n        this._hostNodes.forEach(hostNode => this._addStylesToHost(additions, hostNode));\n    }\n    ngOnDestroy() {\n        this._styleNodes.forEach(styleNode => ɵgetDOM().remove(styleNode));\n    }\n}\nDomSharedStylesHost.ɵfac = function DomSharedStylesHost_Factory(t) { return new (t || DomSharedStylesHost)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nDomSharedStylesHost.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: DomSharedStylesHost, factory: DomSharedStylesHost.ɵfac });\nDomSharedStylesHost.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DomSharedStylesHost, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst NAMESPACE_URIS = {\n    'svg': 'http://www.w3.org/2000/svg',\n    'xhtml': 'http://www.w3.org/1999/xhtml',\n    'xlink': 'http://www.w3.org/1999/xlink',\n    'xml': 'http://www.w3.org/XML/1998/namespace',\n    'xmlns': 'http://www.w3.org/2000/xmlns/',\n};\nconst COMPONENT_REGEX = /%COMP%/g;\nconst NG_DEV_MODE = typeof ngDevMode === 'undefined' || !!ngDevMode;\nconst COMPONENT_VARIABLE = '%COMP%';\nconst HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\nconst CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\nfunction shimContentAttribute(componentShortId) {\n    return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction shimHostAttribute(componentShortId) {\n    return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction flattenStyles(compId, styles, target) {\n    for (let i = 0; i < styles.length; i++) {\n        let style = styles[i];\n        if (Array.isArray(style)) {\n            flattenStyles(compId, style, target);\n        }\n        else {\n            style = style.replace(COMPONENT_REGEX, compId);\n            target.push(style);\n        }\n    }\n    return target;\n}\nfunction decoratePreventDefault(eventHandler) {\n    // `DebugNode.triggerEventHandler` needs to know if the listener was created with\n    // decoratePreventDefault or is a listener added outside the Angular context so it can handle the\n    // two differently. In the first case, the special '__ngUnwrap__' token is passed to the unwrap\n    // the listener (see below).\n    return (event) => {\n        // Ivy uses '__ngUnwrap__' as a special token that allows us to unwrap the function\n        // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`. The debug_node\n        // can inspect the listener toString contents for the existence of this special token. Because\n        // the token is a string literal, it is ensured to not be modified by compiled code.\n        if (event === '__ngUnwrap__') {\n            return eventHandler;\n        }\n        const allowDefaultBehavior = eventHandler(event);\n        if (allowDefaultBehavior === false) {\n            // TODO(tbosch): move preventDefault into event plugins...\n            event.preventDefault();\n            event.returnValue = false;\n        }\n        return undefined;\n    };\n}\nclass DomRendererFactory2 {\n    constructor(eventManager, sharedStylesHost, appId) {\n        this.eventManager = eventManager;\n        this.sharedStylesHost = sharedStylesHost;\n        this.appId = appId;\n        this.rendererByCompId = new Map();\n        this.defaultRenderer = new DefaultDomRenderer2(eventManager);\n    }\n    createRenderer(element, type) {\n        if (!element || !type) {\n            return this.defaultRenderer;\n        }\n        switch (type.encapsulation) {\n            case ViewEncapsulation.Emulated: {\n                let renderer = this.rendererByCompId.get(type.id);\n                if (!renderer) {\n                    renderer = new EmulatedEncapsulationDomRenderer2(this.eventManager, this.sharedStylesHost, type, this.appId);\n                    this.rendererByCompId.set(type.id, renderer);\n                }\n                renderer.applyToHost(element);\n                return renderer;\n            }\n            case ViewEncapsulation.Native:\n            case ViewEncapsulation.ShadowDom:\n                return new ShadowDomRenderer(this.eventManager, this.sharedStylesHost, element, type);\n            default: {\n                if (!this.rendererByCompId.has(type.id)) {\n                    const styles = flattenStyles(type.id, type.styles, []);\n                    this.sharedStylesHost.addStyles(styles);\n                    this.rendererByCompId.set(type.id, this.defaultRenderer);\n                }\n                return this.defaultRenderer;\n            }\n        }\n    }\n    begin() { }\n    end() { }\n}\nDomRendererFactory2.ɵfac = function DomRendererFactory2_Factory(t) { return new (t || DomRendererFactory2)(ɵngcc0.ɵɵinject(EventManager), ɵngcc0.ɵɵinject(DomSharedStylesHost), ɵngcc0.ɵɵinject(APP_ID)); };\nDomRendererFactory2.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: DomRendererFactory2, factory: DomRendererFactory2.ɵfac });\nDomRendererFactory2.ctorParameters = () => [\n    { type: EventManager },\n    { type: DomSharedStylesHost },\n    { type: String, decorators: [{ type: Inject, args: [APP_ID,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DomRendererFactory2, [{\n        type: Injectable\n    }], function () { return [{ type: EventManager }, { type: DomSharedStylesHost }, { type: String, decorators: [{\n                type: Inject,\n                args: [APP_ID]\n            }] }]; }, null); })();\nclass DefaultDomRenderer2 {\n    constructor(eventManager) {\n        this.eventManager = eventManager;\n        this.data = Object.create(null);\n    }\n    destroy() { }\n    createElement(name, namespace) {\n        if (namespace) {\n            // In cases where Ivy (not ViewEngine) is giving us the actual namespace, the look up by key\n            // will result in undefined, so we just return the namespace here.\n            return document.createElementNS(NAMESPACE_URIS[namespace] || namespace, name);\n        }\n        return document.createElement(name);\n    }\n    createComment(value) {\n        return document.createComment(value);\n    }\n    createText(value) {\n        return document.createTextNode(value);\n    }\n    appendChild(parent, newChild) {\n        parent.appendChild(newChild);\n    }\n    insertBefore(parent, newChild, refChild) {\n        if (parent) {\n            parent.insertBefore(newChild, refChild);\n        }\n    }\n    removeChild(parent, oldChild) {\n        if (parent) {\n            parent.removeChild(oldChild);\n        }\n    }\n    selectRootElement(selectorOrNode, preserveContent) {\n        let el = typeof selectorOrNode === 'string' ? document.querySelector(selectorOrNode) :\n            selectorOrNode;\n        if (!el) {\n            throw new Error(`The selector \"${selectorOrNode}\" did not match any elements`);\n        }\n        if (!preserveContent) {\n            el.textContent = '';\n        }\n        return el;\n    }\n    parentNode(node) {\n        return node.parentNode;\n    }\n    nextSibling(node) {\n        return node.nextSibling;\n    }\n    setAttribute(el, name, value, namespace) {\n        if (namespace) {\n            name = namespace + ':' + name;\n            // TODO(FW-811): Ivy may cause issues here because it's passing around\n            // full URIs for namespaces, therefore this lookup will fail.\n            const namespaceUri = NAMESPACE_URIS[namespace];\n            if (namespaceUri) {\n                el.setAttributeNS(namespaceUri, name, value);\n            }\n            else {\n                el.setAttribute(name, value);\n            }\n        }\n        else {\n            el.setAttribute(name, value);\n        }\n    }\n    removeAttribute(el, name, namespace) {\n        if (namespace) {\n            // TODO(FW-811): Ivy may cause issues here because it's passing around\n            // full URIs for namespaces, therefore this lookup will fail.\n            const namespaceUri = NAMESPACE_URIS[namespace];\n            if (namespaceUri) {\n                el.removeAttributeNS(namespaceUri, name);\n            }\n            else {\n                // TODO(FW-811): Since ivy is passing around full URIs for namespaces\n                // this could result in properties like `http://www.w3.org/2000/svg:cx=\"123\"`,\n                // which is wrong.\n                el.removeAttribute(`${namespace}:${name}`);\n            }\n        }\n        else {\n            el.removeAttribute(name);\n        }\n    }\n    addClass(el, name) {\n        el.classList.add(name);\n    }\n    removeClass(el, name) {\n        el.classList.remove(name);\n    }\n    setStyle(el, style, value, flags) {\n        if (flags & RendererStyleFlags2.DashCase) {\n            el.style.setProperty(style, value, !!(flags & RendererStyleFlags2.Important) ? 'important' : '');\n        }\n        else {\n            el.style[style] = value;\n        }\n    }\n    removeStyle(el, style, flags) {\n        if (flags & RendererStyleFlags2.DashCase) {\n            el.style.removeProperty(style);\n        }\n        else {\n            // IE requires '' instead of null\n            // see https://github.com/angular/angular/issues/7916\n            el.style[style] = '';\n        }\n    }\n    setProperty(el, name, value) {\n        NG_DEV_MODE && checkNoSyntheticProp(name, 'property');\n        el[name] = value;\n    }\n    setValue(node, value) {\n        node.nodeValue = value;\n    }\n    listen(target, event, callback) {\n        NG_DEV_MODE && checkNoSyntheticProp(event, 'listener');\n        if (typeof target === 'string') {\n            return this.eventManager.addGlobalEventListener(target, event, decoratePreventDefault(callback));\n        }\n        return this.eventManager.addEventListener(target, event, decoratePreventDefault(callback));\n    }\n}\nconst ɵ0$2 = () => '@'.charCodeAt(0);\nconst AT_CHARCODE = (ɵ0$2)();\nfunction checkNoSyntheticProp(name, nameKind) {\n    if (name.charCodeAt(0) === AT_CHARCODE) {\n        throw new Error(`Found the synthetic ${nameKind} ${name}. Please include either \"BrowserAnimationsModule\" or \"NoopAnimationsModule\" in your application.`);\n    }\n}\nclass EmulatedEncapsulationDomRenderer2 extends DefaultDomRenderer2 {\n    constructor(eventManager, sharedStylesHost, component, appId) {\n        super(eventManager);\n        this.component = component;\n        const styles = flattenStyles(appId + '-' + component.id, component.styles, []);\n        sharedStylesHost.addStyles(styles);\n        this.contentAttr = shimContentAttribute(appId + '-' + component.id);\n        this.hostAttr = shimHostAttribute(appId + '-' + component.id);\n    }\n    applyToHost(element) {\n        super.setAttribute(element, this.hostAttr, '');\n    }\n    createElement(parent, name) {\n        const el = super.createElement(parent, name);\n        super.setAttribute(el, this.contentAttr, '');\n        return el;\n    }\n}\nclass ShadowDomRenderer extends DefaultDomRenderer2 {\n    constructor(eventManager, sharedStylesHost, hostEl, component) {\n        super(eventManager);\n        this.sharedStylesHost = sharedStylesHost;\n        this.hostEl = hostEl;\n        this.component = component;\n        if (component.encapsulation === ViewEncapsulation.ShadowDom) {\n            this.shadowRoot = hostEl.attachShadow({ mode: 'open' });\n        }\n        else {\n            this.shadowRoot = hostEl.createShadowRoot();\n        }\n        this.sharedStylesHost.addHost(this.shadowRoot);\n        const styles = flattenStyles(component.id, component.styles, []);\n        for (let i = 0; i < styles.length; i++) {\n            const styleEl = document.createElement('style');\n            styleEl.textContent = styles[i];\n            this.shadowRoot.appendChild(styleEl);\n        }\n    }\n    nodeOrShadowRoot(node) {\n        return node === this.hostEl ? this.shadowRoot : node;\n    }\n    destroy() {\n        this.sharedStylesHost.removeHost(this.shadowRoot);\n    }\n    appendChild(parent, newChild) {\n        return super.appendChild(this.nodeOrShadowRoot(parent), newChild);\n    }\n    insertBefore(parent, newChild, refChild) {\n        return super.insertBefore(this.nodeOrShadowRoot(parent), newChild, refChild);\n    }\n    removeChild(parent, oldChild) {\n        return super.removeChild(this.nodeOrShadowRoot(parent), oldChild);\n    }\n    parentNode(node) {\n        return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(node)));\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass DomEventsPlugin extends EventManagerPlugin {\n    constructor(doc) {\n        super(doc);\n    }\n    // This plugin should come last in the list of plugins, because it accepts all\n    // events.\n    supports(eventName) {\n        return true;\n    }\n    addEventListener(element, eventName, handler) {\n        element.addEventListener(eventName, handler, false);\n        return () => this.removeEventListener(element, eventName, handler);\n    }\n    removeEventListener(target, eventName, callback) {\n        return target.removeEventListener(eventName, callback);\n    }\n}\nDomEventsPlugin.ɵfac = function DomEventsPlugin_Factory(t) { return new (t || DomEventsPlugin)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nDomEventsPlugin.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: DomEventsPlugin, factory: DomEventsPlugin.ɵfac });\nDomEventsPlugin.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DomEventsPlugin, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Supported HammerJS recognizer event names.\n */\nconst EVENT_NAMES = {\n    // pan\n    'pan': true,\n    'panstart': true,\n    'panmove': true,\n    'panend': true,\n    'pancancel': true,\n    'panleft': true,\n    'panright': true,\n    'panup': true,\n    'pandown': true,\n    // pinch\n    'pinch': true,\n    'pinchstart': true,\n    'pinchmove': true,\n    'pinchend': true,\n    'pinchcancel': true,\n    'pinchin': true,\n    'pinchout': true,\n    // press\n    'press': true,\n    'pressup': true,\n    // rotate\n    'rotate': true,\n    'rotatestart': true,\n    'rotatemove': true,\n    'rotateend': true,\n    'rotatecancel': true,\n    // swipe\n    'swipe': true,\n    'swipeleft': true,\n    'swiperight': true,\n    'swipeup': true,\n    'swipedown': true,\n    // tap\n    'tap': true,\n};\n/**\n * DI token for providing [HammerJS](http://hammerjs.github.io/) support to Angular.\n * @see `HammerGestureConfig`\n *\n * @ngModule HammerModule\n * @publicApi\n */\nconst HAMMER_GESTURE_CONFIG = new InjectionToken('HammerGestureConfig');\n/**\n * Injection token used to provide a {@link HammerLoader} to Angular.\n *\n * @publicApi\n */\nconst HAMMER_LOADER = new InjectionToken('HammerLoader');\n/**\n * An injectable [HammerJS Manager](http://hammerjs.github.io/api/#hammer.manager)\n * for gesture recognition. Configures specific event recognition.\n * @publicApi\n */\nclass HammerGestureConfig {\n    constructor() {\n        /**\n         * A set of supported event names for gestures to be used in Angular.\n         * Angular supports all built-in recognizers, as listed in\n         * [HammerJS documentation](http://hammerjs.github.io/).\n         */\n        this.events = [];\n        /**\n         * Maps gesture event names to a set of configuration options\n         * that specify overrides to the default values for specific properties.\n         *\n         * The key is a supported event name to be configured,\n         * and the options object contains a set of properties, with override values\n         * to be applied to the named recognizer event.\n         * For example, to disable recognition of the rotate event, specify\n         *  `{\"rotate\": {\"enable\": false}}`.\n         *\n         * Properties that are not present take the HammerJS default values.\n         * For information about which properties are supported for which events,\n         * and their allowed and default values, see\n         * [HammerJS documentation](http://hammerjs.github.io/).\n         *\n         */\n        this.overrides = {};\n    }\n    /**\n     * Creates a [HammerJS Manager](http://hammerjs.github.io/api/#hammer.manager)\n     * and attaches it to a given HTML element.\n     * @param element The element that will recognize gestures.\n     * @returns A HammerJS event-manager object.\n     */\n    buildHammer(element) {\n        const mc = new Hammer(element, this.options);\n        mc.get('pinch').set({ enable: true });\n        mc.get('rotate').set({ enable: true });\n        for (const eventName in this.overrides) {\n            mc.get(eventName).set(this.overrides[eventName]);\n        }\n        return mc;\n    }\n}\nHammerGestureConfig.ɵfac = function HammerGestureConfig_Factory(t) { return new (t || HammerGestureConfig)(); };\nHammerGestureConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: HammerGestureConfig, factory: HammerGestureConfig.ɵfac });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HammerGestureConfig, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n/**\n * Event plugin that adds Hammer support to an application.\n *\n * @ngModule HammerModule\n */\nclass HammerGesturesPlugin extends EventManagerPlugin {\n    constructor(doc, _config, console, loader) {\n        super(doc);\n        this._config = _config;\n        this.console = console;\n        this.loader = loader;\n    }\n    supports(eventName) {\n        if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n            return false;\n        }\n        if (!window.Hammer && !this.loader) {\n            this.console.warn(`The \"${eventName}\" event cannot be bound because Hammer.JS is not ` +\n                `loaded and no custom loader has been specified.`);\n            return false;\n        }\n        return true;\n    }\n    addEventListener(element, eventName, handler) {\n        const zone = this.manager.getZone();\n        eventName = eventName.toLowerCase();\n        // If Hammer is not present but a loader is specified, we defer adding the event listener\n        // until Hammer is loaded.\n        if (!window.Hammer && this.loader) {\n            // This `addEventListener` method returns a function to remove the added listener.\n            // Until Hammer is loaded, the returned function needs to *cancel* the registration rather\n            // than remove anything.\n            let cancelRegistration = false;\n            let deregister = () => {\n                cancelRegistration = true;\n            };\n            this.loader()\n                .then(() => {\n                // If Hammer isn't actually loaded when the custom loader resolves, give up.\n                if (!window.Hammer) {\n                    this.console.warn(`The custom HAMMER_LOADER completed, but Hammer.JS is not present.`);\n                    deregister = () => { };\n                    return;\n                }\n                if (!cancelRegistration) {\n                    // Now that Hammer is loaded and the listener is being loaded for real,\n                    // the deregistration function changes from canceling registration to removal.\n                    deregister = this.addEventListener(element, eventName, handler);\n                }\n            })\n                .catch(() => {\n                this.console.warn(`The \"${eventName}\" event cannot be bound because the custom ` +\n                    `Hammer.JS loader failed.`);\n                deregister = () => { };\n            });\n            // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\n            // can change the behavior of `deregister` once the listener is added. Using a closure in\n            // this way allows us to avoid any additional data structures to track listener removal.\n            return () => {\n                deregister();\n            };\n        }\n        return zone.runOutsideAngular(() => {\n            // Creating the manager bind events, must be done outside of angular\n            const mc = this._config.buildHammer(element);\n            const callback = function (eventObj) {\n                zone.runGuarded(function () {\n                    handler(eventObj);\n                });\n            };\n            mc.on(eventName, callback);\n            return () => {\n                mc.off(eventName, callback);\n                // destroy mc to prevent memory leak\n                if (typeof mc.destroy === 'function') {\n                    mc.destroy();\n                }\n            };\n        });\n    }\n    isCustomEvent(eventName) {\n        return this._config.events.indexOf(eventName) > -1;\n    }\n}\nHammerGesturesPlugin.ɵfac = function HammerGesturesPlugin_Factory(t) { return new (t || HammerGesturesPlugin)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(HAMMER_GESTURE_CONFIG), ɵngcc0.ɵɵinject(ɵngcc0.ɵConsole), ɵngcc0.ɵɵinject(HAMMER_LOADER, 8)); };\nHammerGesturesPlugin.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: HammerGesturesPlugin, factory: HammerGesturesPlugin.ɵfac });\nHammerGesturesPlugin.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: HammerGestureConfig, decorators: [{ type: Inject, args: [HAMMER_GESTURE_CONFIG,] }] },\n    { type: ɵConsole },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [HAMMER_LOADER,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HammerGesturesPlugin, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: HammerGestureConfig, decorators: [{\n                type: Inject,\n                args: [HAMMER_GESTURE_CONFIG]\n            }] }, { type: ɵngcc0.ɵConsole }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [HAMMER_LOADER]\n            }] }]; }, null); })();\n/**\n * In Ivy, support for Hammer gestures is optional, so applications must\n * import the `HammerModule` at root to turn on support. This means that\n * Hammer-specific code can be tree-shaken away if not needed.\n */\nconst HAMMER_PROVIDERS__POST_R3__ = [];\n/**\n * In View Engine, support for Hammer gestures is built-in by default.\n */\nconst HAMMER_PROVIDERS__PRE_R3__ = [\n    {\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: HammerGesturesPlugin,\n        multi: true,\n        deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n    },\n    { provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig, deps: [] },\n];\nconst HAMMER_PROVIDERS = HAMMER_PROVIDERS__POST_R3__;\n/**\n * Adds support for HammerJS.\n *\n * Import this module at the root of your application so that Angular can work with\n * HammerJS to detect gesture events.\n *\n * Note that applications still need to include the HammerJS script itself. This module\n * simply sets up the coordination layer between HammerJS and Angular's EventManager.\n *\n * @publicApi\n */\nclass HammerModule {\n}\nHammerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: HammerModule });\nHammerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function HammerModule_Factory(t) { return new (t || HammerModule)(); }, providers: HAMMER_PROVIDERS__PRE_R3__ });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HammerModule, [{\n        type: NgModule,\n        args: [{ providers: HAMMER_PROVIDERS__PRE_R3__ }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines supported modifiers for key events.\n */\nconst MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\nconst DOM_KEY_LOCATION_NUMPAD = 3;\n// Map to convert some key or keyIdentifier values to what will be returned by getEventKey\nconst _keyMap = {\n    // The following values are here for cross-browser compatibility and to match the W3C standard\n    // cf http://www.w3.org/TR/DOM-Level-3-Events-key/\n    '\\b': 'Backspace',\n    '\\t': 'Tab',\n    '\\x7F': 'Delete',\n    '\\x1B': 'Escape',\n    'Del': 'Delete',\n    'Esc': 'Escape',\n    'Left': 'ArrowLeft',\n    'Right': 'ArrowRight',\n    'Up': 'ArrowUp',\n    'Down': 'ArrowDown',\n    'Menu': 'ContextMenu',\n    'Scroll': 'ScrollLock',\n    'Win': 'OS'\n};\n// There is a bug in Chrome for numeric keypad keys:\n// https://code.google.com/p/chromium/issues/detail?id=155654\n// 1, 2, 3 ... are reported as A, B, C ...\nconst _chromeNumKeyPadMap = {\n    'A': '1',\n    'B': '2',\n    'C': '3',\n    'D': '4',\n    'E': '5',\n    'F': '6',\n    'G': '7',\n    'H': '8',\n    'I': '9',\n    'J': '*',\n    'K': '+',\n    'M': '-',\n    'N': '.',\n    'O': '/',\n    '\\x60': '0',\n    '\\x90': 'NumLock'\n};\nconst ɵ0$3 = (event) => event.altKey, ɵ1 = (event) => event.ctrlKey, ɵ2 = (event) => event.metaKey, ɵ3 = (event) => event.shiftKey;\n/**\n * Retrieves modifiers from key-event objects.\n */\nconst MODIFIER_KEY_GETTERS = {\n    'alt': ɵ0$3,\n    'control': ɵ1,\n    'meta': ɵ2,\n    'shift': ɵ3\n};\n/**\n * @publicApi\n * A browser plug-in that provides support for handling of key events in Angular.\n */\nclass KeyEventsPlugin extends EventManagerPlugin {\n    /**\n     * Initializes an instance of the browser plug-in.\n     * @param doc The document in which key events will be detected.\n     */\n    constructor(doc) {\n        super(doc);\n    }\n    /**\n     * Reports whether a named key event is supported.\n     * @param eventName The event name to query.\n     * @return True if the named key event is supported.\n     */\n    supports(eventName) {\n        return KeyEventsPlugin.parseEventName(eventName) != null;\n    }\n    /**\n     * Registers a handler for a specific element and key event.\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the key event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns The key event that was registered.\n     */\n    addEventListener(element, eventName, handler) {\n        const parsedEvent = KeyEventsPlugin.parseEventName(eventName);\n        const outsideHandler = KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n        return this.manager.getZone().runOutsideAngular(() => {\n            return ɵgetDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n        });\n    }\n    static parseEventName(eventName) {\n        const parts = eventName.toLowerCase().split('.');\n        const domEventName = parts.shift();\n        if ((parts.length === 0) || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n            return null;\n        }\n        const key = KeyEventsPlugin._normalizeKey(parts.pop());\n        let fullKey = '';\n        MODIFIER_KEYS.forEach(modifierName => {\n            const index = parts.indexOf(modifierName);\n            if (index > -1) {\n                parts.splice(index, 1);\n                fullKey += modifierName + '.';\n            }\n        });\n        fullKey += key;\n        if (parts.length != 0 || key.length === 0) {\n            // returning null instead of throwing to let another plugin process the event\n            return null;\n        }\n        // NOTE: Please don't rewrite this as so, as it will break JSCompiler property renaming.\n        //       The code must remain in the `result['domEventName']` form.\n        // return {domEventName, fullKey};\n        const result = {};\n        result['domEventName'] = domEventName;\n        result['fullKey'] = fullKey;\n        return result;\n    }\n    static getEventFullKey(event) {\n        let fullKey = '';\n        let key = getEventKey(event);\n        key = key.toLowerCase();\n        if (key === ' ') {\n            key = 'space'; // for readability\n        }\n        else if (key === '.') {\n            key = 'dot'; // because '.' is used as a separator in event names\n        }\n        MODIFIER_KEYS.forEach(modifierName => {\n            if (modifierName != key) {\n                const modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n                if (modifierGetter(event)) {\n                    fullKey += modifierName + '.';\n                }\n            }\n        });\n        fullKey += key;\n        return fullKey;\n    }\n    /**\n     * Configures a handler callback for a key event.\n     * @param fullKey The event name that combines all simultaneous keystrokes.\n     * @param handler The function that responds to the key event.\n     * @param zone The zone in which the event occurred.\n     * @returns A callback function.\n     */\n    static eventCallback(fullKey, handler, zone) {\n        return (event /** TODO #9100 */) => {\n            if (KeyEventsPlugin.getEventFullKey(event) === fullKey) {\n                zone.runGuarded(() => handler(event));\n            }\n        };\n    }\n    /** @internal */\n    static _normalizeKey(keyName) {\n        // TODO: switch to a Map if the mapping grows too much\n        switch (keyName) {\n            case 'esc':\n                return 'escape';\n            default:\n                return keyName;\n        }\n    }\n}\nKeyEventsPlugin.ɵfac = function KeyEventsPlugin_Factory(t) { return new (t || KeyEventsPlugin)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nKeyEventsPlugin.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: KeyEventsPlugin, factory: KeyEventsPlugin.ɵfac });\nKeyEventsPlugin.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(KeyEventsPlugin, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nfunction getEventKey(event) {\n    let key = event.key;\n    if (key == null) {\n        key = event.keyIdentifier;\n        // keyIdentifier is defined in the old draft of DOM Level 3 Events implemented by Chrome and\n        // Safari cf\n        // http://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/events.html#Events-KeyboardEvents-Interfaces\n        if (key == null) {\n            return 'Unidentified';\n        }\n        if (key.startsWith('U+')) {\n            key = String.fromCharCode(parseInt(key.substring(2), 16));\n            if (event.location === DOM_KEY_LOCATION_NUMPAD && _chromeNumKeyPadMap.hasOwnProperty(key)) {\n                // There is a bug in Chrome for numeric keypad keys:\n                // https://code.google.com/p/chromium/issues/detail?id=155654\n                // 1, 2, 3 ... are reported as A, B, C ...\n                key = _chromeNumKeyPadMap[key];\n            }\n        }\n    }\n    return _keyMap[key] || key;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](http://g.co/ng/security).\n *\n * @publicApi\n */\nclass DomSanitizer {\n}\nDomSanitizer.ɵfac = function DomSanitizer_Factory(t) { return new (t || DomSanitizer)(); };\nDomSanitizer.ɵprov = ɵɵdefineInjectable({ factory: function DomSanitizer_Factory() { return ɵɵinject(DomSanitizerImpl); }, token: DomSanitizer, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DomSanitizer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root', useExisting: forwardRef(() => DomSanitizerImpl) }]\n    }], null, null); })();\nfunction domSanitizerImplFactory(injector) {\n    return new DomSanitizerImpl(injector.get(DOCUMENT));\n}\nclass DomSanitizerImpl extends DomSanitizer {\n    constructor(_doc) {\n        super();\n        this._doc = _doc;\n    }\n    sanitize(ctx, value) {\n        if (value == null)\n            return null;\n        switch (ctx) {\n            case SecurityContext.NONE:\n                return value;\n            case SecurityContext.HTML:\n                if (ɵallowSanitizationBypassAndThrow(value, \"HTML\" /* Html */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                return ɵ_sanitizeHtml(this._doc, String(value));\n            case SecurityContext.STYLE:\n                if (ɵallowSanitizationBypassAndThrow(value, \"Style\" /* Style */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                return value;\n            case SecurityContext.SCRIPT:\n                if (ɵallowSanitizationBypassAndThrow(value, \"Script\" /* Script */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                throw new Error('unsafe value used in a script context');\n            case SecurityContext.URL:\n                const type = ɵgetSanitizationBypassType(value);\n                if (ɵallowSanitizationBypassAndThrow(value, \"URL\" /* Url */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                return ɵ_sanitizeUrl(String(value));\n            case SecurityContext.RESOURCE_URL:\n                if (ɵallowSanitizationBypassAndThrow(value, \"ResourceURL\" /* ResourceUrl */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n            default:\n                throw new Error(`Unexpected SecurityContext ${ctx} (see http://g.co/ng/security#xss)`);\n        }\n    }\n    bypassSecurityTrustHtml(value) {\n        return ɵbypassSanitizationTrustHtml(value);\n    }\n    bypassSecurityTrustStyle(value) {\n        return ɵbypassSanitizationTrustStyle(value);\n    }\n    bypassSecurityTrustScript(value) {\n        return ɵbypassSanitizationTrustScript(value);\n    }\n    bypassSecurityTrustUrl(value) {\n        return ɵbypassSanitizationTrustUrl(value);\n    }\n    bypassSecurityTrustResourceUrl(value) {\n        return ɵbypassSanitizationTrustResourceUrl(value);\n    }\n}\nDomSanitizerImpl.ɵfac = function DomSanitizerImpl_Factory(t) { return new (t || DomSanitizerImpl)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nDomSanitizerImpl.ɵprov = ɵɵdefineInjectable({ factory: function DomSanitizerImpl_Factory() { return domSanitizerImplFactory(ɵɵinject(INJECTOR)); }, token: DomSanitizerImpl, providedIn: \"root\" });\nDomSanitizerImpl.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DomSanitizerImpl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root', useFactory: domSanitizerImplFactory, deps: [Injector] }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction initDomAdapter() {\n    BrowserDomAdapter.makeCurrent();\n    BrowserGetTestability.init();\n}\nfunction errorHandler() {\n    return new ErrorHandler();\n}\nfunction _document() {\n    // Tell ivy about the global document\n    ɵsetDocument(document);\n    return document;\n}\nconst ɵ0$4 = ɵPLATFORM_BROWSER_ID;\nconst INTERNAL_BROWSER_PLATFORM_PROVIDERS = [\n    { provide: PLATFORM_ID, useValue: ɵ0$4 },\n    { provide: PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true },\n    { provide: DOCUMENT, useFactory: _document, deps: [] },\n];\nconst BROWSER_SANITIZATION_PROVIDERS__PRE_R3__ = [\n    { provide: Sanitizer, useExisting: DomSanitizer },\n    { provide: DomSanitizer, useClass: DomSanitizerImpl, deps: [DOCUMENT] },\n];\nconst BROWSER_SANITIZATION_PROVIDERS__POST_R3__ = [];\n/**\n * @security Replacing built-in sanitization providers exposes the application to XSS risks.\n * Attacker-controlled data introduced by an unsanitized provider could expose your\n * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).\n * @publicApi\n */\nconst BROWSER_SANITIZATION_PROVIDERS = BROWSER_SANITIZATION_PROVIDERS__POST_R3__;\n/**\n * A factory function that returns a `PlatformRef` instance associated with browser service\n * providers.\n *\n * @publicApi\n */\nconst platformBrowser = createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\nconst BROWSER_MODULE_PROVIDERS = [\n    BROWSER_SANITIZATION_PROVIDERS,\n    { provide: ɵINJECTOR_SCOPE, useValue: 'root' },\n    { provide: ErrorHandler, useFactory: errorHandler, deps: [] },\n    {\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: DomEventsPlugin,\n        multi: true,\n        deps: [DOCUMENT, NgZone, PLATFORM_ID]\n    },\n    { provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true, deps: [DOCUMENT] },\n    HAMMER_PROVIDERS,\n    {\n        provide: DomRendererFactory2,\n        useClass: DomRendererFactory2,\n        deps: [EventManager, DomSharedStylesHost, APP_ID]\n    },\n    { provide: RendererFactory2, useExisting: DomRendererFactory2 },\n    { provide: SharedStylesHost, useExisting: DomSharedStylesHost },\n    { provide: DomSharedStylesHost, useClass: DomSharedStylesHost, deps: [DOCUMENT] },\n    { provide: Testability, useClass: Testability, deps: [NgZone] },\n    { provide: EventManager, useClass: EventManager, deps: [EVENT_MANAGER_PLUGINS, NgZone] },\n    ELEMENT_PROBE_PROVIDERS,\n];\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by default in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n * @publicApi\n */\nclass BrowserModule {\n    constructor(parentModule) {\n        if (parentModule) {\n            throw new Error(`BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.`);\n        }\n    }\n    /**\n     * Configures a browser-based app to transition from a server-rendered app, if\n     * one is present on the page.\n     *\n     * @param params An object containing an identifier for the app to transition.\n     * The ID must match between the client and server versions of the app.\n     * @returns The reconfigured `BrowserModule` to import into the app's root `AppModule`.\n     */\n    static withServerTransition(params) {\n        return {\n            ngModule: BrowserModule,\n            providers: [\n                { provide: APP_ID, useValue: params.appId },\n                { provide: TRANSITION_ID, useExisting: APP_ID },\n                SERVER_TRANSITION_PROVIDERS,\n            ],\n        };\n    }\n}\nBrowserModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: BrowserModule });\nBrowserModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function BrowserModule_Factory(t) { return new (t || BrowserModule)(ɵngcc0.ɵɵinject(BrowserModule, 12)); }, providers: BROWSER_MODULE_PROVIDERS, imports: [CommonModule, ApplicationModule] });\nBrowserModule.ctorParameters = () => [\n    { type: BrowserModule, decorators: [{ type: Optional }, { type: SkipSelf }, { type: Inject, args: [BrowserModule,] }] }\n];\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BrowserModule, { exports: function () { return [CommonModule, ApplicationModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BrowserModule, [{\n        type: NgModule,\n        args: [{ providers: BROWSER_MODULE_PROVIDERS, exports: [CommonModule, ApplicationModule] }]\n    }], function () { return [{ type: BrowserModule, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }, {\n                type: Inject,\n                args: [BrowserModule]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Factory to create a `Meta` service instance for the current DOM document.\n */\nfunction createMeta() {\n    return new Meta(ɵɵinject(DOCUMENT));\n}\n/**\n * A service for managing HTML `<meta>` tags.\n *\n * Properties of the `MetaDefinition` object match the attributes of the\n * HTML `<meta>` tag. These tags define document metadata that is important for\n * things like configuring a Content Security Policy, defining browser compatibility\n * and security settings, setting HTTP Headers, defining rich content for social sharing,\n * and Search Engine Optimization (SEO).\n *\n * To identify specific `<meta>` tags in a document, use an attribute selection\n * string in the format `\"tag_attribute='value string'\"`.\n * For example, an `attrSelector` value of `\"name='description'\"` matches a tag\n * whose `name` attribute has the value `\"description\"`.\n * Selectors are used with the `querySelector()` Document method,\n * in the format `meta[{attrSelector}]`.\n *\n * @see [HTML meta tag](https://developer.mozilla.org/docs/Web/HTML/Element/meta)\n * @see [Document.querySelector()](https://developer.mozilla.org/docs/Web/API/Document/querySelector)\n *\n *\n * @publicApi\n */\nclass Meta {\n    constructor(_doc) {\n        this._doc = _doc;\n        this._dom = ɵgetDOM();\n    }\n    /**\n     * Retrieves or creates a specific `<meta>` tag element in the current HTML document.\n     * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n     * values in the provided tag definition, and verifies that all other attribute values are equal.\n     * If an existing element is found, it is returned and is not modified in any way.\n     * @param tag The definition of a `<meta>` element to match or create.\n     * @param forceCreation True to create a new element without checking whether one already exists.\n     * @returns The existing element with the same attributes and values if found,\n     * the new element if no match is found, or `null` if the tag parameter is not defined.\n     */\n    addTag(tag, forceCreation = false) {\n        if (!tag)\n            return null;\n        return this._getOrCreateElement(tag, forceCreation);\n    }\n    /**\n     * Retrieves or creates a set of `<meta>` tag elements in the current HTML document.\n     * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n     * values in the provided tag definition, and verifies that all other attribute values are equal.\n     * @param tags An array of tag definitions to match or create.\n     * @param forceCreation True to create new elements without checking whether they already exist.\n     * @returns The matching elements if found, or the new elements.\n     */\n    addTags(tags, forceCreation = false) {\n        if (!tags)\n            return [];\n        return tags.reduce((result, tag) => {\n            if (tag) {\n                result.push(this._getOrCreateElement(tag, forceCreation));\n            }\n            return result;\n        }, []);\n    }\n    /**\n     * Retrieves a `<meta>` tag element in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching element, if any.\n     */\n    getTag(attrSelector) {\n        if (!attrSelector)\n            return null;\n        return this._doc.querySelector(`meta[${attrSelector}]`) || null;\n    }\n    /**\n     * Retrieves a set of `<meta>` tag elements in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching elements, if any.\n     */\n    getTags(attrSelector) {\n        if (!attrSelector)\n            return [];\n        const list /*NodeList*/ = this._doc.querySelectorAll(`meta[${attrSelector}]`);\n        return list ? [].slice.call(list) : [];\n    }\n    /**\n     * Modifies an existing `<meta>` tag element in the current HTML document.\n     * @param tag The tag description with which to replace the existing tag content.\n     * @param selector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     * If not supplied, matches a tag with the same `name` or `property` attribute value as the\n     * replacement tag.\n     * @return The modified element.\n     */\n    updateTag(tag, selector) {\n        if (!tag)\n            return null;\n        selector = selector || this._parseSelector(tag);\n        const meta = this.getTag(selector);\n        if (meta) {\n            return this._setMetaElementAttributes(tag, meta);\n        }\n        return this._getOrCreateElement(tag, true);\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param attrSelector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     */\n    removeTag(attrSelector) {\n        this.removeTagElement(this.getTag(attrSelector));\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param meta The tag definition to match against to identify an existing tag.\n     */\n    removeTagElement(meta) {\n        if (meta) {\n            this._dom.remove(meta);\n        }\n    }\n    _getOrCreateElement(meta, forceCreation = false) {\n        if (!forceCreation) {\n            const selector = this._parseSelector(meta);\n            const elem = this.getTag(selector);\n            // It's allowed to have multiple elements with the same name so it's not enough to\n            // just check that element with the same name already present on the page. We also need to\n            // check if element has tag attributes\n            if (elem && this._containsAttributes(meta, elem))\n                return elem;\n        }\n        const element = this._dom.createElement('meta');\n        this._setMetaElementAttributes(meta, element);\n        const head = this._doc.getElementsByTagName('head')[0];\n        head.appendChild(element);\n        return element;\n    }\n    _setMetaElementAttributes(tag, el) {\n        Object.keys(tag).forEach((prop) => el.setAttribute(prop, tag[prop]));\n        return el;\n    }\n    _parseSelector(tag) {\n        const attr = tag.name ? 'name' : 'property';\n        return `${attr}=\"${tag[attr]}\"`;\n    }\n    _containsAttributes(tag, elem) {\n        return Object.keys(tag).every((key) => elem.getAttribute(key) === tag[key]);\n    }\n}\nMeta.ɵfac = function Meta_Factory(t) { return new (t || Meta)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nMeta.ɵprov = ɵɵdefineInjectable({ factory: createMeta, token: Meta, providedIn: \"root\" });\nMeta.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Meta, [{\n        type: Injectable,\n        args: [{ providedIn: 'root', useFactory: createMeta, deps: [] }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Factory to create Title service.\n */\nfunction createTitle() {\n    return new Title(ɵɵinject(DOCUMENT));\n}\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * @publicApi\n */\nclass Title {\n    constructor(_doc) {\n        this._doc = _doc;\n    }\n    /**\n     * Get the title of the current HTML document.\n     */\n    getTitle() {\n        return this._doc.title;\n    }\n    /**\n     * Set the title of the current HTML document.\n     * @param newTitle\n     */\n    setTitle(newTitle) {\n        this._doc.title = newTitle || '';\n    }\n}\nTitle.ɵfac = function Title_Factory(t) { return new (t || Title)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nTitle.ɵprov = ɵɵdefineInjectable({ factory: createTitle, token: Title, providedIn: \"root\" });\nTitle.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Title, [{\n        type: Injectable,\n        args: [{ providedIn: 'root', useFactory: createTitle, deps: [] }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst win = typeof window !== 'undefined' && window || {};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ChangeDetectionPerfRecord {\n    constructor(msPerTick, numTicks) {\n        this.msPerTick = msPerTick;\n        this.numTicks = numTicks;\n    }\n}\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\nclass AngularProfiler {\n    constructor(ref) {\n        this.appRef = ref.injector.get(ApplicationRef);\n    }\n    // tslint:disable:no-console\n    /**\n     * Exercises change detection in a loop and then prints the average amount of\n     * time in milliseconds how long a single round of change detection takes for\n     * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n     * of 500 milliseconds.\n     *\n     * Optionally, a user may pass a `config` parameter containing a map of\n     * options. Supported options are:\n     *\n     * `record` (boolean) - causes the profiler to record a CPU profile while\n     * it exercises the change detector. Example:\n     *\n     * ```\n     * ng.profiler.timeChangeDetection({record: true})\n     * ```\n     */\n    timeChangeDetection(config) {\n        const record = config && config['record'];\n        const profileName = 'Change Detection';\n        // Profiler is not available in Android browsers, nor in IE 9 without dev tools opened\n        const isProfilerAvailable = win.console.profile != null;\n        if (record && isProfilerAvailable) {\n            win.console.profile(profileName);\n        }\n        const start = ɵgetDOM().performanceNow();\n        let numTicks = 0;\n        while (numTicks < 5 || (ɵgetDOM().performanceNow() - start) < 500) {\n            this.appRef.tick();\n            numTicks++;\n        }\n        const end = ɵgetDOM().performanceNow();\n        if (record && isProfilerAvailable) {\n            win.console.profileEnd(profileName);\n        }\n        const msPerTick = (end - start) / numTicks;\n        win.console.log(`ran ${numTicks} change detection cycles`);\n        win.console.log(`${msPerTick.toFixed(2)} ms per check`);\n        return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst PROFILER_GLOBAL_NAME = 'profiler';\n/**\n * Enabled Angular debug tools that are accessible via your browser's\n * developer console.\n *\n * Usage:\n *\n * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n *    then hit Enter.\n *\n * @publicApi\n */\nfunction enableDebugTools(ref) {\n    exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));\n    return ref;\n}\n/**\n * Disables Angular tools.\n *\n * @publicApi\n */\nfunction disableDebugTools() {\n    exportNgVar(PROFILER_GLOBAL_NAME, null);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction escapeHtml(text) {\n    const escapedText = {\n        '&': '&a;',\n        '\"': '&q;',\n        '\\'': '&s;',\n        '<': '&l;',\n        '>': '&g;',\n    };\n    return text.replace(/[&\"'<>]/g, s => escapedText[s]);\n}\nfunction unescapeHtml(text) {\n    const unescapedText = {\n        '&a;': '&',\n        '&q;': '\"',\n        '&s;': '\\'',\n        '&l;': '<',\n        '&g;': '>',\n    };\n    return text.replace(/&[^;]+;/g, s => unescapedText[s]);\n}\n/**\n * Create a `StateKey<T>` that can be used to store value of type T with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n *\n * @publicApi\n */\nfunction makeStateKey(key) {\n    return key;\n}\n/**\n * A key value store that is transferred from the application on the server side to the application\n * on the client side.\n *\n * `TransferState` will be available as an injectable token. To use it import\n * `ServerTransferStateModule` on the server and `BrowserTransferStateModule` on the client.\n *\n * The values in the store are serialized/deserialized using JSON.stringify/JSON.parse. So only\n * boolean, number, string, null and non-class objects will be serialized and deserialzied in a\n * non-lossy manner.\n *\n * @publicApi\n */\nclass TransferState {\n    constructor() {\n        this.store = {};\n        this.onSerializeCallbacks = {};\n    }\n    /** @internal */\n    static init(initState) {\n        const transferState = new TransferState();\n        transferState.store = initState;\n        return transferState;\n    }\n    /**\n     * Get the value corresponding to a key. Return `defaultValue` if key is not found.\n     */\n    get(key, defaultValue) {\n        return this.store[key] !== undefined ? this.store[key] : defaultValue;\n    }\n    /**\n     * Set the value corresponding to a key.\n     */\n    set(key, value) {\n        this.store[key] = value;\n    }\n    /**\n     * Remove a key from the store.\n     */\n    remove(key) {\n        delete this.store[key];\n    }\n    /**\n     * Test whether a key exists in the store.\n     */\n    hasKey(key) {\n        return this.store.hasOwnProperty(key);\n    }\n    /**\n     * Register a callback to provide the value for a key when `toJson` is called.\n     */\n    onSerialize(key, callback) {\n        this.onSerializeCallbacks[key] = callback;\n    }\n    /**\n     * Serialize the current state of the store to JSON.\n     */\n    toJson() {\n        // Call the onSerialize callbacks and put those values into the store.\n        for (const key in this.onSerializeCallbacks) {\n            if (this.onSerializeCallbacks.hasOwnProperty(key)) {\n                try {\n                    this.store[key] = this.onSerializeCallbacks[key]();\n                }\n                catch (e) {\n                    console.warn('Exception in onSerialize callback: ', e);\n                }\n            }\n        }\n        return JSON.stringify(this.store);\n    }\n}\nTransferState.ɵfac = function TransferState_Factory(t) { return new (t || TransferState)(); };\nTransferState.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: TransferState, factory: TransferState.ɵfac });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TransferState, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\nfunction initTransferState(doc, appId) {\n    // Locate the script tag with the JSON data transferred from the server.\n    // The id of the script tag is set to the Angular appId + 'state'.\n    const script = doc.getElementById(appId + '-state');\n    let initialState = {};\n    if (script && script.textContent) {\n        try {\n            initialState = JSON.parse(unescapeHtml(script.textContent));\n        }\n        catch (e) {\n            console.warn('Exception while restoring TransferState for app ' + appId, e);\n        }\n    }\n    return TransferState.init(initialState);\n}\n/**\n * NgModule to install on the client side while using the `TransferState` to transfer state from\n * server to client.\n *\n * @publicApi\n */\nclass BrowserTransferStateModule {\n}\nBrowserTransferStateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: BrowserTransferStateModule });\nBrowserTransferStateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function BrowserTransferStateModule_Factory(t) { return new (t || BrowserTransferStateModule)(); }, providers: [{ provide: TransferState, useFactory: initTransferState, deps: [DOCUMENT, APP_ID] }] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BrowserTransferStateModule, [{\n        type: NgModule,\n        args: [{\n                providers: [{ provide: TransferState, useFactory: initTransferState, deps: [DOCUMENT, APP_ID] }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Predicates for use with {@link DebugElement}'s query functions.\n *\n * @publicApi\n */\nclass By {\n    /**\n     * Match all nodes.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n     */\n    static all() {\n        return () => true;\n    }\n    /**\n     * Match elements by the given CSS selector.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n     */\n    static css(selector) {\n        return (debugElement) => {\n            return debugElement.nativeElement != null ?\n                elementMatches(debugElement.nativeElement, selector) :\n                false;\n        };\n    }\n    /**\n     * Match nodes that have the given directive present.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n     */\n    static directive(type) {\n        return (debugNode) => debugNode.providerTokens.indexOf(type) !== -1;\n    }\n}\nfunction elementMatches(n, selector) {\n    if (ɵgetDOM().isElementNode(n)) {\n        return n.matches && n.matches(selector) ||\n            n.msMatchesSelector && n.msMatchesSelector(selector) ||\n            n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n    }\n    return false;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('10.0.11');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserModule, BrowserTransferStateModule, By, DomSanitizer, EVENT_MANAGER_PLUGINS, EventManager, HAMMER_GESTURE_CONFIG, HAMMER_LOADER, HammerGestureConfig, HammerModule, Meta, Title, TransferState, VERSION, disableDebugTools, enableDebugTools, makeStateKey, platformBrowser, BROWSER_SANITIZATION_PROVIDERS as ɵBROWSER_SANITIZATION_PROVIDERS, BROWSER_SANITIZATION_PROVIDERS__POST_R3__ as ɵBROWSER_SANITIZATION_PROVIDERS__POST_R3__, BrowserDomAdapter as ɵBrowserDomAdapter, BrowserGetTestability as ɵBrowserGetTestability, DomEventsPlugin as ɵDomEventsPlugin, DomRendererFactory2 as ɵDomRendererFactory2, DomSanitizerImpl as ɵDomSanitizerImpl, DomSharedStylesHost as ɵDomSharedStylesHost, ELEMENT_PROBE_PROVIDERS as ɵELEMENT_PROBE_PROVIDERS, ELEMENT_PROBE_PROVIDERS__POST_R3__ as ɵELEMENT_PROBE_PROVIDERS__POST_R3__, HAMMER_PROVIDERS__POST_R3__ as ɵHAMMER_PROVIDERS__POST_R3__, HammerGesturesPlugin as ɵHammerGesturesPlugin, INTERNAL_BROWSER_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS, KeyEventsPlugin as ɵKeyEventsPlugin, NAMESPACE_URIS as ɵNAMESPACE_URIS, SharedStylesHost as ɵSharedStylesHost, TRANSITION_ID as ɵTRANSITION_ID, errorHandler as ɵangular_packages_platform_browser_platform_browser_a, _document as ɵangular_packages_platform_browser_platform_browser_b, BROWSER_MODULE_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_c, createMeta as ɵangular_packages_platform_browser_platform_browser_d, createTitle as ɵangular_packages_platform_browser_platform_browser_e, initTransferState as ɵangular_packages_platform_browser_platform_browser_f, EventManagerPlugin as ɵangular_packages_platform_browser_platform_browser_g, HAMMER_PROVIDERS__PRE_R3__ as ɵangular_packages_platform_browser_platform_browser_h, HAMMER_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_i, domSanitizerImplFactory as ɵangular_packages_platform_browser_platform_browser_j, appInitializerFactory as ɵangular_packages_platform_browser_platform_browser_k, SERVER_TRANSITION_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_l, _createNgProbeR2 as ɵangular_packages_platform_browser_platform_browser_m, ELEMENT_PROBE_PROVIDERS__PRE_R3__ as ɵangular_packages_platform_browser_platform_browser_n, GenericBrowserDomAdapter as ɵangular_packages_platform_browser_platform_browser_o, escapeHtml as ɵescapeHtml, flattenStyles as ɵflattenStyles, initDomAdapter as ɵinitDomAdapter, shimContentAttribute as ɵshimContentAttribute, shimHostAttribute as ɵshimHostAttribute };\n\n//# sourceMappingURL=platform-browser.js.map","/**\n * @license Angular v10.0.11\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { InjectionToken, forwardRef, Directive, Renderer2, ElementRef, Optional, Inject, Self, ɵisPromise, ɵisObservable, Injectable, Injector, Input, Host, isDevMode, EventEmitter, SkipSelf, Output, NgModule, Version } from '@angular/core';\nimport { ɵgetDOM } from '@angular/common';\nimport { forkJoin, from } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to provide a `ControlValueAccessor` for form controls.\n *\n * See `DefaultValueAccessor` for how to implement one.\n *\n * @publicApi\n */\nimport * as ɵngcc0 from '@angular/core';\nconst NG_VALUE_ACCESSOR = new InjectionToken('NgValueAccessor');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst CHECKBOX_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CheckboxControlValueAccessor),\n    multi: true,\n};\n/**\n * @description\n * A `ControlValueAccessor` for writing a value and listening to changes on a checkbox input\n * element.\n *\n * @usageNotes\n *\n * ### Using a checkbox with a reactive form.\n *\n * The following example shows how to use a checkbox with a reactive form.\n *\n * ```ts\n * const rememberLoginControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"checkbox\" [formControl]=\"rememberLoginControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass CheckboxControlValueAccessor {\n    constructor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * @description\n         * The registered callback function called when a change event occurs on the input element.\n         */\n        this.onChange = (_) => { };\n        /**\n         * @description\n         * The registered callback function called when a blur event occurs on the input element.\n         */\n        this.onTouched = () => { };\n    }\n    /**\n     * Sets the \"checked\" property on the input element.\n     *\n     * @param value The checked value\n     */\n    writeValue(value) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'checked', value);\n    }\n    /**\n     * @description\n     * Registers a function called when the control value changes.\n     *\n     * @param fn The callback function\n     */\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    /**\n     * @description\n     * Registers a function called when the control is touched.\n     *\n     * @param fn The callback function\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the \"disabled\" property on the input element.\n     *\n     * @param isDisabled The disabled value\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n}\nCheckboxControlValueAccessor.ɵfac = function CheckboxControlValueAccessor_Factory(t) { return new (t || CheckboxControlValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCheckboxControlValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CheckboxControlValueAccessor, selectors: [[\"input\", \"type\", \"checkbox\", \"formControlName\", \"\"], [\"input\", \"type\", \"checkbox\", \"formControl\", \"\"], [\"input\", \"type\", \"checkbox\", \"ngModel\", \"\"]], hostBindings: function CheckboxControlValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"change\", function CheckboxControlValueAccessor_change_HostBindingHandler($event) { return ctx.onChange($event.target.checked); })(\"blur\", function CheckboxControlValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([CHECKBOX_VALUE_ACCESSOR])] });\nCheckboxControlValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CheckboxControlValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n                host: { '(change)': 'onChange($event.target.checked)', '(blur)': 'onTouched()' },\n                providers: [CHECKBOX_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => DefaultValueAccessor),\n    multi: true\n};\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n */\nfunction _isAndroid() {\n    const userAgent = ɵgetDOM() ? ɵgetDOM().getUserAgent() : '';\n    return /android (\\d+)/.test(userAgent.toLowerCase());\n}\n/**\n * @description\n * Provide this token to control if form directives buffer IME input until\n * the \"compositionend\" event occurs.\n * @publicApi\n */\nconst COMPOSITION_BUFFER_MODE = new InjectionToken('CompositionEventMode');\n/**\n * @description\n * The default `ControlValueAccessor` for writing a value and listening to changes on input\n * elements. The accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using the default value accessor\n *\n * The following example shows how to use an input element that activates the default value accessor\n * (in this case, a text field).\n *\n * ```ts\n * const firstNameControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"text\" [formControl]=\"firstNameControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass DefaultValueAccessor {\n    constructor(_renderer, _elementRef, _compositionMode) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._compositionMode = _compositionMode;\n        /**\n         * @description\n         * The registered callback function called when an input event occurs on the input element.\n         */\n        this.onChange = (_) => { };\n        /**\n         * @description\n         * The registered callback function called when a blur event occurs on the input element.\n         */\n        this.onTouched = () => { };\n        /** Whether the user is creating a composition string (IME events). */\n        this._composing = false;\n        if (this._compositionMode == null) {\n            this._compositionMode = !_isAndroid();\n        }\n    }\n    /**\n     * Sets the \"value\" property on the input element.\n     *\n     * @param value The checked value\n     */\n    writeValue(value) {\n        const normalizedValue = value == null ? '' : value;\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n    }\n    /**\n     * @description\n     * Registers a function called when the control value changes.\n     *\n     * @param fn The callback function\n     */\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    /**\n     * @description\n     * Registers a function called when the control is touched.\n     *\n     * @param fn The callback function\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the \"disabled\" property on the input element.\n     *\n     * @param isDisabled The disabled value\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n    /** @internal */\n    _handleInput(value) {\n        if (!this._compositionMode || (this._compositionMode && !this._composing)) {\n            this.onChange(value);\n        }\n    }\n    /** @internal */\n    _compositionStart() {\n        this._composing = true;\n    }\n    /** @internal */\n    _compositionEnd(value) {\n        this._composing = false;\n        this._compositionMode && this.onChange(value);\n    }\n}\nDefaultValueAccessor.ɵfac = function DefaultValueAccessor_Factory(t) { return new (t || DefaultValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(COMPOSITION_BUFFER_MODE, 8)); };\nDefaultValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DefaultValueAccessor, selectors: [[\"input\", \"formControlName\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"formControlName\", \"\"], [\"input\", \"formControl\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"formControl\", \"\"], [\"input\", \"ngModel\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"ngModel\", \"\"], [\"\", \"ngDefaultControl\", \"\"]], hostBindings: function DefaultValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function DefaultValueAccessor_input_HostBindingHandler($event) { return ctx._handleInput($event.target.value); })(\"blur\", function DefaultValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); })(\"compositionstart\", function DefaultValueAccessor_compositionstart_HostBindingHandler() { return ctx._compositionStart(); })(\"compositionend\", function DefaultValueAccessor_compositionend_HostBindingHandler($event) { return ctx._compositionEnd($event.target.value); });\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([DEFAULT_VALUE_ACCESSOR])] });\nDefaultValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef },\n    { type: Boolean, decorators: [{ type: Optional }, { type: Inject, args: [COMPOSITION_BUFFER_MODE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DefaultValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n                // TODO: vsavkin replace the above selector with the one below it once\n                // https://github.com/angular/angular/issues/3011 is implemented\n                // selector: '[ngModel],[formControl],[formControlName]',\n                host: {\n                    '(input)': '$any(this)._handleInput($event.target.value)',\n                    '(blur)': 'onTouched()',\n                    '(compositionstart)': '$any(this)._compositionStart()',\n                    '(compositionend)': '$any(this)._compositionEnd($event.target.value)'\n                },\n                providers: [DEFAULT_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }, { type: Boolean, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [COMPOSITION_BUFFER_MODE]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n * Base class for control directives.\n *\n * This class is only used internally in the `ReactiveFormsModule` and the `FormsModule`.\n *\n * @publicApi\n */\nclass AbstractControlDirective {\n    /**\n     * @description\n     * Reports the value of the control if it is present, otherwise null.\n     */\n    get value() {\n        return this.control ? this.control.value : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is valid. A control is considered valid if no\n     * validation errors exist with the current value.\n     * If the control is not present, null is returned.\n     */\n    get valid() {\n        return this.control ? this.control.valid : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is invalid, meaning that an error exists in the input value.\n     * If the control is not present, null is returned.\n     */\n    get invalid() {\n        return this.control ? this.control.invalid : null;\n    }\n    /**\n     * @description\n     * Reports whether a control is pending, meaning that that async validation is occurring and\n     * errors are not yet available for the input value. If the control is not present, null is\n     * returned.\n     */\n    get pending() {\n        return this.control ? this.control.pending : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is disabled, meaning that the control is disabled\n     * in the UI and is exempt from validation checks and excluded from aggregate\n     * values of ancestor controls. If the control is not present, null is returned.\n     */\n    get disabled() {\n        return this.control ? this.control.disabled : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is enabled, meaning that the control is included in ancestor\n     * calculations of validity or value. If the control is not present, null is returned.\n     */\n    get enabled() {\n        return this.control ? this.control.enabled : null;\n    }\n    /**\n     * @description\n     * Reports the control's validation errors. If the control is not present, null is returned.\n     */\n    get errors() {\n        return this.control ? this.control.errors : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is pristine, meaning that the user has not yet changed\n     * the value in the UI. If the control is not present, null is returned.\n     */\n    get pristine() {\n        return this.control ? this.control.pristine : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is dirty, meaning that the user has changed\n     * the value in the UI. If the control is not present, null is returned.\n     */\n    get dirty() {\n        return this.control ? this.control.dirty : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is touched, meaning that the user has triggered\n     * a `blur` event on it. If the control is not present, null is returned.\n     */\n    get touched() {\n        return this.control ? this.control.touched : null;\n    }\n    /**\n     * @description\n     * Reports the validation status of the control. Possible values include:\n     * 'VALID', 'INVALID', 'DISABLED', and 'PENDING'.\n     * If the control is not present, null is returned.\n     */\n    get status() {\n        return this.control ? this.control.status : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is untouched, meaning that the user has not yet triggered\n     * a `blur` event on it. If the control is not present, null is returned.\n     */\n    get untouched() {\n        return this.control ? this.control.untouched : null;\n    }\n    /**\n     * @description\n     * Returns a multicasting observable that emits a validation status whenever it is\n     * calculated for the control. If the control is not present, null is returned.\n     */\n    get statusChanges() {\n        return this.control ? this.control.statusChanges : null;\n    }\n    /**\n     * @description\n     * Returns a multicasting observable of value changes for the control that emits every time the\n     * value of the control changes in the UI or programmatically.\n     * If the control is not present, null is returned.\n     */\n    get valueChanges() {\n        return this.control ? this.control.valueChanges : null;\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return null;\n    }\n    /**\n     * @description\n     * Resets the control with the provided value if the control is present.\n     */\n    reset(value = undefined) {\n        if (this.control)\n            this.control.reset(value);\n    }\n    /**\n     * @description\n     * Reports whether the control with the given path has the error specified.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * If no path is given, this method checks for the error on the current control.\n     *\n     * @returns whether the given error is present in the control at the given path.\n     *\n     * If the control is not present, false is returned.\n     */\n    hasError(errorCode, path) {\n        return this.control ? this.control.hasError(errorCode, path) : false;\n    }\n    /**\n     * @description\n     * Reports error data for the control with the given path.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * @returns error data for that particular error. If the control or error is not present,\n     * null is returned.\n     */\n    getError(errorCode, path) {\n        return this.control ? this.control.getError(errorCode, path) : null;\n    }\n}\nAbstractControlDirective.ɵfac = function AbstractControlDirective_Factory(t) { return new (t || AbstractControlDirective)(); };\nAbstractControlDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: AbstractControlDirective });\n\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n * A base class for directives that contain multiple registered instances of `NgControl`.\n * Only used by the forms module.\n *\n * @publicApi\n */\nclass ControlContainer extends AbstractControlDirective {\n    /**\n     * @description\n     * The top-level form directive for the control.\n     */\n    get formDirective() {\n        return null;\n    }\n    /**\n     * @description\n     * The path to this group.\n     */\n    get path() {\n        return null;\n    }\n}\nControlContainer.ɵfac = function ControlContainer_Factory(t) { return ɵControlContainer_BaseFactory(t || ControlContainer); };\nControlContainer.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ControlContainer, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵControlContainer_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(ControlContainer);\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction unimplemented() {\n    throw new Error('unimplemented');\n}\n/**\n * @description\n * A base class that all `FormControl`-based directives extend. It binds a `FormControl`\n * object to a DOM element.\n *\n * @publicApi\n */\nclass NgControl extends AbstractControlDirective {\n    constructor() {\n        super(...arguments);\n        /**\n         * @description\n         * The parent form for the control.\n         *\n         * @internal\n         */\n        this._parent = null;\n        /**\n         * @description\n         * The name for the control\n         */\n        this.name = null;\n        /**\n         * @description\n         * The value accessor for the control\n         */\n        this.valueAccessor = null;\n        /**\n         * @description\n         * The uncomposed array of synchronous validators for the control\n         *\n         * @internal\n         */\n        this._rawValidators = [];\n        /**\n         * @description\n         * The uncomposed array of async validators for the control\n         *\n         * @internal\n         */\n        this._rawAsyncValidators = [];\n    }\n    /**\n     * @description\n     * The registered synchronous validator function for the control\n     *\n     * @throws An exception that this method is not implemented\n     */\n    get validator() {\n        return unimplemented();\n    }\n    /**\n     * @description\n     * The registered async validator function for the control\n     *\n     * @throws An exception that this method is not implemented\n     */\n    get asyncValidator() {\n        return unimplemented();\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass AbstractControlStatus {\n    constructor(cd) {\n        this._cd = cd;\n    }\n    get ngClassUntouched() {\n        return this._cd.control ? this._cd.control.untouched : false;\n    }\n    get ngClassTouched() {\n        return this._cd.control ? this._cd.control.touched : false;\n    }\n    get ngClassPristine() {\n        return this._cd.control ? this._cd.control.pristine : false;\n    }\n    get ngClassDirty() {\n        return this._cd.control ? this._cd.control.dirty : false;\n    }\n    get ngClassValid() {\n        return this._cd.control ? this._cd.control.valid : false;\n    }\n    get ngClassInvalid() {\n        return this._cd.control ? this._cd.control.invalid : false;\n    }\n    get ngClassPending() {\n        return this._cd.control ? this._cd.control.pending : false;\n    }\n}\nconst ngControlStatusHost = {\n    '[class.ng-untouched]': 'ngClassUntouched',\n    '[class.ng-touched]': 'ngClassTouched',\n    '[class.ng-pristine]': 'ngClassPristine',\n    '[class.ng-dirty]': 'ngClassDirty',\n    '[class.ng-valid]': 'ngClassValid',\n    '[class.ng-invalid]': 'ngClassInvalid',\n    '[class.ng-pending]': 'ngClassPending',\n};\n/**\n * @description\n * Directive automatically applied to Angular form controls that sets CSS classes\n * based on control status.\n *\n * @usageNotes\n *\n * ### CSS classes applied\n *\n * The following classes are applied as the properties become true:\n *\n * * ng-valid\n * * ng-invalid\n * * ng-pending\n * * ng-pristine\n * * ng-dirty\n * * ng-untouched\n * * ng-touched\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgControlStatus extends AbstractControlStatus {\n    constructor(cd) {\n        super(cd);\n    }\n}\nNgControlStatus.ɵfac = function NgControlStatus_Factory(t) { return new (t || NgControlStatus)(ɵngcc0.ɵɵdirectiveInject(NgControl, 2)); };\nNgControlStatus.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgControlStatus, selectors: [[\"\", \"formControlName\", \"\"], [\"\", \"ngModel\", \"\"], [\"\", \"formControl\", \"\"]], hostVars: 14, hostBindings: function NgControlStatus_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ng-untouched\", ctx.ngClassUntouched)(\"ng-touched\", ctx.ngClassTouched)(\"ng-pristine\", ctx.ngClassPristine)(\"ng-dirty\", ctx.ngClassDirty)(\"ng-valid\", ctx.ngClassValid)(\"ng-invalid\", ctx.ngClassInvalid)(\"ng-pending\", ctx.ngClassPending);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nNgControlStatus.ctorParameters = () => [\n    { type: NgControl, decorators: [{ type: Self }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgControlStatus, [{\n        type: Directive,\n        args: [{ selector: '[formControlName],[ngModel],[formControl]', host: ngControlStatusHost }]\n    }], function () { return [{ type: NgControl, decorators: [{\n                type: Self\n            }] }]; }, null); })();\n/**\n * @description\n * Directive automatically applied to Angular form groups that sets CSS classes\n * based on control status (valid/invalid/dirty/etc).\n *\n * @see `NgControlStatus`\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgControlStatusGroup extends AbstractControlStatus {\n    constructor(cd) {\n        super(cd);\n    }\n}\nNgControlStatusGroup.ɵfac = function NgControlStatusGroup_Factory(t) { return new (t || NgControlStatusGroup)(ɵngcc0.ɵɵdirectiveInject(ControlContainer, 2)); };\nNgControlStatusGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgControlStatusGroup, selectors: [[\"\", \"formGroupName\", \"\"], [\"\", \"formArrayName\", \"\"], [\"\", \"ngModelGroup\", \"\"], [\"\", \"formGroup\", \"\"], [\"form\", 3, \"ngNoForm\", \"\"], [\"\", \"ngForm\", \"\"]], hostVars: 14, hostBindings: function NgControlStatusGroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ng-untouched\", ctx.ngClassUntouched)(\"ng-touched\", ctx.ngClassTouched)(\"ng-pristine\", ctx.ngClassPristine)(\"ng-dirty\", ctx.ngClassDirty)(\"ng-valid\", ctx.ngClassValid)(\"ng-invalid\", ctx.ngClassInvalid)(\"ng-pending\", ctx.ngClassPending);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nNgControlStatusGroup.ctorParameters = () => [\n    { type: ControlContainer, decorators: [{ type: Self }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgControlStatusGroup, [{\n        type: Directive,\n        args: [{\n                selector: '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n                host: ngControlStatusHost\n            }]\n    }], function () { return [{ type: ControlContainer, decorators: [{\n                type: Self\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction isEmptyInputValue(value) {\n    // we don't check for string here so it also works with arrays\n    return value == null || value.length === 0;\n}\nfunction hasValidLength(value) {\n    // non-strict comparison is intentional, to check for both `null` and `undefined` values\n    return value != null && typeof value.length === 'number';\n}\n/**\n * @description\n * An `InjectionToken` for registering additional synchronous validators used with\n * `AbstractControl`s.\n *\n * @see `NG_ASYNC_VALIDATORS`\n *\n * @usageNotes\n *\n * ### Providing a custom validator\n *\n * The following example registers a custom validator directive. Adding the validator to the\n * existing collection of validators requires the `multi: true` option.\n *\n * ```typescript\n * @Directive({\n *   selector: '[customValidator]',\n *   providers: [{provide: NG_VALIDATORS, useExisting: CustomValidatorDirective, multi: true}]\n * })\n * class CustomValidatorDirective implements Validator {\n *   validate(control: AbstractControl): ValidationErrors | null {\n *     return { 'custom': true };\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nconst NG_VALIDATORS = new InjectionToken('NgValidators');\n/**\n * @description\n * An `InjectionToken` for registering additional asynchronous validators used with\n * `AbstractControl`s.\n *\n * @see `NG_VALIDATORS`\n *\n * @publicApi\n */\nconst NG_ASYNC_VALIDATORS = new InjectionToken('NgAsyncValidators');\n/**\n * A regular expression that matches valid e-mail addresses.\n *\n * At a high level, this regexp matches e-mail addresses of the format `local-part@tld`, where:\n * - `local-part` consists of one or more of the allowed characters (alphanumeric and some\n *   punctuation symbols).\n * - `local-part` cannot begin or end with a period (`.`).\n * - `local-part` cannot be longer than 64 characters.\n * - `tld` consists of one or more `labels` separated by periods (`.`). For example `localhost` or\n *   `foo.com`.\n * - A `label` consists of one or more of the allowed characters (alphanumeric, dashes (`-`) and\n *   periods (`.`)).\n * - A `label` cannot begin or end with a dash (`-`) or a period (`.`).\n * - A `label` cannot be longer than 63 characters.\n * - The whole address cannot be longer than 254 characters.\n *\n * ## Implementation background\n *\n * This regexp was ported over from AngularJS (see there for git history):\n * https://github.com/angular/angular.js/blob/c133ef836/src/ng/directive/input.js#L27\n * It is based on the\n * [WHATWG version](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n * lengths of different parts of the address). The main differences from the WHATWG version are:\n *   - Disallow `local-part` to begin or end with a period (`.`).\n *   - Disallow `local-part` length to exceed 64 characters.\n *   - Disallow total address length to exceed 254 characters.\n *\n * See [this commit](https://github.com/angular/angular.js/commit/f3f5cf72e) for more details.\n */\nconst EMAIL_REGEXP = /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n/**\n * @description\n * Provides a set of built-in validators that can be used by form controls.\n *\n * A validator is a function that processes a `FormControl` or collection of\n * controls and returns an error map or null. A null map means that validation has passed.\n *\n * @see [Form Validation](/guide/form-validation)\n *\n * @publicApi\n */\nclass Validators {\n    /**\n     * @description\n     * Validator that requires the control's value to be greater than or equal to the provided number.\n     * The validator exists only as a function and not as a directive.\n     *\n     * @usageNotes\n     *\n     * ### Validate against a minimum of 3\n     *\n     * ```typescript\n     * const control = new FormControl(2, Validators.min(3));\n     *\n     * console.log(control.errors); // {min: {min: 3, actual: 2}}\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `min` property if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static min(min) {\n        return (control) => {\n            if (isEmptyInputValue(control.value) || isEmptyInputValue(min)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            const value = parseFloat(control.value);\n            // Controls with NaN values after parsing should be treated as not having a\n            // minimum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-min\n            return !isNaN(value) && value < min ? { 'min': { 'min': min, 'actual': control.value } } : null;\n        };\n    }\n    /**\n     * @description\n     * Validator that requires the control's value to be less than or equal to the provided number.\n     * The validator exists only as a function and not as a directive.\n     *\n     * @usageNotes\n     *\n     * ### Validate against a maximum of 15\n     *\n     * ```typescript\n     * const control = new FormControl(16, Validators.max(15));\n     *\n     * console.log(control.errors); // {max: {max: 15, actual: 16}}\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `max` property if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static max(max) {\n        return (control) => {\n            if (isEmptyInputValue(control.value) || isEmptyInputValue(max)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            const value = parseFloat(control.value);\n            // Controls with NaN values after parsing should be treated as not having a\n            // maximum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-max\n            return !isNaN(value) && value > max ? { 'max': { 'max': max, 'actual': control.value } } : null;\n        };\n    }\n    /**\n     * @description\n     * Validator that requires the control have a non-empty value.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field is non-empty\n     *\n     * ```typescript\n     * const control = new FormControl('', Validators.required);\n     *\n     * console.log(control.errors); // {required: true}\n     * ```\n     *\n     * @returns An error map with the `required` property\n     * if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static required(control) {\n        return isEmptyInputValue(control.value) ? { 'required': true } : null;\n    }\n    /**\n     * @description\n     * Validator that requires the control's value be true. This validator is commonly\n     * used for required checkboxes.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field value is true\n     *\n     * ```typescript\n     * const control = new FormControl('', Validators.requiredTrue);\n     *\n     * console.log(control.errors); // {required: true}\n     * ```\n     *\n     * @returns An error map that contains the `required` property\n     * set to `true` if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static requiredTrue(control) {\n        return control.value === true ? null : { 'required': true };\n    }\n    /**\n     * @description\n     * Validator that requires the control's value pass an email validation test.\n     *\n     * Tests the value using a [regular\n     * expression](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions)\n     * pattern suitable for common usecases. The pattern is based on the definition of a valid email\n     * address in the [WHATWG HTML\n     * specification](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n     * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n     * lengths of different parts of the address).\n     *\n     * The differences from the WHATWG version include:\n     * - Disallow `local-part` (the part before the `@` symbol) to begin or end with a period (`.`).\n     * - Disallow `local-part` to be longer than 64 characters.\n     * - Disallow the whole address to be longer than 254 characters.\n     *\n     * If this pattern does not satisfy your business needs, you can use `Validators.pattern()` to\n     * validate the value against a different pattern.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field matches a valid email pattern\n     *\n     * ```typescript\n     * const control = new FormControl('bad@', Validators.email);\n     *\n     * console.log(control.errors); // {email: true}\n     * ```\n     *\n     * @returns An error map with the `email` property\n     * if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static email(control) {\n        if (isEmptyInputValue(control.value)) {\n            return null; // don't validate empty values to allow optional controls\n        }\n        return EMAIL_REGEXP.test(control.value) ? null : { 'email': true };\n    }\n    /**\n     * @description\n     * Validator that requires the length of the control's value to be greater than or equal\n     * to the provided minimum length. This validator is also provided by default if you use the\n     * the HTML5 `minlength` attribute. Note that the `minLength` validator is intended to be used\n     * only for types that have a numeric `length` property, such as strings or arrays. The\n     * `minLength` validator logic is also not invoked for values when their `length` property is 0\n     * (for example in case of an empty string or an empty array), to support optional controls. You\n     * can use the standard `required` validator if empty values should not be considered valid.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field has a minimum of 3 characters\n     *\n     * ```typescript\n     * const control = new FormControl('ng', Validators.minLength(3));\n     *\n     * console.log(control.errors); // {minlength: {requiredLength: 3, actualLength: 2}}\n     * ```\n     *\n     * ```html\n     * <input minlength=\"5\">\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `minlength` if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static minLength(minLength) {\n        return (control) => {\n            if (isEmptyInputValue(control.value) || !hasValidLength(control.value)) {\n                // don't validate empty values to allow optional controls\n                // don't validate values without `length` property\n                return null;\n            }\n            return control.value.length < minLength ?\n                { 'minlength': { 'requiredLength': minLength, 'actualLength': control.value.length } } :\n                null;\n        };\n    }\n    /**\n     * @description\n     * Validator that requires the length of the control's value to be less than or equal\n     * to the provided maximum length. This validator is also provided by default if you use the\n     * the HTML5 `maxlength` attribute. Note that the `maxLength` validator is intended to be used\n     * only for types that have a numeric `length` property, such as strings or arrays.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field has maximum of 5 characters\n     *\n     * ```typescript\n     * const control = new FormControl('Angular', Validators.maxLength(5));\n     *\n     * console.log(control.errors); // {maxlength: {requiredLength: 5, actualLength: 7}}\n     * ```\n     *\n     * ```html\n     * <input maxlength=\"5\">\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `maxlength` property if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static maxLength(maxLength) {\n        return (control) => {\n            return hasValidLength(control.value) && control.value.length > maxLength ?\n                { 'maxlength': { 'requiredLength': maxLength, 'actualLength': control.value.length } } :\n                null;\n        };\n    }\n    /**\n     * @description\n     * Validator that requires the control's value to match a regex pattern. This validator is also\n     * provided by default if you use the HTML5 `pattern` attribute.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field only contains letters or spaces\n     *\n     * ```typescript\n     * const control = new FormControl('1', Validators.pattern('[a-zA-Z ]*'));\n     *\n     * console.log(control.errors); // {pattern: {requiredPattern: '^[a-zA-Z ]*$', actualValue: '1'}}\n     * ```\n     *\n     * ```html\n     * <input pattern=\"[a-zA-Z ]*\">\n     * ```\n     *\n     * @param pattern A regular expression to be used as is to test the values, or a string.\n     * If a string is passed, the `^` character is prepended and the `$` character is\n     * appended to the provided string (if not already present), and the resulting regular\n     * expression is used to test the values.\n     *\n     * @returns A validator function that returns an error map with the\n     * `pattern` property if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static pattern(pattern) {\n        if (!pattern)\n            return Validators.nullValidator;\n        let regex;\n        let regexStr;\n        if (typeof pattern === 'string') {\n            regexStr = '';\n            if (pattern.charAt(0) !== '^')\n                regexStr += '^';\n            regexStr += pattern;\n            if (pattern.charAt(pattern.length - 1) !== '$')\n                regexStr += '$';\n            regex = new RegExp(regexStr);\n        }\n        else {\n            regexStr = pattern.toString();\n            regex = pattern;\n        }\n        return (control) => {\n            if (isEmptyInputValue(control.value)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            const value = control.value;\n            return regex.test(value) ? null :\n                { 'pattern': { 'requiredPattern': regexStr, 'actualValue': value } };\n        };\n    }\n    /**\n     * @description\n     * Validator that performs no operation.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static nullValidator(control) {\n        return null;\n    }\n    static compose(validators) {\n        if (!validators)\n            return null;\n        const presentValidators = validators.filter(isPresent);\n        if (presentValidators.length == 0)\n            return null;\n        return function (control) {\n            return mergeErrors(executeValidators(control, presentValidators));\n        };\n    }\n    /**\n     * @description\n     * Compose multiple async validators into a single function that returns the union\n     * of the individual error objects for the provided control.\n     *\n     * @returns A validator function that returns an error map with the\n     * merged error objects of the async validators if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static composeAsync(validators) {\n        if (!validators)\n            return null;\n        const presentValidators = validators.filter(isPresent);\n        if (presentValidators.length == 0)\n            return null;\n        return function (control) {\n            const observables = executeValidators(control, presentValidators).map(toObservable);\n            return forkJoin(observables).pipe(map(mergeErrors));\n        };\n    }\n}\nfunction isPresent(o) {\n    return o != null;\n}\nfunction toObservable(r) {\n    const obs = ɵisPromise(r) ? from(r) : r;\n    if (!(ɵisObservable(obs))) {\n        throw new Error(`Expected validator to return Promise or Observable.`);\n    }\n    return obs;\n}\nfunction mergeErrors(arrayOfErrors) {\n    let res = {};\n    // Not using Array.reduce here due to a Chrome 80 bug\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=1049982\n    arrayOfErrors.forEach((errors) => {\n        res = errors != null ? Object.assign(Object.assign({}, res), errors) : res;\n    });\n    return Object.keys(res).length === 0 ? null : res;\n}\nfunction executeValidators(control, validators) {\n    return validators.map(validator => validator(control));\n}\nfunction isValidatorFn(validator) {\n    return !validator.validate;\n}\n/**\n * Given the list of validators that may contain both functions as well as classes, return the list\n * of validator functions (convert validator classes into validator functions). This is needed to\n * have consistent structure in validators list before composing them.\n *\n * @param validators The set of validators that may contain validators both in plain function form\n *     as well as represented as a validator class.\n */\nfunction normalizeValidators(validators) {\n    return validators.map(validator => {\n        return isValidatorFn(validator) ?\n            validator :\n            ((c) => validator.validate(c));\n    });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst NUMBER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NumberValueAccessor),\n    multi: true\n};\n/**\n * @description\n * The `ControlValueAccessor` for writing a number value and listening to number input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and  `NgModel`\n * directives.\n *\n * @usageNotes\n *\n * ### Using a number input with a reactive form.\n *\n * The following example shows how to use a number input with a reactive form.\n *\n * ```ts\n * const totalCountControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"number\" [formControl]=\"totalCountControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NumberValueAccessor {\n    constructor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * @description\n         * The registered callback function called when a change or input event occurs on the input\n         * element.\n         */\n        this.onChange = (_) => { };\n        /**\n         * @description\n         * The registered callback function called when a blur event occurs on the input element.\n         */\n        this.onTouched = () => { };\n    }\n    /**\n     * Sets the \"value\" property on the input element.\n     *\n     * @param value The checked value\n     */\n    writeValue(value) {\n        // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n        const normalizedValue = value == null ? '' : value;\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n    }\n    /**\n     * @description\n     * Registers a function called when the control value changes.\n     *\n     * @param fn The callback function\n     */\n    registerOnChange(fn) {\n        this.onChange = (value) => {\n            fn(value == '' ? null : parseFloat(value));\n        };\n    }\n    /**\n     * @description\n     * Registers a function called when the control is touched.\n     *\n     * @param fn The callback function\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the \"disabled\" property on the input element.\n     *\n     * @param isDisabled The disabled value\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n}\nNumberValueAccessor.ɵfac = function NumberValueAccessor_Factory(t) { return new (t || NumberValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nNumberValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NumberValueAccessor, selectors: [[\"input\", \"type\", \"number\", \"formControlName\", \"\"], [\"input\", \"type\", \"number\", \"formControl\", \"\"], [\"input\", \"type\", \"number\", \"ngModel\", \"\"]], hostBindings: function NumberValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function NumberValueAccessor_input_HostBindingHandler($event) { return ctx.onChange($event.target.value); })(\"blur\", function NumberValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([NUMBER_VALUE_ACCESSOR])] });\nNumberValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NumberValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n                host: { '(input)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                providers: [NUMBER_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst RADIO_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RadioControlValueAccessor),\n    multi: true\n};\n/**\n * @description\n * Class used by Angular to track radio buttons. For internal use only.\n */\nclass RadioControlRegistry {\n    constructor() {\n        this._accessors = [];\n    }\n    /**\n     * @description\n     * Adds a control to the internal registry. For internal use only.\n     */\n    add(control, accessor) {\n        this._accessors.push([control, accessor]);\n    }\n    /**\n     * @description\n     * Removes a control from the internal registry. For internal use only.\n     */\n    remove(accessor) {\n        for (let i = this._accessors.length - 1; i >= 0; --i) {\n            if (this._accessors[i][1] === accessor) {\n                this._accessors.splice(i, 1);\n                return;\n            }\n        }\n    }\n    /**\n     * @description\n     * Selects a radio button. For internal use only.\n     */\n    select(accessor) {\n        this._accessors.forEach((c) => {\n            if (this._isSameGroup(c, accessor) && c[1] !== accessor) {\n                c[1].fireUncheck(accessor.value);\n            }\n        });\n    }\n    _isSameGroup(controlPair, accessor) {\n        if (!controlPair[0].control)\n            return false;\n        return controlPair[0]._parent === accessor._control._parent &&\n            controlPair[1].name === accessor.name;\n    }\n}\nRadioControlRegistry.ɵfac = function RadioControlRegistry_Factory(t) { return new (t || RadioControlRegistry)(); };\nRadioControlRegistry.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: RadioControlRegistry, factory: RadioControlRegistry.ɵfac });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RadioControlRegistry, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n/**\n * @description\n * The `ControlValueAccessor` for writing radio control values and listening to radio control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using radio buttons with reactive form directives\n *\n * The follow example shows how to use radio buttons in a reactive form. When using radio buttons in\n * a reactive form, radio buttons in the same group should have the same `formControlName`.\n * Providing a `name` attribute is optional.\n *\n * {@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass RadioControlValueAccessor {\n    constructor(_renderer, _elementRef, _registry, _injector) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._registry = _registry;\n        this._injector = _injector;\n        /**\n         * @description\n         * The registered callback function called when a change event occurs on the input element.\n         */\n        this.onChange = () => { };\n        /**\n         * @description\n         * The registered callback function called when a blur event occurs on the input element.\n         */\n        this.onTouched = () => { };\n    }\n    /**\n     * @description\n     * A lifecycle method called when the directive is initialized. For internal use only.\n     */\n    ngOnInit() {\n        this._control = this._injector.get(NgControl);\n        this._checkName();\n        this._registry.add(this._control, this);\n    }\n    /**\n     * @description\n     * Lifecycle method called before the directive's instance is destroyed. For internal use only.\n     */\n    ngOnDestroy() {\n        this._registry.remove(this);\n    }\n    /**\n     * @description\n     * Sets the \"checked\" property value on the radio input element.\n     *\n     * @param value The checked value\n     */\n    writeValue(value) {\n        this._state = value === this.value;\n        this._renderer.setProperty(this._elementRef.nativeElement, 'checked', this._state);\n    }\n    /**\n     * @description\n     * Registers a function called when the control value changes.\n     *\n     * @param fn The callback function\n     */\n    registerOnChange(fn) {\n        this._fn = fn;\n        this.onChange = () => {\n            fn(this.value);\n            this._registry.select(this);\n        };\n    }\n    /**\n     * Sets the \"value\" on the radio input element and unchecks it.\n     *\n     * @param value\n     */\n    fireUncheck(value) {\n        this.writeValue(value);\n    }\n    /**\n     * @description\n     * Registers a function called when the control is touched.\n     *\n     * @param fn The callback function\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the \"disabled\" property on the input element.\n     *\n     * @param isDisabled The disabled value\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n    _checkName() {\n        if (this.name && this.formControlName && this.name !== this.formControlName) {\n            this._throwNameError();\n        }\n        if (!this.name && this.formControlName)\n            this.name = this.formControlName;\n    }\n    _throwNameError() {\n        throw new Error(`\n      If you define both a name and a formControlName attribute on your radio button, their values\n      must match. Ex: <input type=\"radio\" formControlName=\"food\" name=\"food\">\n    `);\n    }\n}\nRadioControlValueAccessor.ɵfac = function RadioControlValueAccessor_Factory(t) { return new (t || RadioControlValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(RadioControlRegistry), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector)); };\nRadioControlValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: RadioControlValueAccessor, selectors: [[\"input\", \"type\", \"radio\", \"formControlName\", \"\"], [\"input\", \"type\", \"radio\", \"formControl\", \"\"], [\"input\", \"type\", \"radio\", \"ngModel\", \"\"]], hostBindings: function RadioControlValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"change\", function RadioControlValueAccessor_change_HostBindingHandler() { return ctx.onChange(); })(\"blur\", function RadioControlValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n    } }, inputs: { name: \"name\", formControlName: \"formControlName\", value: \"value\" }, features: [ɵngcc0.ɵɵProvidersFeature([RADIO_VALUE_ACCESSOR])] });\nRadioControlValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef },\n    { type: RadioControlRegistry },\n    { type: Injector }\n];\nRadioControlValueAccessor.propDecorators = {\n    name: [{ type: Input }],\n    formControlName: [{ type: Input }],\n    value: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RadioControlValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',\n                host: { '(change)': 'onChange()', '(blur)': 'onTouched()' },\n                providers: [RADIO_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }, { type: RadioControlRegistry }, { type: ɵngcc0.Injector }]; }, { name: [{\n            type: Input\n        }], formControlName: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst RANGE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RangeValueAccessor),\n    multi: true\n};\n/**\n * @description\n * The `ControlValueAccessor` for writing a range value and listening to range input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and  `NgModel`\n * directives.\n *\n * @usageNotes\n *\n * ### Using a range input with a reactive form\n *\n * The following example shows how to use a range input with a reactive form.\n *\n * ```ts\n * const ageControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"range\" [formControl]=\"ageControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass RangeValueAccessor {\n    constructor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * @description\n         * The registered callback function called when a change or input event occurs on the input\n         * element.\n         */\n        this.onChange = (_) => { };\n        /**\n         * @description\n         * The registered callback function called when a blur event occurs on the input element.\n         */\n        this.onTouched = () => { };\n    }\n    /**\n     * Sets the \"value\" property on the input element.\n     *\n     * @param value The checked value\n     */\n    writeValue(value) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', parseFloat(value));\n    }\n    /**\n     * @description\n     * Registers a function called when the control value changes.\n     *\n     * @param fn The callback function\n     */\n    registerOnChange(fn) {\n        this.onChange = (value) => {\n            fn(value == '' ? null : parseFloat(value));\n        };\n    }\n    /**\n     * @description\n     * Registers a function called when the control is touched.\n     *\n     * @param fn The callback function\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the \"disabled\" property on the range input element.\n     *\n     * @param isDisabled The disabled value\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n}\nRangeValueAccessor.ɵfac = function RangeValueAccessor_Factory(t) { return new (t || RangeValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nRangeValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: RangeValueAccessor, selectors: [[\"input\", \"type\", \"range\", \"formControlName\", \"\"], [\"input\", \"type\", \"range\", \"formControl\", \"\"], [\"input\", \"type\", \"range\", \"ngModel\", \"\"]], hostBindings: function RangeValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"change\", function RangeValueAccessor_change_HostBindingHandler($event) { return ctx.onChange($event.target.value); })(\"input\", function RangeValueAccessor_input_HostBindingHandler($event) { return ctx.onChange($event.target.value); })(\"blur\", function RangeValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([RANGE_VALUE_ACCESSOR])] });\nRangeValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RangeValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]',\n                host: {\n                    '(change)': 'onChange($event.target.value)',\n                    '(input)': 'onChange($event.target.value)',\n                    '(blur)': 'onTouched()'\n                },\n                providers: [RANGE_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst FormErrorExamples = {\n    formControlName: `\n    <div [formGroup]=\"myGroup\">\n      <input formControlName=\"firstName\">\n    </div>\n\n    In your class:\n\n    this.myGroup = new FormGroup({\n       firstName: new FormControl()\n    });`,\n    formGroupName: `\n    <div [formGroup]=\"myGroup\">\n       <div formGroupName=\"person\">\n          <input formControlName=\"firstName\">\n       </div>\n    </div>\n\n    In your class:\n\n    this.myGroup = new FormGroup({\n       person: new FormGroup({ firstName: new FormControl() })\n    });`,\n    formArrayName: `\n    <div [formGroup]=\"myGroup\">\n      <div formArrayName=\"cities\">\n        <div *ngFor=\"let city of cityArray.controls; index as i\">\n          <input [formControlName]=\"i\">\n        </div>\n      </div>\n    </div>\n\n    In your class:\n\n    this.cityArray = new FormArray([new FormControl('SF')]);\n    this.myGroup = new FormGroup({\n      cities: this.cityArray\n    });`,\n    ngModelGroup: `\n    <form>\n       <div ngModelGroup=\"person\">\n          <input [(ngModel)]=\"person.name\" name=\"firstName\">\n       </div>\n    </form>`,\n    ngModelWithFormGroup: `\n    <div [formGroup]=\"myGroup\">\n       <input formControlName=\"firstName\">\n       <input [(ngModel)]=\"showMoreControls\" [ngModelOptions]=\"{standalone: true}\">\n    </div>\n  `\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ReactiveErrors {\n    static controlParentException() {\n        throw new Error(`formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\n       directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      ${FormErrorExamples.formControlName}`);\n    }\n    static ngModelGroupException() {\n        throw new Error(`formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\n       that also have a \"form\" prefix: formGroupName, formArrayName, or formGroup.\n\n       Option 1:  Update the parent to be formGroupName (reactive form strategy)\n\n        ${FormErrorExamples.formGroupName}\n\n        Option 2: Use ngModel instead of formControlName (template-driven strategy)\n\n        ${FormErrorExamples.ngModelGroup}`);\n    }\n    static missingFormException() {\n        throw new Error(`formGroup expects a FormGroup instance. Please pass one in.\n\n       Example:\n\n       ${FormErrorExamples.formControlName}`);\n    }\n    static groupParentException() {\n        throw new Error(`formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      ${FormErrorExamples.formGroupName}`);\n    }\n    static arrayParentException() {\n        throw new Error(`formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\n       directive and pass it an existing FormGroup instance (you can create one in your class).\n\n        Example:\n\n        ${FormErrorExamples.formArrayName}`);\n    }\n    static disabledAttrWarning() {\n        console.warn(`\n      It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\n      when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\n      you. We recommend using this approach to avoid 'changed after checked' errors.\n\n      Example:\n      form = new FormGroup({\n        first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\n        last: new FormControl('Drew', Validators.required)\n      });\n    `);\n    }\n    static ngModelWarning(directiveName) {\n        console.warn(`\n    It looks like you're using ngModel on the same form field as ${directiveName}.\n    Support for using the ngModel input property and ngModelChange event with\n    reactive form directives has been deprecated in Angular v6 and will be removed\n    in a future version of Angular.\n\n    For more information on this, see our API docs here:\n    https://angular.io/api/forms/${directiveName === 'formControl' ? 'FormControlDirective' :\n            'FormControlName'}#use-with-ngmodel\n    `);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst SELECT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SelectControlValueAccessor),\n    multi: true\n};\nfunction _buildValueString(id, value) {\n    if (id == null)\n        return `${value}`;\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return `${id}: ${value}`.slice(0, 50);\n}\nfunction _extractId(valueString) {\n    return valueString.split(':')[0];\n}\n/**\n * @description\n * The `ControlValueAccessor` for writing select control values and listening to select control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using select controls in a reactive form\n *\n * The following examples show how to use a select control in a reactive form.\n *\n * {@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n *\n * ### Using select controls in a template-driven form\n *\n * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n * attribute to the main `<select>` tag.\n *\n * {@example forms/ts/selectControl/select_control_example.ts region='Component'}\n *\n * ### Customizing option selection\n *\n * Angular uses object identity to select option. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects option by the return value of the function.\n *\n * ```ts\n * const selectedCountriesControl = new FormControl();\n * ```\n *\n * ```\n * <select [compareWith]=\"compareFn\"  [formControl]=\"selectedCountriesControl\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n *\n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n *\n * **Note:** We listen to the 'change' event because 'input' events aren't fired\n * for selects in Firefox and IE:\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1024350\n * https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/4660045/\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass SelectControlValueAccessor {\n    constructor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /** @internal */\n        this._optionMap = new Map();\n        /** @internal */\n        this._idCounter = 0;\n        /**\n         * @description\n         * The registered callback function called when a change event occurs on the input element.\n         */\n        this.onChange = (_) => { };\n        /**\n         * @description\n         * The registered callback function called when a blur event occurs on the input element.\n         */\n        this.onTouched = () => { };\n        this._compareWith = Object.is;\n    }\n    /**\n     * @description\n     * Tracks the option comparison algorithm for tracking identities when\n     * checking for changes.\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function') {\n            throw new Error(`compareWith must be a function, but received ${JSON.stringify(fn)}`);\n        }\n        this._compareWith = fn;\n    }\n    /**\n     * Sets the \"value\" property on the input element. The \"selectedIndex\"\n     * property is also set if an ID is provided on the option element.\n     *\n     * @param value The checked value\n     */\n    writeValue(value) {\n        this.value = value;\n        const id = this._getOptionId(value);\n        if (id == null) {\n            this._renderer.setProperty(this._elementRef.nativeElement, 'selectedIndex', -1);\n        }\n        const valueString = _buildValueString(id, value);\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', valueString);\n    }\n    /**\n     * @description\n     * Registers a function called when the control value changes.\n     *\n     * @param fn The callback function\n     */\n    registerOnChange(fn) {\n        this.onChange = (valueString) => {\n            this.value = this._getOptionValue(valueString);\n            fn(this.value);\n        };\n    }\n    /**\n     * @description\n     * Registers a function called when the control is touched.\n     *\n     * @param fn The callback function\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the \"disabled\" property on the select input element.\n     *\n     * @param isDisabled The disabled value\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n    /** @internal */\n    _registerOption() {\n        return (this._idCounter++).toString();\n    }\n    /** @internal */\n    _getOptionId(value) {\n        for (const id of Array.from(this._optionMap.keys())) {\n            if (this._compareWith(this._optionMap.get(id), value))\n                return id;\n        }\n        return null;\n    }\n    /** @internal */\n    _getOptionValue(valueString) {\n        const id = _extractId(valueString);\n        return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n    }\n}\nSelectControlValueAccessor.ɵfac = function SelectControlValueAccessor_Factory(t) { return new (t || SelectControlValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nSelectControlValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SelectControlValueAccessor, selectors: [[\"select\", \"formControlName\", \"\", 3, \"multiple\", \"\"], [\"select\", \"formControl\", \"\", 3, \"multiple\", \"\"], [\"select\", \"ngModel\", \"\", 3, \"multiple\", \"\"]], hostBindings: function SelectControlValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"change\", function SelectControlValueAccessor_change_HostBindingHandler($event) { return ctx.onChange($event.target.value); })(\"blur\", function SelectControlValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n    } }, inputs: { compareWith: \"compareWith\" }, features: [ɵngcc0.ɵɵProvidersFeature([SELECT_VALUE_ACCESSOR])] });\nSelectControlValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef }\n];\nSelectControlValueAccessor.propDecorators = {\n    compareWith: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SelectControlValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n                host: { '(change)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                providers: [SELECT_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, { compareWith: [{\n            type: Input\n        }] }); })();\n/**\n * @description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see `SelectControlValueAccessor`\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgSelectOption {\n    constructor(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (this._select)\n            this.id = this._select._registerOption();\n    }\n    /**\n     * @description\n     * Tracks the value bound to the option element. Unlike the value binding,\n     * ngValue supports binding to objects.\n     */\n    set ngValue(value) {\n        if (this._select == null)\n            return;\n        this._select._optionMap.set(this.id, value);\n        this._setElementValue(_buildValueString(this.id, value));\n        this._select.writeValue(this._select.value);\n    }\n    /**\n     * @description\n     * Tracks simple string values bound to the option element.\n     * For objects, use the `ngValue` input binding.\n     */\n    set value(value) {\n        this._setElementValue(value);\n        if (this._select)\n            this._select.writeValue(this._select.value);\n    }\n    /** @internal */\n    _setElementValue(value) {\n        this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    }\n    /**\n     * @description\n     * Lifecycle method called before the directive's instance is destroyed. For internal use only.\n     */\n    ngOnDestroy() {\n        if (this._select) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    }\n}\nNgSelectOption.ɵfac = function NgSelectOption_Factory(t) { return new (t || NgSelectOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(SelectControlValueAccessor, 9)); };\nNgSelectOption.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgSelectOption, selectors: [[\"option\"]], inputs: { ngValue: \"ngValue\", value: \"value\" } });\nNgSelectOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: SelectControlValueAccessor, decorators: [{ type: Optional }, { type: Host }] }\n];\nNgSelectOption.propDecorators = {\n    ngValue: [{ type: Input, args: ['ngValue',] }],\n    value: [{ type: Input, args: ['value',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgSelectOption, [{\n        type: Directive,\n        args: [{ selector: 'option' }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: SelectControlValueAccessor, decorators: [{\n                type: Optional\n            }, {\n                type: Host\n            }] }]; }, { ngValue: [{\n            type: Input,\n            args: ['ngValue']\n        }], value: [{\n            type: Input,\n            args: ['value']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst SELECT_MULTIPLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SelectMultipleControlValueAccessor),\n    multi: true\n};\nfunction _buildValueString$1(id, value) {\n    if (id == null)\n        return `${value}`;\n    if (typeof value === 'string')\n        value = `'${value}'`;\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return `${id}: ${value}`.slice(0, 50);\n}\nfunction _extractId$1(valueString) {\n    return valueString.split(':')[0];\n}\n/** Mock interface for HTMLCollection */\nclass HTMLCollection {\n}\n/**\n * @description\n * The `ControlValueAccessor` for writing multi-select control values and listening to multi-select\n * control changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @see `SelectControlValueAccessor`\n *\n * @usageNotes\n *\n * ### Using a multi-select control\n *\n * The follow example shows you how to use a multi-select control with a reactive form.\n *\n * ```ts\n * const countryControl = new FormControl();\n * ```\n *\n * ```\n * <select multiple name=\"countries\" [formControl]=\"countryControl\">\n *   <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *     {{ country.name }}\n *   </option>\n * </select>\n * ```\n *\n * ### Customizing option selection\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * See the `SelectControlValueAccessor` for usage.\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass SelectMultipleControlValueAccessor {\n    constructor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /** @internal */\n        this._optionMap = new Map();\n        /** @internal */\n        this._idCounter = 0;\n        /**\n         * @description\n         * The registered callback function called when a change event occurs on the input element.\n         */\n        this.onChange = (_) => { };\n        /**\n         * @description\n         * The registered callback function called when a blur event occurs on the input element.\n         */\n        this.onTouched = () => { };\n        this._compareWith = Object.is;\n    }\n    /**\n     * @description\n     * Tracks the option comparison algorithm for tracking identities when\n     * checking for changes.\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function') {\n            throw new Error(`compareWith must be a function, but received ${JSON.stringify(fn)}`);\n        }\n        this._compareWith = fn;\n    }\n    /**\n     * @description\n     * Sets the \"value\" property on one or of more\n     * of the select's options.\n     *\n     * @param value The value\n     */\n    writeValue(value) {\n        this.value = value;\n        let optionSelectedStateSetter;\n        if (Array.isArray(value)) {\n            // convert values to ids\n            const ids = value.map((v) => this._getOptionId(v));\n            optionSelectedStateSetter = (opt, o) => {\n                opt._setSelected(ids.indexOf(o.toString()) > -1);\n            };\n        }\n        else {\n            optionSelectedStateSetter = (opt, o) => {\n                opt._setSelected(false);\n            };\n        }\n        this._optionMap.forEach(optionSelectedStateSetter);\n    }\n    /**\n     * @description\n     * Registers a function called when the control value changes\n     * and writes an array of the selected options.\n     *\n     * @param fn The callback function\n     */\n    registerOnChange(fn) {\n        this.onChange = (_) => {\n            const selected = [];\n            if (_.selectedOptions !== undefined) {\n                const options = _.selectedOptions;\n                for (let i = 0; i < options.length; i++) {\n                    const opt = options.item(i);\n                    const val = this._getOptionValue(opt.value);\n                    selected.push(val);\n                }\n            }\n            // Degrade on IE\n            else {\n                const options = _.options;\n                for (let i = 0; i < options.length; i++) {\n                    const opt = options.item(i);\n                    if (opt.selected) {\n                        const val = this._getOptionValue(opt.value);\n                        selected.push(val);\n                    }\n                }\n            }\n            this.value = selected;\n            fn(selected);\n        };\n    }\n    /**\n     * @description\n     * Registers a function called when the control is touched.\n     *\n     * @param fn The callback function\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the \"disabled\" property on the select input element.\n     *\n     * @param isDisabled The disabled value\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n    /** @internal */\n    _registerOption(value) {\n        const id = (this._idCounter++).toString();\n        this._optionMap.set(id, value);\n        return id;\n    }\n    /** @internal */\n    _getOptionId(value) {\n        for (const id of Array.from(this._optionMap.keys())) {\n            if (this._compareWith(this._optionMap.get(id)._value, value))\n                return id;\n        }\n        return null;\n    }\n    /** @internal */\n    _getOptionValue(valueString) {\n        const id = _extractId$1(valueString);\n        return this._optionMap.has(id) ? this._optionMap.get(id)._value : valueString;\n    }\n}\nSelectMultipleControlValueAccessor.ɵfac = function SelectMultipleControlValueAccessor_Factory(t) { return new (t || SelectMultipleControlValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nSelectMultipleControlValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SelectMultipleControlValueAccessor, selectors: [[\"select\", \"multiple\", \"\", \"formControlName\", \"\"], [\"select\", \"multiple\", \"\", \"formControl\", \"\"], [\"select\", \"multiple\", \"\", \"ngModel\", \"\"]], hostBindings: function SelectMultipleControlValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"change\", function SelectMultipleControlValueAccessor_change_HostBindingHandler($event) { return ctx.onChange($event.target); })(\"blur\", function SelectMultipleControlValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n    } }, inputs: { compareWith: \"compareWith\" }, features: [ɵngcc0.ɵɵProvidersFeature([SELECT_MULTIPLE_VALUE_ACCESSOR])] });\nSelectMultipleControlValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef }\n];\nSelectMultipleControlValueAccessor.propDecorators = {\n    compareWith: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SelectMultipleControlValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n                host: { '(change)': 'onChange($event.target)', '(blur)': 'onTouched()' },\n                providers: [SELECT_MULTIPLE_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, { compareWith: [{\n            type: Input\n        }] }); })();\n/**\n * @description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see `SelectMultipleControlValueAccessor`\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass ɵNgSelectMultipleOption {\n    constructor(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (this._select) {\n            this.id = this._select._registerOption(this);\n        }\n    }\n    /**\n     * @description\n     * Tracks the value bound to the option element. Unlike the value binding,\n     * ngValue supports binding to objects.\n     */\n    set ngValue(value) {\n        if (this._select == null)\n            return;\n        this._value = value;\n        this._setElementValue(_buildValueString$1(this.id, value));\n        this._select.writeValue(this._select.value);\n    }\n    /**\n     * @description\n     * Tracks simple string values bound to the option element.\n     * For objects, use the `ngValue` input binding.\n     */\n    set value(value) {\n        if (this._select) {\n            this._value = value;\n            this._setElementValue(_buildValueString$1(this.id, value));\n            this._select.writeValue(this._select.value);\n        }\n        else {\n            this._setElementValue(value);\n        }\n    }\n    /** @internal */\n    _setElementValue(value) {\n        this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    }\n    /** @internal */\n    _setSelected(selected) {\n        this._renderer.setProperty(this._element.nativeElement, 'selected', selected);\n    }\n    /**\n     * @description\n     * Lifecycle method called before the directive's instance is destroyed. For internal use only.\n     */\n    ngOnDestroy() {\n        if (this._select) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    }\n}\nɵNgSelectMultipleOption.ɵfac = function ɵNgSelectMultipleOption_Factory(t) { return new (t || ɵNgSelectMultipleOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(SelectMultipleControlValueAccessor, 9)); };\nɵNgSelectMultipleOption.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ɵNgSelectMultipleOption, selectors: [[\"option\"]], inputs: { ngValue: \"ngValue\", value: \"value\" } });\nɵNgSelectMultipleOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: SelectMultipleControlValueAccessor, decorators: [{ type: Optional }, { type: Host }] }\n];\nɵNgSelectMultipleOption.propDecorators = {\n    ngValue: [{ type: Input, args: ['ngValue',] }],\n    value: [{ type: Input, args: ['value',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ɵNgSelectMultipleOption, [{\n        type: Directive,\n        args: [{ selector: 'option' }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: SelectMultipleControlValueAccessor, decorators: [{\n                type: Optional\n            }, {\n                type: Host\n            }] }]; }, { ngValue: [{\n            type: Input,\n            args: ['ngValue']\n        }], value: [{\n            type: Input,\n            args: ['value']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction controlPath(name, parent) {\n    return [...parent.path, name];\n}\nfunction setUpControl(control, dir) {\n    if (!control)\n        _throwError(dir, 'Cannot find control with');\n    if (!dir.valueAccessor)\n        _throwError(dir, 'No value accessor for form control with');\n    control.validator = Validators.compose([control.validator, dir.validator]);\n    control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n    dir.valueAccessor.writeValue(control.value);\n    setUpViewChangePipeline(control, dir);\n    setUpModelChangePipeline(control, dir);\n    setUpBlurPipeline(control, dir);\n    if (dir.valueAccessor.setDisabledState) {\n        control.registerOnDisabledChange((isDisabled) => {\n            dir.valueAccessor.setDisabledState(isDisabled);\n        });\n    }\n    // re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n    dir._rawValidators.forEach((validator) => {\n        if (validator.registerOnValidatorChange)\n            validator.registerOnValidatorChange(() => control.updateValueAndValidity());\n    });\n    dir._rawAsyncValidators.forEach((validator) => {\n        if (validator.registerOnValidatorChange)\n            validator.registerOnValidatorChange(() => control.updateValueAndValidity());\n    });\n}\nfunction cleanUpControl(control, dir) {\n    dir.valueAccessor.registerOnChange(() => _noControlError(dir));\n    dir.valueAccessor.registerOnTouched(() => _noControlError(dir));\n    dir._rawValidators.forEach((validator) => {\n        if (validator.registerOnValidatorChange) {\n            validator.registerOnValidatorChange(null);\n        }\n    });\n    dir._rawAsyncValidators.forEach((validator) => {\n        if (validator.registerOnValidatorChange) {\n            validator.registerOnValidatorChange(null);\n        }\n    });\n    if (control)\n        control._clearChangeFns();\n}\nfunction setUpViewChangePipeline(control, dir) {\n    dir.valueAccessor.registerOnChange((newValue) => {\n        control._pendingValue = newValue;\n        control._pendingChange = true;\n        control._pendingDirty = true;\n        if (control.updateOn === 'change')\n            updateControl(control, dir);\n    });\n}\nfunction setUpBlurPipeline(control, dir) {\n    dir.valueAccessor.registerOnTouched(() => {\n        control._pendingTouched = true;\n        if (control.updateOn === 'blur' && control._pendingChange)\n            updateControl(control, dir);\n        if (control.updateOn !== 'submit')\n            control.markAsTouched();\n    });\n}\nfunction updateControl(control, dir) {\n    if (control._pendingDirty)\n        control.markAsDirty();\n    control.setValue(control._pendingValue, { emitModelToViewChange: false });\n    dir.viewToModelUpdate(control._pendingValue);\n    control._pendingChange = false;\n}\nfunction setUpModelChangePipeline(control, dir) {\n    control.registerOnChange((newValue, emitModelEvent) => {\n        // control -> view\n        dir.valueAccessor.writeValue(newValue);\n        // control -> ngModel\n        if (emitModelEvent)\n            dir.viewToModelUpdate(newValue);\n    });\n}\nfunction setUpFormContainer(control, dir) {\n    if (control == null)\n        _throwError(dir, 'Cannot find control with');\n    control.validator = Validators.compose([control.validator, dir.validator]);\n    control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n}\nfunction _noControlError(dir) {\n    return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n}\nfunction _throwError(dir, message) {\n    let messageEnd;\n    if (dir.path.length > 1) {\n        messageEnd = `path: '${dir.path.join(' -> ')}'`;\n    }\n    else if (dir.path[0]) {\n        messageEnd = `name: '${dir.path}'`;\n    }\n    else {\n        messageEnd = 'unspecified name attribute';\n    }\n    throw new Error(`${message} ${messageEnd}`);\n}\nfunction composeValidators(validators) {\n    return validators != null ? Validators.compose(normalizeValidators(validators)) :\n        null;\n}\nfunction composeAsyncValidators(validators) {\n    return validators != null ?\n        Validators.composeAsync(normalizeValidators(validators)) :\n        null;\n}\nfunction isPropertyUpdated(changes, viewModel) {\n    if (!changes.hasOwnProperty('model'))\n        return false;\n    const change = changes['model'];\n    if (change.isFirstChange())\n        return true;\n    return !Object.is(viewModel, change.currentValue);\n}\nconst BUILTIN_ACCESSORS = [\n    CheckboxControlValueAccessor,\n    RangeValueAccessor,\n    NumberValueAccessor,\n    SelectControlValueAccessor,\n    SelectMultipleControlValueAccessor,\n    RadioControlValueAccessor,\n];\nfunction isBuiltInAccessor(valueAccessor) {\n    return BUILTIN_ACCESSORS.some(a => valueAccessor.constructor === a);\n}\nfunction syncPendingControls(form, directives) {\n    form._syncPendingControls();\n    directives.forEach(dir => {\n        const control = dir.control;\n        if (control.updateOn === 'submit' && control._pendingChange) {\n            dir.viewToModelUpdate(control._pendingValue);\n            control._pendingChange = false;\n        }\n    });\n}\n// TODO: vsavkin remove it once https://github.com/angular/angular/issues/3011 is implemented\nfunction selectValueAccessor(dir, valueAccessors) {\n    if (!valueAccessors)\n        return null;\n    if (!Array.isArray(valueAccessors))\n        _throwError(dir, 'Value accessor was not provided as an array for form control with');\n    let defaultAccessor = undefined;\n    let builtinAccessor = undefined;\n    let customAccessor = undefined;\n    valueAccessors.forEach((v) => {\n        if (v.constructor === DefaultValueAccessor) {\n            defaultAccessor = v;\n        }\n        else if (isBuiltInAccessor(v)) {\n            if (builtinAccessor)\n                _throwError(dir, 'More than one built-in value accessor matches form control with');\n            builtinAccessor = v;\n        }\n        else {\n            if (customAccessor)\n                _throwError(dir, 'More than one custom value accessor matches form control with');\n            customAccessor = v;\n        }\n    });\n    if (customAccessor)\n        return customAccessor;\n    if (builtinAccessor)\n        return builtinAccessor;\n    if (defaultAccessor)\n        return defaultAccessor;\n    _throwError(dir, 'No valid value accessor for form control with');\n    return null;\n}\nfunction removeDir(list, el) {\n    const index = list.indexOf(el);\n    if (index > -1)\n        list.splice(index, 1);\n}\n// TODO(kara): remove after deprecation period\nfunction _ngModelWarning(name, type, instance, warningConfig) {\n    if (!isDevMode() || warningConfig === 'never')\n        return;\n    if (((warningConfig === null || warningConfig === 'once') && !type._ngModelWarningSentOnce) ||\n        (warningConfig === 'always' && !instance._ngModelWarningSent)) {\n        ReactiveErrors.ngModelWarning(name);\n        type._ngModelWarningSentOnce = true;\n        instance._ngModelWarningSent = true;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reports that a FormControl is valid, meaning that no errors exist in the input value.\n *\n * @see `status`\n */\nconst VALID = 'VALID';\n/**\n * Reports that a FormControl is invalid, meaning that an error exists in the input value.\n *\n * @see `status`\n */\nconst INVALID = 'INVALID';\n/**\n * Reports that a FormControl is pending, meaning that that async validation is occurring and\n * errors are not yet available for the input value.\n *\n * @see `markAsPending`\n * @see `status`\n */\nconst PENDING = 'PENDING';\n/**\n * Reports that a FormControl is disabled, meaning that the control is exempt from ancestor\n * calculations of validity or value.\n *\n * @see `markAsDisabled`\n * @see `status`\n */\nconst DISABLED = 'DISABLED';\nfunction _find(control, path, delimiter) {\n    if (path == null)\n        return null;\n    if (!Array.isArray(path)) {\n        path = path.split(delimiter);\n    }\n    if (Array.isArray(path) && path.length === 0)\n        return null;\n    // Not using Array.reduce here due to a Chrome 80 bug\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=1049982\n    let controlToFind = control;\n    path.forEach((name) => {\n        if (controlToFind instanceof FormGroup) {\n            controlToFind = controlToFind.controls.hasOwnProperty(name) ?\n                controlToFind.controls[name] :\n                null;\n        }\n        else if (controlToFind instanceof FormArray) {\n            controlToFind = controlToFind.at(name) || null;\n        }\n        else {\n            controlToFind = null;\n        }\n    });\n    return controlToFind;\n}\nfunction coerceToValidator(validatorOrOpts) {\n    const validator = isOptionsObj(validatorOrOpts) ? validatorOrOpts.validators : validatorOrOpts;\n    return Array.isArray(validator) ? composeValidators(validator) : validator || null;\n}\nfunction coerceToAsyncValidator(asyncValidator, validatorOrOpts) {\n    const origAsyncValidator = isOptionsObj(validatorOrOpts) ? validatorOrOpts.asyncValidators : asyncValidator;\n    return Array.isArray(origAsyncValidator) ? composeAsyncValidators(origAsyncValidator) :\n        origAsyncValidator || null;\n}\nfunction isOptionsObj(validatorOrOpts) {\n    return validatorOrOpts != null && !Array.isArray(validatorOrOpts) &&\n        typeof validatorOrOpts === 'object';\n}\n/**\n * This is the base class for `FormControl`, `FormGroup`, and `FormArray`.\n *\n * It provides some of the shared behavior that all controls and groups of controls have, like\n * running validators, calculating status, and resetting state. It also defines the properties\n * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n * instantiated directly.\n *\n * @see [Forms Guide](/guide/forms)\n * @see [Reactive Forms Guide](/guide/reactive-forms)\n * @see [Dynamic Forms Guide](/guide/dynamic-form)\n *\n * @publicApi\n */\nclass AbstractControl {\n    /**\n     * Initialize the AbstractControl instance.\n     *\n     * @param validator The function that determines the synchronous validity of this control.\n     * @param asyncValidator The function that determines the asynchronous validity of this\n     * control.\n     */\n    constructor(validator, asyncValidator) {\n        this.validator = validator;\n        this.asyncValidator = asyncValidator;\n        /** @internal */\n        this._onCollectionChange = () => { };\n        /**\n         * A control is `pristine` if the user has not yet changed\n         * the value in the UI.\n         *\n         * @returns True if the user has not yet changed the value in the UI; compare `dirty`.\n         * Programmatic changes to a control's value do not mark it dirty.\n         */\n        this.pristine = true;\n        /**\n         * True if the control is marked as `touched`.\n         *\n         * A control is marked `touched` once the user has triggered\n         * a `blur` event on it.\n         */\n        this.touched = false;\n        /** @internal */\n        this._onDisabledChange = [];\n    }\n    /**\n     * The parent control.\n     */\n    get parent() {\n        return this._parent;\n    }\n    /**\n     * A control is `valid` when its `status` is `VALID`.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if the control has passed all of its validation tests,\n     * false otherwise.\n     */\n    get valid() {\n        return this.status === VALID;\n    }\n    /**\n     * A control is `invalid` when its `status` is `INVALID`.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if this control has failed one or more of its validation checks,\n     * false otherwise.\n     */\n    get invalid() {\n        return this.status === INVALID;\n    }\n    /**\n     * A control is `pending` when its `status` is `PENDING`.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if this control is in the process of conducting a validation check,\n     * false otherwise.\n     */\n    get pending() {\n        return this.status == PENDING;\n    }\n    /**\n     * A control is `disabled` when its `status` is `DISABLED`.\n     *\n     * Disabled controls are exempt from validation checks and\n     * are not included in the aggregate value of their ancestor\n     * controls.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if the control is disabled, false otherwise.\n     */\n    get disabled() {\n        return this.status === DISABLED;\n    }\n    /**\n     * A control is `enabled` as long as its `status` is not `DISABLED`.\n     *\n     * @returns True if the control has any status other than 'DISABLED',\n     * false if the status is 'DISABLED'.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     */\n    get enabled() {\n        return this.status !== DISABLED;\n    }\n    /**\n     * A control is `dirty` if the user has changed the value\n     * in the UI.\n     *\n     * @returns True if the user has changed the value of this control in the UI; compare `pristine`.\n     * Programmatic changes to a control's value do not mark it dirty.\n     */\n    get dirty() {\n        return !this.pristine;\n    }\n    /**\n     * True if the control has not been marked as touched\n     *\n     * A control is `untouched` if the user has not yet triggered\n     * a `blur` event on it.\n     */\n    get untouched() {\n        return !this.touched;\n    }\n    /**\n     * Reports the update strategy of the `AbstractControl` (meaning\n     * the event on which the control updates itself).\n     * Possible values: `'change'` | `'blur'` | `'submit'`\n     * Default value: `'change'`\n     */\n    get updateOn() {\n        return this._updateOn ? this._updateOn : (this.parent ? this.parent.updateOn : 'change');\n    }\n    /**\n     * Sets the synchronous validators that are active on this control.  Calling\n     * this overwrites any existing sync validators.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     */\n    setValidators(newValidator) {\n        this.validator = coerceToValidator(newValidator);\n    }\n    /**\n     * Sets the async validators that are active on this control. Calling this\n     * overwrites any existing async validators.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     */\n    setAsyncValidators(newValidator) {\n        this.asyncValidator = coerceToAsyncValidator(newValidator);\n    }\n    /**\n     * Empties out the sync validator list.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     */\n    clearValidators() {\n        this.validator = null;\n    }\n    /**\n     * Empties out the async validator list.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     */\n    clearAsyncValidators() {\n        this.asyncValidator = null;\n    }\n    /**\n     * Marks the control as `touched`. A control is touched by focus and\n     * blur events that do not change the value.\n     *\n     * @see `markAsUntouched()`\n     * @see `markAsDirty()`\n     * @see `markAsPristine()`\n     *\n     * @param opts Configuration options that determine how the control propagates changes\n     * and emits events after marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     */\n    markAsTouched(opts = {}) {\n        this.touched = true;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsTouched(opts);\n        }\n    }\n    /**\n     * Marks the control and all its descendant controls as `touched`.\n     * @see `markAsTouched()`\n     */\n    markAllAsTouched() {\n        this.markAsTouched({ onlySelf: true });\n        this._forEachChild((control) => control.markAllAsTouched());\n    }\n    /**\n     * Marks the control as `untouched`.\n     *\n     * If the control has any children, also marks all children as `untouched`\n     * and recalculates the `touched` status of all parent controls.\n     *\n     * @see `markAsTouched()`\n     * @see `markAsDirty()`\n     * @see `markAsPristine()`\n     *\n     * @param opts Configuration options that determine how the control propagates changes\n     * and emits events after the marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     */\n    markAsUntouched(opts = {}) {\n        this.touched = false;\n        this._pendingTouched = false;\n        this._forEachChild((control) => {\n            control.markAsUntouched({ onlySelf: true });\n        });\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updateTouched(opts);\n        }\n    }\n    /**\n     * Marks the control as `dirty`. A control becomes dirty when\n     * the control's value is changed through the UI; compare `markAsTouched`.\n     *\n     * @see `markAsTouched()`\n     * @see `markAsUntouched()`\n     * @see `markAsPristine()`\n     *\n     * @param opts Configuration options that determine how the control propagates changes\n     * and emits events after marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     */\n    markAsDirty(opts = {}) {\n        this.pristine = false;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsDirty(opts);\n        }\n    }\n    /**\n     * Marks the control as `pristine`.\n     *\n     * If the control has any children, marks all children as `pristine`,\n     * and recalculates the `pristine` status of all parent\n     * controls.\n     *\n     * @see `markAsTouched()`\n     * @see `markAsUntouched()`\n     * @see `markAsDirty()`\n     *\n     * @param opts Configuration options that determine how the control emits events after\n     * marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     */\n    markAsPristine(opts = {}) {\n        this.pristine = true;\n        this._pendingDirty = false;\n        this._forEachChild((control) => {\n            control.markAsPristine({ onlySelf: true });\n        });\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updatePristine(opts);\n        }\n    }\n    /**\n     * Marks the control as `pending`.\n     *\n     * A control is pending while the control performs async validation.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @param opts Configuration options that determine how the control propagates changes and\n     * emits events after marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     * * `emitEvent`: When true or not supplied (the default), the `statusChanges`\n     * observable emits an event with the latest status the control is marked pending.\n     * When false, no events are emitted.\n     *\n     */\n    markAsPending(opts = {}) {\n        this.status = PENDING;\n        if (opts.emitEvent !== false) {\n            this.statusChanges.emit(this.status);\n        }\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsPending(opts);\n        }\n    }\n    /**\n     * Disables the control. This means the control is exempt from validation checks and\n     * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n     *\n     * If the control has children, all children are also disabled.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @param opts Configuration options that determine how the control propagates\n     * changes and emits events after the control is disabled.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is disabled.\n     * When false, no events are emitted.\n     */\n    disable(opts = {}) {\n        // If parent has been marked artificially dirty we don't want to re-calculate the\n        // parent's dirtiness based on the children.\n        const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n        this.status = DISABLED;\n        this.errors = null;\n        this._forEachChild((control) => {\n            control.disable(Object.assign(Object.assign({}, opts), { onlySelf: true }));\n        });\n        this._updateValue();\n        if (opts.emitEvent !== false) {\n            this.valueChanges.emit(this.value);\n            this.statusChanges.emit(this.status);\n        }\n        this._updateAncestors(Object.assign(Object.assign({}, opts), { skipPristineCheck }));\n        this._onDisabledChange.forEach((changeFn) => changeFn(true));\n    }\n    /**\n     * Enables the control. This means the control is included in validation checks and\n     * the aggregate value of its parent. Its status recalculates based on its value and\n     * its validators.\n     *\n     * By default, if the control has children, all children are enabled.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @param opts Configure options that control how the control propagates changes and\n     * emits events when marked as untouched\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is enabled.\n     * When false, no events are emitted.\n     */\n    enable(opts = {}) {\n        // If parent has been marked artificially dirty we don't want to re-calculate the\n        // parent's dirtiness based on the children.\n        const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n        this.status = VALID;\n        this._forEachChild((control) => {\n            control.enable(Object.assign(Object.assign({}, opts), { onlySelf: true }));\n        });\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: opts.emitEvent });\n        this._updateAncestors(Object.assign(Object.assign({}, opts), { skipPristineCheck }));\n        this._onDisabledChange.forEach((changeFn) => changeFn(false));\n    }\n    _updateAncestors(opts) {\n        if (this._parent && !opts.onlySelf) {\n            this._parent.updateValueAndValidity(opts);\n            if (!opts.skipPristineCheck) {\n                this._parent._updatePristine();\n            }\n            this._parent._updateTouched();\n        }\n    }\n    /**\n     * @param parent Sets the parent of the control\n     */\n    setParent(parent) {\n        this._parent = parent;\n    }\n    /**\n     * Recalculates the value and validation status of the control.\n     *\n     * By default, it also updates the value and validity of its ancestors.\n     *\n     * @param opts Configuration options determine how the control propagates changes and emits events\n     * after updates and validity checks are applied.\n     * * `onlySelf`: When true, only update this control. When false or not supplied,\n     * update all direct ancestors. Default is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is updated.\n     * When false, no events are emitted.\n     */\n    updateValueAndValidity(opts = {}) {\n        this._setInitialStatus();\n        this._updateValue();\n        if (this.enabled) {\n            this._cancelExistingSubscription();\n            this.errors = this._runValidator();\n            this.status = this._calculateStatus();\n            if (this.status === VALID || this.status === PENDING) {\n                this._runAsyncValidator(opts.emitEvent);\n            }\n        }\n        if (opts.emitEvent !== false) {\n            this.valueChanges.emit(this.value);\n            this.statusChanges.emit(this.status);\n        }\n        if (this._parent && !opts.onlySelf) {\n            this._parent.updateValueAndValidity(opts);\n        }\n    }\n    /** @internal */\n    _updateTreeValidity(opts = { emitEvent: true }) {\n        this._forEachChild((ctrl) => ctrl._updateTreeValidity(opts));\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: opts.emitEvent });\n    }\n    _setInitialStatus() {\n        this.status = this._allControlsDisabled() ? DISABLED : VALID;\n    }\n    _runValidator() {\n        return this.validator ? this.validator(this) : null;\n    }\n    _runAsyncValidator(emitEvent) {\n        if (this.asyncValidator) {\n            this.status = PENDING;\n            const obs = toObservable(this.asyncValidator(this));\n            this._asyncValidationSubscription =\n                obs.subscribe((errors) => this.setErrors(errors, { emitEvent }));\n        }\n    }\n    _cancelExistingSubscription() {\n        if (this._asyncValidationSubscription) {\n            this._asyncValidationSubscription.unsubscribe();\n        }\n    }\n    /**\n     * Sets errors on a form control when running validations manually, rather than automatically.\n     *\n     * Calling `setErrors` also updates the validity of the parent control.\n     *\n     * @usageNotes\n     *\n     * ### Manually set the errors for a control\n     *\n     * ```\n     * const login = new FormControl('someLogin');\n     * login.setErrors({\n     *   notUnique: true\n     * });\n     *\n     * expect(login.valid).toEqual(false);\n     * expect(login.errors).toEqual({ notUnique: true });\n     *\n     * login.setValue('someOtherLogin');\n     *\n     * expect(login.valid).toEqual(true);\n     * ```\n     */\n    setErrors(errors, opts = {}) {\n        this.errors = errors;\n        this._updateControlsErrors(opts.emitEvent !== false);\n    }\n    /**\n     * Retrieves a child control given the control's name or path.\n     *\n     * @param path A dot-delimited string or array of string/number values that define the path to the\n     * control.\n     *\n     * @usageNotes\n     * ### Retrieve a nested control\n     *\n     * For example, to get a `name` control nested within a `person` sub-group:\n     *\n     * * `this.form.get('person.name');`\n     *\n     * -OR-\n     *\n     * * `this.form.get(['person', 'name']);`\n     */\n    get(path) {\n        return _find(this, path, '.');\n    }\n    /**\n     * @description\n     * Reports error data for the control with the given path.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * @returns error data for that particular error. If the control or error is not present,\n     * null is returned.\n     */\n    getError(errorCode, path) {\n        const control = path ? this.get(path) : this;\n        return control && control.errors ? control.errors[errorCode] : null;\n    }\n    /**\n     * @description\n     * Reports whether the control with the given path has the error specified.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * If no path is given, this method checks for the error on the current control.\n     *\n     * @returns whether the given error is present in the control at the given path.\n     *\n     * If the control is not present, false is returned.\n     */\n    hasError(errorCode, path) {\n        return !!this.getError(errorCode, path);\n    }\n    /**\n     * Retrieves the top-level ancestor of this control.\n     */\n    get root() {\n        let x = this;\n        while (x._parent) {\n            x = x._parent;\n        }\n        return x;\n    }\n    /** @internal */\n    _updateControlsErrors(emitEvent) {\n        this.status = this._calculateStatus();\n        if (emitEvent) {\n            this.statusChanges.emit(this.status);\n        }\n        if (this._parent) {\n            this._parent._updateControlsErrors(emitEvent);\n        }\n    }\n    /** @internal */\n    _initObservables() {\n        this.valueChanges = new EventEmitter();\n        this.statusChanges = new EventEmitter();\n    }\n    _calculateStatus() {\n        if (this._allControlsDisabled())\n            return DISABLED;\n        if (this.errors)\n            return INVALID;\n        if (this._anyControlsHaveStatus(PENDING))\n            return PENDING;\n        if (this._anyControlsHaveStatus(INVALID))\n            return INVALID;\n        return VALID;\n    }\n    /** @internal */\n    _anyControlsHaveStatus(status) {\n        return this._anyControls((control) => control.status === status);\n    }\n    /** @internal */\n    _anyControlsDirty() {\n        return this._anyControls((control) => control.dirty);\n    }\n    /** @internal */\n    _anyControlsTouched() {\n        return this._anyControls((control) => control.touched);\n    }\n    /** @internal */\n    _updatePristine(opts = {}) {\n        this.pristine = !this._anyControlsDirty();\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updatePristine(opts);\n        }\n    }\n    /** @internal */\n    _updateTouched(opts = {}) {\n        this.touched = this._anyControlsTouched();\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updateTouched(opts);\n        }\n    }\n    /** @internal */\n    _isBoxedValue(formState) {\n        return typeof formState === 'object' && formState !== null &&\n            Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;\n    }\n    /** @internal */\n    _registerOnCollectionChange(fn) {\n        this._onCollectionChange = fn;\n    }\n    /** @internal */\n    _setUpdateStrategy(opts) {\n        if (isOptionsObj(opts) && opts.updateOn != null) {\n            this._updateOn = opts.updateOn;\n        }\n    }\n    /**\n     * Check to see if parent has been marked artificially dirty.\n     *\n     * @internal\n     */\n    _parentMarkedDirty(onlySelf) {\n        const parentDirty = this._parent && this._parent.dirty;\n        return !onlySelf && parentDirty && !this._parent._anyControlsDirty();\n    }\n}\n/**\n * Tracks the value and validation status of an individual form control.\n *\n * This is one of the three fundamental building blocks of Angular forms, along with\n * `FormGroup` and `FormArray`. It extends the `AbstractControl` class that\n * implements most of the base functionality for accessing the value, validation status,\n * user interactions and events. See [usage examples below](#usage-notes).\n *\n * @see `AbstractControl`\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see [Usage Notes](#usage-notes)\n *\n * @usageNotes\n *\n * ### Initializing Form Controls\n *\n * Instantiate a `FormControl`, with an initial value.\n *\n * ```ts\n * const control = new FormControl('some value');\n * console.log(control.value);     // 'some value'\n *```\n *\n * The following example initializes the control with a form state object. The `value`\n * and `disabled` keys are required in this case.\n *\n * ```ts\n * const control = new FormControl({ value: 'n/a', disabled: true });\n * console.log(control.value);     // 'n/a'\n * console.log(control.status);    // 'DISABLED'\n * ```\n *\n * The following example initializes the control with a sync validator.\n *\n * ```ts\n * const control = new FormControl('', Validators.required);\n * console.log(control.value);      // ''\n * console.log(control.status);     // 'INVALID'\n * ```\n *\n * The following example initializes the control using an options object.\n *\n * ```ts\n * const control = new FormControl('', {\n *    validators: Validators.required,\n *    asyncValidators: myAsyncValidator\n * });\n * ```\n *\n * ### Configure the control to update on a blur event\n *\n * Set the `updateOn` option to `'blur'` to update on the blur `event`.\n *\n * ```ts\n * const control = new FormControl('', { updateOn: 'blur' });\n * ```\n *\n * ### Configure the control to update on a submit event\n *\n * Set the `updateOn` option to `'submit'` to update on a submit `event`.\n *\n * ```ts\n * const control = new FormControl('', { updateOn: 'submit' });\n * ```\n *\n * ### Reset the control back to an initial value\n *\n * You reset to a specific form state by passing through a standalone\n * value or a form state object that contains both a value and a disabled state\n * (these are the only two properties that cannot be calculated).\n *\n * ```ts\n * const control = new FormControl('Nancy');\n *\n * console.log(control.value); // 'Nancy'\n *\n * control.reset('Drew');\n *\n * console.log(control.value); // 'Drew'\n * ```\n *\n * ### Reset the control back to an initial value and disabled\n *\n * ```\n * const control = new FormControl('Nancy');\n *\n * console.log(control.value); // 'Nancy'\n * console.log(control.status); // 'VALID'\n *\n * control.reset({ value: 'Drew', disabled: true });\n *\n * console.log(control.value); // 'Drew'\n * console.log(control.status); // 'DISABLED'\n * ```\n *\n * @publicApi\n */\nclass FormControl extends AbstractControl {\n    /**\n     * Creates a new `FormControl` instance.\n     *\n     * @param formState Initializes the control with an initial value,\n     * or an object that defines the initial value and disabled state.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains validation functions\n     * and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator functions\n     *\n     */\n    constructor(formState = null, validatorOrOpts, asyncValidator) {\n        super(coerceToValidator(validatorOrOpts), coerceToAsyncValidator(asyncValidator, validatorOrOpts));\n        /** @internal */\n        this._onChange = [];\n        this._applyFormState(formState);\n        this._setUpdateStrategy(validatorOrOpts);\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        this._initObservables();\n    }\n    /**\n     * Sets a new value for the form control.\n     *\n     * @param value The new value for the control.\n     * @param options Configuration options that determine how the control propagates changes\n     * and emits events when the value changes.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * * `emitModelToViewChange`: When true or not supplied  (the default), each change triggers an\n     * `onChange` event to\n     * update the view.\n     * * `emitViewToModelChange`: When true or not supplied (the default), each change triggers an\n     * `ngModelChange`\n     * event to update the model.\n     *\n     */\n    setValue(value, options = {}) {\n        this.value = this._pendingValue = value;\n        if (this._onChange.length && options.emitModelToViewChange !== false) {\n            this._onChange.forEach((changeFn) => changeFn(this.value, options.emitViewToModelChange !== false));\n        }\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Patches the value of a control.\n     *\n     * This function is functionally the same as {@link FormControl#setValue setValue} at this level.\n     * It exists for symmetry with {@link FormGroup#patchValue patchValue} on `FormGroups` and\n     * `FormArrays`, where it does behave differently.\n     *\n     * @see `setValue` for options\n     */\n    patchValue(value, options = {}) {\n        this.setValue(value, options);\n    }\n    /**\n     * Resets the form control, marking it `pristine` and `untouched`, and setting\n     * the value to null.\n     *\n     * @param formState Resets the control with an initial value,\n     * or an object that defines the initial value and disabled state.\n     *\n     * @param options Configuration options that determine how the control propagates changes\n     * and emits events after the value changes.\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is reset.\n     * When false, no events are emitted.\n     *\n     */\n    reset(formState = null, options = {}) {\n        this._applyFormState(formState);\n        this.markAsPristine(options);\n        this.markAsUntouched(options);\n        this.setValue(this.value, options);\n        this._pendingChange = false;\n    }\n    /**\n     * @internal\n     */\n    _updateValue() { }\n    /**\n     * @internal\n     */\n    _anyControls(condition) {\n        return false;\n    }\n    /**\n     * @internal\n     */\n    _allControlsDisabled() {\n        return this.disabled;\n    }\n    /**\n     * Register a listener for change events.\n     *\n     * @param fn The method that is called when the value changes\n     */\n    registerOnChange(fn) {\n        this._onChange.push(fn);\n    }\n    /**\n     * @internal\n     */\n    _clearChangeFns() {\n        this._onChange = [];\n        this._onDisabledChange = [];\n        this._onCollectionChange = () => { };\n    }\n    /**\n     * Register a listener for disabled events.\n     *\n     * @param fn The method that is called when the disabled status changes.\n     */\n    registerOnDisabledChange(fn) {\n        this._onDisabledChange.push(fn);\n    }\n    /**\n     * @internal\n     */\n    _forEachChild(cb) { }\n    /** @internal */\n    _syncPendingControls() {\n        if (this.updateOn === 'submit') {\n            if (this._pendingDirty)\n                this.markAsDirty();\n            if (this._pendingTouched)\n                this.markAsTouched();\n            if (this._pendingChange) {\n                this.setValue(this._pendingValue, { onlySelf: true, emitModelToViewChange: false });\n                return true;\n            }\n        }\n        return false;\n    }\n    _applyFormState(formState) {\n        if (this._isBoxedValue(formState)) {\n            this.value = this._pendingValue = formState.value;\n            formState.disabled ? this.disable({ onlySelf: true, emitEvent: false }) :\n                this.enable({ onlySelf: true, emitEvent: false });\n        }\n        else {\n            this.value = this._pendingValue = formState;\n        }\n    }\n}\n/**\n * Tracks the value and validity state of a group of `FormControl` instances.\n *\n * A `FormGroup` aggregates the values of each child `FormControl` into one object,\n * with each control name as the key.  It calculates its status by reducing the status values\n * of its children. For example, if one of the controls in a group is invalid, the entire\n * group becomes invalid.\n *\n * `FormGroup` is one of the three fundamental building blocks used to define forms in Angular,\n * along with `FormControl` and `FormArray`.\n *\n * When instantiating a `FormGroup`, pass in a collection of child controls as the first\n * argument. The key for each child registers the name for the control.\n *\n * @usageNotes\n *\n * ### Create a form group with 2 controls\n *\n * ```\n * const form = new FormGroup({\n *   first: new FormControl('Nancy', Validators.minLength(2)),\n *   last: new FormControl('Drew'),\n * });\n *\n * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n * console.log(form.status);  // 'VALID'\n * ```\n *\n * ### Create a form group with a group-level validator\n *\n * You include group-level validators as the second arg, or group-level async\n * validators as the third arg. These come in handy when you want to perform validation\n * that considers the value of more than one child control.\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('', Validators.minLength(2)),\n *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n * }, passwordMatchValidator);\n *\n *\n * function passwordMatchValidator(g: FormGroup) {\n *    return g.get('password').value === g.get('passwordConfirm').value\n *       ? null : {'mismatch': true};\n * }\n * ```\n *\n * Like `FormControl` instances, you choose to pass in\n * validators and async validators as part of an options object.\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('')\n *   passwordConfirm: new FormControl('')\n * }, { validators: passwordMatchValidator, asyncValidators: otherValidator });\n * ```\n *\n * ### Set the updateOn property for all controls in a form group\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * group level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const c = new FormGroup({\n *   one: new FormControl()\n * }, { updateOn: 'blur' });\n * ```\n *\n * @publicApi\n */\nclass FormGroup extends AbstractControl {\n    /**\n     * Creates a new `FormGroup` instance.\n     *\n     * @param controls A collection of child controls. The key for each child is the name\n     * under which it is registered.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains validation functions\n     * and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator functions\n     *\n     */\n    constructor(controls, validatorOrOpts, asyncValidator) {\n        super(coerceToValidator(validatorOrOpts), coerceToAsyncValidator(asyncValidator, validatorOrOpts));\n        this.controls = controls;\n        this._initObservables();\n        this._setUpdateStrategy(validatorOrOpts);\n        this._setUpControls();\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n    }\n    /**\n     * Registers a control with the group's list of controls.\n     *\n     * This method does not update the value or validity of the control.\n     * Use {@link FormGroup#addControl addControl} instead.\n     *\n     * @param name The control name to register in the collection\n     * @param control Provides the control for the given name\n     */\n    registerControl(name, control) {\n        if (this.controls[name])\n            return this.controls[name];\n        this.controls[name] = control;\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n        return control;\n    }\n    /**\n     * Add a control to this group.\n     *\n     * This method also updates the value and validity of the control.\n     *\n     * @param name The control name to add to the collection\n     * @param control Provides the control for the given name\n     */\n    addControl(name, control) {\n        this.registerControl(name, control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    }\n    /**\n     * Remove a control from this group.\n     *\n     * @param name The control name to remove from the collection\n     */\n    removeControl(name) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange(() => { });\n        delete (this.controls[name]);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    }\n    /**\n     * Replace an existing control.\n     *\n     * @param name The control name to replace in the collection\n     * @param control Provides the control for the given name\n     */\n    setControl(name, control) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange(() => { });\n        delete (this.controls[name]);\n        if (control)\n            this.registerControl(name, control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    }\n    /**\n     * Check whether there is an enabled control with the given name in the group.\n     *\n     * Reports false for disabled controls. If you'd like to check for existence in the group\n     * only, use {@link AbstractControl#get get} instead.\n     *\n     * @param controlName The control name to check for existence in the collection\n     *\n     * @returns false for disabled controls, true otherwise.\n     */\n    contains(controlName) {\n        return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n    }\n    /**\n     * Sets the value of the `FormGroup`. It accepts an object that matches\n     * the structure of the group, with control names as keys.\n     *\n     * @usageNotes\n     * ### Set the complete value for the form group\n     *\n     * ```\n     * const form = new FormGroup({\n     *   first: new FormControl(),\n     *   last: new FormControl()\n     * });\n     *\n     * console.log(form.value);   // {first: null, last: null}\n     *\n     * form.setValue({first: 'Nancy', last: 'Drew'});\n     * console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n     * ```\n     *\n     * @throws When strict checks fail, such as setting the value of a control\n     * that doesn't exist or if you exclude a value of a control that does exist.\n     *\n     * @param value The new value for the control that matches the structure of the group.\n     * @param options Configuration options that determine how the control propagates changes\n     * and emits events after the value changes.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     */\n    setValue(value, options = {}) {\n        this._checkAllValuesPresent(value);\n        Object.keys(value).forEach(name => {\n            this._throwIfControlMissing(name);\n            this.controls[name].setValue(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Patches the value of the `FormGroup`. It accepts an object with control\n     * names as keys, and does its best to match the values to the correct controls\n     * in the group.\n     *\n     * It accepts both super-sets and sub-sets of the group without throwing an error.\n     *\n     * @usageNotes\n     * ### Patch the value for a form group\n     *\n     * ```\n     * const form = new FormGroup({\n     *    first: new FormControl(),\n     *    last: new FormControl()\n     * });\n     * console.log(form.value);   // {first: null, last: null}\n     *\n     * form.patchValue({first: 'Nancy'});\n     * console.log(form.value);   // {first: 'Nancy', last: null}\n     * ```\n     *\n     * @param value The object that matches the structure of the group.\n     * @param options Configuration options that determine how the control propagates changes and\n     * emits events after the value is patched.\n     * * `onlySelf`: When true, each change only affects this control and not its parent. Default is\n     * true.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     */\n    patchValue(value, options = {}) {\n        Object.keys(value).forEach(name => {\n            if (this.controls[name]) {\n                this.controls[name].patchValue(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n            }\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Resets the `FormGroup`, marks all descendants are marked `pristine` and `untouched`, and\n     * the value of all descendants to null.\n     *\n     * You reset to a specific form state by passing in a map of states\n     * that matches the structure of your form, with control names as keys. The state\n     * is a standalone value or a form state object with both a value and a disabled\n     * status.\n     *\n     * @param value Resets the control with an initial value,\n     * or an object that defines the initial value and disabled state.\n     *\n     * @param options Configuration options that determine how the control propagates changes\n     * and emits events when the group is reset.\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is reset.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     *\n     * @usageNotes\n     *\n     * ### Reset the form group values\n     *\n     * ```ts\n     * const form = new FormGroup({\n     *   first: new FormControl('first name'),\n     *   last: new FormControl('last name')\n     * });\n     *\n     * console.log(form.value);  // {first: 'first name', last: 'last name'}\n     *\n     * form.reset({ first: 'name', last: 'last name' });\n     *\n     * console.log(form.value);  // {first: 'name', last: 'last name'}\n     * ```\n     *\n     * ### Reset the form group values and disabled status\n     *\n     * ```\n     * const form = new FormGroup({\n     *   first: new FormControl('first name'),\n     *   last: new FormControl('last name')\n     * });\n     *\n     * form.reset({\n     *   first: {value: 'name', disabled: true},\n     *   last: 'last'\n     * });\n     *\n     * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n     * console.log(this.form.get('first').status);  // 'DISABLED'\n     * ```\n     */\n    reset(value = {}, options = {}) {\n        this._forEachChild((control, name) => {\n            control.reset(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this._updatePristine(options);\n        this._updateTouched(options);\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * The aggregate value of the `FormGroup`, including any disabled controls.\n     *\n     * Retrieves all values regardless of disabled status.\n     * The `value` property is the best way to get the value of the group, because\n     * it excludes disabled controls in the `FormGroup`.\n     */\n    getRawValue() {\n        return this._reduceChildren({}, (acc, control, name) => {\n            acc[name] = control instanceof FormControl ? control.value : control.getRawValue();\n            return acc;\n        });\n    }\n    /** @internal */\n    _syncPendingControls() {\n        let subtreeUpdated = this._reduceChildren(false, (updated, child) => {\n            return child._syncPendingControls() ? true : updated;\n        });\n        if (subtreeUpdated)\n            this.updateValueAndValidity({ onlySelf: true });\n        return subtreeUpdated;\n    }\n    /** @internal */\n    _throwIfControlMissing(name) {\n        if (!Object.keys(this.controls).length) {\n            throw new Error(`\n        There are no form controls registered with this group yet.  If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      `);\n        }\n        if (!this.controls[name]) {\n            throw new Error(`Cannot find form control with name: ${name}.`);\n        }\n    }\n    /** @internal */\n    _forEachChild(cb) {\n        Object.keys(this.controls).forEach(k => cb(this.controls[k], k));\n    }\n    /** @internal */\n    _setUpControls() {\n        this._forEachChild((control) => {\n            control.setParent(this);\n            control._registerOnCollectionChange(this._onCollectionChange);\n        });\n    }\n    /** @internal */\n    _updateValue() {\n        this.value = this._reduceValue();\n    }\n    /** @internal */\n    _anyControls(condition) {\n        for (const controlName of Object.keys(this.controls)) {\n            const control = this.controls[controlName];\n            if (this.contains(controlName) && condition(control)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /** @internal */\n    _reduceValue() {\n        return this._reduceChildren({}, (acc, control, name) => {\n            if (control.enabled || this.disabled) {\n                acc[name] = control.value;\n            }\n            return acc;\n        });\n    }\n    /** @internal */\n    _reduceChildren(initValue, fn) {\n        let res = initValue;\n        this._forEachChild((control, name) => {\n            res = fn(res, control, name);\n        });\n        return res;\n    }\n    /** @internal */\n    _allControlsDisabled() {\n        for (const controlName of Object.keys(this.controls)) {\n            if (this.controls[controlName].enabled) {\n                return false;\n            }\n        }\n        return Object.keys(this.controls).length > 0 || this.disabled;\n    }\n    /** @internal */\n    _checkAllValuesPresent(value) {\n        this._forEachChild((control, name) => {\n            if (value[name] === undefined) {\n                throw new Error(`Must supply a value for form control with name: '${name}'.`);\n            }\n        });\n    }\n}\n/**\n * Tracks the value and validity state of an array of `FormControl`,\n * `FormGroup` or `FormArray` instances.\n *\n * A `FormArray` aggregates the values of each child `FormControl` into an array.\n * It calculates its status by reducing the status values of its children. For example, if one of\n * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n *\n * `FormArray` is one of the three fundamental building blocks used to define forms in Angular,\n * along with `FormControl` and `FormGroup`.\n *\n * @usageNotes\n *\n * ### Create an array of form controls\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy', Validators.minLength(2)),\n *   new FormControl('Drew'),\n * ]);\n *\n * console.log(arr.value);   // ['Nancy', 'Drew']\n * console.log(arr.status);  // 'VALID'\n * ```\n *\n * ### Create a form array with array-level validators\n *\n * You include array-level validators and async validators. These come in handy\n * when you want to perform validation that considers the value of more than one child\n * control.\n *\n * The two types of validators are passed in separately as the second and third arg\n * respectively, or together as part of an options object.\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy'),\n *   new FormControl('Drew')\n * ], {validators: myValidator, asyncValidators: myAsyncValidator});\n * ```\n *\n * ### Set the updateOn property for all controls in a form array\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * array level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const arr = new FormArray([\n *    new FormControl()\n * ], {updateOn: 'blur'});\n * ```\n *\n * ### Adding or removing controls from a form array\n *\n * To change the controls in the array, use the `push`, `insert`, `removeAt` or `clear` methods\n * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n * the `FormArray` directly, as that result in strange and unexpected behavior such\n * as broken change detection.\n *\n * @publicApi\n */\nclass FormArray extends AbstractControl {\n    /**\n     * Creates a new `FormArray` instance.\n     *\n     * @param controls An array of child controls. Each child control is given an index\n     * where it is registered.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains validation functions\n     * and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator functions\n     *\n     */\n    constructor(controls, validatorOrOpts, asyncValidator) {\n        super(coerceToValidator(validatorOrOpts), coerceToAsyncValidator(asyncValidator, validatorOrOpts));\n        this.controls = controls;\n        this._initObservables();\n        this._setUpdateStrategy(validatorOrOpts);\n        this._setUpControls();\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n    }\n    /**\n     * Get the `AbstractControl` at the given `index` in the array.\n     *\n     * @param index Index in the array to retrieve the control\n     */\n    at(index) {\n        return this.controls[index];\n    }\n    /**\n     * Insert a new `AbstractControl` at the end of the array.\n     *\n     * @param control Form control to be inserted\n     */\n    push(control) {\n        this.controls.push(control);\n        this._registerControl(control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    }\n    /**\n     * Insert a new `AbstractControl` at the given `index` in the array.\n     *\n     * @param index Index in the array to insert the control\n     * @param control Form control to be inserted\n     */\n    insert(index, control) {\n        this.controls.splice(index, 0, control);\n        this._registerControl(control);\n        this.updateValueAndValidity();\n    }\n    /**\n     * Remove the control at the given `index` in the array.\n     *\n     * @param index Index in the array to remove the control\n     */\n    removeAt(index) {\n        if (this.controls[index])\n            this.controls[index]._registerOnCollectionChange(() => { });\n        this.controls.splice(index, 1);\n        this.updateValueAndValidity();\n    }\n    /**\n     * Replace an existing control.\n     *\n     * @param index Index in the array to replace the control\n     * @param control The `AbstractControl` control to replace the existing control\n     */\n    setControl(index, control) {\n        if (this.controls[index])\n            this.controls[index]._registerOnCollectionChange(() => { });\n        this.controls.splice(index, 1);\n        if (control) {\n            this.controls.splice(index, 0, control);\n            this._registerControl(control);\n        }\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    }\n    /**\n     * Length of the control array.\n     */\n    get length() {\n        return this.controls.length;\n    }\n    /**\n     * Sets the value of the `FormArray`. It accepts an array that matches\n     * the structure of the control.\n     *\n     * This method performs strict checks, and throws an error if you try\n     * to set the value of a control that doesn't exist or if you exclude the\n     * value of a control.\n     *\n     * @usageNotes\n     * ### Set the values for the controls in the form array\n     *\n     * ```\n     * const arr = new FormArray([\n     *   new FormControl(),\n     *   new FormControl()\n     * ]);\n     * console.log(arr.value);   // [null, null]\n     *\n     * arr.setValue(['Nancy', 'Drew']);\n     * console.log(arr.value);   // ['Nancy', 'Drew']\n     * ```\n     *\n     * @param value Array of values for the controls\n     * @param options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     */\n    setValue(value, options = {}) {\n        this._checkAllValuesPresent(value);\n        value.forEach((newValue, index) => {\n            this._throwIfControlMissing(index);\n            this.at(index).setValue(newValue, { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Patches the value of the `FormArray`. It accepts an array that matches the\n     * structure of the control, and does its best to match the values to the correct\n     * controls in the group.\n     *\n     * It accepts both super-sets and sub-sets of the array without throwing an error.\n     *\n     * @usageNotes\n     * ### Patch the values for controls in a form array\n     *\n     * ```\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     * console.log(arr.value);   // [null, null]\n     *\n     * arr.patchValue(['Nancy']);\n     * console.log(arr.value);   // ['Nancy', null]\n     * ```\n     *\n     * @param value Array of latest values for the controls\n     * @param options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     */\n    patchValue(value, options = {}) {\n        value.forEach((newValue, index) => {\n            if (this.at(index)) {\n                this.at(index).patchValue(newValue, { onlySelf: true, emitEvent: options.emitEvent });\n            }\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Resets the `FormArray` and all descendants are marked `pristine` and `untouched`, and the\n     * value of all descendants to null or null maps.\n     *\n     * You reset to a specific form state by passing in an array of states\n     * that matches the structure of the control. The state is a standalone value\n     * or a form state object with both a value and a disabled status.\n     *\n     * @usageNotes\n     * ### Reset the values in a form array\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     * arr.reset(['name', 'last name']);\n     *\n     * console.log(this.arr.value);  // ['name', 'last name']\n     * ```\n     *\n     * ### Reset the values in a form array and the disabled status for the first control\n     *\n     * ```\n     * this.arr.reset([\n     *   {value: 'name', disabled: true},\n     *   'last'\n     * ]);\n     *\n     * console.log(this.arr.value);  // ['name', 'last name']\n     * console.log(this.arr.get(0).status);  // 'DISABLED'\n     * ```\n     *\n     * @param value Array of values for the controls\n     * @param options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is reset.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     */\n    reset(value = [], options = {}) {\n        this._forEachChild((control, index) => {\n            control.reset(value[index], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this._updatePristine(options);\n        this._updateTouched(options);\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * The aggregate value of the array, including any disabled controls.\n     *\n     * Reports all values regardless of disabled status.\n     * For enabled controls only, the `value` property is the best way to get the value of the array.\n     */\n    getRawValue() {\n        return this.controls.map((control) => {\n            return control instanceof FormControl ? control.value : control.getRawValue();\n        });\n    }\n    /**\n     * Remove all controls in the `FormArray`.\n     *\n     * @usageNotes\n     * ### Remove all elements from a FormArray\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     * console.log(arr.length);  // 2\n     *\n     * arr.clear();\n     * console.log(arr.length);  // 0\n     * ```\n     *\n     * It's a simpler and more efficient alternative to removing all elements one by one:\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     *\n     * while (arr.length) {\n     *    arr.removeAt(0);\n     * }\n     * ```\n     */\n    clear() {\n        if (this.controls.length < 1)\n            return;\n        this._forEachChild((control) => control._registerOnCollectionChange(() => { }));\n        this.controls.splice(0);\n        this.updateValueAndValidity();\n    }\n    /** @internal */\n    _syncPendingControls() {\n        let subtreeUpdated = this.controls.reduce((updated, child) => {\n            return child._syncPendingControls() ? true : updated;\n        }, false);\n        if (subtreeUpdated)\n            this.updateValueAndValidity({ onlySelf: true });\n        return subtreeUpdated;\n    }\n    /** @internal */\n    _throwIfControlMissing(index) {\n        if (!this.controls.length) {\n            throw new Error(`\n        There are no form controls registered with this array yet.  If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      `);\n        }\n        if (!this.at(index)) {\n            throw new Error(`Cannot find form control at index ${index}`);\n        }\n    }\n    /** @internal */\n    _forEachChild(cb) {\n        this.controls.forEach((control, index) => {\n            cb(control, index);\n        });\n    }\n    /** @internal */\n    _updateValue() {\n        this.value =\n            this.controls.filter((control) => control.enabled || this.disabled)\n                .map((control) => control.value);\n    }\n    /** @internal */\n    _anyControls(condition) {\n        return this.controls.some((control) => control.enabled && condition(control));\n    }\n    /** @internal */\n    _setUpControls() {\n        this._forEachChild((control) => this._registerControl(control));\n    }\n    /** @internal */\n    _checkAllValuesPresent(value) {\n        this._forEachChild((control, i) => {\n            if (value[i] === undefined) {\n                throw new Error(`Must supply a value for form control at index: ${i}.`);\n            }\n        });\n    }\n    /** @internal */\n    _allControlsDisabled() {\n        for (const control of this.controls) {\n            if (control.enabled)\n                return false;\n        }\n        return this.controls.length > 0 || this.disabled;\n    }\n    _registerControl(control) {\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst formDirectiveProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => NgForm)\n};\nconst ɵ0 = () => Promise.resolve(null);\nconst resolvedPromise = (ɵ0)();\n/**\n * @description\n * Creates a top-level `FormGroup` instance and binds it to a form\n * to track aggregate form value and validation status.\n *\n * As soon as you import the `FormsModule`, this directive becomes active by default on\n * all `<form>` tags.  You don't need to add a special selector.\n *\n * You optionally export the directive into a local template variable using `ngForm` as the key\n * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n * `FormGroup` instance are duplicated on the directive itself, so a reference to it\n * gives you access to the aggregate value and validity status of the form, as well as\n * user interaction properties like `dirty` and `touched`.\n *\n * To register child controls with the form, use `NgModel` with a `name`\n * attribute. You may use `NgModelGroup` to create sub-groups within the form.\n *\n * If necessary, listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event emits the original form\n * submission event.\n *\n * In template driven forms, all `<form>` tags are automatically tagged as `NgForm`.\n * To import the `FormsModule` but skip its usage in some forms,\n * for example, to use native HTML5 validation, add the `ngNoForm` and the `<form>`\n * tags won't create an `NgForm` directive. In reactive forms, using `ngNoForm` is\n * unnecessary because the `<form>` tags are inert. In that case, you would\n * refrain from using the `formGroup` directive.\n *\n * @usageNotes\n *\n * ### Listening for form submission\n *\n * The following example shows how to capture the form values from the \"ngSubmit\" event.\n *\n * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Setting the update options\n *\n * The following example shows you how to change the \"updateOn\" option from its default using\n * ngFormOptions.\n *\n * ```html\n * <form [ngFormOptions]=\"{updateOn: 'blur'}\">\n *    <input name=\"one\" ngModel>  <!-- this ngModel will update on blur -->\n * </form>\n * ```\n *\n * ### Native DOM validation UI\n *\n * In order to prevent the native DOM form validation UI from interfering with Angular's form\n * validation, Angular automatically adds the `novalidate` attribute on any `<form>` whenever\n * `FormModule` or `ReactiveFormModule` are imported into the application.\n * If you want to explicitly enable native DOM validation UI with Angular forms, you can add the\n * `ngNativeValidate` attribute to the `<form>` element:\n *\n * ```html\n * <form ngNativeValidate>\n *   ...\n * </form>\n * ```\n *\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgForm extends ControlContainer {\n    constructor(validators, asyncValidators) {\n        super();\n        /**\n         * @description\n         * Returns whether the form submission has been triggered.\n         */\n        this.submitted = false;\n        this._directives = [];\n        /**\n         * @description\n         * Event emitter for the \"ngSubmit\" event\n         */\n        this.ngSubmit = new EventEmitter();\n        this.form =\n            new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n    }\n    /**\n     * @description\n     * Lifecycle method called after the view is initialized. For internal use only.\n     */\n    ngAfterViewInit() {\n        this._setUpdateStrategy();\n    }\n    /**\n     * @description\n     * The directive instance.\n     */\n    get formDirective() {\n        return this;\n    }\n    /**\n     * @description\n     * The internal `FormGroup` instance.\n     */\n    get control() {\n        return this.form;\n    }\n    /**\n     * @description\n     * Returns an array representing the path to this group. Because this directive\n     * always lives at the top level of a form, it is always an empty array.\n     */\n    get path() {\n        return [];\n    }\n    /**\n     * @description\n     * Returns a map of the controls in this group.\n     */\n    get controls() {\n        return this.form.controls;\n    }\n    /**\n     * @description\n     * Method that sets up the control directive in this group, re-calculates its value\n     * and validity, and adds the instance to the internal list of directives.\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    addControl(dir) {\n        resolvedPromise.then(() => {\n            const container = this._findContainer(dir.path);\n            dir.control =\n                container.registerControl(dir.name, dir.control);\n            setUpControl(dir.control, dir);\n            dir.control.updateValueAndValidity({ emitEvent: false });\n            this._directives.push(dir);\n        });\n    }\n    /**\n     * @description\n     * Retrieves the `FormControl` instance from the provided `NgModel` directive.\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    getControl(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * @description\n     * Removes the `NgModel` instance from the internal list of directives\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    removeControl(dir) {\n        resolvedPromise.then(() => {\n            const container = this._findContainer(dir.path);\n            if (container) {\n                container.removeControl(dir.name);\n            }\n            removeDir(this._directives, dir);\n        });\n    }\n    /**\n     * @description\n     * Adds a new `NgModelGroup` directive instance to the form.\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    addFormGroup(dir) {\n        resolvedPromise.then(() => {\n            const container = this._findContainer(dir.path);\n            const group = new FormGroup({});\n            setUpFormContainer(group, dir);\n            container.registerControl(dir.name, group);\n            group.updateValueAndValidity({ emitEvent: false });\n        });\n    }\n    /**\n     * @description\n     * Removes the `NgModelGroup` directive instance from the form.\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    removeFormGroup(dir) {\n        resolvedPromise.then(() => {\n            const container = this._findContainer(dir.path);\n            if (container) {\n                container.removeControl(dir.name);\n            }\n        });\n    }\n    /**\n     * @description\n     * Retrieves the `FormGroup` for a provided `NgModelGroup` directive instance\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    getFormGroup(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * Sets the new value for the provided `NgControl` directive.\n     *\n     * @param dir The `NgControl` directive instance.\n     * @param value The new value for the directive's control.\n     */\n    updateModel(dir, value) {\n        resolvedPromise.then(() => {\n            const ctrl = this.form.get(dir.path);\n            ctrl.setValue(value);\n        });\n    }\n    /**\n     * @description\n     * Sets the value for this `FormGroup`.\n     *\n     * @param value The new value\n     */\n    setValue(value) {\n        this.control.setValue(value);\n    }\n    /**\n     * @description\n     * Method called when the \"submit\" event is triggered on the form.\n     * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n     *\n     * @param $event The \"submit\" event object\n     */\n    onSubmit($event) {\n        this.submitted = true;\n        syncPendingControls(this.form, this._directives);\n        this.ngSubmit.emit($event);\n        return false;\n    }\n    /**\n     * @description\n     * Method called when the \"reset\" event is triggered on the form.\n     */\n    onReset() {\n        this.resetForm();\n    }\n    /**\n     * @description\n     * Resets the form to an initial value and resets its submitted status.\n     *\n     * @param value The new value for the form.\n     */\n    resetForm(value = undefined) {\n        this.form.reset(value);\n        this.submitted = false;\n    }\n    _setUpdateStrategy() {\n        if (this.options && this.options.updateOn != null) {\n            this.form._updateOn = this.options.updateOn;\n        }\n    }\n    /** @internal */\n    _findContainer(path) {\n        path.pop();\n        return path.length ? this.form.get(path) : this.form;\n    }\n}\nNgForm.ɵfac = function NgForm_Factory(t) { return new (t || NgForm)(ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10)); };\nNgForm.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgForm, selectors: [[\"form\", 3, \"ngNoForm\", \"\", 3, \"formGroup\", \"\"], [\"ng-form\"], [\"\", \"ngForm\", \"\"]], hostBindings: function NgForm_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"submit\", function NgForm_submit_HostBindingHandler($event) { return ctx.onSubmit($event); })(\"reset\", function NgForm_reset_HostBindingHandler() { return ctx.onReset(); });\n    } }, inputs: { options: [\"ngFormOptions\", \"options\"] }, outputs: { ngSubmit: \"ngSubmit\" }, exportAs: [\"ngForm\"], features: [ɵngcc0.ɵɵProvidersFeature([formDirectiveProvider]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nNgForm.ctorParameters = () => [\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] }\n];\nNgForm.propDecorators = {\n    options: [{ type: Input, args: ['ngFormOptions',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgForm, [{\n        type: Directive,\n        args: [{\n                selector: 'form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]',\n                providers: [formDirectiveProvider],\n                host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                outputs: ['ngSubmit'],\n                exportAs: 'ngForm'\n            }]\n    }], function () { return [{ type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }]; }, { options: [{\n            type: Input,\n            args: ['ngFormOptions']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n * A base class for code shared between the `NgModelGroup` and `FormGroupName` directives.\n *\n * @publicApi\n */\nclass AbstractFormGroupDirective extends ControlContainer {\n    /**\n     * @description\n     * An internal callback method triggered on the instance after the inputs are set.\n     * Registers the group with its parent group.\n     */\n    ngOnInit() {\n        this._checkParentType();\n        this.formDirective.addFormGroup(this);\n    }\n    /**\n     * @description\n     * An internal callback method triggered before the instance is destroyed.\n     * Removes the group from its parent group.\n     */\n    ngOnDestroy() {\n        if (this.formDirective) {\n            this.formDirective.removeFormGroup(this);\n        }\n    }\n    /**\n     * @description\n     * The `FormGroup` bound to this directive.\n     */\n    get control() {\n        return this.formDirective.getFormGroup(this);\n    }\n    /**\n     * @description\n     * The path to this group from the top-level directive.\n     */\n    get path() {\n        return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n        return this._parent ? this._parent.formDirective : null;\n    }\n    /**\n     * @description\n     * The synchronous validators registered with this group.\n     */\n    get validator() {\n        return composeValidators(this._validators);\n    }\n    /**\n     * @description\n     * The async validators registered with this group.\n     */\n    get asyncValidator() {\n        return composeAsyncValidators(this._asyncValidators);\n    }\n    /** @internal */\n    _checkParentType() { }\n}\nAbstractFormGroupDirective.ɵfac = function AbstractFormGroupDirective_Factory(t) { return ɵAbstractFormGroupDirective_BaseFactory(t || AbstractFormGroupDirective); };\nAbstractFormGroupDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: AbstractFormGroupDirective, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵAbstractFormGroupDirective_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(AbstractFormGroupDirective);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AbstractFormGroupDirective, [{\n        type: Directive\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass TemplateDrivenErrors {\n    static modelParentException() {\n        throw new Error(`\n      ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\n      formGroup's partner directive \"formControlName\" instead.  Example:\n\n      ${FormErrorExamples.formControlName}\n\n      Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\n\n      Example:\n\n      ${FormErrorExamples.ngModelWithFormGroup}`);\n    }\n    static formGroupNameException() {\n        throw new Error(`\n      ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\n\n      Option 1: Use formControlName instead of ngModel (reactive strategy):\n\n      ${FormErrorExamples.formGroupName}\n\n      Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\n\n      ${FormErrorExamples.ngModelGroup}`);\n    }\n    static missingNameException() {\n        throw new Error(`If ngModel is used within a form tag, either the name attribute must be set or the form\n      control must be defined as 'standalone' in ngModelOptions.\n\n      Example 1: <input [(ngModel)]=\"person.firstName\" name=\"first\">\n      Example 2: <input [(ngModel)]=\"person.firstName\" [ngModelOptions]=\"{standalone: true}\">`);\n    }\n    static modelGroupParentException() {\n        throw new Error(`\n      ngModelGroup cannot be used with a parent formGroup directive.\n\n      Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\n\n      ${FormErrorExamples.formGroupName}\n\n      Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\n\n      ${FormErrorExamples.ngModelGroup}`);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst modelGroupProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => NgModelGroup)\n};\n/**\n * @description\n * Creates and binds a `FormGroup` instance to a DOM element.\n *\n * This directive can only be used as a child of `NgForm` (within `<form>` tags).\n *\n * Use this directive to validate a sub-group of your form separately from the\n * rest of your form, or if some values in your domain model make more sense\n * to consume together in a nested object.\n *\n * Provide a name for the sub-group and it will become the key\n * for the sub-group in the form's full value. If you need direct access, export the directive into\n * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n *\n * @usageNotes\n *\n * ### Consuming controls in a grouping\n *\n * The following example shows you how to combine controls together in a sub-group\n * of the form.\n *\n * {@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n *\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgModelGroup extends AbstractFormGroupDirective {\n    constructor(parent, validators, asyncValidators) {\n        super();\n        this._parent = parent;\n        this._validators = validators;\n        this._asyncValidators = asyncValidators;\n    }\n    /** @internal */\n    _checkParentType() {\n        if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n            TemplateDrivenErrors.modelGroupParentException();\n        }\n    }\n}\nNgModelGroup.ɵfac = function NgModelGroup_Factory(t) { return new (t || NgModelGroup)(ɵngcc0.ɵɵdirectiveInject(ControlContainer, 5), ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10)); };\nNgModelGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgModelGroup, selectors: [[\"\", \"ngModelGroup\", \"\"]], inputs: { name: [\"ngModelGroup\", \"name\"] }, exportAs: [\"ngModelGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([modelGroupProvider]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nNgModelGroup.ctorParameters = () => [\n    { type: ControlContainer, decorators: [{ type: Host }, { type: SkipSelf }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] }\n];\nNgModelGroup.propDecorators = {\n    name: [{ type: Input, args: ['ngModelGroup',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgModelGroup, [{\n        type: Directive,\n        args: [{ selector: '[ngModelGroup]', providers: [modelGroupProvider], exportAs: 'ngModelGroup' }]\n    }], function () { return [{ type: ControlContainer, decorators: [{\n                type: Host\n            }, {\n                type: SkipSelf\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }]; }, { name: [{\n            type: Input,\n            args: ['ngModelGroup']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst formControlBinding = {\n    provide: NgControl,\n    useExisting: forwardRef(() => NgModel)\n};\nconst ɵ0$1 = () => Promise.resolve(null);\n/**\n * `ngModel` forces an additional change detection run when its inputs change:\n * E.g.:\n * ```\n * <div>{{myModel.valid}}</div>\n * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n * ```\n * I.e. `ngModel` can export itself on the element and then be used in the template.\n * Normally, this would result in expressions before the `input` that use the exported directive\n * to have and old value as they have been\n * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n * detection run.\n *\n * Notes:\n * - this is just one extra run no matter how many `ngModel` have been changed.\n * - this is a general problem when using `exportAs` for directives!\n */\nconst resolvedPromise$1 = (ɵ0$1)();\n/**\n * @description\n * Creates a `FormControl` instance from a domain model and binds it\n * to a form control element.\n *\n * The `FormControl` instance tracks the value, user interaction, and\n * validation status of the control and keeps the view synced with the model. If used\n * within a parent form, the directive also registers itself with the form as a child\n * control.\n *\n * This directive is used by itself or as part of a larger form. Use the\n * `ngModel` selector to activate it.\n *\n * It accepts a domain model as an optional `Input`. If you have a one-way binding\n * to `ngModel` with `[]` syntax, changing the value of the domain model in the component\n * class sets the value in the view. If you have a two-way binding with `[()]` syntax\n * (also known as 'banana-box syntax'), the value in the UI always syncs back to\n * the domain model in your class.\n *\n * To inspect the properties of the associated `FormControl` (like validity state),\n * export the directive into a local template variable using `ngModel` as the key (ex:\n * `#myVar=\"ngModel\"`). You then access the control using the directive's `control` property, but\n * most properties used (like `valid` and `dirty`) fall through to the control anyway for direct\n * access. See a full list of properties directly available in `AbstractControlDirective`.\n *\n * @see `RadioControlValueAccessor`\n * @see `SelectControlValueAccessor`\n *\n * @usageNotes\n *\n * ### Using ngModel on a standalone control\n *\n * The following examples show a simple standalone control using `ngModel`:\n *\n * {@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n *\n * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n * so that the control can be registered with the parent form under that name.\n *\n * In the context of a parent form, it's often unnecessary to include one-way or two-way binding,\n * as the parent form syncs the value for you. You access its properties by exporting it into a\n * local template variable using `ngForm` such as (`#f=\"ngForm\"`). Use the variable where\n * needed on form submission.\n *\n * If you do need to populate initial values into your form, using a one-way binding for\n * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n * than the domain model's value on submit.\n *\n * ### Using ngModel within a form\n *\n * The following example shows controls using `ngModel` within a form:\n *\n * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Using a standalone ngModel within a group\n *\n * The following example shows you how to use a standalone ngModel control\n * within a form. This controls the display of the form, but doesn't contain form data.\n *\n * ```html\n * <form>\n *   <input name=\"login\" ngModel placeholder=\"Login\">\n *   <input type=\"checkbox\" ngModel [ngModelOptions]=\"{standalone: true}\"> Show more options?\n * </form>\n * <!-- form value: {login: ''} -->\n * ```\n *\n * ### Setting the ngModel name attribute through options\n *\n * The following example shows you an alternate way to set the name attribute. The name attribute is\n * used within a custom form component, and the name `@Input` property serves a different purpose.\n *\n * ```html\n * <form>\n *   <my-person-control name=\"Nancy\" ngModel [ngModelOptions]=\"{name: 'user'}\">\n *   </my-person-control>\n * </form>\n * <!-- form value: {user: ''} -->\n * ```\n *\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgModel extends NgControl {\n    constructor(parent, validators, asyncValidators, valueAccessors) {\n        super();\n        this.control = new FormControl();\n        /** @internal */\n        this._registered = false;\n        /**\n         * @description\n         * Event emitter for producing the `ngModelChange` event after\n         * the view model updates.\n         */\n        this.update = new EventEmitter();\n        this._parent = parent;\n        this._rawValidators = validators || [];\n        this._rawAsyncValidators = asyncValidators || [];\n        this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /**\n     * @description\n     * A lifecycle method called when the directive's inputs change. For internal use\n     * only.\n     *\n     * @param changes A object of key/value pairs for the set of changed inputs.\n     */\n    ngOnChanges(changes) {\n        this._checkForErrors();\n        if (!this._registered)\n            this._setUpControl();\n        if ('isDisabled' in changes) {\n            this._updateDisabled(changes);\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            this._updateValue(this.model);\n            this.viewModel = this.model;\n        }\n    }\n    /**\n     * @description\n     * Lifecycle method called before the directive's instance is destroyed. For internal\n     * use only.\n     */\n    ngOnDestroy() {\n        this.formDirective && this.formDirective.removeControl(this);\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return this._parent ? controlPath(this.name, this._parent) : [this.name];\n    }\n    /**\n     * @description\n     * The top-level directive for this control if present, otherwise null.\n     */\n    get formDirective() {\n        return this._parent ? this._parent.formDirective : null;\n    }\n    /**\n     * @description\n     * Synchronous validator function composed of all the synchronous validators\n     * registered with this directive.\n     */\n    get validator() {\n        return composeValidators(this._rawValidators);\n    }\n    /**\n     * @description\n     * Async validator function composed of all the async validators registered with this\n     * directive.\n     */\n    get asyncValidator() {\n        return composeAsyncValidators(this._rawAsyncValidators);\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value emitted by `ngModelChange`.\n     */\n    viewToModelUpdate(newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    }\n    _setUpControl() {\n        this._setUpdateStrategy();\n        this._isStandalone() ? this._setUpStandalone() : this.formDirective.addControl(this);\n        this._registered = true;\n    }\n    _setUpdateStrategy() {\n        if (this.options && this.options.updateOn != null) {\n            this.control._updateOn = this.options.updateOn;\n        }\n    }\n    _isStandalone() {\n        return !this._parent || !!(this.options && this.options.standalone);\n    }\n    _setUpStandalone() {\n        setUpControl(this.control, this);\n        this.control.updateValueAndValidity({ emitEvent: false });\n    }\n    _checkForErrors() {\n        if (!this._isStandalone()) {\n            this._checkParentType();\n        }\n        this._checkName();\n    }\n    _checkParentType() {\n        if (!(this._parent instanceof NgModelGroup) &&\n            this._parent instanceof AbstractFormGroupDirective) {\n            TemplateDrivenErrors.formGroupNameException();\n        }\n        else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n            TemplateDrivenErrors.modelParentException();\n        }\n    }\n    _checkName() {\n        if (this.options && this.options.name)\n            this.name = this.options.name;\n        if (!this._isStandalone() && !this.name) {\n            TemplateDrivenErrors.missingNameException();\n        }\n    }\n    _updateValue(value) {\n        resolvedPromise$1.then(() => {\n            this.control.setValue(value, { emitViewToModelChange: false });\n        });\n    }\n    _updateDisabled(changes) {\n        const disabledValue = changes['isDisabled'].currentValue;\n        const isDisabled = disabledValue === '' || (disabledValue && disabledValue !== 'false');\n        resolvedPromise$1.then(() => {\n            if (isDisabled && !this.control.disabled) {\n                this.control.disable();\n            }\n            else if (!isDisabled && this.control.disabled) {\n                this.control.enable();\n            }\n        });\n    }\n}\nNgModel.ɵfac = function NgModel_Factory(t) { return new (t || NgModel)(ɵngcc0.ɵɵdirectiveInject(ControlContainer, 9), ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 10)); };\nNgModel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgModel, selectors: [[\"\", \"ngModel\", \"\", 3, \"formControlName\", \"\", 3, \"formControl\", \"\"]], inputs: { name: \"name\", isDisabled: [\"disabled\", \"isDisabled\"], model: [\"ngModel\", \"model\"], options: [\"ngModelOptions\", \"options\"] }, outputs: { update: \"ngModelChange\" }, exportAs: [\"ngModel\"], features: [ɵngcc0.ɵɵProvidersFeature([formControlBinding]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nNgModel.ctorParameters = () => [\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Host }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR,] }] }\n];\nNgModel.propDecorators = {\n    name: [{ type: Input }],\n    isDisabled: [{ type: Input, args: ['disabled',] }],\n    model: [{ type: Input, args: ['ngModel',] }],\n    options: [{ type: Input, args: ['ngModelOptions',] }],\n    update: [{ type: Output, args: ['ngModelChange',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgModel, [{\n        type: Directive,\n        args: [{\n                selector: '[ngModel]:not([formControlName]):not([formControl])',\n                providers: [formControlBinding],\n                exportAs: 'ngModel'\n            }]\n    }], function () { return [{ type: ControlContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Host\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALUE_ACCESSOR]\n            }] }]; }, { update: [{\n            type: Output,\n            args: ['ngModelChange']\n        }], name: [{\n            type: Input\n        }], isDisabled: [{\n            type: Input,\n            args: ['disabled']\n        }], model: [{\n            type: Input,\n            args: ['ngModel']\n        }], options: [{\n            type: Input,\n            args: ['ngModelOptions']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Adds `novalidate` attribute to all forms by default.\n *\n * `novalidate` is used to disable browser's native form validation.\n *\n * If you want to use native validation with Angular forms, just add `ngNativeValidate` attribute:\n *\n * ```\n * <form ngNativeValidate></form>\n * ```\n *\n * @publicApi\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n */\nclass ɵNgNoValidate {\n}\nɵNgNoValidate.ɵfac = function ɵNgNoValidate_Factory(t) { return new (t || ɵNgNoValidate)(); };\nɵNgNoValidate.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ɵNgNoValidate, selectors: [[\"form\", 3, \"ngNoForm\", \"\", 3, \"ngNativeValidate\", \"\"]], hostAttrs: [\"novalidate\", \"\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ɵNgNoValidate, [{\n        type: Directive,\n        args: [{\n                selector: 'form:not([ngNoForm]):not([ngNativeValidate])',\n                host: { 'novalidate': '' }\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Token to provide to turn off the ngModel warning on formControl and formControlName.\n */\nconst NG_MODEL_WITH_FORM_CONTROL_WARNING = new InjectionToken('NgModelWithFormControlWarning');\nconst formControlBinding$1 = {\n    provide: NgControl,\n    useExisting: forwardRef(() => FormControlDirective)\n};\n/**\n * @description\n * Synchronizes a standalone `FormControl` instance to a form control element.\n *\n * Note that support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives was deprecated in Angular v6 and is scheduled for removal in\n * a future version of Angular.\n * For details, see [Deprecated features](guide/deprecations#ngmodel-with-reactive-forms).\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see `FormControl`\n * @see `AbstractControl`\n *\n * @usageNotes\n *\n * The following example shows how to register a standalone control and set its value.\n *\n * {@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormControlDirective extends NgControl {\n    constructor(validators, asyncValidators, valueAccessors, _ngModelWarningConfig) {\n        super();\n        this._ngModelWarningConfig = _ngModelWarningConfig;\n        /** @deprecated as of v6 */\n        this.update = new EventEmitter();\n        /**\n         * @description\n         * Instance property used to track whether an ngModel warning has been sent out for this\n         * particular `FormControlDirective` instance. Used to support warning config of \"always\".\n         *\n         * @internal\n         */\n        this._ngModelWarningSent = false;\n        this._rawValidators = validators || [];\n        this._rawAsyncValidators = asyncValidators || [];\n        this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /**\n     * @description\n     * Triggers a warning that this input should not be used with reactive forms.\n     */\n    set isDisabled(isDisabled) {\n        ReactiveErrors.disabledAttrWarning();\n    }\n    /**\n     * @description\n     * A lifecycle method called when the directive's inputs change. For internal use\n     * only.\n     *\n     * @param changes A object of key/value pairs for the set of changed inputs.\n     */\n    ngOnChanges(changes) {\n        if (this._isControlChanged(changes)) {\n            setUpControl(this.form, this);\n            if (this.control.disabled && this.valueAccessor.setDisabledState) {\n                this.valueAccessor.setDisabledState(true);\n            }\n            this.form.updateValueAndValidity({ emitEvent: false });\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            _ngModelWarning('formControl', FormControlDirective, this, this._ngModelWarningConfig);\n            this.form.setValue(this.model);\n            this.viewModel = this.model;\n        }\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return [];\n    }\n    /**\n     * @description\n     * Synchronous validator function composed of all the synchronous validators\n     * registered with this directive.\n     */\n    get validator() {\n        return composeValidators(this._rawValidators);\n    }\n    /**\n     * @description\n     * Async validator function composed of all the async validators registered with this\n     * directive.\n     */\n    get asyncValidator() {\n        return composeAsyncValidators(this._rawAsyncValidators);\n    }\n    /**\n     * @description\n     * The `FormControl` bound to this directive.\n     */\n    get control() {\n        return this.form;\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value for the view model.\n     */\n    viewToModelUpdate(newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    }\n    _isControlChanged(changes) {\n        return changes.hasOwnProperty('form');\n    }\n}\nFormControlDirective.ɵfac = function FormControlDirective_Factory(t) { return new (t || FormControlDirective)(ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 10), ɵngcc0.ɵɵdirectiveInject(NG_MODEL_WITH_FORM_CONTROL_WARNING, 8)); };\nFormControlDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FormControlDirective, selectors: [[\"\", \"formControl\", \"\"]], inputs: { isDisabled: [\"disabled\", \"isDisabled\"], form: [\"formControl\", \"form\"], model: [\"ngModel\", \"model\"] }, outputs: { update: \"ngModelChange\" }, exportAs: [\"ngForm\"], features: [ɵngcc0.ɵɵProvidersFeature([formControlBinding$1]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/**\n * @description\n * Static property used to track whether any ngModel warnings have been sent across\n * all instances of FormControlDirective. Used to support warning config of \"once\".\n *\n * @internal\n */\nFormControlDirective._ngModelWarningSentOnce = false;\nFormControlDirective.ctorParameters = () => [\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [NG_MODEL_WITH_FORM_CONTROL_WARNING,] }] }\n];\nFormControlDirective.propDecorators = {\n    form: [{ type: Input, args: ['formControl',] }],\n    isDisabled: [{ type: Input, args: ['disabled',] }],\n    model: [{ type: Input, args: ['ngModel',] }],\n    update: [{ type: Output, args: ['ngModelChange',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormControlDirective, [{\n        type: Directive,\n        args: [{ selector: '[formControl]', providers: [formControlBinding$1], exportAs: 'ngForm' }]\n    }], function () { return [{ type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALUE_ACCESSOR]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [NG_MODEL_WITH_FORM_CONTROL_WARNING]\n            }] }]; }, { update: [{\n            type: Output,\n            args: ['ngModelChange']\n        }], isDisabled: [{\n            type: Input,\n            args: ['disabled']\n        }], form: [{\n            type: Input,\n            args: ['formControl']\n        }], model: [{\n            type: Input,\n            args: ['ngModel']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst formDirectiveProvider$1 = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => FormGroupDirective)\n};\n/**\n * @description\n *\n * Binds an existing `FormGroup` to a DOM element.\n *\n * This directive accepts an existing `FormGroup` instance. It will then use this\n * `FormGroup` instance to match any child `FormControl`, `FormGroup`,\n * and `FormArray` instances to child `FormControlName`, `FormGroupName`,\n * and `FormArrayName` directives.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see `AbstractControl`\n *\n * ### Register Form Group\n *\n * The following example registers a `FormGroup` with first name and last name controls,\n * and listens for the *ngSubmit* event when the button is clicked.\n *\n * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormGroupDirective extends ControlContainer {\n    constructor(_validators, _asyncValidators) {\n        super();\n        this._validators = _validators;\n        this._asyncValidators = _asyncValidators;\n        /**\n         * @description\n         * Reports whether the form submission has been triggered.\n         */\n        this.submitted = false;\n        /**\n         * @description\n         * Tracks the list of added `FormControlName` instances\n         */\n        this.directives = [];\n        /**\n         * @description\n         * Tracks the `FormGroup` bound to this directive.\n         */\n        this.form = null;\n        /**\n         * @description\n         * Emits an event when the form submission has been triggered.\n         */\n        this.ngSubmit = new EventEmitter();\n    }\n    /**\n     * @description\n     * A lifecycle method called when the directive's inputs change. For internal use only.\n     *\n     * @param changes A object of key/value pairs for the set of changed inputs.\n     */\n    ngOnChanges(changes) {\n        this._checkFormPresent();\n        if (changes.hasOwnProperty('form')) {\n            this._updateValidators();\n            this._updateDomValue();\n            this._updateRegistrations();\n        }\n    }\n    /**\n     * @description\n     * Returns this directive's instance.\n     */\n    get formDirective() {\n        return this;\n    }\n    /**\n     * @description\n     * Returns the `FormGroup` bound to this directive.\n     */\n    get control() {\n        return this.form;\n    }\n    /**\n     * @description\n     * Returns an array representing the path to this group. Because this directive\n     * always lives at the top level of a form, it always an empty array.\n     */\n    get path() {\n        return [];\n    }\n    /**\n     * @description\n     * Method that sets up the control directive in this group, re-calculates its value\n     * and validity, and adds the instance to the internal list of directives.\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    addControl(dir) {\n        const ctrl = this.form.get(dir.path);\n        setUpControl(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n        this.directives.push(dir);\n        return ctrl;\n    }\n    /**\n     * @description\n     * Retrieves the `FormControl` instance from the provided `FormControlName` directive\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    getControl(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * @description\n     * Removes the `FormControlName` instance from the internal list of directives\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    removeControl(dir) {\n        removeDir(this.directives, dir);\n    }\n    /**\n     * Adds a new `FormGroupName` directive instance to the form.\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    addFormGroup(dir) {\n        const ctrl = this.form.get(dir.path);\n        setUpFormContainer(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n    }\n    /**\n     * No-op method to remove the form group.\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    removeFormGroup(dir) { }\n    /**\n     * @description\n     * Retrieves the `FormGroup` for a provided `FormGroupName` directive instance\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    getFormGroup(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * Adds a new `FormArrayName` directive instance to the form.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    addFormArray(dir) {\n        const ctrl = this.form.get(dir.path);\n        setUpFormContainer(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n    }\n    /**\n     * No-op method to remove the form array.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    removeFormArray(dir) { }\n    /**\n     * @description\n     * Retrieves the `FormArray` for a provided `FormArrayName` directive instance.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    getFormArray(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * Sets the new value for the provided `FormControlName` directive.\n     *\n     * @param dir The `FormControlName` directive instance.\n     * @param value The new value for the directive's control.\n     */\n    updateModel(dir, value) {\n        const ctrl = this.form.get(dir.path);\n        ctrl.setValue(value);\n    }\n    /**\n     * @description\n     * Method called with the \"submit\" event is triggered on the form.\n     * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n     *\n     * @param $event The \"submit\" event object\n     */\n    onSubmit($event) {\n        this.submitted = true;\n        syncPendingControls(this.form, this.directives);\n        this.ngSubmit.emit($event);\n        return false;\n    }\n    /**\n     * @description\n     * Method called when the \"reset\" event is triggered on the form.\n     */\n    onReset() {\n        this.resetForm();\n    }\n    /**\n     * @description\n     * Resets the form to an initial value and resets its submitted status.\n     *\n     * @param value The new value for the form.\n     */\n    resetForm(value = undefined) {\n        this.form.reset(value);\n        this.submitted = false;\n    }\n    /** @internal */\n    _updateDomValue() {\n        this.directives.forEach(dir => {\n            const newCtrl = this.form.get(dir.path);\n            if (dir.control !== newCtrl) {\n                cleanUpControl(dir.control, dir);\n                if (newCtrl)\n                    setUpControl(newCtrl, dir);\n                dir.control = newCtrl;\n            }\n        });\n        this.form._updateTreeValidity({ emitEvent: false });\n    }\n    _updateRegistrations() {\n        this.form._registerOnCollectionChange(() => this._updateDomValue());\n        if (this._oldForm)\n            this._oldForm._registerOnCollectionChange(() => { });\n        this._oldForm = this.form;\n    }\n    _updateValidators() {\n        const sync = composeValidators(this._validators);\n        this.form.validator = Validators.compose([this.form.validator, sync]);\n        const async = composeAsyncValidators(this._asyncValidators);\n        this.form.asyncValidator = Validators.composeAsync([this.form.asyncValidator, async]);\n    }\n    _checkFormPresent() {\n        if (!this.form) {\n            ReactiveErrors.missingFormException();\n        }\n    }\n}\nFormGroupDirective.ɵfac = function FormGroupDirective_Factory(t) { return new (t || FormGroupDirective)(ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10)); };\nFormGroupDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FormGroupDirective, selectors: [[\"\", \"formGroup\", \"\"]], hostBindings: function FormGroupDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"submit\", function FormGroupDirective_submit_HostBindingHandler($event) { return ctx.onSubmit($event); })(\"reset\", function FormGroupDirective_reset_HostBindingHandler() { return ctx.onReset(); });\n    } }, inputs: { form: [\"formGroup\", \"form\"] }, outputs: { ngSubmit: \"ngSubmit\" }, exportAs: [\"ngForm\"], features: [ɵngcc0.ɵɵProvidersFeature([formDirectiveProvider$1]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nFormGroupDirective.ctorParameters = () => [\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] }\n];\nFormGroupDirective.propDecorators = {\n    form: [{ type: Input, args: ['formGroup',] }],\n    ngSubmit: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormGroupDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[formGroup]',\n                providers: [formDirectiveProvider$1],\n                host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                exportAs: 'ngForm'\n            }]\n    }], function () { return [{ type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }]; }, { form: [{\n            type: Input,\n            args: ['formGroup']\n        }], ngSubmit: [{\n            type: Output\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst formGroupNameProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => FormGroupName)\n};\n/**\n * @description\n *\n * Syncs a nested `FormGroup` to a DOM element.\n *\n * This directive can only be used with a parent `FormGroupDirective`.\n *\n * It accepts the string name of the nested `FormGroup` to link, and\n * looks for a `FormGroup` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * Use nested form groups to validate a sub-group of a\n * form separately from the rest or to group the values of certain\n * controls into their own nested object.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n *\n * @usageNotes\n *\n * ### Access the group by name\n *\n * The following example uses the {@link AbstractControl#get get} method to access the\n * associated `FormGroup`\n *\n * ```ts\n *   this.form.get('name');\n * ```\n *\n * ### Access individual controls in the group\n *\n * The following example uses the {@link AbstractControl#get get} method to access\n * individual controls within the group using dot syntax.\n *\n * ```ts\n *   this.form.get('name.first');\n * ```\n *\n * ### Register a nested `FormGroup`.\n *\n * The following example registers a nested *name* `FormGroup` within an existing `FormGroup`,\n * and provides methods to retrieve the nested `FormGroup` and individual controls.\n *\n * {@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormGroupName extends AbstractFormGroupDirective {\n    constructor(parent, validators, asyncValidators) {\n        super();\n        this._parent = parent;\n        this._validators = validators;\n        this._asyncValidators = asyncValidators;\n    }\n    /** @internal */\n    _checkParentType() {\n        if (_hasInvalidParent(this._parent)) {\n            ReactiveErrors.groupParentException();\n        }\n    }\n}\nFormGroupName.ɵfac = function FormGroupName_Factory(t) { return new (t || FormGroupName)(ɵngcc0.ɵɵdirectiveInject(ControlContainer, 13), ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10)); };\nFormGroupName.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FormGroupName, selectors: [[\"\", \"formGroupName\", \"\"]], inputs: { name: [\"formGroupName\", \"name\"] }, features: [ɵngcc0.ɵɵProvidersFeature([formGroupNameProvider]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nFormGroupName.ctorParameters = () => [\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] }\n];\nFormGroupName.propDecorators = {\n    name: [{ type: Input, args: ['formGroupName',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormGroupName, [{\n        type: Directive,\n        args: [{ selector: '[formGroupName]', providers: [formGroupNameProvider] }]\n    }], function () { return [{ type: ControlContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Host\n            }, {\n                type: SkipSelf\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }]; }, { name: [{\n            type: Input,\n            args: ['formGroupName']\n        }] }); })();\nconst formArrayNameProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => FormArrayName)\n};\n/**\n * @description\n *\n * Syncs a nested `FormArray` to a DOM element.\n *\n * This directive is designed to be used with a parent `FormGroupDirective` (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the nested `FormArray` you want to link, and\n * will look for a `FormArray` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see `AbstractControl`\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormArrayName extends ControlContainer {\n    constructor(parent, validators, asyncValidators) {\n        super();\n        this._parent = parent;\n        this._validators = validators;\n        this._asyncValidators = asyncValidators;\n    }\n    /**\n     * @description\n     * A lifecycle method called when the directive's inputs are initialized. For internal use only.\n     *\n     * @throws If the directive does not have a valid parent.\n     */\n    ngOnInit() {\n        this._checkParentType();\n        this.formDirective.addFormArray(this);\n    }\n    /**\n     * @description\n     * A lifecycle method called before the directive's instance is destroyed. For internal use only.\n     */\n    ngOnDestroy() {\n        if (this.formDirective) {\n            this.formDirective.removeFormArray(this);\n        }\n    }\n    /**\n     * @description\n     * The `FormArray` bound to this directive.\n     */\n    get control() {\n        return this.formDirective.getFormArray(this);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n        return this._parent ? this._parent.formDirective : null;\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    /**\n     * @description\n     * Synchronous validator function composed of all the synchronous validators registered with this\n     * directive.\n     */\n    get validator() {\n        return composeValidators(this._validators);\n    }\n    /**\n     * @description\n     * Async validator function composed of all the async validators registered with this directive.\n     */\n    get asyncValidator() {\n        return composeAsyncValidators(this._asyncValidators);\n    }\n    _checkParentType() {\n        if (_hasInvalidParent(this._parent)) {\n            ReactiveErrors.arrayParentException();\n        }\n    }\n}\nFormArrayName.ɵfac = function FormArrayName_Factory(t) { return new (t || FormArrayName)(ɵngcc0.ɵɵdirectiveInject(ControlContainer, 13), ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10)); };\nFormArrayName.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FormArrayName, selectors: [[\"\", \"formArrayName\", \"\"]], inputs: { name: [\"formArrayName\", \"name\"] }, features: [ɵngcc0.ɵɵProvidersFeature([formArrayNameProvider]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nFormArrayName.ctorParameters = () => [\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] }\n];\nFormArrayName.propDecorators = {\n    name: [{ type: Input, args: ['formArrayName',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormArrayName, [{\n        type: Directive,\n        args: [{ selector: '[formArrayName]', providers: [formArrayNameProvider] }]\n    }], function () { return [{ type: ControlContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Host\n            }, {\n                type: SkipSelf\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }]; }, { name: [{\n            type: Input,\n            args: ['formArrayName']\n        }] }); })();\nfunction _hasInvalidParent(parent) {\n    return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) &&\n        !(parent instanceof FormArrayName);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst controlNameBinding = {\n    provide: NgControl,\n    useExisting: forwardRef(() => FormControlName)\n};\n/**\n * @description\n * Syncs a `FormControl` in an existing `FormGroup` to a form control\n * element by name.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see `FormControl`\n * @see `AbstractControl`\n *\n * @usageNotes\n *\n * ### Register `FormControl` within a group\n *\n * The following example shows how to register multiple form controls within a form group\n * and set their value.\n *\n * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * To see `formControlName` examples with different form control types, see:\n *\n * * Radio buttons: `RadioControlValueAccessor`\n * * Selects: `SelectControlValueAccessor`\n *\n * ### Use with ngModel is deprecated\n *\n * Support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives has been deprecated in Angular v6 and is scheduled for removal in\n * a future version of Angular.\n *\n * For details, see [Deprecated features](guide/deprecations#ngmodel-with-reactive-forms).\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormControlName extends NgControl {\n    constructor(parent, validators, asyncValidators, valueAccessors, _ngModelWarningConfig) {\n        super();\n        this._ngModelWarningConfig = _ngModelWarningConfig;\n        this._added = false;\n        /** @deprecated as of v6 */\n        this.update = new EventEmitter();\n        /**\n         * @description\n         * Instance property used to track whether an ngModel warning has been sent out for this\n         * particular FormControlName instance. Used to support warning config of \"always\".\n         *\n         * @internal\n         */\n        this._ngModelWarningSent = false;\n        this._parent = parent;\n        this._rawValidators = validators || [];\n        this._rawAsyncValidators = asyncValidators || [];\n        this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /**\n     * @description\n     * Triggers a warning that this input should not be used with reactive forms.\n     */\n    set isDisabled(isDisabled) {\n        ReactiveErrors.disabledAttrWarning();\n    }\n    /**\n     * @description\n     * A lifecycle method called when the directive's inputs change. For internal use only.\n     *\n     * @param changes A object of key/value pairs for the set of changed inputs.\n     */\n    ngOnChanges(changes) {\n        if (!this._added)\n            this._setUpControl();\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            _ngModelWarning('formControlName', FormControlName, this, this._ngModelWarningConfig);\n            this.viewModel = this.model;\n            this.formDirective.updateModel(this, this.model);\n        }\n    }\n    /**\n     * @description\n     * Lifecycle method called before the directive's instance is destroyed. For internal use only.\n     */\n    ngOnDestroy() {\n        if (this.formDirective) {\n            this.formDirective.removeControl(this);\n        }\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value for the view model.\n     */\n    viewToModelUpdate(newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n        return this._parent ? this._parent.formDirective : null;\n    }\n    /**\n     * @description\n     * Synchronous validator function composed of all the synchronous validators\n     * registered with this directive.\n     */\n    get validator() {\n        return composeValidators(this._rawValidators);\n    }\n    /**\n     * @description\n     * Async validator function composed of all the async validators registered with this\n     * directive.\n     */\n    get asyncValidator() {\n        return composeAsyncValidators(this._rawAsyncValidators);\n    }\n    _checkParentType() {\n        if (!(this._parent instanceof FormGroupName) &&\n            this._parent instanceof AbstractFormGroupDirective) {\n            ReactiveErrors.ngModelGroupException();\n        }\n        else if (!(this._parent instanceof FormGroupName) && !(this._parent instanceof FormGroupDirective) &&\n            !(this._parent instanceof FormArrayName)) {\n            ReactiveErrors.controlParentException();\n        }\n    }\n    _setUpControl() {\n        this._checkParentType();\n        this.control = this.formDirective.addControl(this);\n        if (this.control.disabled && this.valueAccessor.setDisabledState) {\n            this.valueAccessor.setDisabledState(true);\n        }\n        this._added = true;\n    }\n}\nFormControlName.ɵfac = function FormControlName_Factory(t) { return new (t || FormControlName)(ɵngcc0.ɵɵdirectiveInject(ControlContainer, 13), ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 10), ɵngcc0.ɵɵdirectiveInject(NG_MODEL_WITH_FORM_CONTROL_WARNING, 8)); };\nFormControlName.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FormControlName, selectors: [[\"\", \"formControlName\", \"\"]], inputs: { isDisabled: [\"disabled\", \"isDisabled\"], name: [\"formControlName\", \"name\"], model: [\"ngModel\", \"model\"] }, outputs: { update: \"ngModelChange\" }, features: [ɵngcc0.ɵɵProvidersFeature([controlNameBinding]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/**\n * @description\n * Static property used to track whether any ngModel warnings have been sent across\n * all instances of FormControlName. Used to support warning config of \"once\".\n *\n * @internal\n */\nFormControlName._ngModelWarningSentOnce = false;\nFormControlName.ctorParameters = () => [\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [NG_MODEL_WITH_FORM_CONTROL_WARNING,] }] }\n];\nFormControlName.propDecorators = {\n    name: [{ type: Input, args: ['formControlName',] }],\n    isDisabled: [{ type: Input, args: ['disabled',] }],\n    model: [{ type: Input, args: ['ngModel',] }],\n    update: [{ type: Output, args: ['ngModelChange',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormControlName, [{\n        type: Directive,\n        args: [{ selector: '[formControlName]', providers: [controlNameBinding] }]\n    }], function () { return [{ type: ControlContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Host\n            }, {\n                type: SkipSelf\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALUE_ACCESSOR]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [NG_MODEL_WITH_FORM_CONTROL_WARNING]\n            }] }]; }, { update: [{\n            type: Output,\n            args: ['ngModelChange']\n        }], isDisabled: [{\n            type: Input,\n            args: ['disabled']\n        }], name: [{\n            type: Input,\n            args: ['formControlName']\n        }], model: [{\n            type: Input,\n            args: ['ngModel']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n * Provider which adds `RequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => RequiredValidator),\n    multi: true\n};\n/**\n * @description\n * Provider which adds `CheckboxRequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => CheckboxRequiredValidator),\n    multi: true\n};\n/**\n * @description\n * A directive that adds the `required` validator to any controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a required validator using template-driven forms\n *\n * ```\n * <input name=\"fullName\" ngModel required>\n * ```\n *\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass RequiredValidator {\n    constructor() {\n        this._required = false;\n    }\n    /**\n     * @description\n     * Tracks changes to the required attribute bound to this directive.\n     */\n    get required() {\n        return this._required;\n    }\n    set required(value) {\n        this._required = value != null && value !== false && `${value}` !== 'false';\n        if (this._onChange)\n            this._onChange();\n    }\n    /**\n     * @description\n     * Method that validates whether the control is empty.\n     * Returns the validation result if enabled, otherwise null.\n     */\n    validate(control) {\n        return this.required ? Validators.required(control) : null;\n    }\n    /**\n     * @description\n     * Registers a callback function to call when the validator inputs change.\n     *\n     * @param fn The callback function\n     */\n    registerOnValidatorChange(fn) {\n        this._onChange = fn;\n    }\n}\nRequiredValidator.ɵfac = function RequiredValidator_Factory(t) { return new (t || RequiredValidator)(); };\nRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: RequiredValidator, selectors: [[\"\", \"required\", \"\", \"formControlName\", \"\", 3, \"type\", \"checkbox\"], [\"\", \"required\", \"\", \"formControl\", \"\", 3, \"type\", \"checkbox\"], [\"\", \"required\", \"\", \"ngModel\", \"\", 3, \"type\", \"checkbox\"]], hostVars: 1, hostBindings: function RequiredValidator_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"required\", ctx.required ? \"\" : null);\n    } }, inputs: { required: \"required\" }, features: [ɵngcc0.ɵɵProvidersFeature([REQUIRED_VALIDATOR])] });\nRequiredValidator.propDecorators = {\n    required: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: ':not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]',\n                providers: [REQUIRED_VALIDATOR],\n                host: { '[attr.required]': 'required ? \"\" : null' }\n            }]\n    }], function () { return []; }, { required: [{\n            type: Input\n        }] }); })();\n/**\n * A Directive that adds the `required` validator to checkbox controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a required checkbox validator using template-driven forms\n *\n * The following example shows how to add a checkbox required validator to an input attached to an\n * ngModel binding.\n *\n * ```\n * <input type=\"checkbox\" name=\"active\" ngModel required>\n * ```\n *\n * @publicApi\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\nclass CheckboxRequiredValidator extends RequiredValidator {\n    /**\n     * @description\n     * Method that validates whether or not the checkbox has been checked.\n     * Returns the validation result if enabled, otherwise null.\n     */\n    validate(control) {\n        return this.required ? Validators.requiredTrue(control) : null;\n    }\n}\nCheckboxRequiredValidator.ɵfac = function CheckboxRequiredValidator_Factory(t) { return ɵCheckboxRequiredValidator_BaseFactory(t || CheckboxRequiredValidator); };\nCheckboxRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CheckboxRequiredValidator, selectors: [[\"input\", \"type\", \"checkbox\", \"required\", \"\", \"formControlName\", \"\"], [\"input\", \"type\", \"checkbox\", \"required\", \"\", \"formControl\", \"\"], [\"input\", \"type\", \"checkbox\", \"required\", \"\", \"ngModel\", \"\"]], hostVars: 1, hostBindings: function CheckboxRequiredValidator_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"required\", ctx.required ? \"\" : null);\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([CHECKBOX_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵCheckboxRequiredValidator_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(CheckboxRequiredValidator);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CheckboxRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: 'input[type=checkbox][required][formControlName],input[type=checkbox][required][formControl],input[type=checkbox][required][ngModel]',\n                providers: [CHECKBOX_REQUIRED_VALIDATOR],\n                host: { '[attr.required]': 'required ? \"\" : null' }\n            }]\n    }], null, null); })();\n/**\n * @description\n * Provider which adds `EmailValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst EMAIL_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => EmailValidator),\n    multi: true\n};\n/**\n * A directive that adds the `email` validator to controls marked with the\n * `email` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding an email validator\n *\n * The following example shows how to add an email validator to an input attached to an ngModel\n * binding.\n *\n * ```\n * <input type=\"email\" name=\"email\" ngModel email>\n * <input type=\"email\" name=\"email\" ngModel email=\"true\">\n * <input type=\"email\" name=\"email\" ngModel [email]=\"true\">\n * ```\n *\n * @publicApi\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\nclass EmailValidator {\n    constructor() {\n        this._enabled = false;\n    }\n    /**\n     * @description\n     * Tracks changes to the email attribute bound to this directive.\n     */\n    set email(value) {\n        this._enabled = value === '' || value === true || value === 'true';\n        if (this._onChange)\n            this._onChange();\n    }\n    /**\n     * @description\n     * Method that validates whether an email address is valid.\n     * Returns the validation result if enabled, otherwise null.\n     */\n    validate(control) {\n        return this._enabled ? Validators.email(control) : null;\n    }\n    /**\n     * @description\n     * Registers a callback function to call when the validator inputs change.\n     *\n     * @param fn The callback function\n     */\n    registerOnValidatorChange(fn) {\n        this._onChange = fn;\n    }\n}\nEmailValidator.ɵfac = function EmailValidator_Factory(t) { return new (t || EmailValidator)(); };\nEmailValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: EmailValidator, selectors: [[\"\", \"email\", \"\", \"formControlName\", \"\"], [\"\", \"email\", \"\", \"formControl\", \"\"], [\"\", \"email\", \"\", \"ngModel\", \"\"]], inputs: { email: \"email\" }, features: [ɵngcc0.ɵɵProvidersFeature([EMAIL_VALIDATOR])] });\nEmailValidator.propDecorators = {\n    email: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(EmailValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[email][formControlName],[email][formControl],[email][ngModel]',\n                providers: [EMAIL_VALIDATOR]\n            }]\n    }], function () { return []; }, { email: [{\n            type: Input\n        }] }); })();\n/**\n * @description\n * Provider which adds `MinLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MIN_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MinLengthValidator),\n    multi: true\n};\n/**\n * A directive that adds minimum length validation to controls marked with the\n * `minlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a minimum length validator\n *\n * The following example shows how to add a minimum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel minlength=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MinLengthValidator {\n    constructor() {\n        this._validator = Validators.nullValidator;\n    }\n    /**\n     * @description\n     * A lifecycle method called when the directive's inputs change. For internal use\n     * only.\n     *\n     * @param changes A object of key/value pairs for the set of changed inputs.\n     */\n    ngOnChanges(changes) {\n        if ('minlength' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    }\n    /**\n     * @description\n     * Method that validates whether the value meets a minimum length\n     * requirement. Returns the validation result if enabled, otherwise null.\n     */\n    validate(control) {\n        return this.minlength == null ? null : this._validator(control);\n    }\n    /**\n     * @description\n     * Registers a callback function to call when the validator inputs change.\n     *\n     * @param fn The callback function\n     */\n    registerOnValidatorChange(fn) {\n        this._onChange = fn;\n    }\n    _createValidator() {\n        this._validator = Validators.minLength(typeof this.minlength === 'number' ? this.minlength : parseInt(this.minlength, 10));\n    }\n}\nMinLengthValidator.ɵfac = function MinLengthValidator_Factory(t) { return new (t || MinLengthValidator)(); };\nMinLengthValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MinLengthValidator, selectors: [[\"\", \"minlength\", \"\", \"formControlName\", \"\"], [\"\", \"minlength\", \"\", \"formControl\", \"\"], [\"\", \"minlength\", \"\", \"ngModel\", \"\"]], hostVars: 1, hostBindings: function MinLengthValidator_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"minlength\", ctx.minlength ? ctx.minlength : null);\n    } }, inputs: { minlength: \"minlength\" }, features: [ɵngcc0.ɵɵProvidersFeature([MIN_LENGTH_VALIDATOR]), ɵngcc0.ɵɵNgOnChangesFeature] });\nMinLengthValidator.propDecorators = {\n    minlength: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MinLengthValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',\n                providers: [MIN_LENGTH_VALIDATOR],\n                host: { '[attr.minlength]': 'minlength ? minlength : null' }\n            }]\n    }], function () { return []; }, { minlength: [{\n            type: Input\n        }] }); })();\n/**\n * @description\n * Provider which adds `MaxLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MAX_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaxLengthValidator),\n    multi: true\n};\n/**\n * A directive that adds max length validation to controls marked with the\n * `maxlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a maximum length validator\n *\n * The following example shows how to add a maximum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel maxlength=\"25\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MaxLengthValidator {\n    constructor() {\n        this._validator = Validators.nullValidator;\n    }\n    /**\n     * @description\n     * A lifecycle method called when the directive's inputs change. For internal use\n     * only.\n     *\n     * @param changes A object of key/value pairs for the set of changed inputs.\n     */\n    ngOnChanges(changes) {\n        if ('maxlength' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    }\n    /**\n     * @description\n     * Method that validates whether the value exceeds\n     * the maximum length requirement.\n     */\n    validate(control) {\n        return this.maxlength != null ? this._validator(control) : null;\n    }\n    /**\n     * @description\n     * Registers a callback function to call when the validator inputs change.\n     *\n     * @param fn The callback function\n     */\n    registerOnValidatorChange(fn) {\n        this._onChange = fn;\n    }\n    _createValidator() {\n        this._validator = Validators.maxLength(typeof this.maxlength === 'number' ? this.maxlength : parseInt(this.maxlength, 10));\n    }\n}\nMaxLengthValidator.ɵfac = function MaxLengthValidator_Factory(t) { return new (t || MaxLengthValidator)(); };\nMaxLengthValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MaxLengthValidator, selectors: [[\"\", \"maxlength\", \"\", \"formControlName\", \"\"], [\"\", \"maxlength\", \"\", \"formControl\", \"\"], [\"\", \"maxlength\", \"\", \"ngModel\", \"\"]], hostVars: 1, hostBindings: function MaxLengthValidator_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"maxlength\", ctx.maxlength ? ctx.maxlength : null);\n    } }, inputs: { maxlength: \"maxlength\" }, features: [ɵngcc0.ɵɵProvidersFeature([MAX_LENGTH_VALIDATOR]), ɵngcc0.ɵɵNgOnChangesFeature] });\nMaxLengthValidator.propDecorators = {\n    maxlength: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MaxLengthValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',\n                providers: [MAX_LENGTH_VALIDATOR],\n                host: { '[attr.maxlength]': 'maxlength ? maxlength : null' }\n            }]\n    }], function () { return []; }, { maxlength: [{\n            type: Input\n        }] }); })();\n/**\n * @description\n * Provider which adds `PatternValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst PATTERN_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => PatternValidator),\n    multi: true\n};\n/**\n * @description\n * A directive that adds regex pattern validation to controls marked with the\n * `pattern` attribute. The regex must match the entire control value.\n * The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a pattern validator\n *\n * The following example shows how to add a pattern validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel pattern=\"[a-zA-Z ]*\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass PatternValidator {\n    constructor() {\n        this._validator = Validators.nullValidator;\n    }\n    /**\n     * @description\n     * A lifecycle method called when the directive's inputs change. For internal use\n     * only.\n     *\n     * @param changes A object of key/value pairs for the set of changed inputs.\n     */\n    ngOnChanges(changes) {\n        if ('pattern' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    }\n    /**\n     * @description\n     * Method that validates whether the value matches the\n     * the pattern requirement.\n     */\n    validate(control) {\n        return this._validator(control);\n    }\n    /**\n     * @description\n     * Registers a callback function to call when the validator inputs change.\n     *\n     * @param fn The callback function\n     */\n    registerOnValidatorChange(fn) {\n        this._onChange = fn;\n    }\n    _createValidator() {\n        this._validator = Validators.pattern(this.pattern);\n    }\n}\nPatternValidator.ɵfac = function PatternValidator_Factory(t) { return new (t || PatternValidator)(); };\nPatternValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: PatternValidator, selectors: [[\"\", \"pattern\", \"\", \"formControlName\", \"\"], [\"\", \"pattern\", \"\", \"formControl\", \"\"], [\"\", \"pattern\", \"\", \"ngModel\", \"\"]], hostVars: 1, hostBindings: function PatternValidator_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"pattern\", ctx.pattern ? ctx.pattern : null);\n    } }, inputs: { pattern: \"pattern\" }, features: [ɵngcc0.ɵɵProvidersFeature([PATTERN_VALIDATOR]), ɵngcc0.ɵɵNgOnChangesFeature] });\nPatternValidator.propDecorators = {\n    pattern: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PatternValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',\n                providers: [PATTERN_VALIDATOR],\n                host: { '[attr.pattern]': 'pattern ? pattern : null' }\n            }]\n    }], function () { return []; }, { pattern: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst SHARED_FORM_DIRECTIVES = [\n    ɵNgNoValidate,\n    NgSelectOption,\n    ɵNgSelectMultipleOption,\n    DefaultValueAccessor,\n    NumberValueAccessor,\n    RangeValueAccessor,\n    CheckboxControlValueAccessor,\n    SelectControlValueAccessor,\n    SelectMultipleControlValueAccessor,\n    RadioControlValueAccessor,\n    NgControlStatus,\n    NgControlStatusGroup,\n    RequiredValidator,\n    MinLengthValidator,\n    MaxLengthValidator,\n    PatternValidator,\n    CheckboxRequiredValidator,\n    EmailValidator,\n];\nconst TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\nconst REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n/**\n * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n */\nclass ɵInternalFormsSharedModule {\n}\nɵInternalFormsSharedModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ɵInternalFormsSharedModule });\nɵInternalFormsSharedModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ɵInternalFormsSharedModule_Factory(t) { return new (t || ɵInternalFormsSharedModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ɵInternalFormsSharedModule, { declarations: [ɵNgNoValidate, NgSelectOption, ɵNgSelectMultipleOption, DefaultValueAccessor, NumberValueAccessor, RangeValueAccessor, CheckboxControlValueAccessor, SelectControlValueAccessor, SelectMultipleControlValueAccessor, RadioControlValueAccessor, NgControlStatus, NgControlStatusGroup, RequiredValidator, MinLengthValidator, MaxLengthValidator, PatternValidator, CheckboxRequiredValidator, EmailValidator], exports: [ɵNgNoValidate, NgSelectOption, ɵNgSelectMultipleOption, DefaultValueAccessor, NumberValueAccessor, RangeValueAccessor, CheckboxControlValueAccessor, SelectControlValueAccessor, SelectMultipleControlValueAccessor, RadioControlValueAccessor, NgControlStatus, NgControlStatusGroup, RequiredValidator, MinLengthValidator, MaxLengthValidator, PatternValidator, CheckboxRequiredValidator, EmailValidator] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ɵInternalFormsSharedModule, [{\n        type: NgModule,\n        args: [{\n                declarations: SHARED_FORM_DIRECTIVES,\n                exports: SHARED_FORM_DIRECTIVES\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction isAbstractControlOptions(options) {\n    return options.asyncValidators !== undefined ||\n        options.validators !== undefined ||\n        options.updateOn !== undefined;\n}\n/**\n * @description\n * Creates an `AbstractControl` from a user-specified configuration.\n *\n * The `FormBuilder` provides syntactic sugar that shortens creating instances of a `FormControl`,\n * `FormGroup`, or `FormArray`. It reduces the amount of boilerplate needed to build complex\n * forms.\n *\n * @see [Reactive Forms Guide](/guide/reactive-forms)\n *\n * @publicApi\n */\nclass FormBuilder {\n    /**\n     * @description\n     * Construct a new `FormGroup` instance.\n     *\n     * @param controlsConfig A collection of child controls. The key for each child is the name\n     * under which it is registered.\n     *\n     * @param options Configuration options object for the `FormGroup`. The object can\n     * have two shapes:\n     *\n     * 1) `AbstractControlOptions` object (preferred), which consists of:\n     * * `validators`: A synchronous validator function, or an array of validator functions\n     * * `asyncValidators`: A single async validator or array of async validator functions\n     * * `updateOn`: The event upon which the control should be updated (options: 'change' | 'blur' |\n     * submit')\n     *\n     * 2) Legacy configuration object, which consists of:\n     * * `validator`: A synchronous validator function, or an array of validator functions\n     * * `asyncValidator`: A single async validator or array of async validator functions\n     *\n     */\n    group(controlsConfig, options = null) {\n        const controls = this._reduceControls(controlsConfig);\n        let validators = null;\n        let asyncValidators = null;\n        let updateOn = undefined;\n        if (options != null) {\n            if (isAbstractControlOptions(options)) {\n                // `options` are `AbstractControlOptions`\n                validators = options.validators != null ? options.validators : null;\n                asyncValidators = options.asyncValidators != null ? options.asyncValidators : null;\n                updateOn = options.updateOn != null ? options.updateOn : undefined;\n            }\n            else {\n                // `options` are legacy form group options\n                validators = options['validator'] != null ? options['validator'] : null;\n                asyncValidators = options['asyncValidator'] != null ? options['asyncValidator'] : null;\n            }\n        }\n        return new FormGroup(controls, { asyncValidators, updateOn, validators });\n    }\n    /**\n     * @description\n     * Construct a new `FormControl` with the given state, validators and options.\n     *\n     * @param formState Initializes the control with an initial state value, or\n     * with an object that contains both a value and a disabled status.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains\n     * validation functions and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator\n     * functions.\n     *\n     * @usageNotes\n     *\n     * ### Initialize a control as disabled\n     *\n     * The following example returns a control with an initial value in a disabled state.\n     *\n     * <code-example path=\"forms/ts/formBuilder/form_builder_example.ts\" region=\"disabled-control\">\n     * </code-example>\n     */\n    control(formState, validatorOrOpts, asyncValidator) {\n        return new FormControl(formState, validatorOrOpts, asyncValidator);\n    }\n    /**\n     * Constructs a new `FormArray` from the given array of configurations,\n     * validators and options.\n     *\n     * @param controlsConfig An array of child controls or control configs. Each\n     * child control is given an index when it is registered.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains\n     * validation functions and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator\n     * functions.\n     */\n    array(controlsConfig, validatorOrOpts, asyncValidator) {\n        const controls = controlsConfig.map(c => this._createControl(c));\n        return new FormArray(controls, validatorOrOpts, asyncValidator);\n    }\n    /** @internal */\n    _reduceControls(controlsConfig) {\n        const controls = {};\n        Object.keys(controlsConfig).forEach(controlName => {\n            controls[controlName] = this._createControl(controlsConfig[controlName]);\n        });\n        return controls;\n    }\n    /** @internal */\n    _createControl(controlConfig) {\n        if (controlConfig instanceof FormControl || controlConfig instanceof FormGroup ||\n            controlConfig instanceof FormArray) {\n            return controlConfig;\n        }\n        else if (Array.isArray(controlConfig)) {\n            const value = controlConfig[0];\n            const validator = controlConfig.length > 1 ? controlConfig[1] : null;\n            const asyncValidator = controlConfig.length > 2 ? controlConfig[2] : null;\n            return this.control(value, validator, asyncValidator);\n        }\n        else {\n            return this.control(controlConfig);\n        }\n    }\n}\nFormBuilder.ɵfac = function FormBuilder_Factory(t) { return new (t || FormBuilder)(); };\nFormBuilder.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: FormBuilder, factory: FormBuilder.ɵfac });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormBuilder, [{\n        type: Injectable\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('10.0.11');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Exports the required providers and directives for template-driven forms,\n * making them available for import by NgModules that import this module.\n *\n * @see [Forms Overview](/guide/forms-overview)\n * @see [Template-driven Forms Guide](/guide/forms)\n *\n * @publicApi\n */\nclass FormsModule {\n}\nFormsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: FormsModule });\nFormsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function FormsModule_Factory(t) { return new (t || FormsModule)(); }, providers: [RadioControlRegistry], imports: [ɵInternalFormsSharedModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FormsModule, { declarations: [NgModel, NgModelGroup, NgForm], exports: [ɵInternalFormsSharedModule, NgModel, NgModelGroup, NgForm] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormsModule, [{\n        type: NgModule,\n        args: [{\n                declarations: TEMPLATE_DRIVEN_DIRECTIVES,\n                providers: [RadioControlRegistry],\n                exports: [ɵInternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES]\n            }]\n    }], null, null); })();\n/**\n * Exports the required infrastructure and directives for reactive forms,\n * making them available for import by NgModules that import this module.\n *\n * @see [Forms Overview](guide/forms-overview)\n * @see [Reactive Forms Guide](guide/reactive-forms)\n *\n * @publicApi\n */\nclass ReactiveFormsModule {\n    /**\n     * @description\n     * Provides options for configuring the reactive forms module.\n     *\n     * @param opts An object of configuration options\n     * * `warnOnNgModelWithFormControl` Configures when to emit a warning when an `ngModel`\n     * binding is used with reactive form directives.\n     */\n    static withConfig(opts) {\n        return {\n            ngModule: ReactiveFormsModule,\n            providers: [\n                { provide: NG_MODEL_WITH_FORM_CONTROL_WARNING, useValue: opts.warnOnNgModelWithFormControl }\n            ]\n        };\n    }\n}\nReactiveFormsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ReactiveFormsModule });\nReactiveFormsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ReactiveFormsModule_Factory(t) { return new (t || ReactiveFormsModule)(); }, providers: [FormBuilder, RadioControlRegistry], imports: [ɵInternalFormsSharedModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ReactiveFormsModule, { declarations: [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName], exports: [ɵInternalFormsSharedModule, FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ReactiveFormsModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [REACTIVE_DRIVEN_DIRECTIVES],\n                providers: [FormBuilder, RadioControlRegistry],\n                exports: [ɵInternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AbstractControl, AbstractControlDirective, AbstractFormGroupDirective, COMPOSITION_BUFFER_MODE, CheckboxControlValueAccessor, CheckboxRequiredValidator, ControlContainer, DefaultValueAccessor, EmailValidator, FormArray, FormArrayName, FormBuilder, FormControl, FormControlDirective, FormControlName, FormGroup, FormGroupDirective, FormGroupName, FormsModule, MaxLengthValidator, MinLengthValidator, NG_ASYNC_VALIDATORS, NG_VALIDATORS, NG_VALUE_ACCESSOR, NgControl, NgControlStatus, NgControlStatusGroup, NgForm, NgModel, NgModelGroup, NgSelectOption, NumberValueAccessor, PatternValidator, RadioControlValueAccessor, RangeValueAccessor, ReactiveFormsModule, RequiredValidator, SelectControlValueAccessor, SelectMultipleControlValueAccessor, VERSION, Validators, ɵInternalFormsSharedModule, ɵNgNoValidate, ɵNgSelectMultipleOption, SHARED_FORM_DIRECTIVES as ɵangular_packages_forms_forms_a, TEMPLATE_DRIVEN_DIRECTIVES as ɵangular_packages_forms_forms_b, CHECKBOX_REQUIRED_VALIDATOR as ɵangular_packages_forms_forms_ba, EMAIL_VALIDATOR as ɵangular_packages_forms_forms_bb, MIN_LENGTH_VALIDATOR as ɵangular_packages_forms_forms_bc, MAX_LENGTH_VALIDATOR as ɵangular_packages_forms_forms_bd, PATTERN_VALIDATOR as ɵangular_packages_forms_forms_be, REACTIVE_DRIVEN_DIRECTIVES as ɵangular_packages_forms_forms_c, ɵInternalFormsSharedModule as ɵangular_packages_forms_forms_d, CHECKBOX_VALUE_ACCESSOR as ɵangular_packages_forms_forms_e, DEFAULT_VALUE_ACCESSOR as ɵangular_packages_forms_forms_f, AbstractControlStatus as ɵangular_packages_forms_forms_g, ngControlStatusHost as ɵangular_packages_forms_forms_h, formDirectiveProvider as ɵangular_packages_forms_forms_i, formControlBinding as ɵangular_packages_forms_forms_j, modelGroupProvider as ɵangular_packages_forms_forms_k, NUMBER_VALUE_ACCESSOR as ɵangular_packages_forms_forms_l, RADIO_VALUE_ACCESSOR as ɵangular_packages_forms_forms_m, RadioControlRegistry as ɵangular_packages_forms_forms_n, RANGE_VALUE_ACCESSOR as ɵangular_packages_forms_forms_o, NG_MODEL_WITH_FORM_CONTROL_WARNING as ɵangular_packages_forms_forms_p, formControlBinding$1 as ɵangular_packages_forms_forms_q, controlNameBinding as ɵangular_packages_forms_forms_r, formDirectiveProvider$1 as ɵangular_packages_forms_forms_s, formGroupNameProvider as ɵangular_packages_forms_forms_t, formArrayNameProvider as ɵangular_packages_forms_forms_u, SELECT_VALUE_ACCESSOR as ɵangular_packages_forms_forms_v, SELECT_MULTIPLE_VALUE_ACCESSOR as ɵangular_packages_forms_forms_w, ɵNgSelectMultipleOption as ɵangular_packages_forms_forms_x, ɵNgNoValidate as ɵangular_packages_forms_forms_y, REQUIRED_VALIDATOR as ɵangular_packages_forms_forms_z };\n\n//# sourceMappingURL=forms.js.map","import { mergeMap } from './mergeMap';\nexport function concatMap(project, resultSelector) {\n    return mergeMap(project, resultSelector, 1);\n}\n//# sourceMappingURL=concatMap.js.map","/**\n * @license Angular v10.0.11\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { Injectable, InjectionToken, Inject, PLATFORM_ID, Injector, NgModule } from '@angular/core';\nimport { of, Observable } from 'rxjs';\nimport { concatMap, filter, map } from 'rxjs/operators';\nimport { DOCUMENT, ɵparseCookieValue } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Transforms an `HttpRequest` into a stream of `HttpEvent`s, one of which will likely be a\n * `HttpResponse`.\n *\n * `HttpHandler` is injectable. When injected, the handler instance dispatches requests to the\n * first interceptor in the chain, which dispatches to the second, etc, eventually reaching the\n * `HttpBackend`.\n *\n * In an `HttpInterceptor`, the `HttpHandler` parameter is the next interceptor in the chain.\n *\n * @publicApi\n */\nimport * as ɵngcc0 from '@angular/core';\nclass HttpHandler {\n}\n/**\n * A final `HttpHandler` which will dispatch the request via browser HTTP APIs to a backend.\n *\n * Interceptors sit between the `HttpClient` interface and the `HttpBackend`.\n *\n * When injected, `HttpBackend` dispatches requests directly to the backend, without going\n * through the interceptor chain.\n *\n * @publicApi\n */\nclass HttpBackend {\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents the header configuration options for an HTTP request.\n * Instances are immutable. Modifying methods return a cloned\n * instance with the change. The original object is never changed.\n *\n * @publicApi\n */\nclass HttpHeaders {\n    /**  Constructs a new HTTP header object with the given values.*/\n    constructor(headers) {\n        /**\n         * Internal map of lowercased header names to the normalized\n         * form of the name (the form seen first).\n         */\n        this.normalizedNames = new Map();\n        /**\n         * Queued updates to be materialized the next initialization.\n         */\n        this.lazyUpdate = null;\n        if (!headers) {\n            this.headers = new Map();\n        }\n        else if (typeof headers === 'string') {\n            this.lazyInit = () => {\n                this.headers = new Map();\n                headers.split('\\n').forEach(line => {\n                    const index = line.indexOf(':');\n                    if (index > 0) {\n                        const name = line.slice(0, index);\n                        const key = name.toLowerCase();\n                        const value = line.slice(index + 1).trim();\n                        this.maybeSetNormalizedName(name, key);\n                        if (this.headers.has(key)) {\n                            this.headers.get(key).push(value);\n                        }\n                        else {\n                            this.headers.set(key, [value]);\n                        }\n                    }\n                });\n            };\n        }\n        else {\n            this.lazyInit = () => {\n                this.headers = new Map();\n                Object.keys(headers).forEach(name => {\n                    let values = headers[name];\n                    const key = name.toLowerCase();\n                    if (typeof values === 'string') {\n                        values = [values];\n                    }\n                    if (values.length > 0) {\n                        this.headers.set(key, values);\n                        this.maybeSetNormalizedName(name, key);\n                    }\n                });\n            };\n        }\n    }\n    /**\n     * Checks for existence of a given header.\n     *\n     * @param name The header name to check for existence.\n     *\n     * @returns True if the header exists, false otherwise.\n     */\n    has(name) {\n        this.init();\n        return this.headers.has(name.toLowerCase());\n    }\n    /**\n     * Retrieves the first value of a given header.\n     *\n     * @param name The header name.\n     *\n     * @returns The value string if the header exists, null otherwise\n     */\n    get(name) {\n        this.init();\n        const values = this.headers.get(name.toLowerCase());\n        return values && values.length > 0 ? values[0] : null;\n    }\n    /**\n     * Retrieves the names of the headers.\n     *\n     * @returns A list of header names.\n     */\n    keys() {\n        this.init();\n        return Array.from(this.normalizedNames.values());\n    }\n    /**\n     * Retrieves a list of values for a given header.\n     *\n     * @param name The header name from which to retrieve values.\n     *\n     * @returns A string of values if the header exists, null otherwise.\n     */\n    getAll(name) {\n        this.init();\n        return this.headers.get(name.toLowerCase()) || null;\n    }\n    /**\n     * Appends a new value to the existing set of values for a header\n     * and returns them in a clone of the original instance.\n     *\n     * @param name The header name for which to append the values.\n     * @param value The value to append.\n     *\n     * @returns A clone of the HTTP headers object with the value appended to the given header.\n     */\n    append(name, value) {\n        return this.clone({ name, value, op: 'a' });\n    }\n    /**\n     * Sets or modifies a value for a given header in a clone of the original instance.\n     * If the header already exists, its value is replaced with the given value\n     * in the returned object.\n     *\n     * @param name The header name.\n     * @param value The value or values to set or overide for the given header.\n     *\n     * @returns A clone of the HTTP headers object with the newly set header value.\n     */\n    set(name, value) {\n        return this.clone({ name, value, op: 's' });\n    }\n    /**\n     * Deletes values for a given header in a clone of the original instance.\n     *\n     * @param name The header name.\n     * @param value The value or values to delete for the given header.\n     *\n     * @returns A clone of the HTTP headers object with the given value deleted.\n     */\n    delete(name, value) {\n        return this.clone({ name, value, op: 'd' });\n    }\n    maybeSetNormalizedName(name, lcName) {\n        if (!this.normalizedNames.has(lcName)) {\n            this.normalizedNames.set(lcName, name);\n        }\n    }\n    init() {\n        if (!!this.lazyInit) {\n            if (this.lazyInit instanceof HttpHeaders) {\n                this.copyFrom(this.lazyInit);\n            }\n            else {\n                this.lazyInit();\n            }\n            this.lazyInit = null;\n            if (!!this.lazyUpdate) {\n                this.lazyUpdate.forEach(update => this.applyUpdate(update));\n                this.lazyUpdate = null;\n            }\n        }\n    }\n    copyFrom(other) {\n        other.init();\n        Array.from(other.headers.keys()).forEach(key => {\n            this.headers.set(key, other.headers.get(key));\n            this.normalizedNames.set(key, other.normalizedNames.get(key));\n        });\n    }\n    clone(update) {\n        const clone = new HttpHeaders();\n        clone.lazyInit =\n            (!!this.lazyInit && this.lazyInit instanceof HttpHeaders) ? this.lazyInit : this;\n        clone.lazyUpdate = (this.lazyUpdate || []).concat([update]);\n        return clone;\n    }\n    applyUpdate(update) {\n        const key = update.name.toLowerCase();\n        switch (update.op) {\n            case 'a':\n            case 's':\n                let value = update.value;\n                if (typeof value === 'string') {\n                    value = [value];\n                }\n                if (value.length === 0) {\n                    return;\n                }\n                this.maybeSetNormalizedName(update.name, key);\n                const base = (update.op === 'a' ? this.headers.get(key) : undefined) || [];\n                base.push(...value);\n                this.headers.set(key, base);\n                break;\n            case 'd':\n                const toDelete = update.value;\n                if (!toDelete) {\n                    this.headers.delete(key);\n                    this.normalizedNames.delete(key);\n                }\n                else {\n                    let existing = this.headers.get(key);\n                    if (!existing) {\n                        return;\n                    }\n                    existing = existing.filter(value => toDelete.indexOf(value) === -1);\n                    if (existing.length === 0) {\n                        this.headers.delete(key);\n                        this.normalizedNames.delete(key);\n                    }\n                    else {\n                        this.headers.set(key, existing);\n                    }\n                }\n                break;\n        }\n    }\n    /**\n     * @internal\n     */\n    forEach(fn) {\n        this.init();\n        Array.from(this.normalizedNames.keys())\n            .forEach(key => fn(this.normalizedNames.get(key), this.headers.get(key)));\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides encoding and decoding of URL parameter and query-string values.\n *\n * Serializes and parses URL parameter keys and values to encode and decode them.\n * If you pass URL query parameters without encoding,\n * the query parameters can be misinterpreted at the receiving end.\n *\n *\n * @publicApi\n */\nclass HttpUrlEncodingCodec {\n    /**\n     * Encodes a key name for a URL parameter or query-string.\n     * @param key The key name.\n     * @returns The encoded key name.\n     */\n    encodeKey(key) {\n        return standardEncoding(key);\n    }\n    /**\n     * Encodes the value of a URL parameter or query-string.\n     * @param value The value.\n     * @returns The encoded value.\n     */\n    encodeValue(value) {\n        return standardEncoding(value);\n    }\n    /**\n     * Decodes an encoded URL parameter or query-string key.\n     * @param key The encoded key name.\n     * @returns The decoded key name.\n     */\n    decodeKey(key) {\n        return decodeURIComponent(key);\n    }\n    /**\n     * Decodes an encoded URL parameter or query-string value.\n     * @param value The encoded value.\n     * @returns The decoded value.\n     */\n    decodeValue(value) {\n        return decodeURIComponent(value);\n    }\n}\nfunction paramParser(rawParams, codec) {\n    const map = new Map();\n    if (rawParams.length > 0) {\n        const params = rawParams.split('&');\n        params.forEach((param) => {\n            const eqIdx = param.indexOf('=');\n            const [key, val] = eqIdx == -1 ?\n                [codec.decodeKey(param), ''] :\n                [codec.decodeKey(param.slice(0, eqIdx)), codec.decodeValue(param.slice(eqIdx + 1))];\n            const list = map.get(key) || [];\n            list.push(val);\n            map.set(key, list);\n        });\n    }\n    return map;\n}\nfunction standardEncoding(v) {\n    return encodeURIComponent(v)\n        .replace(/%40/gi, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/gi, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';')\n        .replace(/%2B/gi, '+')\n        .replace(/%3D/gi, '=')\n        .replace(/%3F/gi, '?')\n        .replace(/%2F/gi, '/');\n}\n/**\n * An HTTP request/response body that represents serialized parameters,\n * per the MIME type `application/x-www-form-urlencoded`.\n *\n * This class is immutable; all mutation operations return a new instance.\n *\n * @publicApi\n */\nclass HttpParams {\n    constructor(options = {}) {\n        this.updates = null;\n        this.cloneFrom = null;\n        this.encoder = options.encoder || new HttpUrlEncodingCodec();\n        if (!!options.fromString) {\n            if (!!options.fromObject) {\n                throw new Error(`Cannot specify both fromString and fromObject.`);\n            }\n            this.map = paramParser(options.fromString, this.encoder);\n        }\n        else if (!!options.fromObject) {\n            this.map = new Map();\n            Object.keys(options.fromObject).forEach(key => {\n                const value = options.fromObject[key];\n                this.map.set(key, Array.isArray(value) ? value : [value]);\n            });\n        }\n        else {\n            this.map = null;\n        }\n    }\n    /**\n     * Reports whether the body includes one or more values for a given parameter.\n     * @param param The parameter name.\n     * @returns True if the parameter has one or more values,\n     * false if it has no value or is not present.\n     */\n    has(param) {\n        this.init();\n        return this.map.has(param);\n    }\n    /**\n     * Retrieves the first value for a parameter.\n     * @param param The parameter name.\n     * @returns The first value of the given parameter,\n     * or `null` if the parameter is not present.\n     */\n    get(param) {\n        this.init();\n        const res = this.map.get(param);\n        return !!res ? res[0] : null;\n    }\n    /**\n     * Retrieves all values for a  parameter.\n     * @param param The parameter name.\n     * @returns All values in a string array,\n     * or `null` if the parameter not present.\n     */\n    getAll(param) {\n        this.init();\n        return this.map.get(param) || null;\n    }\n    /**\n     * Retrieves all the parameters for this body.\n     * @returns The parameter names in a string array.\n     */\n    keys() {\n        this.init();\n        return Array.from(this.map.keys());\n    }\n    /**\n     * Appends a new value to existing values for a parameter.\n     * @param param The parameter name.\n     * @param value The new value to add.\n     * @return A new body with the appended value.\n     */\n    append(param, value) {\n        return this.clone({ param, value, op: 'a' });\n    }\n    /**\n     * Replaces the value for a parameter.\n     * @param param The parameter name.\n     * @param value The new value.\n     * @return A new body with the new value.\n     */\n    set(param, value) {\n        return this.clone({ param, value, op: 's' });\n    }\n    /**\n     * Removes a given value or all values from a parameter.\n     * @param param The parameter name.\n     * @param value The value to remove, if provided.\n     * @return A new body with the given value removed, or with all values\n     * removed if no value is specified.\n     */\n    delete(param, value) {\n        return this.clone({ param, value, op: 'd' });\n    }\n    /**\n     * Serializes the body to an encoded string, where key-value pairs (separated by `=`) are\n     * separated by `&`s.\n     */\n    toString() {\n        this.init();\n        return this.keys()\n            .map(key => {\n            const eKey = this.encoder.encodeKey(key);\n            // `a: ['1']` produces `'a=1'`\n            // `b: []` produces `''`\n            // `c: ['1', '2']` produces `'c=1&c=2'`\n            return this.map.get(key).map(value => eKey + '=' + this.encoder.encodeValue(value))\n                .join('&');\n        })\n            // filter out empty values because `b: []` produces `''`\n            // which results in `a=1&&c=1&c=2` instead of `a=1&c=1&c=2` if we don't\n            .filter(param => param !== '')\n            .join('&');\n    }\n    clone(update) {\n        const clone = new HttpParams({ encoder: this.encoder });\n        clone.cloneFrom = this.cloneFrom || this;\n        clone.updates = (this.updates || []).concat([update]);\n        return clone;\n    }\n    init() {\n        if (this.map === null) {\n            this.map = new Map();\n        }\n        if (this.cloneFrom !== null) {\n            this.cloneFrom.init();\n            this.cloneFrom.keys().forEach(key => this.map.set(key, this.cloneFrom.map.get(key)));\n            this.updates.forEach(update => {\n                switch (update.op) {\n                    case 'a':\n                    case 's':\n                        const base = (update.op === 'a' ? this.map.get(update.param) : undefined) || [];\n                        base.push(update.value);\n                        this.map.set(update.param, base);\n                        break;\n                    case 'd':\n                        if (update.value !== undefined) {\n                            let base = this.map.get(update.param) || [];\n                            const idx = base.indexOf(update.value);\n                            if (idx !== -1) {\n                                base.splice(idx, 1);\n                            }\n                            if (base.length > 0) {\n                                this.map.set(update.param, base);\n                            }\n                            else {\n                                this.map.delete(update.param);\n                            }\n                        }\n                        else {\n                            this.map.delete(update.param);\n                            break;\n                        }\n                }\n            });\n            this.cloneFrom = this.updates = null;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Determine whether the given HTTP method may include a body.\n */\nfunction mightHaveBody(method) {\n    switch (method) {\n        case 'DELETE':\n        case 'GET':\n        case 'HEAD':\n        case 'OPTIONS':\n        case 'JSONP':\n            return false;\n        default:\n            return true;\n    }\n}\n/**\n * Safely assert whether the given value is an ArrayBuffer.\n *\n * In some execution environments ArrayBuffer is not defined.\n */\nfunction isArrayBuffer(value) {\n    return typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer;\n}\n/**\n * Safely assert whether the given value is a Blob.\n *\n * In some execution environments Blob is not defined.\n */\nfunction isBlob(value) {\n    return typeof Blob !== 'undefined' && value instanceof Blob;\n}\n/**\n * Safely assert whether the given value is a FormData instance.\n *\n * In some execution environments FormData is not defined.\n */\nfunction isFormData(value) {\n    return typeof FormData !== 'undefined' && value instanceof FormData;\n}\n/**\n * An outgoing HTTP request with an optional typed body.\n *\n * `HttpRequest` represents an outgoing request, including URL, method,\n * headers, body, and other request configuration options. Instances should be\n * assumed to be immutable. To modify a `HttpRequest`, the `clone`\n * method should be used.\n *\n * @publicApi\n */\nclass HttpRequest {\n    constructor(method, url, third, fourth) {\n        this.url = url;\n        /**\n         * The request body, or `null` if one isn't set.\n         *\n         * Bodies are not enforced to be immutable, as they can include a reference to any\n         * user-defined data type. However, interceptors should take care to preserve\n         * idempotence by treating them as such.\n         */\n        this.body = null;\n        /**\n         * Whether this request should be made in a way that exposes progress events.\n         *\n         * Progress events are expensive (change detection runs on each event) and so\n         * they should only be requested if the consumer intends to monitor them.\n         */\n        this.reportProgress = false;\n        /**\n         * Whether this request should be sent with outgoing credentials (cookies).\n         */\n        this.withCredentials = false;\n        /**\n         * The expected response type of the server.\n         *\n         * This is used to parse the response appropriately before returning it to\n         * the requestee.\n         */\n        this.responseType = 'json';\n        this.method = method.toUpperCase();\n        // Next, need to figure out which argument holds the HttpRequestInit\n        // options, if any.\n        let options;\n        // Check whether a body argument is expected. The only valid way to omit\n        // the body argument is to use a known no-body method like GET.\n        if (mightHaveBody(this.method) || !!fourth) {\n            // Body is the third argument, options are the fourth.\n            this.body = (third !== undefined) ? third : null;\n            options = fourth;\n        }\n        else {\n            // No body required, options are the third argument. The body stays null.\n            options = third;\n        }\n        // If options have been passed, interpret them.\n        if (options) {\n            // Normalize reportProgress and withCredentials.\n            this.reportProgress = !!options.reportProgress;\n            this.withCredentials = !!options.withCredentials;\n            // Override default response type of 'json' if one is provided.\n            if (!!options.responseType) {\n                this.responseType = options.responseType;\n            }\n            // Override headers if they're provided.\n            if (!!options.headers) {\n                this.headers = options.headers;\n            }\n            if (!!options.params) {\n                this.params = options.params;\n            }\n        }\n        // If no headers have been passed in, construct a new HttpHeaders instance.\n        if (!this.headers) {\n            this.headers = new HttpHeaders();\n        }\n        // If no parameters have been passed in, construct a new HttpUrlEncodedParams instance.\n        if (!this.params) {\n            this.params = new HttpParams();\n            this.urlWithParams = url;\n        }\n        else {\n            // Encode the parameters to a string in preparation for inclusion in the URL.\n            const params = this.params.toString();\n            if (params.length === 0) {\n                // No parameters, the visible URL is just the URL given at creation time.\n                this.urlWithParams = url;\n            }\n            else {\n                // Does the URL already have query parameters? Look for '?'.\n                const qIdx = url.indexOf('?');\n                // There are 3 cases to handle:\n                // 1) No existing parameters -> append '?' followed by params.\n                // 2) '?' exists and is followed by existing query string ->\n                //    append '&' followed by params.\n                // 3) '?' exists at the end of the url -> append params directly.\n                // This basically amounts to determining the character, if any, with\n                // which to join the URL and parameters.\n                const sep = qIdx === -1 ? '?' : (qIdx < url.length - 1 ? '&' : '');\n                this.urlWithParams = url + sep + params;\n            }\n        }\n    }\n    /**\n     * Transform the free-form body into a serialized format suitable for\n     * transmission to the server.\n     */\n    serializeBody() {\n        // If no body is present, no need to serialize it.\n        if (this.body === null) {\n            return null;\n        }\n        // Check whether the body is already in a serialized form. If so,\n        // it can just be returned directly.\n        if (isArrayBuffer(this.body) || isBlob(this.body) || isFormData(this.body) ||\n            typeof this.body === 'string') {\n            return this.body;\n        }\n        // Check whether the body is an instance of HttpUrlEncodedParams.\n        if (this.body instanceof HttpParams) {\n            return this.body.toString();\n        }\n        // Check whether the body is an object or array, and serialize with JSON if so.\n        if (typeof this.body === 'object' || typeof this.body === 'boolean' ||\n            Array.isArray(this.body)) {\n            return JSON.stringify(this.body);\n        }\n        // Fall back on toString() for everything else.\n        return this.body.toString();\n    }\n    /**\n     * Examine the body and attempt to infer an appropriate MIME type\n     * for it.\n     *\n     * If no such type can be inferred, this method will return `null`.\n     */\n    detectContentTypeHeader() {\n        // An empty body has no content type.\n        if (this.body === null) {\n            return null;\n        }\n        // FormData bodies rely on the browser's content type assignment.\n        if (isFormData(this.body)) {\n            return null;\n        }\n        // Blobs usually have their own content type. If it doesn't, then\n        // no type can be inferred.\n        if (isBlob(this.body)) {\n            return this.body.type || null;\n        }\n        // Array buffers have unknown contents and thus no type can be inferred.\n        if (isArrayBuffer(this.body)) {\n            return null;\n        }\n        // Technically, strings could be a form of JSON data, but it's safe enough\n        // to assume they're plain strings.\n        if (typeof this.body === 'string') {\n            return 'text/plain';\n        }\n        // `HttpUrlEncodedParams` has its own content-type.\n        if (this.body instanceof HttpParams) {\n            return 'application/x-www-form-urlencoded;charset=UTF-8';\n        }\n        // Arrays, objects, and numbers will be encoded as JSON.\n        if (typeof this.body === 'object' || typeof this.body === 'number' ||\n            Array.isArray(this.body)) {\n            return 'application/json';\n        }\n        // No type could be inferred.\n        return null;\n    }\n    clone(update = {}) {\n        // For method, url, and responseType, take the current value unless\n        // it is overridden in the update hash.\n        const method = update.method || this.method;\n        const url = update.url || this.url;\n        const responseType = update.responseType || this.responseType;\n        // The body is somewhat special - a `null` value in update.body means\n        // whatever current body is present is being overridden with an empty\n        // body, whereas an `undefined` value in update.body implies no\n        // override.\n        const body = (update.body !== undefined) ? update.body : this.body;\n        // Carefully handle the boolean options to differentiate between\n        // `false` and `undefined` in the update args.\n        const withCredentials = (update.withCredentials !== undefined) ? update.withCredentials : this.withCredentials;\n        const reportProgress = (update.reportProgress !== undefined) ? update.reportProgress : this.reportProgress;\n        // Headers and params may be appended to if `setHeaders` or\n        // `setParams` are used.\n        let headers = update.headers || this.headers;\n        let params = update.params || this.params;\n        // Check whether the caller has asked to add headers.\n        if (update.setHeaders !== undefined) {\n            // Set every requested header.\n            headers =\n                Object.keys(update.setHeaders)\n                    .reduce((headers, name) => headers.set(name, update.setHeaders[name]), headers);\n        }\n        // Check whether the caller has asked to set params.\n        if (update.setParams) {\n            // Set every requested param.\n            params = Object.keys(update.setParams)\n                .reduce((params, param) => params.set(param, update.setParams[param]), params);\n        }\n        // Finally, construct the new HttpRequest using the pieces from above.\n        return new HttpRequest(method, url, body, {\n            params,\n            headers,\n            reportProgress,\n            responseType,\n            withCredentials,\n        });\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Type enumeration for the different kinds of `HttpEvent`.\n *\n * @publicApi\n */\nvar HttpEventType;\n(function (HttpEventType) {\n    /**\n     * The request was sent out over the wire.\n     */\n    HttpEventType[HttpEventType[\"Sent\"] = 0] = \"Sent\";\n    /**\n     * An upload progress event was received.\n     */\n    HttpEventType[HttpEventType[\"UploadProgress\"] = 1] = \"UploadProgress\";\n    /**\n     * The response status code and headers were received.\n     */\n    HttpEventType[HttpEventType[\"ResponseHeader\"] = 2] = \"ResponseHeader\";\n    /**\n     * A download progress event was received.\n     */\n    HttpEventType[HttpEventType[\"DownloadProgress\"] = 3] = \"DownloadProgress\";\n    /**\n     * The full response including the body was received.\n     */\n    HttpEventType[HttpEventType[\"Response\"] = 4] = \"Response\";\n    /**\n     * A custom event from an interceptor or a backend.\n     */\n    HttpEventType[HttpEventType[\"User\"] = 5] = \"User\";\n})(HttpEventType || (HttpEventType = {}));\n/**\n * Base class for both `HttpResponse` and `HttpHeaderResponse`.\n *\n * @publicApi\n */\nclass HttpResponseBase {\n    /**\n     * Super-constructor for all responses.\n     *\n     * The single parameter accepted is an initialization hash. Any properties\n     * of the response passed there will override the default values.\n     */\n    constructor(init, defaultStatus = 200, defaultStatusText = 'OK') {\n        // If the hash has values passed, use them to initialize the response.\n        // Otherwise use the default values.\n        this.headers = init.headers || new HttpHeaders();\n        this.status = init.status !== undefined ? init.status : defaultStatus;\n        this.statusText = init.statusText || defaultStatusText;\n        this.url = init.url || null;\n        // Cache the ok value to avoid defining a getter.\n        this.ok = this.status >= 200 && this.status < 300;\n    }\n}\n/**\n * A partial HTTP response which only includes the status and header data,\n * but no response body.\n *\n * `HttpHeaderResponse` is a `HttpEvent` available on the response\n * event stream, only when progress events are requested.\n *\n * @publicApi\n */\nclass HttpHeaderResponse extends HttpResponseBase {\n    /**\n     * Create a new `HttpHeaderResponse` with the given parameters.\n     */\n    constructor(init = {}) {\n        super(init);\n        this.type = HttpEventType.ResponseHeader;\n    }\n    /**\n     * Copy this `HttpHeaderResponse`, overriding its contents with the\n     * given parameter hash.\n     */\n    clone(update = {}) {\n        // Perform a straightforward initialization of the new HttpHeaderResponse,\n        // overriding the current parameters with new ones if given.\n        return new HttpHeaderResponse({\n            headers: update.headers || this.headers,\n            status: update.status !== undefined ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    }\n}\n/**\n * A full HTTP response, including a typed response body (which may be `null`\n * if one was not returned).\n *\n * `HttpResponse` is a `HttpEvent` available on the response event\n * stream.\n *\n * @publicApi\n */\nclass HttpResponse extends HttpResponseBase {\n    /**\n     * Construct a new `HttpResponse`.\n     */\n    constructor(init = {}) {\n        super(init);\n        this.type = HttpEventType.Response;\n        this.body = init.body !== undefined ? init.body : null;\n    }\n    clone(update = {}) {\n        return new HttpResponse({\n            body: (update.body !== undefined) ? update.body : this.body,\n            headers: update.headers || this.headers,\n            status: (update.status !== undefined) ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    }\n}\n/**\n * A response that represents an error or failure, either from a\n * non-successful HTTP status, an error while executing the request,\n * or some other failure which occurred during the parsing of the response.\n *\n * Any error returned on the `Observable` response stream will be\n * wrapped in an `HttpErrorResponse` to provide additional context about\n * the state of the HTTP layer when the error occurred. The error property\n * will contain either a wrapped Error object or the error response returned\n * from the server.\n *\n * @publicApi\n */\nclass HttpErrorResponse extends HttpResponseBase {\n    constructor(init) {\n        // Initialize with a default status of 0 / Unknown Error.\n        super(init, 0, 'Unknown Error');\n        this.name = 'HttpErrorResponse';\n        /**\n         * Errors are never okay, even when the status code is in the 2xx success range.\n         */\n        this.ok = false;\n        // If the response was successful, then this was a parse error. Otherwise, it was\n        // a protocol-level failure of some sort. Either the request failed in transit\n        // or the server returned an unsuccessful status code.\n        if (this.status >= 200 && this.status < 300) {\n            this.message = `Http failure during parsing for ${init.url || '(unknown url)'}`;\n        }\n        else {\n            this.message = `Http failure response for ${init.url || '(unknown url)'}: ${init.status} ${init.statusText}`;\n        }\n        this.error = init.error || null;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Constructs an instance of `HttpRequestOptions<T>` from a source `HttpMethodOptions` and\n * the given `body`. This function clones the object and adds the body.\n *\n * Note that the `responseType` *options* value is a String that identifies the\n * single data type of the response.\n * A single overload version of the method handles each response type.\n * The value of `responseType` cannot be a union, as the combined signature could imply.\n *\n */\nfunction addBody(options, body) {\n    return {\n        body,\n        headers: options.headers,\n        observe: options.observe,\n        params: options.params,\n        reportProgress: options.reportProgress,\n        responseType: options.responseType,\n        withCredentials: options.withCredentials,\n    };\n}\n/**\n * Performs HTTP requests.\n * This service is available as an injectable class, with methods to perform HTTP requests.\n * Each request method has multiple signatures, and the return type varies based on\n * the signature that is called (mainly the values of `observe` and `responseType`).\n *\n * Note that the `responseType` *options* value is a String that identifies the\n * single data type of the response.\n * A single overload version of the method handles each response type.\n * The value of `responseType` cannot be a union, as the combined signature could imply.\n\n *\n * @usageNotes\n * Sample HTTP requests for the [Tour of Heroes](/tutorial/toh-pt0) application.\n *\n * ### HTTP Request Example\n *\n * ```\n *  // GET heroes whose name contains search term\n * searchHeroes(term: string): observable<Hero[]>{\n *\n *  const params = new HttpParams({fromString: 'name=term'});\n *    return this.httpClient.request('GET', this.heroesUrl, {responseType:'json', params});\n * }\n * ```\n * ### JSONP Example\n * ```\n * requestJsonp(url, callback = 'callback') {\n *  return this.httpClient.jsonp(this.heroesURL, callback);\n * }\n * ```\n *\n * ### PATCH Example\n * ```\n * // PATCH one of the heroes' name\n * patchHero (id: number, heroName: string): Observable<{}> {\n * const url = `${this.heroesUrl}/${id}`;   // PATCH api/heroes/42\n *  return this.httpClient.patch(url, {name: heroName}, httpOptions)\n *    .pipe(catchError(this.handleError('patchHero')));\n * }\n * ```\n *\n * @see [HTTP Guide](guide/http)\n *\n * @publicApi\n */\nclass HttpClient {\n    constructor(handler) {\n        this.handler = handler;\n    }\n    /**\n     * Constructs an observable for a generic HTTP request that, when subscribed,\n     * fires the request through the chain of registered interceptors and on to the\n     * server.\n     *\n     * You can pass an `HttpRequest` directly as the only parameter. In this case,\n     * the call returns an observable of the raw `HttpEvent` stream.\n     *\n     * Alternatively you can pass an HTTP method as the first parameter,\n     * a URL string as the second, and an options hash containing the request body as the third.\n     * See `addBody()`. In this case, the specified `responseType` and `observe` options determine the\n     * type of returned observable.\n     *   * The `responseType` value determines how a successful response body is parsed.\n     *   * If `responseType` is the default `json`, you can pass a type interface for the resulting\n     * object as a type parameter to the call.\n     *\n     * The `observe` value determines the return type, according to what you are interested in\n     * observing.\n     *   * An `observe` value of events returns an observable of the raw `HttpEvent` stream, including\n     * progress events by default.\n     *   * An `observe` value of response returns an observable of `HttpResponse<T>`,\n     * where the `T` parameter depends on the `responseType` and any optionally provided type\n     * parameter.\n     *   * An `observe` value of body returns an observable of `<T>` with the same `T` body type.\n     *\n     */\n    request(first, url, options = {}) {\n        let req;\n        // First, check whether the primary argument is an instance of `HttpRequest`.\n        if (first instanceof HttpRequest) {\n            // It is. The other arguments must be undefined (per the signatures) and can be\n            // ignored.\n            req = first;\n        }\n        else {\n            // It's a string, so it represents a URL. Construct a request based on it,\n            // and incorporate the remaining arguments (assuming `GET` unless a method is\n            // provided.\n            // Figure out the headers.\n            let headers = undefined;\n            if (options.headers instanceof HttpHeaders) {\n                headers = options.headers;\n            }\n            else {\n                headers = new HttpHeaders(options.headers);\n            }\n            // Sort out parameters.\n            let params = undefined;\n            if (!!options.params) {\n                if (options.params instanceof HttpParams) {\n                    params = options.params;\n                }\n                else {\n                    params = new HttpParams({ fromObject: options.params });\n                }\n            }\n            // Construct the request.\n            req = new HttpRequest(first, url, (options.body !== undefined ? options.body : null), {\n                headers,\n                params,\n                reportProgress: options.reportProgress,\n                // By default, JSON is assumed to be returned for all calls.\n                responseType: options.responseType || 'json',\n                withCredentials: options.withCredentials,\n            });\n        }\n        // Start with an Observable.of() the initial request, and run the handler (which\n        // includes all interceptors) inside a concatMap(). This way, the handler runs\n        // inside an Observable chain, which causes interceptors to be re-run on every\n        // subscription (this also makes retries re-run the handler, including interceptors).\n        const events$ = of(req).pipe(concatMap((req) => this.handler.handle(req)));\n        // If coming via the API signature which accepts a previously constructed HttpRequest,\n        // the only option is to get the event stream. Otherwise, return the event stream if\n        // that is what was requested.\n        if (first instanceof HttpRequest || options.observe === 'events') {\n            return events$;\n        }\n        // The requested stream contains either the full response or the body. In either\n        // case, the first step is to filter the event stream to extract a stream of\n        // responses(s).\n        const res$ = events$.pipe(filter((event) => event instanceof HttpResponse));\n        // Decide which stream to return.\n        switch (options.observe || 'body') {\n            case 'body':\n                // The requested stream is the body. Map the response stream to the response\n                // body. This could be done more simply, but a misbehaving interceptor might\n                // transform the response body into a different format and ignore the requested\n                // responseType. Guard against this by validating that the response is of the\n                // requested type.\n                switch (req.responseType) {\n                    case 'arraybuffer':\n                        return res$.pipe(map((res) => {\n                            // Validate that the body is an ArrayBuffer.\n                            if (res.body !== null && !(res.body instanceof ArrayBuffer)) {\n                                throw new Error('Response is not an ArrayBuffer.');\n                            }\n                            return res.body;\n                        }));\n                    case 'blob':\n                        return res$.pipe(map((res) => {\n                            // Validate that the body is a Blob.\n                            if (res.body !== null && !(res.body instanceof Blob)) {\n                                throw new Error('Response is not a Blob.');\n                            }\n                            return res.body;\n                        }));\n                    case 'text':\n                        return res$.pipe(map((res) => {\n                            // Validate that the body is a string.\n                            if (res.body !== null && typeof res.body !== 'string') {\n                                throw new Error('Response is not a string.');\n                            }\n                            return res.body;\n                        }));\n                    case 'json':\n                    default:\n                        // No validation needed for JSON responses, as they can be of any type.\n                        return res$.pipe(map((res) => res.body));\n                }\n            case 'response':\n                // The response stream was requested directly, so return it.\n                return res$;\n            default:\n                // Guard against new future observe types being added.\n                throw new Error(`Unreachable: unhandled observe type ${options.observe}}`);\n        }\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `DELETE` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     *\n     * @param url     The endpoint URL.\n     * @param options The HTTP options to send with the request.\n     *\n     */\n    delete(url, options = {}) {\n        return this.request('DELETE', url, options);\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `GET` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     */\n    get(url, options = {}) {\n        return this.request('GET', url, options);\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `HEAD` request to execute on the server. The `HEAD` method returns\n     * meta information about the resource without transferring the\n     * resource itself. See the individual overloads for\n     * details on the return type.\n     */\n    head(url, options = {}) {\n        return this.request('HEAD', url, options);\n    }\n    /**\n     * Constructs an `Observable` that, when subscribed, causes a request with the special method\n     * `JSONP` to be dispatched via the interceptor pipeline.\n     * The [JSONP pattern](https://en.wikipedia.org/wiki/JSONP) works around limitations of certain\n     * API endpoints that don't support newer,\n     * and preferable [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) protocol.\n     * JSONP treats the endpoint API as a JavaScript file and tricks the browser to process the\n     * requests even if the API endpoint is not located on the same domain (origin) as the client-side\n     * application making the request.\n     * The endpoint API must support JSONP callback for JSONP requests to work.\n     * The resource API returns the JSON response wrapped in a callback function.\n     * You can pass the callback function name as one of the query parameters.\n     * Note that JSONP requests can only be used with `GET` requests.\n     *\n     * @param url The resource URL.\n     * @param callbackParam The callback function name.\n     *\n     */\n    jsonp(url, callbackParam) {\n        return this.request('JSONP', url, {\n            params: new HttpParams().append(callbackParam, 'JSONP_CALLBACK'),\n            observe: 'body',\n            responseType: 'json',\n        });\n    }\n    /**\n     * Constructs an `Observable` that, when subscribed, causes the configured\n     * `OPTIONS` request to execute on the server. This method allows the client\n     * to determine the supported HTTP methods and other capabilites of an endpoint,\n     * without implying a resource action. See the individual overloads for\n     * details on the return type.\n     */\n    options(url, options = {}) {\n        return this.request('OPTIONS', url, options);\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `PATCH` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     */\n    patch(url, body, options = {}) {\n        return this.request('PATCH', url, addBody(options, body));\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `POST` request to execute on the server. The server responds with the location of\n     * the replaced resource. See the individual overloads for\n     * details on the return type.\n     */\n    post(url, body, options = {}) {\n        return this.request('POST', url, addBody(options, body));\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `PUT` request to execute on the server. The `PUT` method replaces an existing resource\n     * with a new set of values.\n     * See the individual overloads for details on the return type.\n     */\n    put(url, body, options = {}) {\n        return this.request('PUT', url, addBody(options, body));\n    }\n}\nHttpClient.ɵfac = function HttpClient_Factory(t) { return new (t || HttpClient)(ɵngcc0.ɵɵinject(HttpHandler)); };\nHttpClient.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: HttpClient, factory: HttpClient.ɵfac });\nHttpClient.ctorParameters = () => [\n    { type: HttpHandler }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpClient, [{\n        type: Injectable\n    }], function () { return [{ type: HttpHandler }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `HttpHandler` which applies an `HttpInterceptor` to an `HttpRequest`.\n *\n *\n */\nclass HttpInterceptorHandler {\n    constructor(next, interceptor) {\n        this.next = next;\n        this.interceptor = interceptor;\n    }\n    handle(req) {\n        return this.interceptor.intercept(req, this.next);\n    }\n}\n/**\n * A multi-provider token that represents the array of registered\n * `HttpInterceptor` objects.\n *\n * @publicApi\n */\nconst HTTP_INTERCEPTORS = new InjectionToken('HTTP_INTERCEPTORS');\nclass NoopInterceptor {\n    intercept(req, next) {\n        return next.handle(req);\n    }\n}\nNoopInterceptor.ɵfac = function NoopInterceptor_Factory(t) { return new (t || NoopInterceptor)(); };\nNoopInterceptor.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NoopInterceptor, factory: NoopInterceptor.ɵfac });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NoopInterceptor, [{\n        type: Injectable\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Every request made through JSONP needs a callback name that's unique across the\n// whole page. Each request is assigned an id and the callback name is constructed\n// from that. The next id to be assigned is tracked in a global variable here that\n// is shared among all applications on the page.\nlet nextRequestId = 0;\n// Error text given when a JSONP script is injected, but doesn't invoke the callback\n// passed in its URL.\nconst JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\n// Error text given when a request is passed to the JsonpClientBackend that doesn't\n// have a request method JSONP.\nconst JSONP_ERR_WRONG_METHOD = 'JSONP requests must use JSONP request method.';\nconst JSONP_ERR_WRONG_RESPONSE_TYPE = 'JSONP requests must use Json response type.';\n/**\n * DI token/abstract type representing a map of JSONP callbacks.\n *\n * In the browser, this should always be the `window` object.\n *\n *\n */\nclass JsonpCallbackContext {\n}\n/**\n * Processes an `HttpRequest` with the JSONP method,\n * by performing JSONP style requests.\n * @see `HttpHandler`\n * @see `HttpXhrBackend`\n *\n * @publicApi\n */\nclass JsonpClientBackend {\n    constructor(callbackMap, document) {\n        this.callbackMap = callbackMap;\n        this.document = document;\n    }\n    /**\n     * Get the name of the next callback method, by incrementing the global `nextRequestId`.\n     */\n    nextCallback() {\n        return `ng_jsonp_callback_${nextRequestId++}`;\n    }\n    /**\n     * Processes a JSONP request and returns an event stream of the results.\n     * @param req The request object.\n     * @returns An observable of the response events.\n     *\n     */\n    handle(req) {\n        // Firstly, check both the method and response type. If either doesn't match\n        // then the request was improperly routed here and cannot be handled.\n        if (req.method !== 'JSONP') {\n            throw new Error(JSONP_ERR_WRONG_METHOD);\n        }\n        else if (req.responseType !== 'json') {\n            throw new Error(JSONP_ERR_WRONG_RESPONSE_TYPE);\n        }\n        // Everything else happens inside the Observable boundary.\n        return new Observable((observer) => {\n            // The first step to make a request is to generate the callback name, and replace the\n            // callback placeholder in the URL with the name. Care has to be taken here to ensure\n            // a trailing &, if matched, gets inserted back into the URL in the correct place.\n            const callback = this.nextCallback();\n            const url = req.urlWithParams.replace(/=JSONP_CALLBACK(&|$)/, `=${callback}$1`);\n            // Construct the <script> tag and point it at the URL.\n            const node = this.document.createElement('script');\n            node.src = url;\n            // A JSONP request requires waiting for multiple callbacks. These variables\n            // are closed over and track state across those callbacks.\n            // The response object, if one has been received, or null otherwise.\n            let body = null;\n            // Whether the response callback has been called.\n            let finished = false;\n            // Whether the request has been cancelled (and thus any other callbacks)\n            // should be ignored.\n            let cancelled = false;\n            // Set the response callback in this.callbackMap (which will be the window\n            // object in the browser. The script being loaded via the <script> tag will\n            // eventually call this callback.\n            this.callbackMap[callback] = (data) => {\n                // Data has been received from the JSONP script. Firstly, delete this callback.\n                delete this.callbackMap[callback];\n                // Next, make sure the request wasn't cancelled in the meantime.\n                if (cancelled) {\n                    return;\n                }\n                // Set state to indicate data was received.\n                body = data;\n                finished = true;\n            };\n            // cleanup() is a utility closure that removes the <script> from the page and\n            // the response callback from the window. This logic is used in both the\n            // success, error, and cancellation paths, so it's extracted out for convenience.\n            const cleanup = () => {\n                // Remove the <script> tag if it's still on the page.\n                if (node.parentNode) {\n                    node.parentNode.removeChild(node);\n                }\n                // Remove the response callback from the callbackMap (window object in the\n                // browser).\n                delete this.callbackMap[callback];\n            };\n            // onLoad() is the success callback which runs after the response callback\n            // if the JSONP script loads successfully. The event itself is unimportant.\n            // If something went wrong, onLoad() may run without the response callback\n            // having been invoked.\n            const onLoad = (event) => {\n                // Do nothing if the request has been cancelled.\n                if (cancelled) {\n                    return;\n                }\n                // Cleanup the page.\n                cleanup();\n                // Check whether the response callback has run.\n                if (!finished) {\n                    // It hasn't, something went wrong with the request. Return an error via\n                    // the Observable error path. All JSONP errors have status 0.\n                    observer.error(new HttpErrorResponse({\n                        url,\n                        status: 0,\n                        statusText: 'JSONP Error',\n                        error: new Error(JSONP_ERR_NO_CALLBACK),\n                    }));\n                    return;\n                }\n                // Success. body either contains the response body or null if none was\n                // returned.\n                observer.next(new HttpResponse({\n                    body,\n                    status: 200,\n                    statusText: 'OK',\n                    url,\n                }));\n                // Complete the stream, the response is over.\n                observer.complete();\n            };\n            // onError() is the error callback, which runs if the script returned generates\n            // a Javascript error. It emits the error via the Observable error channel as\n            // a HttpErrorResponse.\n            const onError = (error) => {\n                // If the request was already cancelled, no need to emit anything.\n                if (cancelled) {\n                    return;\n                }\n                cleanup();\n                // Wrap the error in a HttpErrorResponse.\n                observer.error(new HttpErrorResponse({\n                    error,\n                    status: 0,\n                    statusText: 'JSONP Error',\n                    url,\n                }));\n            };\n            // Subscribe to both the success (load) and error events on the <script> tag,\n            // and add it to the page.\n            node.addEventListener('load', onLoad);\n            node.addEventListener('error', onError);\n            this.document.body.appendChild(node);\n            // The request has now been successfully sent.\n            observer.next({ type: HttpEventType.Sent });\n            // Cancellation handler.\n            return () => {\n                // Track the cancellation so event listeners won't do anything even if already scheduled.\n                cancelled = true;\n                // Remove the event listeners so they won't run if the events later fire.\n                node.removeEventListener('load', onLoad);\n                node.removeEventListener('error', onError);\n                // And finally, clean up the page.\n                cleanup();\n            };\n        });\n    }\n}\nJsonpClientBackend.ɵfac = function JsonpClientBackend_Factory(t) { return new (t || JsonpClientBackend)(ɵngcc0.ɵɵinject(JsonpCallbackContext), ɵngcc0.ɵɵinject(DOCUMENT)); };\nJsonpClientBackend.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: JsonpClientBackend, factory: JsonpClientBackend.ɵfac });\nJsonpClientBackend.ctorParameters = () => [\n    { type: JsonpCallbackContext },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JsonpClientBackend, [{\n        type: Injectable\n    }], function () { return [{ type: JsonpCallbackContext }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n/**\n * Identifies requests with the method JSONP and\n * shifts them to the `JsonpClientBackend`.\n *\n * @see `HttpInterceptor`\n *\n * @publicApi\n */\nclass JsonpInterceptor {\n    constructor(jsonp) {\n        this.jsonp = jsonp;\n    }\n    /**\n     * Identifies and handles a given JSONP request.\n     * @param req The outgoing request object to handle.\n     * @param next The next interceptor in the chain, or the backend\n     * if no interceptors remain in the chain.\n     * @returns An observable of the event stream.\n     */\n    intercept(req, next) {\n        if (req.method === 'JSONP') {\n            return this.jsonp.handle(req);\n        }\n        // Fall through for normal HTTP requests.\n        return next.handle(req);\n    }\n}\nJsonpInterceptor.ɵfac = function JsonpInterceptor_Factory(t) { return new (t || JsonpInterceptor)(ɵngcc0.ɵɵinject(JsonpClientBackend)); };\nJsonpInterceptor.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: JsonpInterceptor, factory: JsonpInterceptor.ɵfac });\nJsonpInterceptor.ctorParameters = () => [\n    { type: JsonpClientBackend }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JsonpInterceptor, [{\n        type: Injectable\n    }], function () { return [{ type: JsonpClientBackend }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Determine an appropriate URL for the response, by checking either\n * XMLHttpRequest.responseURL or the X-Request-URL header.\n */\nfunction getResponseUrl(xhr) {\n    if ('responseURL' in xhr && xhr.responseURL) {\n        return xhr.responseURL;\n    }\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n        return xhr.getResponseHeader('X-Request-URL');\n    }\n    return null;\n}\n/**\n * A wrapper around the `XMLHttpRequest` constructor.\n *\n * @publicApi\n */\nclass XhrFactory {\n}\n/**\n * A factory for `HttpXhrBackend` that uses the `XMLHttpRequest` browser API.\n *\n */\nclass BrowserXhr {\n    constructor() { }\n    build() {\n        return (new XMLHttpRequest());\n    }\n}\nBrowserXhr.ɵfac = function BrowserXhr_Factory(t) { return new (t || BrowserXhr)(); };\nBrowserXhr.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: BrowserXhr, factory: BrowserXhr.ɵfac });\nBrowserXhr.ctorParameters = () => [];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BrowserXhr, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n/**\n * Uses `XMLHttpRequest` to send requests to a backend server.\n * @see `HttpHandler`\n * @see `JsonpClientBackend`\n *\n * @publicApi\n */\nclass HttpXhrBackend {\n    constructor(xhrFactory) {\n        this.xhrFactory = xhrFactory;\n    }\n    /**\n     * Processes a request and returns a stream of response events.\n     * @param req The request object.\n     * @returns An observable of the response events.\n     */\n    handle(req) {\n        // Quick check to give a better error message when a user attempts to use\n        // HttpClient.jsonp() without installing the JsonpClientModule\n        if (req.method === 'JSONP') {\n            throw new Error(`Attempted to construct Jsonp request without JsonpClientModule installed.`);\n        }\n        // Everything happens on Observable subscription.\n        return new Observable((observer) => {\n            // Start by setting up the XHR object with request method, URL, and withCredentials flag.\n            const xhr = this.xhrFactory.build();\n            xhr.open(req.method, req.urlWithParams);\n            if (!!req.withCredentials) {\n                xhr.withCredentials = true;\n            }\n            // Add all the requested headers.\n            req.headers.forEach((name, values) => xhr.setRequestHeader(name, values.join(',')));\n            // Add an Accept header if one isn't present already.\n            if (!req.headers.has('Accept')) {\n                xhr.setRequestHeader('Accept', 'application/json, text/plain, */*');\n            }\n            // Auto-detect the Content-Type header if one isn't present already.\n            if (!req.headers.has('Content-Type')) {\n                const detectedType = req.detectContentTypeHeader();\n                // Sometimes Content-Type detection fails.\n                if (detectedType !== null) {\n                    xhr.setRequestHeader('Content-Type', detectedType);\n                }\n            }\n            // Set the responseType if one was requested.\n            if (req.responseType) {\n                const responseType = req.responseType.toLowerCase();\n                // JSON responses need to be processed as text. This is because if the server\n                // returns an XSSI-prefixed JSON response, the browser will fail to parse it,\n                // xhr.response will be null, and xhr.responseText cannot be accessed to\n                // retrieve the prefixed JSON data in order to strip the prefix. Thus, all JSON\n                // is parsed by first requesting text and then applying JSON.parse.\n                xhr.responseType = ((responseType !== 'json') ? responseType : 'text');\n            }\n            // Serialize the request body if one is present. If not, this will be set to null.\n            const reqBody = req.serializeBody();\n            // If progress events are enabled, response headers will be delivered\n            // in two events - the HttpHeaderResponse event and the full HttpResponse\n            // event. However, since response headers don't change in between these\n            // two events, it doesn't make sense to parse them twice. So headerResponse\n            // caches the data extracted from the response whenever it's first parsed,\n            // to ensure parsing isn't duplicated.\n            let headerResponse = null;\n            // partialFromXhr extracts the HttpHeaderResponse from the current XMLHttpRequest\n            // state, and memoizes it into headerResponse.\n            const partialFromXhr = () => {\n                if (headerResponse !== null) {\n                    return headerResponse;\n                }\n                // Read status and normalize an IE9 bug (http://bugs.jquery.com/ticket/1450).\n                const status = xhr.status === 1223 ? 204 : xhr.status;\n                const statusText = xhr.statusText || 'OK';\n                // Parse headers from XMLHttpRequest - this step is lazy.\n                const headers = new HttpHeaders(xhr.getAllResponseHeaders());\n                // Read the response URL from the XMLHttpResponse instance and fall back on the\n                // request URL.\n                const url = getResponseUrl(xhr) || req.url;\n                // Construct the HttpHeaderResponse and memoize it.\n                headerResponse = new HttpHeaderResponse({ headers, status, statusText, url });\n                return headerResponse;\n            };\n            // Next, a few closures are defined for the various events which XMLHttpRequest can\n            // emit. This allows them to be unregistered as event listeners later.\n            // First up is the load event, which represents a response being fully available.\n            const onLoad = () => {\n                // Read response state from the memoized partial data.\n                let { headers, status, statusText, url } = partialFromXhr();\n                // The body will be read out if present.\n                let body = null;\n                if (status !== 204) {\n                    // Use XMLHttpRequest.response if set, responseText otherwise.\n                    body = (typeof xhr.response === 'undefined') ? xhr.responseText : xhr.response;\n                }\n                // Normalize another potential bug (this one comes from CORS).\n                if (status === 0) {\n                    status = !!body ? 200 : 0;\n                }\n                // ok determines whether the response will be transmitted on the event or\n                // error channel. Unsuccessful status codes (not 2xx) will always be errors,\n                // but a successful status code can still result in an error if the user\n                // asked for JSON data and the body cannot be parsed as such.\n                let ok = status >= 200 && status < 300;\n                // Check whether the body needs to be parsed as JSON (in many cases the browser\n                // will have done that already).\n                if (req.responseType === 'json' && typeof body === 'string') {\n                    // Save the original body, before attempting XSSI prefix stripping.\n                    const originalBody = body;\n                    body = body.replace(XSSI_PREFIX, '');\n                    try {\n                        // Attempt the parse. If it fails, a parse error should be delivered to the user.\n                        body = body !== '' ? JSON.parse(body) : null;\n                    }\n                    catch (error) {\n                        // Since the JSON.parse failed, it's reasonable to assume this might not have been a\n                        // JSON response. Restore the original body (including any XSSI prefix) to deliver\n                        // a better error response.\n                        body = originalBody;\n                        // If this was an error request to begin with, leave it as a string, it probably\n                        // just isn't JSON. Otherwise, deliver the parsing error to the user.\n                        if (ok) {\n                            // Even though the response status was 2xx, this is still an error.\n                            ok = false;\n                            // The parse error contains the text of the body that failed to parse.\n                            body = { error, text: body };\n                        }\n                    }\n                }\n                if (ok) {\n                    // A successful response is delivered on the event stream.\n                    observer.next(new HttpResponse({\n                        body,\n                        headers,\n                        status,\n                        statusText,\n                        url: url || undefined,\n                    }));\n                    // The full body has been received and delivered, no further events\n                    // are possible. This request is complete.\n                    observer.complete();\n                }\n                else {\n                    // An unsuccessful request is delivered on the error channel.\n                    observer.error(new HttpErrorResponse({\n                        // The error in this case is the response body (error from the server).\n                        error: body,\n                        headers,\n                        status,\n                        statusText,\n                        url: url || undefined,\n                    }));\n                }\n            };\n            // The onError callback is called when something goes wrong at the network level.\n            // Connection timeout, DNS error, offline, etc. These are actual errors, and are\n            // transmitted on the error channel.\n            const onError = (error) => {\n                const { url } = partialFromXhr();\n                const res = new HttpErrorResponse({\n                    error,\n                    status: xhr.status || 0,\n                    statusText: xhr.statusText || 'Unknown Error',\n                    url: url || undefined,\n                });\n                observer.error(res);\n            };\n            // The sentHeaders flag tracks whether the HttpResponseHeaders event\n            // has been sent on the stream. This is necessary to track if progress\n            // is enabled since the event will be sent on only the first download\n            // progerss event.\n            let sentHeaders = false;\n            // The download progress event handler, which is only registered if\n            // progress events are enabled.\n            const onDownProgress = (event) => {\n                // Send the HttpResponseHeaders event if it hasn't been sent already.\n                if (!sentHeaders) {\n                    observer.next(partialFromXhr());\n                    sentHeaders = true;\n                }\n                // Start building the download progress event to deliver on the response\n                // event stream.\n                let progressEvent = {\n                    type: HttpEventType.DownloadProgress,\n                    loaded: event.loaded,\n                };\n                // Set the total number of bytes in the event if it's available.\n                if (event.lengthComputable) {\n                    progressEvent.total = event.total;\n                }\n                // If the request was for text content and a partial response is\n                // available on XMLHttpRequest, include it in the progress event\n                // to allow for streaming reads.\n                if (req.responseType === 'text' && !!xhr.responseText) {\n                    progressEvent.partialText = xhr.responseText;\n                }\n                // Finally, fire the event.\n                observer.next(progressEvent);\n            };\n            // The upload progress event handler, which is only registered if\n            // progress events are enabled.\n            const onUpProgress = (event) => {\n                // Upload progress events are simpler. Begin building the progress\n                // event.\n                let progress = {\n                    type: HttpEventType.UploadProgress,\n                    loaded: event.loaded,\n                };\n                // If the total number of bytes being uploaded is available, include\n                // it.\n                if (event.lengthComputable) {\n                    progress.total = event.total;\n                }\n                // Send the event.\n                observer.next(progress);\n            };\n            // By default, register for load and error events.\n            xhr.addEventListener('load', onLoad);\n            xhr.addEventListener('error', onError);\n            // Progress events are only enabled if requested.\n            if (req.reportProgress) {\n                // Download progress is always enabled if requested.\n                xhr.addEventListener('progress', onDownProgress);\n                // Upload progress depends on whether there is a body to upload.\n                if (reqBody !== null && xhr.upload) {\n                    xhr.upload.addEventListener('progress', onUpProgress);\n                }\n            }\n            // Fire the request, and notify the event stream that it was fired.\n            xhr.send(reqBody);\n            observer.next({ type: HttpEventType.Sent });\n            // This is the return from the Observable function, which is the\n            // request cancellation handler.\n            return () => {\n                // On a cancellation, remove all registered event listeners.\n                xhr.removeEventListener('error', onError);\n                xhr.removeEventListener('load', onLoad);\n                if (req.reportProgress) {\n                    xhr.removeEventListener('progress', onDownProgress);\n                    if (reqBody !== null && xhr.upload) {\n                        xhr.upload.removeEventListener('progress', onUpProgress);\n                    }\n                }\n                // Finally, abort the in-flight request.\n                if (xhr.readyState !== xhr.DONE) {\n                    xhr.abort();\n                }\n            };\n        });\n    }\n}\nHttpXhrBackend.ɵfac = function HttpXhrBackend_Factory(t) { return new (t || HttpXhrBackend)(ɵngcc0.ɵɵinject(XhrFactory)); };\nHttpXhrBackend.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: HttpXhrBackend, factory: HttpXhrBackend.ɵfac });\nHttpXhrBackend.ctorParameters = () => [\n    { type: XhrFactory }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpXhrBackend, [{\n        type: Injectable\n    }], function () { return [{ type: XhrFactory }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst XSRF_COOKIE_NAME = new InjectionToken('XSRF_COOKIE_NAME');\nconst XSRF_HEADER_NAME = new InjectionToken('XSRF_HEADER_NAME');\n/**\n * Retrieves the current XSRF token to use with the next outgoing request.\n *\n * @publicApi\n */\nclass HttpXsrfTokenExtractor {\n}\n/**\n * `HttpXsrfTokenExtractor` which retrieves the token from a cookie.\n */\nclass HttpXsrfCookieExtractor {\n    constructor(doc, platform, cookieName) {\n        this.doc = doc;\n        this.platform = platform;\n        this.cookieName = cookieName;\n        this.lastCookieString = '';\n        this.lastToken = null;\n        /**\n         * @internal for testing\n         */\n        this.parseCount = 0;\n    }\n    getToken() {\n        if (this.platform === 'server') {\n            return null;\n        }\n        const cookieString = this.doc.cookie || '';\n        if (cookieString !== this.lastCookieString) {\n            this.parseCount++;\n            this.lastToken = ɵparseCookieValue(cookieString, this.cookieName);\n            this.lastCookieString = cookieString;\n        }\n        return this.lastToken;\n    }\n}\nHttpXsrfCookieExtractor.ɵfac = function HttpXsrfCookieExtractor_Factory(t) { return new (t || HttpXsrfCookieExtractor)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(XSRF_COOKIE_NAME)); };\nHttpXsrfCookieExtractor.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: HttpXsrfCookieExtractor, factory: HttpXsrfCookieExtractor.ɵfac });\nHttpXsrfCookieExtractor.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: String, decorators: [{ type: Inject, args: [XSRF_COOKIE_NAME,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpXsrfCookieExtractor, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: String, decorators: [{\n                type: Inject,\n                args: [XSRF_COOKIE_NAME]\n            }] }]; }, null); })();\n/**\n * `HttpInterceptor` which adds an XSRF token to eligible outgoing requests.\n */\nclass HttpXsrfInterceptor {\n    constructor(tokenService, headerName) {\n        this.tokenService = tokenService;\n        this.headerName = headerName;\n    }\n    intercept(req, next) {\n        const lcUrl = req.url.toLowerCase();\n        // Skip both non-mutating requests and absolute URLs.\n        // Non-mutating requests don't require a token, and absolute URLs require special handling\n        // anyway as the cookie set\n        // on our origin is not the same as the token expected by another origin.\n        if (req.method === 'GET' || req.method === 'HEAD' || lcUrl.startsWith('http://') ||\n            lcUrl.startsWith('https://')) {\n            return next.handle(req);\n        }\n        const token = this.tokenService.getToken();\n        // Be careful not to overwrite an existing header of the same name.\n        if (token !== null && !req.headers.has(this.headerName)) {\n            req = req.clone({ headers: req.headers.set(this.headerName, token) });\n        }\n        return next.handle(req);\n    }\n}\nHttpXsrfInterceptor.ɵfac = function HttpXsrfInterceptor_Factory(t) { return new (t || HttpXsrfInterceptor)(ɵngcc0.ɵɵinject(HttpXsrfTokenExtractor), ɵngcc0.ɵɵinject(XSRF_HEADER_NAME)); };\nHttpXsrfInterceptor.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: HttpXsrfInterceptor, factory: HttpXsrfInterceptor.ɵfac });\nHttpXsrfInterceptor.ctorParameters = () => [\n    { type: HttpXsrfTokenExtractor },\n    { type: String, decorators: [{ type: Inject, args: [XSRF_HEADER_NAME,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpXsrfInterceptor, [{\n        type: Injectable\n    }], function () { return [{ type: HttpXsrfTokenExtractor }, { type: String, decorators: [{\n                type: Inject,\n                args: [XSRF_HEADER_NAME]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An injectable `HttpHandler` that applies multiple interceptors\n * to a request before passing it to the given `HttpBackend`.\n *\n * The interceptors are loaded lazily from the injector, to allow\n * interceptors to themselves inject classes depending indirectly\n * on `HttpInterceptingHandler` itself.\n * @see `HttpInterceptor`\n */\nclass HttpInterceptingHandler {\n    constructor(backend, injector) {\n        this.backend = backend;\n        this.injector = injector;\n        this.chain = null;\n    }\n    handle(req) {\n        if (this.chain === null) {\n            const interceptors = this.injector.get(HTTP_INTERCEPTORS, []);\n            this.chain = interceptors.reduceRight((next, interceptor) => new HttpInterceptorHandler(next, interceptor), this.backend);\n        }\n        return this.chain.handle(req);\n    }\n}\nHttpInterceptingHandler.ɵfac = function HttpInterceptingHandler_Factory(t) { return new (t || HttpInterceptingHandler)(ɵngcc0.ɵɵinject(HttpBackend), ɵngcc0.ɵɵinject(ɵngcc0.Injector)); };\nHttpInterceptingHandler.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: HttpInterceptingHandler, factory: HttpInterceptingHandler.ɵfac });\nHttpInterceptingHandler.ctorParameters = () => [\n    { type: HttpBackend },\n    { type: Injector }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpInterceptingHandler, [{\n        type: Injectable\n    }], function () { return [{ type: HttpBackend }, { type: ɵngcc0.Injector }]; }, null); })();\n/**\n * Constructs an `HttpHandler` that applies interceptors\n * to a request before passing it to the given `HttpBackend`.\n *\n * Use as a factory function within `HttpClientModule`.\n *\n *\n */\nfunction interceptingHandler(backend, interceptors = []) {\n    if (!interceptors) {\n        return backend;\n    }\n    return interceptors.reduceRight((next, interceptor) => new HttpInterceptorHandler(next, interceptor), backend);\n}\n/**\n * Factory function that determines where to store JSONP callbacks.\n *\n * Ordinarily JSONP callbacks are stored on the `window` object, but this may not exist\n * in test environments. In that case, callbacks are stored on an anonymous object instead.\n *\n *\n */\nfunction jsonpCallbackContext() {\n    if (typeof window === 'object') {\n        return window;\n    }\n    return {};\n}\n/**\n * Configures XSRF protection support for outgoing requests.\n *\n * For a server that supports a cookie-based XSRF protection system,\n * use directly to configure XSRF protection with the correct\n * cookie and header names.\n *\n * If no names are supplied, the default cookie name is `XSRF-TOKEN`\n * and the default header name is `X-XSRF-TOKEN`.\n *\n * @publicApi\n */\nclass HttpClientXsrfModule {\n    /**\n     * Disable the default XSRF protection.\n     */\n    static disable() {\n        return {\n            ngModule: HttpClientXsrfModule,\n            providers: [\n                { provide: HttpXsrfInterceptor, useClass: NoopInterceptor },\n            ],\n        };\n    }\n    /**\n     * Configure XSRF protection.\n     * @param options An object that can specify either or both\n     * cookie name or header name.\n     * - Cookie name default is `XSRF-TOKEN`.\n     * - Header name default is `X-XSRF-TOKEN`.\n     *\n     */\n    static withOptions(options = {}) {\n        return {\n            ngModule: HttpClientXsrfModule,\n            providers: [\n                options.cookieName ? { provide: XSRF_COOKIE_NAME, useValue: options.cookieName } : [],\n                options.headerName ? { provide: XSRF_HEADER_NAME, useValue: options.headerName } : [],\n            ],\n        };\n    }\n}\nHttpClientXsrfModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: HttpClientXsrfModule });\nHttpClientXsrfModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function HttpClientXsrfModule_Factory(t) { return new (t || HttpClientXsrfModule)(); }, providers: [\n        HttpXsrfInterceptor,\n        { provide: HTTP_INTERCEPTORS, useExisting: HttpXsrfInterceptor, multi: true },\n        { provide: HttpXsrfTokenExtractor, useClass: HttpXsrfCookieExtractor },\n        { provide: XSRF_COOKIE_NAME, useValue: 'XSRF-TOKEN' },\n        { provide: XSRF_HEADER_NAME, useValue: 'X-XSRF-TOKEN' },\n    ] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpClientXsrfModule, [{\n        type: NgModule,\n        args: [{\n                providers: [\n                    HttpXsrfInterceptor,\n                    { provide: HTTP_INTERCEPTORS, useExisting: HttpXsrfInterceptor, multi: true },\n                    { provide: HttpXsrfTokenExtractor, useClass: HttpXsrfCookieExtractor },\n                    { provide: XSRF_COOKIE_NAME, useValue: 'XSRF-TOKEN' },\n                    { provide: XSRF_HEADER_NAME, useValue: 'X-XSRF-TOKEN' },\n                ]\n            }]\n    }], null, null); })();\n/**\n * Configures the [dependency injector](guide/glossary#injector) for `HttpClient`\n * with supporting services for XSRF. Automatically imported by `HttpClientModule`.\n *\n * You can add interceptors to the chain behind `HttpClient` by binding them to the\n * multiprovider for built-in [DI token](guide/glossary#di-token) `HTTP_INTERCEPTORS`.\n *\n * @publicApi\n */\nclass HttpClientModule {\n}\nHttpClientModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: HttpClientModule });\nHttpClientModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function HttpClientModule_Factory(t) { return new (t || HttpClientModule)(); }, providers: [\n        HttpClient,\n        { provide: HttpHandler, useClass: HttpInterceptingHandler },\n        HttpXhrBackend,\n        { provide: HttpBackend, useExisting: HttpXhrBackend },\n        BrowserXhr,\n        { provide: XhrFactory, useExisting: BrowserXhr },\n    ], imports: [[\n            HttpClientXsrfModule.withOptions({\n                cookieName: 'XSRF-TOKEN',\n                headerName: 'X-XSRF-TOKEN'\n            }),\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(HttpClientModule, { imports: [HttpClientXsrfModule] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpClientModule, [{\n        type: NgModule,\n        args: [{\n                /**\n                 * Optional configuration for XSRF protection.\n                 */\n                imports: [\n                    HttpClientXsrfModule.withOptions({\n                        cookieName: 'XSRF-TOKEN',\n                        headerName: 'X-XSRF-TOKEN'\n                    }),\n                ],\n                /**\n                 * Configures the [dependency injector](guide/glossary#injector) where it is imported\n                 * with supporting services for HTTP communications.\n                 */\n                providers: [\n                    HttpClient,\n                    { provide: HttpHandler, useClass: HttpInterceptingHandler },\n                    HttpXhrBackend,\n                    { provide: HttpBackend, useExisting: HttpXhrBackend },\n                    BrowserXhr,\n                    { provide: XhrFactory, useExisting: BrowserXhr },\n                ]\n            }]\n    }], null, null); })();\n/**\n * Configures the [dependency injector](guide/glossary#injector) for `HttpClient`\n * with supporting services for JSONP.\n * Without this module, Jsonp requests reach the backend\n * with method JSONP, where they are rejected.\n *\n * You can add interceptors to the chain behind `HttpClient` by binding them to the\n * multiprovider for built-in [DI token](guide/glossary#di-token) `HTTP_INTERCEPTORS`.\n *\n * @publicApi\n */\nclass HttpClientJsonpModule {\n}\nHttpClientJsonpModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: HttpClientJsonpModule });\nHttpClientJsonpModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function HttpClientJsonpModule_Factory(t) { return new (t || HttpClientJsonpModule)(); }, providers: [\n        JsonpClientBackend,\n        { provide: JsonpCallbackContext, useFactory: jsonpCallbackContext },\n        { provide: HTTP_INTERCEPTORS, useClass: JsonpInterceptor, multi: true },\n    ] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpClientJsonpModule, [{\n        type: NgModule,\n        args: [{\n                providers: [\n                    JsonpClientBackend,\n                    { provide: JsonpCallbackContext, useFactory: jsonpCallbackContext },\n                    { provide: HTTP_INTERCEPTORS, useClass: JsonpInterceptor, multi: true },\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { HTTP_INTERCEPTORS, HttpBackend, HttpClient, HttpClientJsonpModule, HttpClientModule, HttpClientXsrfModule, HttpErrorResponse, HttpEventType, HttpHandler, HttpHeaderResponse, HttpHeaders, HttpParams, HttpRequest, HttpResponse, HttpResponseBase, HttpUrlEncodingCodec, HttpXhrBackend, HttpXsrfTokenExtractor, JsonpClientBackend, JsonpInterceptor, XhrFactory, HttpInterceptingHandler as ɵHttpInterceptingHandler, NoopInterceptor as ɵangular_packages_common_http_http_a, JsonpCallbackContext as ɵangular_packages_common_http_http_b, jsonpCallbackContext as ɵangular_packages_common_http_http_c, BrowserXhr as ɵangular_packages_common_http_http_d, XSRF_COOKIE_NAME as ɵangular_packages_common_http_http_e, XSRF_HEADER_NAME as ɵangular_packages_common_http_http_f, HttpXsrfCookieExtractor as ɵangular_packages_common_http_http_g, HttpXsrfInterceptor as ɵangular_packages_common_http_http_h };\n\n//# sourceMappingURL=http.js.map","import { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { empty } from '../observable/empty';\nexport function takeLast(count) {\n    return function takeLastOperatorFunction(source) {\n        if (count === 0) {\n            return empty();\n        }\n        else {\n            return source.lift(new TakeLastOperator(count));\n        }\n    };\n}\nclass TakeLastOperator {\n    constructor(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError;\n        }\n    }\n    call(subscriber, source) {\n        return source.subscribe(new TakeLastSubscriber(subscriber, this.total));\n    }\n}\nclass TakeLastSubscriber extends Subscriber {\n    constructor(destination, total) {\n        super(destination);\n        this.total = total;\n        this.ring = new Array();\n        this.count = 0;\n    }\n    _next(value) {\n        const ring = this.ring;\n        const total = this.total;\n        const count = this.count++;\n        if (ring.length < total) {\n            ring.push(value);\n        }\n        else {\n            const index = count % total;\n            ring[index] = value;\n        }\n    }\n    _complete() {\n        const destination = this.destination;\n        let count = this.count;\n        if (count > 0) {\n            const total = this.count >= this.total ? this.total : this.count;\n            const ring = this.ring;\n            for (let i = 0; i < total; i++) {\n                const idx = (count++) % total;\n                destination.next(ring[idx]);\n            }\n        }\n        destination.complete();\n    }\n}\n//# sourceMappingURL=takeLast.js.map","import { EmptyError } from '../util/EmptyError';\nimport { Subscriber } from '../Subscriber';\nexport function throwIfEmpty(errorFactory = defaultErrorFactory) {\n    return (source) => {\n        return source.lift(new ThrowIfEmptyOperator(errorFactory));\n    };\n}\nclass ThrowIfEmptyOperator {\n    constructor(errorFactory) {\n        this.errorFactory = errorFactory;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ThrowIfEmptySubscriber(subscriber, this.errorFactory));\n    }\n}\nclass ThrowIfEmptySubscriber extends Subscriber {\n    constructor(destination, errorFactory) {\n        super(destination);\n        this.errorFactory = errorFactory;\n        this.hasValue = false;\n    }\n    _next(value) {\n        this.hasValue = true;\n        this.destination.next(value);\n    }\n    _complete() {\n        if (!this.hasValue) {\n            let err;\n            try {\n                err = this.errorFactory();\n            }\n            catch (e) {\n                err = e;\n            }\n            this.destination.error(err);\n        }\n        else {\n            return this.destination.complete();\n        }\n    }\n}\nfunction defaultErrorFactory() {\n    return new EmptyError();\n}\n//# sourceMappingURL=throwIfEmpty.js.map","import { Subscriber } from '../Subscriber';\nexport function defaultIfEmpty(defaultValue = null) {\n    return (source) => source.lift(new DefaultIfEmptyOperator(defaultValue));\n}\nclass DefaultIfEmptyOperator {\n    constructor(defaultValue) {\n        this.defaultValue = defaultValue;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));\n    }\n}\nclass DefaultIfEmptySubscriber extends Subscriber {\n    constructor(destination, defaultValue) {\n        super(destination);\n        this.defaultValue = defaultValue;\n        this.isEmpty = true;\n    }\n    _next(value) {\n        this.isEmpty = false;\n        this.destination.next(value);\n    }\n    _complete() {\n        if (this.isEmpty) {\n            this.destination.next(this.defaultValue);\n        }\n        this.destination.complete();\n    }\n}\n//# sourceMappingURL=defaultIfEmpty.js.map","import { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function catchError(selector) {\n    return function catchErrorOperatorFunction(source) {\n        const operator = new CatchOperator(selector);\n        const caught = source.lift(operator);\n        return (operator.caught = caught);\n    };\n}\nclass CatchOperator {\n    constructor(selector) {\n        this.selector = selector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n    }\n}\nclass CatchSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, selector, caught) {\n        super(destination);\n        this.selector = selector;\n        this.caught = caught;\n    }\n    error(err) {\n        if (!this.isStopped) {\n            let result;\n            try {\n                result = this.selector(err, this.caught);\n            }\n            catch (err2) {\n                super.error(err2);\n                return;\n            }\n            this._unsubscribeAndRecycle();\n            const innerSubscriber = new SimpleInnerSubscriber(this);\n            this.add(innerSubscriber);\n            const innerSubscription = innerSubscribe(result, innerSubscriber);\n            if (innerSubscription !== innerSubscriber) {\n                this.add(innerSubscription);\n            }\n        }\n    }\n}\n//# sourceMappingURL=catchError.js.map","import { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { empty } from '../observable/empty';\nexport function take(count) {\n    return (source) => {\n        if (count === 0) {\n            return empty();\n        }\n        else {\n            return source.lift(new TakeOperator(count));\n        }\n    };\n}\nclass TakeOperator {\n    constructor(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError;\n        }\n    }\n    call(subscriber, source) {\n        return source.subscribe(new TakeSubscriber(subscriber, this.total));\n    }\n}\nclass TakeSubscriber extends Subscriber {\n    constructor(destination, total) {\n        super(destination);\n        this.total = total;\n        this.count = 0;\n    }\n    _next(value) {\n        const total = this.total;\n        const count = ++this.count;\n        if (count <= total) {\n            this.destination.next(value);\n            if (count === total) {\n                this.destination.complete();\n                this.unsubscribe();\n            }\n        }\n    }\n}\n//# sourceMappingURL=take.js.map","import { EmptyError } from '../util/EmptyError';\nimport { filter } from './filter';\nimport { take } from './take';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { identity } from '../util/identity';\nexport function first(predicate, defaultValue) {\n    const hasDefaultValue = arguments.length >= 2;\n    return (source) => source.pipe(predicate ? filter((v, i) => predicate(v, i, source)) : identity, take(1), hasDefaultValue ? defaultIfEmpty(defaultValue) : throwIfEmpty(() => new EmptyError()));\n}\n//# sourceMappingURL=first.js.map","import { Subscriber } from '../Subscriber';\nimport { noop } from '../util/noop';\nimport { isFunction } from '../util/isFunction';\nexport function tap(nextOrObserver, error, complete) {\n    return function tapOperatorFunction(source) {\n        return source.lift(new DoOperator(nextOrObserver, error, complete));\n    };\n}\nclass DoOperator {\n    constructor(nextOrObserver, error, complete) {\n        this.nextOrObserver = nextOrObserver;\n        this.error = error;\n        this.complete = complete;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new TapSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n    }\n}\nclass TapSubscriber extends Subscriber {\n    constructor(destination, observerOrNext, error, complete) {\n        super(destination);\n        this._tapNext = noop;\n        this._tapError = noop;\n        this._tapComplete = noop;\n        this._tapError = error || noop;\n        this._tapComplete = complete || noop;\n        if (isFunction(observerOrNext)) {\n            this._context = this;\n            this._tapNext = observerOrNext;\n        }\n        else if (observerOrNext) {\n            this._context = observerOrNext;\n            this._tapNext = observerOrNext.next || noop;\n            this._tapError = observerOrNext.error || noop;\n            this._tapComplete = observerOrNext.complete || noop;\n        }\n    }\n    _next(value) {\n        try {\n            this._tapNext.call(this._context, value);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(value);\n    }\n    _error(err) {\n        try {\n            this._tapError.call(this._context, err);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.error(err);\n    }\n    _complete() {\n        try {\n            this._tapComplete.call(this._context);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        return this.destination.complete();\n    }\n}\n//# sourceMappingURL=tap.js.map","import { Subscriber } from '../Subscriber';\nexport function every(predicate, thisArg) {\n    return (source) => source.lift(new EveryOperator(predicate, thisArg, source));\n}\nclass EveryOperator {\n    constructor(predicate, thisArg, source) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.source = source;\n    }\n    call(observer, source) {\n        return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));\n    }\n}\nclass EverySubscriber extends Subscriber {\n    constructor(destination, predicate, thisArg, source) {\n        super(destination);\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.source = source;\n        this.index = 0;\n        this.thisArg = thisArg || this;\n    }\n    notifyComplete(everyValueMatch) {\n        this.destination.next(everyValueMatch);\n        this.destination.complete();\n    }\n    _next(value) {\n        let result = false;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.index++, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (!result) {\n            this.notifyComplete(false);\n        }\n    }\n    _complete() {\n        this.notifyComplete(true);\n    }\n}\n//# sourceMappingURL=every.js.map","import { map } from './map';\nimport { from } from '../observable/from';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function switchMap(project, resultSelector) {\n    if (typeof resultSelector === 'function') {\n        return (source) => source.pipe(switchMap((a, i) => from(project(a, i)).pipe(map((b, ii) => resultSelector(a, b, i, ii)))));\n    }\n    return (source) => source.lift(new SwitchMapOperator(project));\n}\nclass SwitchMapOperator {\n    constructor(project) {\n        this.project = project;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new SwitchMapSubscriber(subscriber, this.project));\n    }\n}\nclass SwitchMapSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, project) {\n        super(destination);\n        this.project = project;\n        this.index = 0;\n    }\n    _next(value) {\n        let result;\n        const index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (error) {\n            this.destination.error(error);\n            return;\n        }\n        this._innerSub(result);\n    }\n    _innerSub(result) {\n        const innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n        }\n        const innerSubscriber = new SimpleInnerSubscriber(this);\n        const destination = this.destination;\n        destination.add(innerSubscriber);\n        this.innerSubscription = innerSubscribe(result, innerSubscriber);\n        if (this.innerSubscription !== innerSubscriber) {\n            destination.add(this.innerSubscription);\n        }\n    }\n    _complete() {\n        const { innerSubscription } = this;\n        if (!innerSubscription || innerSubscription.closed) {\n            super._complete();\n        }\n        this.unsubscribe();\n    }\n    _unsubscribe() {\n        this.innerSubscription = undefined;\n    }\n    notifyComplete() {\n        this.innerSubscription = undefined;\n        if (this.isStopped) {\n            super._complete();\n        }\n    }\n    notifyNext(innerValue) {\n        this.destination.next(innerValue);\n    }\n}\n//# sourceMappingURL=switchMap.js.map","import { concat } from '../observable/concat';\nimport { isScheduler } from '../util/isScheduler';\nexport function startWith(...array) {\n    const scheduler = array[array.length - 1];\n    if (isScheduler(scheduler)) {\n        array.pop();\n        return (source) => concat(array, source, scheduler);\n    }\n    else {\n        return (source) => concat(array, source);\n    }\n}\n//# sourceMappingURL=startWith.js.map","import { Subscriber } from '../Subscriber';\nexport function scan(accumulator, seed) {\n    let hasSeed = false;\n    if (arguments.length >= 2) {\n        hasSeed = true;\n    }\n    return function scanOperatorFunction(source) {\n        return source.lift(new ScanOperator(accumulator, seed, hasSeed));\n    };\n}\nclass ScanOperator {\n    constructor(accumulator, seed, hasSeed = false) {\n        this.accumulator = accumulator;\n        this.seed = seed;\n        this.hasSeed = hasSeed;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n    }\n}\nclass ScanSubscriber extends Subscriber {\n    constructor(destination, accumulator, _seed, hasSeed) {\n        super(destination);\n        this.accumulator = accumulator;\n        this._seed = _seed;\n        this.hasSeed = hasSeed;\n        this.index = 0;\n    }\n    get seed() {\n        return this._seed;\n    }\n    set seed(value) {\n        this.hasSeed = true;\n        this._seed = value;\n    }\n    _next(value) {\n        if (!this.hasSeed) {\n            this.seed = value;\n            this.destination.next(value);\n        }\n        else {\n            return this._tryNext(value);\n        }\n    }\n    _tryNext(value) {\n        const index = this.index++;\n        let result;\n        try {\n            result = this.accumulator(this.seed, value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n        this.seed = result;\n        this.destination.next(result);\n    }\n}\n//# sourceMappingURL=scan.js.map","import { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nexport function finalize(callback) {\n    return (source) => source.lift(new FinallyOperator(callback));\n}\nclass FinallyOperator {\n    constructor(callback) {\n        this.callback = callback;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new FinallySubscriber(subscriber, this.callback));\n    }\n}\nclass FinallySubscriber extends Subscriber {\n    constructor(destination, callback) {\n        super(destination);\n        this.add(new Subscription(callback));\n    }\n}\n//# sourceMappingURL=finalize.js.map","/**\n * @license Angular v10.0.11\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { Location, LocationStrategy, ViewportScroller, PlatformLocation, APP_BASE_HREF, HashLocationStrategy, PathLocationStrategy, ɵgetDOM, LOCATION_INITIALIZED } from '@angular/common';\nimport { ɵisObservable, ɵisPromise, NgModuleRef, Component, InjectionToken, NgModuleFactory, ɵConsole, NgZone, isDevMode, Injectable, Type, Injector, NgModuleFactoryLoader, Compiler, Directive, Attribute, Renderer2, ElementRef, Input, HostListener, HostBinding, ChangeDetectorRef, Optional, ContentChildren, EventEmitter, ViewContainerRef, ComponentFactoryResolver, Output, SystemJsNgModuleLoader, NgProbeToken, ANALYZE_FOR_ENTRY_COMPONENTS, SkipSelf, Inject, APP_INITIALIZER, APP_BOOTSTRAP_LISTENER, NgModule, ApplicationRef, Version } from '@angular/core';\nimport { of, from, BehaviorSubject, Observable, EmptyError, combineLatest, defer, EMPTY, Subject } from 'rxjs';\nimport { map, concatAll, last as last$1, catchError, first, mergeMap, tap, every, switchMap, take, startWith, scan, filter, concatMap, takeLast, finalize, mergeAll } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base for events the router goes through, as opposed to events tied to a specific\n * route. Fired one time for any given navigation.\n *\n * The following code shows how a class subscribes to router events.\n *\n * ```ts\n * class MyService {\n *   constructor(public router: Router, logger: Logger) {\n *     router.events.pipe(\n *        filter((e: Event): e is RouterEvent => e instanceof RouterEvent)\n *     ).subscribe((e: RouterEvent) => {\n *       logger.log(e.id, e.url);\n *     });\n *   }\n * }\n * ```\n *\n * @see `Event`\n * @see [Router events summary](guide/router#router-events)\n * @publicApi\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nclass RouterEvent {\n    constructor(\n    /** A unique ID that the router assigns to every router navigation. */\n    id, \n    /** The URL that is the destination for this navigation. */\n    url) {\n        this.id = id;\n        this.url = url;\n    }\n}\n/**\n * An event triggered when a navigation starts.\n *\n * @publicApi\n */\nclass NavigationStart extends RouterEvent {\n    constructor(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    navigationTrigger = 'imperative', \n    /** @docsNotRequired */\n    restoredState = null) {\n        super(id, url);\n        this.navigationTrigger = navigationTrigger;\n        this.restoredState = restoredState;\n    }\n    /** @docsNotRequired */\n    toString() {\n        return `NavigationStart(id: ${this.id}, url: '${this.url}')`;\n    }\n}\n/**\n * An event triggered when a navigation ends successfully.\n *\n * @see `NavigationStart`\n * @see `NavigationCancel`\n * @see `NavigationError`\n *\n * @publicApi\n */\nclass NavigationEnd extends RouterEvent {\n    constructor(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects) {\n        super(id, url);\n        this.urlAfterRedirects = urlAfterRedirects;\n    }\n    /** @docsNotRequired */\n    toString() {\n        return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`;\n    }\n}\n/**\n * An event triggered when a navigation is canceled, directly or indirectly.\n * This can happen when a route guard\n * returns `false` or initiates a redirect by returning a `UrlTree`.\n *\n * @see `NavigationStart`\n * @see `NavigationEnd`\n * @see `NavigationError`\n *\n * @publicApi\n */\nclass NavigationCancel extends RouterEvent {\n    constructor(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    reason) {\n        super(id, url);\n        this.reason = reason;\n    }\n    /** @docsNotRequired */\n    toString() {\n        return `NavigationCancel(id: ${this.id}, url: '${this.url}')`;\n    }\n}\n/**\n * An event triggered when a navigation fails due to an unexpected error.\n *\n * @see `NavigationStart`\n * @see `NavigationEnd`\n * @see `NavigationCancel`\n *\n * @publicApi\n */\nclass NavigationError extends RouterEvent {\n    constructor(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    error) {\n        super(id, url);\n        this.error = error;\n    }\n    /** @docsNotRequired */\n    toString() {\n        return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`;\n    }\n}\n/**\n * An event triggered when routes are recognized.\n *\n * @publicApi\n */\nclass RoutesRecognized extends RouterEvent {\n    constructor(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects, \n    /** @docsNotRequired */\n    state) {\n        super(id, url);\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    /** @docsNotRequired */\n    toString() {\n        return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n    }\n}\n/**\n * An event triggered at the start of the Guard phase of routing.\n *\n * @see `GuardsCheckEnd`\n *\n * @publicApi\n */\nclass GuardsCheckStart extends RouterEvent {\n    constructor(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects, \n    /** @docsNotRequired */\n    state) {\n        super(id, url);\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    toString() {\n        return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n    }\n}\n/**\n * An event triggered at the end of the Guard phase of routing.\n *\n * @see `GuardsCheckStart`\n *\n * @publicApi\n */\nclass GuardsCheckEnd extends RouterEvent {\n    constructor(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects, \n    /** @docsNotRequired */\n    state, \n    /** @docsNotRequired */\n    shouldActivate) {\n        super(id, url);\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n        this.shouldActivate = shouldActivate;\n    }\n    toString() {\n        return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`;\n    }\n}\n/**\n * An event triggered at the the start of the Resolve phase of routing.\n *\n * Runs in the \"resolve\" phase whether or not there is anything to resolve.\n * In future, may change to only run when there are things to be resolved.\n *\n * @see `ResolveEnd`\n *\n * @publicApi\n */\nclass ResolveStart extends RouterEvent {\n    constructor(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects, \n    /** @docsNotRequired */\n    state) {\n        super(id, url);\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    toString() {\n        return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n    }\n}\n/**\n * An event triggered at the end of the Resolve phase of routing.\n * @see `ResolveStart`.\n *\n * @publicApi\n */\nclass ResolveEnd extends RouterEvent {\n    constructor(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects, \n    /** @docsNotRequired */\n    state) {\n        super(id, url);\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    toString() {\n        return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n    }\n}\n/**\n * An event triggered before lazy loading a route configuration.\n *\n * @see `RouteConfigLoadEnd`\n *\n * @publicApi\n */\nclass RouteConfigLoadStart {\n    constructor(\n    /** @docsNotRequired */\n    route) {\n        this.route = route;\n    }\n    toString() {\n        return `RouteConfigLoadStart(path: ${this.route.path})`;\n    }\n}\n/**\n * An event triggered when a route has been lazy loaded.\n *\n * @see `RouteConfigLoadStart`\n *\n * @publicApi\n */\nclass RouteConfigLoadEnd {\n    constructor(\n    /** @docsNotRequired */\n    route) {\n        this.route = route;\n    }\n    toString() {\n        return `RouteConfigLoadEnd(path: ${this.route.path})`;\n    }\n}\n/**\n * An event triggered at the start of the child-activation\n * part of the Resolve phase of routing.\n * @see  `ChildActivationEnd`\n * @see `ResolveStart`\n *\n * @publicApi\n */\nclass ChildActivationStart {\n    constructor(\n    /** @docsNotRequired */\n    snapshot) {\n        this.snapshot = snapshot;\n    }\n    toString() {\n        const path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return `ChildActivationStart(path: '${path}')`;\n    }\n}\n/**\n * An event triggered at the end of the child-activation part\n * of the Resolve phase of routing.\n * @see `ChildActivationStart`\n * @see `ResolveStart`\n * @publicApi\n */\nclass ChildActivationEnd {\n    constructor(\n    /** @docsNotRequired */\n    snapshot) {\n        this.snapshot = snapshot;\n    }\n    toString() {\n        const path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return `ChildActivationEnd(path: '${path}')`;\n    }\n}\n/**\n * An event triggered at the start of the activation part\n * of the Resolve phase of routing.\n * @see `ActivationEnd`\n * @see `ResolveStart`\n *\n * @publicApi\n */\nclass ActivationStart {\n    constructor(\n    /** @docsNotRequired */\n    snapshot) {\n        this.snapshot = snapshot;\n    }\n    toString() {\n        const path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return `ActivationStart(path: '${path}')`;\n    }\n}\n/**\n * An event triggered at the end of the activation part\n * of the Resolve phase of routing.\n * @see `ActivationStart`\n * @see `ResolveStart`\n *\n * @publicApi\n */\nclass ActivationEnd {\n    constructor(\n    /** @docsNotRequired */\n    snapshot) {\n        this.snapshot = snapshot;\n    }\n    toString() {\n        const path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return `ActivationEnd(path: '${path}')`;\n    }\n}\n/**\n * An event triggered by scrolling.\n *\n * @publicApi\n */\nclass Scroll {\n    constructor(\n    /** @docsNotRequired */\n    routerEvent, \n    /** @docsNotRequired */\n    position, \n    /** @docsNotRequired */\n    anchor) {\n        this.routerEvent = routerEvent;\n        this.position = position;\n        this.anchor = anchor;\n    }\n    toString() {\n        const pos = this.position ? `${this.position[0]}, ${this.position[1]}` : null;\n        return `Scroll(anchor: '${this.anchor}', position: '${pos}')`;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The primary routing outlet.\n *\n * @publicApi\n */\nconst PRIMARY_OUTLET = 'primary';\nclass ParamsAsMap {\n    constructor(params) {\n        this.params = params || {};\n    }\n    has(name) {\n        return Object.prototype.hasOwnProperty.call(this.params, name);\n    }\n    get(name) {\n        if (this.has(name)) {\n            const v = this.params[name];\n            return Array.isArray(v) ? v[0] : v;\n        }\n        return null;\n    }\n    getAll(name) {\n        if (this.has(name)) {\n            const v = this.params[name];\n            return Array.isArray(v) ? v : [v];\n        }\n        return [];\n    }\n    get keys() {\n        return Object.keys(this.params);\n    }\n}\n/**\n * Converts a `Params` instance to a `ParamMap`.\n * @param params The instance to convert.\n * @returns The new map instance.\n *\n * @publicApi\n */\nfunction convertToParamMap(params) {\n    return new ParamsAsMap(params);\n}\nconst NAVIGATION_CANCELING_ERROR = 'ngNavigationCancelingError';\nfunction navigationCancelingError(message) {\n    const error = Error('NavigationCancelingError: ' + message);\n    error[NAVIGATION_CANCELING_ERROR] = true;\n    return error;\n}\nfunction isNavigationCancelingError(error) {\n    return error && error[NAVIGATION_CANCELING_ERROR];\n}\n// Matches the route configuration (`route`) against the actual URL (`segments`).\nfunction defaultUrlMatcher(segments, segmentGroup, route) {\n    const parts = route.path.split('/');\n    if (parts.length > segments.length) {\n        // The actual URL is shorter than the config, no match\n        return null;\n    }\n    if (route.pathMatch === 'full' &&\n        (segmentGroup.hasChildren() || parts.length < segments.length)) {\n        // The config is longer than the actual URL but we are looking for a full match, return null\n        return null;\n    }\n    const posParams = {};\n    // Check each config part against the actual URL\n    for (let index = 0; index < parts.length; index++) {\n        const part = parts[index];\n        const segment = segments[index];\n        const isParameter = part.startsWith(':');\n        if (isParameter) {\n            posParams[part.substring(1)] = segment;\n        }\n        else if (part !== segment.path) {\n            // The actual URL part does not match the config, no match\n            return null;\n        }\n    }\n    return { consumed: segments.slice(0, parts.length), posParams };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction shallowEqualArrays(a, b) {\n    if (a.length !== b.length)\n        return false;\n    for (let i = 0; i < a.length; ++i) {\n        if (!shallowEqual(a[i], b[i]))\n            return false;\n    }\n    return true;\n}\nfunction shallowEqual(a, b) {\n    // Casting Object.keys return values to include `undefined` as there are some cases\n    // in IE 11 where this can happen. Cannot provide a test because the behavior only\n    // exists in certain circumstances in IE 11, therefore doing this cast ensures the\n    // logic is correct for when this edge case is hit.\n    const k1 = Object.keys(a);\n    const k2 = Object.keys(b);\n    if (!k1 || !k2 || k1.length != k2.length) {\n        return false;\n    }\n    let key;\n    for (let i = 0; i < k1.length; i++) {\n        key = k1[i];\n        if (!equalArraysOrString(a[key], b[key])) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Test equality for arrays of strings or a string.\n */\nfunction equalArraysOrString(a, b) {\n    if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length != b.length)\n            return false;\n        return a.every(aItem => b.indexOf(aItem) > -1);\n    }\n    else {\n        return a === b;\n    }\n}\n/**\n * Flattens single-level nested arrays.\n */\nfunction flatten(arr) {\n    return Array.prototype.concat.apply([], arr);\n}\n/**\n * Return the last element of an array.\n */\nfunction last(a) {\n    return a.length > 0 ? a[a.length - 1] : null;\n}\n/**\n * Verifys all booleans in an array are `true`.\n */\nfunction and(bools) {\n    return !bools.some(v => !v);\n}\nfunction forEach(map, callback) {\n    for (const prop in map) {\n        if (map.hasOwnProperty(prop)) {\n            callback(map[prop], prop);\n        }\n    }\n}\nfunction waitForMap(obj, fn) {\n    if (Object.keys(obj).length === 0) {\n        return of({});\n    }\n    const waitHead = [];\n    const waitTail = [];\n    const res = {};\n    forEach(obj, (a, k) => {\n        const mapped = fn(k, a).pipe(map((r) => res[k] = r));\n        if (k === PRIMARY_OUTLET) {\n            waitHead.push(mapped);\n        }\n        else {\n            waitTail.push(mapped);\n        }\n    });\n    // Closure compiler has problem with using spread operator here. So we use \"Array.concat\".\n    // Note that we also need to cast the new promise because TypeScript cannot infer the type\n    // when calling the \"of\" function through \"Function.apply\"\n    return of.apply(null, waitHead.concat(waitTail))\n        .pipe(concatAll(), last$1(), map(() => res));\n}\nfunction wrapIntoObservable(value) {\n    if (ɵisObservable(value)) {\n        return value;\n    }\n    if (ɵisPromise(value)) {\n        // Use `Promise.resolve()` to wrap promise-like instances.\n        // Required ie when a Resolver returns a AngularJS `$q` promise to correctly trigger the\n        // change detection.\n        return from(Promise.resolve(value));\n    }\n    return of(value);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction createEmptyUrlTree() {\n    return new UrlTree(new UrlSegmentGroup([], {}), {}, null);\n}\nfunction containsTree(container, containee, exact) {\n    if (exact) {\n        return equalQueryParams(container.queryParams, containee.queryParams) &&\n            equalSegmentGroups(container.root, containee.root);\n    }\n    return containsQueryParams(container.queryParams, containee.queryParams) &&\n        containsSegmentGroup(container.root, containee.root);\n}\nfunction equalQueryParams(container, containee) {\n    // TODO: This does not handle array params correctly.\n    return shallowEqual(container, containee);\n}\nfunction equalSegmentGroups(container, containee) {\n    if (!equalPath(container.segments, containee.segments))\n        return false;\n    if (container.numberOfChildren !== containee.numberOfChildren)\n        return false;\n    for (const c in containee.children) {\n        if (!container.children[c])\n            return false;\n        if (!equalSegmentGroups(container.children[c], containee.children[c]))\n            return false;\n    }\n    return true;\n}\nfunction containsQueryParams(container, containee) {\n    // TODO: This does not handle array params correctly.\n    return Object.keys(containee).length <= Object.keys(container).length &&\n        Object.keys(containee).every(key => equalArraysOrString(container[key], containee[key]));\n}\nfunction containsSegmentGroup(container, containee) {\n    return containsSegmentGroupHelper(container, containee, containee.segments);\n}\nfunction containsSegmentGroupHelper(container, containee, containeePaths) {\n    if (container.segments.length > containeePaths.length) {\n        const current = container.segments.slice(0, containeePaths.length);\n        if (!equalPath(current, containeePaths))\n            return false;\n        if (containee.hasChildren())\n            return false;\n        return true;\n    }\n    else if (container.segments.length === containeePaths.length) {\n        if (!equalPath(container.segments, containeePaths))\n            return false;\n        for (const c in containee.children) {\n            if (!container.children[c])\n                return false;\n            if (!containsSegmentGroup(container.children[c], containee.children[c]))\n                return false;\n        }\n        return true;\n    }\n    else {\n        const current = containeePaths.slice(0, container.segments.length);\n        const next = containeePaths.slice(container.segments.length);\n        if (!equalPath(container.segments, current))\n            return false;\n        if (!container.children[PRIMARY_OUTLET])\n            return false;\n        return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next);\n    }\n}\n/**\n * @description\n *\n * Represents the parsed URL.\n *\n * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a\n * serialized tree.\n * UrlTree is a data structure that provides a lot of affordances in dealing with URLs\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree =\n *       router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');\n *     const f = tree.fragment; // return 'fragment'\n *     const q = tree.queryParams; // returns {debug: 'true'}\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'\n *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'\n *     g.children['support'].segments; // return 1 segment 'help'\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nclass UrlTree {\n    /** @internal */\n    constructor(\n    /** The root segment group of the URL tree */\n    root, \n    /** The query params of the URL */\n    queryParams, \n    /** The fragment of the URL */\n    fragment) {\n        this.root = root;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n    }\n    get queryParamMap() {\n        if (!this._queryParamMap) {\n            this._queryParamMap = convertToParamMap(this.queryParams);\n        }\n        return this._queryParamMap;\n    }\n    /** @docsNotRequired */\n    toString() {\n        return DEFAULT_SERIALIZER.serialize(this);\n    }\n}\n/**\n * @description\n *\n * Represents the parsed URL segment group.\n *\n * See `UrlTree` for more information.\n *\n * @publicApi\n */\nclass UrlSegmentGroup {\n    constructor(\n    /** The URL segments of this group. See `UrlSegment` for more information */\n    segments, \n    /** The list of children of this group */\n    children) {\n        this.segments = segments;\n        this.children = children;\n        /** The parent node in the url tree */\n        this.parent = null;\n        forEach(children, (v, k) => v.parent = this);\n    }\n    /** Whether the segment has child segments */\n    hasChildren() {\n        return this.numberOfChildren > 0;\n    }\n    /** Number of child segments */\n    get numberOfChildren() {\n        return Object.keys(this.children).length;\n    }\n    /** @docsNotRequired */\n    toString() {\n        return serializePaths(this);\n    }\n}\n/**\n * @description\n *\n * Represents a single URL segment.\n *\n * A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix\n * parameters associated with the segment.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree = router.parseUrl('/team;id=33');\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments;\n *     s[0].path; // returns 'team'\n *     s[0].parameters; // returns {id: 33}\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nclass UrlSegment {\n    constructor(\n    /** The path part of a URL segment */\n    path, \n    /** The matrix parameters associated with a segment */\n    parameters) {\n        this.path = path;\n        this.parameters = parameters;\n    }\n    get parameterMap() {\n        if (!this._parameterMap) {\n            this._parameterMap = convertToParamMap(this.parameters);\n        }\n        return this._parameterMap;\n    }\n    /** @docsNotRequired */\n    toString() {\n        return serializePath(this);\n    }\n}\nfunction equalSegments(as, bs) {\n    return equalPath(as, bs) && as.every((a, i) => shallowEqual(a.parameters, bs[i].parameters));\n}\nfunction equalPath(as, bs) {\n    if (as.length !== bs.length)\n        return false;\n    return as.every((a, i) => a.path === bs[i].path);\n}\nfunction mapChildrenIntoArray(segment, fn) {\n    let res = [];\n    forEach(segment.children, (child, childOutlet) => {\n        if (childOutlet === PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    forEach(segment.children, (child, childOutlet) => {\n        if (childOutlet !== PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    return res;\n}\n/**\n * @description\n *\n * Serializes and deserializes a URL string into a URL tree.\n *\n * The url serialization strategy is customizable. You can\n * make all URLs case insensitive by providing a custom UrlSerializer.\n *\n * See `DefaultUrlSerializer` for an example of a URL serializer.\n *\n * @publicApi\n */\nclass UrlSerializer {\n}\n/**\n * @description\n *\n * A default implementation of the `UrlSerializer`.\n *\n * Example URLs:\n *\n * ```\n * /inbox/33(popup:compose)\n * /inbox/33;open=true/messages/44\n * ```\n *\n * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the\n * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to\n * specify route specific parameters.\n *\n * @publicApi\n */\nclass DefaultUrlSerializer {\n    /** Parses a url into a `UrlTree` */\n    parse(url) {\n        const p = new UrlParser(url);\n        return new UrlTree(p.parseRootSegment(), p.parseQueryParams(), p.parseFragment());\n    }\n    /** Converts a `UrlTree` into a url */\n    serialize(tree) {\n        const segment = `/${serializeSegment(tree.root, true)}`;\n        const query = serializeQueryParams(tree.queryParams);\n        const fragment = typeof tree.fragment === `string` ? `#${encodeUriFragment(tree.fragment)}` : '';\n        return `${segment}${query}${fragment}`;\n    }\n}\nconst DEFAULT_SERIALIZER = new DefaultUrlSerializer();\nfunction serializePaths(segment) {\n    return segment.segments.map(p => serializePath(p)).join('/');\n}\nfunction serializeSegment(segment, root) {\n    if (!segment.hasChildren()) {\n        return serializePaths(segment);\n    }\n    if (root) {\n        const primary = segment.children[PRIMARY_OUTLET] ?\n            serializeSegment(segment.children[PRIMARY_OUTLET], false) :\n            '';\n        const children = [];\n        forEach(segment.children, (v, k) => {\n            if (k !== PRIMARY_OUTLET) {\n                children.push(`${k}:${serializeSegment(v, false)}`);\n            }\n        });\n        return children.length > 0 ? `${primary}(${children.join('//')})` : primary;\n    }\n    else {\n        const children = mapChildrenIntoArray(segment, (v, k) => {\n            if (k === PRIMARY_OUTLET) {\n                return [serializeSegment(segment.children[PRIMARY_OUTLET], false)];\n            }\n            return [`${k}:${serializeSegment(v, false)}`];\n        });\n        return `${serializePaths(segment)}/(${children.join('//')})`;\n    }\n}\n/**\n * Encodes a URI string with the default encoding. This function will only ever be called from\n * `encodeUriQuery` or `encodeUriSegment` as it's the base set of encodings to be used. We need\n * a custom encoding because encodeURIComponent is too aggressive and encodes stuff that doesn't\n * have to be encoded per https://url.spec.whatwg.org.\n */\nfunction encodeUriString(s) {\n    return encodeURIComponent(s)\n        .replace(/%40/g, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/g, '$')\n        .replace(/%2C/gi, ',');\n}\n/**\n * This function should be used to encode both keys and values in a query string key/value. In\n * the following URL, you need to call encodeUriQuery on \"k\" and \"v\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n */\nfunction encodeUriQuery(s) {\n    return encodeUriString(s).replace(/%3B/gi, ';');\n}\n/**\n * This function should be used to encode a URL fragment. In the following URL, you need to call\n * encodeUriFragment on \"f\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n */\nfunction encodeUriFragment(s) {\n    return encodeURI(s);\n}\n/**\n * This function should be run on any URI segment as well as the key and value in a key/value\n * pair for matrix params. In the following URL, you need to call encodeUriSegment on \"html\",\n * \"mk\", and \"mv\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n */\nfunction encodeUriSegment(s) {\n    return encodeUriString(s).replace(/\\(/g, '%28').replace(/\\)/g, '%29').replace(/%26/gi, '&');\n}\nfunction decode(s) {\n    return decodeURIComponent(s);\n}\n// Query keys/values should have the \"+\" replaced first, as \"+\" in a query string is \" \".\n// decodeURIComponent function will not decode \"+\" as a space.\nfunction decodeQuery(s) {\n    return decode(s.replace(/\\+/g, '%20'));\n}\nfunction serializePath(path) {\n    return `${encodeUriSegment(path.path)}${serializeMatrixParams(path.parameters)}`;\n}\nfunction serializeMatrixParams(params) {\n    return Object.keys(params)\n        .map(key => `;${encodeUriSegment(key)}=${encodeUriSegment(params[key])}`)\n        .join('');\n}\nfunction serializeQueryParams(params) {\n    const strParams = Object.keys(params).map((name) => {\n        const value = params[name];\n        return Array.isArray(value) ?\n            value.map(v => `${encodeUriQuery(name)}=${encodeUriQuery(v)}`).join('&') :\n            `${encodeUriQuery(name)}=${encodeUriQuery(value)}`;\n    });\n    return strParams.length ? `?${strParams.join('&')}` : '';\n}\nconst SEGMENT_RE = /^[^\\/()?;=#]+/;\nfunction matchSegments(str) {\n    const match = str.match(SEGMENT_RE);\n    return match ? match[0] : '';\n}\nconst QUERY_PARAM_RE = /^[^=?&#]+/;\n// Return the name of the query param at the start of the string or an empty string\nfunction matchQueryParams(str) {\n    const match = str.match(QUERY_PARAM_RE);\n    return match ? match[0] : '';\n}\nconst QUERY_PARAM_VALUE_RE = /^[^?&#]+/;\n// Return the value of the query param at the start of the string or an empty string\nfunction matchUrlQueryParamValue(str) {\n    const match = str.match(QUERY_PARAM_VALUE_RE);\n    return match ? match[0] : '';\n}\nclass UrlParser {\n    constructor(url) {\n        this.url = url;\n        this.remaining = url;\n    }\n    parseRootSegment() {\n        this.consumeOptional('/');\n        if (this.remaining === '' || this.peekStartsWith('?') || this.peekStartsWith('#')) {\n            return new UrlSegmentGroup([], {});\n        }\n        // The root segment group never has segments\n        return new UrlSegmentGroup([], this.parseChildren());\n    }\n    parseQueryParams() {\n        const params = {};\n        if (this.consumeOptional('?')) {\n            do {\n                this.parseQueryParam(params);\n            } while (this.consumeOptional('&'));\n        }\n        return params;\n    }\n    parseFragment() {\n        return this.consumeOptional('#') ? decodeURIComponent(this.remaining) : null;\n    }\n    parseChildren() {\n        if (this.remaining === '') {\n            return {};\n        }\n        this.consumeOptional('/');\n        const segments = [];\n        if (!this.peekStartsWith('(')) {\n            segments.push(this.parseSegment());\n        }\n        while (this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(')) {\n            this.capture('/');\n            segments.push(this.parseSegment());\n        }\n        let children = {};\n        if (this.peekStartsWith('/(')) {\n            this.capture('/');\n            children = this.parseParens(true);\n        }\n        let res = {};\n        if (this.peekStartsWith('(')) {\n            res = this.parseParens(false);\n        }\n        if (segments.length > 0 || Object.keys(children).length > 0) {\n            res[PRIMARY_OUTLET] = new UrlSegmentGroup(segments, children);\n        }\n        return res;\n    }\n    // parse a segment with its matrix parameters\n    // ie `name;k1=v1;k2`\n    parseSegment() {\n        const path = matchSegments(this.remaining);\n        if (path === '' && this.peekStartsWith(';')) {\n            throw new Error(`Empty path url segment cannot have parameters: '${this.remaining}'.`);\n        }\n        this.capture(path);\n        return new UrlSegment(decode(path), this.parseMatrixParams());\n    }\n    parseMatrixParams() {\n        const params = {};\n        while (this.consumeOptional(';')) {\n            this.parseParam(params);\n        }\n        return params;\n    }\n    parseParam(params) {\n        const key = matchSegments(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        let value = '';\n        if (this.consumeOptional('=')) {\n            const valueMatch = matchSegments(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        params[decode(key)] = decode(value);\n    }\n    // Parse a single query parameter `name[=value]`\n    parseQueryParam(params) {\n        const key = matchQueryParams(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        let value = '';\n        if (this.consumeOptional('=')) {\n            const valueMatch = matchUrlQueryParamValue(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        const decodedKey = decodeQuery(key);\n        const decodedVal = decodeQuery(value);\n        if (params.hasOwnProperty(decodedKey)) {\n            // Append to existing values\n            let currentVal = params[decodedKey];\n            if (!Array.isArray(currentVal)) {\n                currentVal = [currentVal];\n                params[decodedKey] = currentVal;\n            }\n            currentVal.push(decodedVal);\n        }\n        else {\n            // Create a new value\n            params[decodedKey] = decodedVal;\n        }\n    }\n    // parse `(a/b//outlet_name:c/d)`\n    parseParens(allowPrimary) {\n        const segments = {};\n        this.capture('(');\n        while (!this.consumeOptional(')') && this.remaining.length > 0) {\n            const path = matchSegments(this.remaining);\n            const next = this.remaining[path.length];\n            // if is is not one of these characters, then the segment was unescaped\n            // or the group was not closed\n            if (next !== '/' && next !== ')' && next !== ';') {\n                throw new Error(`Cannot parse url '${this.url}'`);\n            }\n            let outletName = undefined;\n            if (path.indexOf(':') > -1) {\n                outletName = path.substr(0, path.indexOf(':'));\n                this.capture(outletName);\n                this.capture(':');\n            }\n            else if (allowPrimary) {\n                outletName = PRIMARY_OUTLET;\n            }\n            const children = this.parseChildren();\n            segments[outletName] = Object.keys(children).length === 1 ? children[PRIMARY_OUTLET] :\n                new UrlSegmentGroup([], children);\n            this.consumeOptional('//');\n        }\n        return segments;\n    }\n    peekStartsWith(str) {\n        return this.remaining.startsWith(str);\n    }\n    // Consumes the prefix when it is present and returns whether it has been consumed\n    consumeOptional(str) {\n        if (this.peekStartsWith(str)) {\n            this.remaining = this.remaining.substring(str.length);\n            return true;\n        }\n        return false;\n    }\n    capture(str) {\n        if (!this.consumeOptional(str)) {\n            throw new Error(`Expected \"${str}\".`);\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass Tree {\n    constructor(root) {\n        this._root = root;\n    }\n    get root() {\n        return this._root.value;\n    }\n    /**\n     * @internal\n     */\n    parent(t) {\n        const p = this.pathFromRoot(t);\n        return p.length > 1 ? p[p.length - 2] : null;\n    }\n    /**\n     * @internal\n     */\n    children(t) {\n        const n = findNode(t, this._root);\n        return n ? n.children.map(t => t.value) : [];\n    }\n    /**\n     * @internal\n     */\n    firstChild(t) {\n        const n = findNode(t, this._root);\n        return n && n.children.length > 0 ? n.children[0].value : null;\n    }\n    /**\n     * @internal\n     */\n    siblings(t) {\n        const p = findPath(t, this._root);\n        if (p.length < 2)\n            return [];\n        const c = p[p.length - 2].children.map(c => c.value);\n        return c.filter(cc => cc !== t);\n    }\n    /**\n     * @internal\n     */\n    pathFromRoot(t) {\n        return findPath(t, this._root).map(s => s.value);\n    }\n}\n// DFS for the node matching the value\nfunction findNode(value, node) {\n    if (value === node.value)\n        return node;\n    for (const child of node.children) {\n        const node = findNode(value, child);\n        if (node)\n            return node;\n    }\n    return null;\n}\n// Return the path to the node with the given value using DFS\nfunction findPath(value, node) {\n    if (value === node.value)\n        return [node];\n    for (const child of node.children) {\n        const path = findPath(value, child);\n        if (path.length) {\n            path.unshift(node);\n            return path;\n        }\n    }\n    return [];\n}\nclass TreeNode {\n    constructor(value, children) {\n        this.value = value;\n        this.children = children;\n    }\n    toString() {\n        return `TreeNode(${this.value})`;\n    }\n}\n// Return the list of T indexed by outlet name\nfunction nodeChildrenAsMap(node) {\n    const map = {};\n    if (node) {\n        node.children.forEach(child => map[child.value.outlet] = child);\n    }\n    return map;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents the state of the router as a tree of activated routes.\n *\n * @usageNotes\n *\n * Every node in the route tree is an `ActivatedRoute` instance\n * that knows about the \"consumed\" URL segments, the extracted parameters,\n * and the resolved data.\n * Use the `ActivatedRoute` properties to traverse the tree from any node.\n *\n * The following fragment shows how a component gets the root node\n * of the current state to establish its own route tree:\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const root: ActivatedRoute = state.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * @see `ActivatedRoute`\n * @see [Getting route information](guide/router#getting-route-information)\n *\n * @publicApi\n */\nclass RouterState extends Tree {\n    /** @internal */\n    constructor(root, \n    /** The current snapshot of the router state */\n    snapshot) {\n        super(root);\n        this.snapshot = snapshot;\n        setRouterState(this, root);\n    }\n    toString() {\n        return this.snapshot.toString();\n    }\n}\nfunction createEmptyState(urlTree, rootComponent) {\n    const snapshot = createEmptyStateSnapshot(urlTree, rootComponent);\n    const emptyUrl = new BehaviorSubject([new UrlSegment('', {})]);\n    const emptyParams = new BehaviorSubject({});\n    const emptyData = new BehaviorSubject({});\n    const emptyQueryParams = new BehaviorSubject({});\n    const fragment = new BehaviorSubject('');\n    const activated = new ActivatedRoute(emptyUrl, emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, snapshot.root);\n    activated.snapshot = snapshot.root;\n    return new RouterState(new TreeNode(activated, []), snapshot);\n}\nfunction createEmptyStateSnapshot(urlTree, rootComponent) {\n    const emptyParams = {};\n    const emptyData = {};\n    const emptyQueryParams = {};\n    const fragment = '';\n    const activated = new ActivatedRouteSnapshot([], emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, null, urlTree.root, -1, {});\n    return new RouterStateSnapshot('', new TreeNode(activated, []));\n}\n/**\n * Provides access to information about a route associated with a component\n * that is loaded in an outlet.\n * Use to traverse the `RouterState` tree and extract information from nodes.\n *\n * The following example shows how to construct a component using information from a\n * currently activated route.\n *\n * {@example router/activated-route/module.ts region=\"activated-route\"\n *     header=\"activated-route.component.ts\"}\n *\n * @see [Getting route information](guide/router#getting-route-information)\n *\n * @publicApi\n */\nclass ActivatedRoute {\n    /** @internal */\n    constructor(\n    /** An observable of the URL segments matched by this route. */\n    url, \n    /** An observable of the matrix parameters scoped to this route. */\n    params, \n    /** An observable of the query parameters shared by all the routes. */\n    queryParams, \n    /** An observable of the URL fragment shared by all the routes. */\n    fragment, \n    /** An observable of the static and resolved data of this route. */\n    data, \n    /** The outlet name of the route, a constant. */\n    outlet, \n    /** The component of the route, a constant. */\n    // TODO(vsavkin): remove |string\n    component, futureSnapshot) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this._futureSnapshot = futureSnapshot;\n    }\n    /** The configuration used to match this route. */\n    get routeConfig() {\n        return this._futureSnapshot.routeConfig;\n    }\n    /** The root of the router state. */\n    get root() {\n        return this._routerState.root;\n    }\n    /** The parent of this route in the router state tree. */\n    get parent() {\n        return this._routerState.parent(this);\n    }\n    /** The first child of this route in the router state tree. */\n    get firstChild() {\n        return this._routerState.firstChild(this);\n    }\n    /** The children of this route in the router state tree. */\n    get children() {\n        return this._routerState.children(this);\n    }\n    /** The path from the root of the router state tree to this route. */\n    get pathFromRoot() {\n        return this._routerState.pathFromRoot(this);\n    }\n    /**\n     * An Observable that contains a map of the required and optional parameters\n     * specific to the route.\n     * The map supports retrieving single and multiple values from the same parameter.\n     */\n    get paramMap() {\n        if (!this._paramMap) {\n            this._paramMap = this.params.pipe(map((p) => convertToParamMap(p)));\n        }\n        return this._paramMap;\n    }\n    /**\n     * An Observable that contains a map of the query parameters available to all routes.\n     * The map supports retrieving single and multiple values from the query parameter.\n     */\n    get queryParamMap() {\n        if (!this._queryParamMap) {\n            this._queryParamMap =\n                this.queryParams.pipe(map((p) => convertToParamMap(p)));\n        }\n        return this._queryParamMap;\n    }\n    toString() {\n        return this.snapshot ? this.snapshot.toString() : `Future(${this._futureSnapshot})`;\n    }\n}\n/**\n * Returns the inherited params, data, and resolve for a given route.\n * By default, this only inherits values up to the nearest path-less or component-less route.\n * @internal\n */\nfunction inheritedParamsDataResolve(route, paramsInheritanceStrategy = 'emptyOnly') {\n    const pathFromRoot = route.pathFromRoot;\n    let inheritingStartingFrom = 0;\n    if (paramsInheritanceStrategy !== 'always') {\n        inheritingStartingFrom = pathFromRoot.length - 1;\n        while (inheritingStartingFrom >= 1) {\n            const current = pathFromRoot[inheritingStartingFrom];\n            const parent = pathFromRoot[inheritingStartingFrom - 1];\n            // current route is an empty path => inherits its parent's params and data\n            if (current.routeConfig && current.routeConfig.path === '') {\n                inheritingStartingFrom--;\n                // parent is componentless => current route should inherit its params and data\n            }\n            else if (!parent.component) {\n                inheritingStartingFrom--;\n            }\n            else {\n                break;\n            }\n        }\n    }\n    return flattenInherited(pathFromRoot.slice(inheritingStartingFrom));\n}\n/** @internal */\nfunction flattenInherited(pathFromRoot) {\n    return pathFromRoot.reduce((res, curr) => {\n        const params = Object.assign(Object.assign({}, res.params), curr.params);\n        const data = Object.assign(Object.assign({}, res.data), curr.data);\n        const resolve = Object.assign(Object.assign({}, res.resolve), curr._resolvedData);\n        return { params, data, resolve };\n    }, { params: {}, data: {}, resolve: {} });\n}\n/**\n * @description\n *\n * Contains the information about a route associated with a component loaded in an\n * outlet at a particular moment in time. ActivatedRouteSnapshot can also be used to\n * traverse the router state tree.\n *\n * The following example initializes a component with route information extracted\n * from the snapshot of the root node at the time of creation.\n *\n * ```\n * @Component({templateUrl:'./my-component.html'})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: string = route.snapshot.params.id;\n *     const url: string = route.snapshot.url.join('');\n *     const user = route.snapshot.data.user;\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nclass ActivatedRouteSnapshot {\n    /** @internal */\n    constructor(\n    /** The URL segments matched by this route */\n    url, \n    /** The matrix parameters scoped to this route */\n    params, \n    /** The query parameters shared by all the routes */\n    queryParams, \n    /** The URL fragment shared by all the routes */\n    fragment, \n    /** The static and resolved data of this route */\n    data, \n    /** The outlet name of the route */\n    outlet, \n    /** The component of the route */\n    component, routeConfig, urlSegment, lastPathIndex, resolve) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this.routeConfig = routeConfig;\n        this._urlSegment = urlSegment;\n        this._lastPathIndex = lastPathIndex;\n        this._resolve = resolve;\n    }\n    /** The root of the router state */\n    get root() {\n        return this._routerState.root;\n    }\n    /** The parent of this route in the router state tree */\n    get parent() {\n        return this._routerState.parent(this);\n    }\n    /** The first child of this route in the router state tree */\n    get firstChild() {\n        return this._routerState.firstChild(this);\n    }\n    /** The children of this route in the router state tree */\n    get children() {\n        return this._routerState.children(this);\n    }\n    /** The path from the root of the router state tree to this route */\n    get pathFromRoot() {\n        return this._routerState.pathFromRoot(this);\n    }\n    get paramMap() {\n        if (!this._paramMap) {\n            this._paramMap = convertToParamMap(this.params);\n        }\n        return this._paramMap;\n    }\n    get queryParamMap() {\n        if (!this._queryParamMap) {\n            this._queryParamMap = convertToParamMap(this.queryParams);\n        }\n        return this._queryParamMap;\n    }\n    toString() {\n        const url = this.url.map(segment => segment.toString()).join('/');\n        const matched = this.routeConfig ? this.routeConfig.path : '';\n        return `Route(url:'${url}', path:'${matched}')`;\n    }\n}\n/**\n * @description\n *\n * Represents the state of the router at a moment in time.\n *\n * This is a tree of activated route snapshots. Every node in this tree knows about\n * the \"consumed\" URL segments, the extracted parameters, and the resolved data.\n *\n * The following example shows how a component is initialized with information\n * from the snapshot of the root node's state at the time of creation.\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const snapshot: RouterStateSnapshot = state.snapshot;\n *     const root: ActivatedRouteSnapshot = snapshot.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nclass RouterStateSnapshot extends Tree {\n    /** @internal */\n    constructor(\n    /** The url from which this snapshot was created */\n    url, root) {\n        super(root);\n        this.url = url;\n        setRouterState(this, root);\n    }\n    toString() {\n        return serializeNode(this._root);\n    }\n}\nfunction setRouterState(state, node) {\n    node.value._routerState = state;\n    node.children.forEach(c => setRouterState(state, c));\n}\nfunction serializeNode(node) {\n    const c = node.children.length > 0 ? ` { ${node.children.map(serializeNode).join(', ')} } ` : '';\n    return `${node.value}${c}`;\n}\n/**\n * The expectation is that the activate route is created with the right set of parameters.\n * So we push new values into the observables only when they are not the initial values.\n * And we detect that by checking if the snapshot field is set.\n */\nfunction advanceActivatedRoute(route) {\n    if (route.snapshot) {\n        const currentSnapshot = route.snapshot;\n        const nextSnapshot = route._futureSnapshot;\n        route.snapshot = nextSnapshot;\n        if (!shallowEqual(currentSnapshot.queryParams, nextSnapshot.queryParams)) {\n            route.queryParams.next(nextSnapshot.queryParams);\n        }\n        if (currentSnapshot.fragment !== nextSnapshot.fragment) {\n            route.fragment.next(nextSnapshot.fragment);\n        }\n        if (!shallowEqual(currentSnapshot.params, nextSnapshot.params)) {\n            route.params.next(nextSnapshot.params);\n        }\n        if (!shallowEqualArrays(currentSnapshot.url, nextSnapshot.url)) {\n            route.url.next(nextSnapshot.url);\n        }\n        if (!shallowEqual(currentSnapshot.data, nextSnapshot.data)) {\n            route.data.next(nextSnapshot.data);\n        }\n    }\n    else {\n        route.snapshot = route._futureSnapshot;\n        // this is for resolved data\n        route.data.next(route._futureSnapshot.data);\n    }\n}\nfunction equalParamsAndUrlSegments(a, b) {\n    const equalUrlParams = shallowEqual(a.params, b.params) && equalSegments(a.url, b.url);\n    const parentsMismatch = !a.parent !== !b.parent;\n    return equalUrlParams && !parentsMismatch &&\n        (!a.parent || equalParamsAndUrlSegments(a.parent, b.parent));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction createRouterState(routeReuseStrategy, curr, prevState) {\n    const root = createNode(routeReuseStrategy, curr._root, prevState ? prevState._root : undefined);\n    return new RouterState(root, curr);\n}\nfunction createNode(routeReuseStrategy, curr, prevState) {\n    // reuse an activated route that is currently displayed on the screen\n    if (prevState && routeReuseStrategy.shouldReuseRoute(curr.value, prevState.value.snapshot)) {\n        const value = prevState.value;\n        value._futureSnapshot = curr.value;\n        const children = createOrReuseChildren(routeReuseStrategy, curr, prevState);\n        return new TreeNode(value, children);\n        // retrieve an activated route that is used to be displayed, but is not currently displayed\n    }\n    else {\n        const detachedRouteHandle = routeReuseStrategy.retrieve(curr.value);\n        if (detachedRouteHandle) {\n            const tree = detachedRouteHandle.route;\n            setFutureSnapshotsOfActivatedRoutes(curr, tree);\n            return tree;\n        }\n        else {\n            const value = createActivatedRoute(curr.value);\n            const children = curr.children.map(c => createNode(routeReuseStrategy, c));\n            return new TreeNode(value, children);\n        }\n    }\n}\nfunction setFutureSnapshotsOfActivatedRoutes(curr, result) {\n    if (curr.value.routeConfig !== result.value.routeConfig) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot created from a different route');\n    }\n    if (curr.children.length !== result.children.length) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot with a different number of children');\n    }\n    result.value._futureSnapshot = curr.value;\n    for (let i = 0; i < curr.children.length; ++i) {\n        setFutureSnapshotsOfActivatedRoutes(curr.children[i], result.children[i]);\n    }\n}\nfunction createOrReuseChildren(routeReuseStrategy, curr, prevState) {\n    return curr.children.map(child => {\n        for (const p of prevState.children) {\n            if (routeReuseStrategy.shouldReuseRoute(p.value.snapshot, child.value)) {\n                return createNode(routeReuseStrategy, child, p);\n            }\n        }\n        return createNode(routeReuseStrategy, child);\n    });\n}\nfunction createActivatedRoute(c) {\n    return new ActivatedRoute(new BehaviorSubject(c.url), new BehaviorSubject(c.params), new BehaviorSubject(c.queryParams), new BehaviorSubject(c.fragment), new BehaviorSubject(c.data), c.outlet, c.component, c);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction createUrlTree(route, urlTree, commands, queryParams, fragment) {\n    if (commands.length === 0) {\n        return tree(urlTree.root, urlTree.root, urlTree, queryParams, fragment);\n    }\n    const nav = computeNavigation(commands);\n    if (nav.toRoot()) {\n        return tree(urlTree.root, new UrlSegmentGroup([], {}), urlTree, queryParams, fragment);\n    }\n    const startingPosition = findStartingPosition(nav, urlTree, route);\n    const segmentGroup = startingPosition.processChildren ?\n        updateSegmentGroupChildren(startingPosition.segmentGroup, startingPosition.index, nav.commands) :\n        updateSegmentGroup(startingPosition.segmentGroup, startingPosition.index, nav.commands);\n    return tree(startingPosition.segmentGroup, segmentGroup, urlTree, queryParams, fragment);\n}\nfunction isMatrixParams(command) {\n    return typeof command === 'object' && command != null && !command.outlets && !command.segmentPath;\n}\nfunction tree(oldSegmentGroup, newSegmentGroup, urlTree, queryParams, fragment) {\n    let qp = {};\n    if (queryParams) {\n        forEach(queryParams, (value, name) => {\n            qp[name] = Array.isArray(value) ? value.map((v) => `${v}`) : `${value}`;\n        });\n    }\n    if (urlTree.root === oldSegmentGroup) {\n        return new UrlTree(newSegmentGroup, qp, fragment);\n    }\n    return new UrlTree(replaceSegment(urlTree.root, oldSegmentGroup, newSegmentGroup), qp, fragment);\n}\nfunction replaceSegment(current, oldSegment, newSegment) {\n    const children = {};\n    forEach(current.children, (c, outletName) => {\n        if (c === oldSegment) {\n            children[outletName] = newSegment;\n        }\n        else {\n            children[outletName] = replaceSegment(c, oldSegment, newSegment);\n        }\n    });\n    return new UrlSegmentGroup(current.segments, children);\n}\nclass Navigation {\n    constructor(isAbsolute, numberOfDoubleDots, commands) {\n        this.isAbsolute = isAbsolute;\n        this.numberOfDoubleDots = numberOfDoubleDots;\n        this.commands = commands;\n        if (isAbsolute && commands.length > 0 && isMatrixParams(commands[0])) {\n            throw new Error('Root segment cannot have matrix parameters');\n        }\n        const cmdWithOutlet = commands.find(c => typeof c === 'object' && c != null && c.outlets);\n        if (cmdWithOutlet && cmdWithOutlet !== last(commands)) {\n            throw new Error('{outlets:{}} has to be the last command');\n        }\n    }\n    toRoot() {\n        return this.isAbsolute && this.commands.length === 1 && this.commands[0] == '/';\n    }\n}\n/** Transforms commands to a normalized `Navigation` */\nfunction computeNavigation(commands) {\n    if ((typeof commands[0] === 'string') && commands.length === 1 && commands[0] === '/') {\n        return new Navigation(true, 0, commands);\n    }\n    let numberOfDoubleDots = 0;\n    let isAbsolute = false;\n    const res = commands.reduce((res, cmd, cmdIdx) => {\n        if (typeof cmd === 'object' && cmd != null) {\n            if (cmd.outlets) {\n                const outlets = {};\n                forEach(cmd.outlets, (commands, name) => {\n                    outlets[name] = typeof commands === 'string' ? commands.split('/') : commands;\n                });\n                return [...res, { outlets }];\n            }\n            if (cmd.segmentPath) {\n                return [...res, cmd.segmentPath];\n            }\n        }\n        if (!(typeof cmd === 'string')) {\n            return [...res, cmd];\n        }\n        if (cmdIdx === 0) {\n            cmd.split('/').forEach((urlPart, partIndex) => {\n                if (partIndex == 0 && urlPart === '.') {\n                    // skip './a'\n                }\n                else if (partIndex == 0 && urlPart === '') { //  '/a'\n                    isAbsolute = true;\n                }\n                else if (urlPart === '..') { //  '../a'\n                    numberOfDoubleDots++;\n                }\n                else if (urlPart != '') {\n                    res.push(urlPart);\n                }\n            });\n            return res;\n        }\n        return [...res, cmd];\n    }, []);\n    return new Navigation(isAbsolute, numberOfDoubleDots, res);\n}\nclass Position {\n    constructor(segmentGroup, processChildren, index) {\n        this.segmentGroup = segmentGroup;\n        this.processChildren = processChildren;\n        this.index = index;\n    }\n}\nfunction findStartingPosition(nav, tree, route) {\n    if (nav.isAbsolute) {\n        return new Position(tree.root, true, 0);\n    }\n    if (route.snapshot._lastPathIndex === -1) {\n        const segmentGroup = route.snapshot._urlSegment;\n        // Pathless ActivatedRoute has _lastPathIndex === -1 but should not process children\n        // see issue #26224, #13011, #35687\n        // However, if the ActivatedRoute is the root we should process children like above.\n        const processChildren = segmentGroup === tree.root;\n        return new Position(segmentGroup, processChildren, 0);\n    }\n    const modifier = isMatrixParams(nav.commands[0]) ? 0 : 1;\n    const index = route.snapshot._lastPathIndex + modifier;\n    return createPositionApplyingDoubleDots(route.snapshot._urlSegment, index, nav.numberOfDoubleDots);\n}\nfunction createPositionApplyingDoubleDots(group, index, numberOfDoubleDots) {\n    let g = group;\n    let ci = index;\n    let dd = numberOfDoubleDots;\n    while (dd > ci) {\n        dd -= ci;\n        g = g.parent;\n        if (!g) {\n            throw new Error('Invalid number of \\'../\\'');\n        }\n        ci = g.segments.length;\n    }\n    return new Position(g, false, ci - dd);\n}\nfunction getPath(command) {\n    if (typeof command === 'object' && command != null && command.outlets) {\n        return command.outlets[PRIMARY_OUTLET];\n    }\n    return `${command}`;\n}\nfunction getOutlets(commands) {\n    if (typeof commands[0] === 'object' && commands[0] !== null && commands[0].outlets) {\n        return commands[0].outlets;\n    }\n    return { [PRIMARY_OUTLET]: commands };\n}\nfunction updateSegmentGroup(segmentGroup, startIndex, commands) {\n    if (!segmentGroup) {\n        segmentGroup = new UrlSegmentGroup([], {});\n    }\n    if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n        return updateSegmentGroupChildren(segmentGroup, startIndex, commands);\n    }\n    const m = prefixedWith(segmentGroup, startIndex, commands);\n    const slicedCommands = commands.slice(m.commandIndex);\n    if (m.match && m.pathIndex < segmentGroup.segments.length) {\n        const g = new UrlSegmentGroup(segmentGroup.segments.slice(0, m.pathIndex), {});\n        g.children[PRIMARY_OUTLET] =\n            new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex), segmentGroup.children);\n        return updateSegmentGroupChildren(g, 0, slicedCommands);\n    }\n    else if (m.match && slicedCommands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else if (m.match && !segmentGroup.hasChildren()) {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n    else if (m.match) {\n        return updateSegmentGroupChildren(segmentGroup, 0, slicedCommands);\n    }\n    else {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n}\nfunction updateSegmentGroupChildren(segmentGroup, startIndex, commands) {\n    if (commands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else {\n        const outlets = getOutlets(commands);\n        const children = {};\n        forEach(outlets, (commands, outlet) => {\n            if (commands !== null) {\n                children[outlet] = updateSegmentGroup(segmentGroup.children[outlet], startIndex, commands);\n            }\n        });\n        forEach(segmentGroup.children, (child, childOutlet) => {\n            if (outlets[childOutlet] === undefined) {\n                children[childOutlet] = child;\n            }\n        });\n        return new UrlSegmentGroup(segmentGroup.segments, children);\n    }\n}\nfunction prefixedWith(segmentGroup, startIndex, commands) {\n    let currentCommandIndex = 0;\n    let currentPathIndex = startIndex;\n    const noMatch = { match: false, pathIndex: 0, commandIndex: 0 };\n    while (currentPathIndex < segmentGroup.segments.length) {\n        if (currentCommandIndex >= commands.length)\n            return noMatch;\n        const path = segmentGroup.segments[currentPathIndex];\n        const curr = getPath(commands[currentCommandIndex]);\n        const next = currentCommandIndex < commands.length - 1 ? commands[currentCommandIndex + 1] : null;\n        if (currentPathIndex > 0 && curr === undefined)\n            break;\n        if (curr && next && (typeof next === 'object') && next.outlets === undefined) {\n            if (!compare(curr, next, path))\n                return noMatch;\n            currentCommandIndex += 2;\n        }\n        else {\n            if (!compare(curr, {}, path))\n                return noMatch;\n            currentCommandIndex++;\n        }\n        currentPathIndex++;\n    }\n    return { match: true, pathIndex: currentPathIndex, commandIndex: currentCommandIndex };\n}\nfunction createNewSegmentGroup(segmentGroup, startIndex, commands) {\n    const paths = segmentGroup.segments.slice(0, startIndex);\n    let i = 0;\n    while (i < commands.length) {\n        if (typeof commands[i] === 'object' && commands[i] !== null &&\n            commands[i].outlets !== undefined) {\n            const children = createNewSegmentChildren(commands[i].outlets);\n            return new UrlSegmentGroup(paths, children);\n        }\n        // if we start with an object literal, we need to reuse the path part from the segment\n        if (i === 0 && isMatrixParams(commands[0])) {\n            const p = segmentGroup.segments[startIndex];\n            paths.push(new UrlSegment(p.path, commands[0]));\n            i++;\n            continue;\n        }\n        const curr = getPath(commands[i]);\n        const next = (i < commands.length - 1) ? commands[i + 1] : null;\n        if (curr && next && isMatrixParams(next)) {\n            paths.push(new UrlSegment(curr, stringify(next)));\n            i += 2;\n        }\n        else {\n            paths.push(new UrlSegment(curr, {}));\n            i++;\n        }\n    }\n    return new UrlSegmentGroup(paths, {});\n}\nfunction createNewSegmentChildren(outlets) {\n    const children = {};\n    forEach(outlets, (commands, outlet) => {\n        if (commands !== null) {\n            children[outlet] = createNewSegmentGroup(new UrlSegmentGroup([], {}), 0, commands);\n        }\n    });\n    return children;\n}\nfunction stringify(params) {\n    const res = {};\n    forEach(params, (v, k) => res[k] = `${v}`);\n    return res;\n}\nfunction compare(path, params, segment) {\n    return path == segment.path && shallowEqual(params, segment.parameters);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst activateRoutes = (rootContexts, routeReuseStrategy, forwardEvent) => map(t => {\n    new ActivateRoutes(routeReuseStrategy, t.targetRouterState, t.currentRouterState, forwardEvent)\n        .activate(rootContexts);\n    return t;\n});\nclass ActivateRoutes {\n    constructor(routeReuseStrategy, futureState, currState, forwardEvent) {\n        this.routeReuseStrategy = routeReuseStrategy;\n        this.futureState = futureState;\n        this.currState = currState;\n        this.forwardEvent = forwardEvent;\n    }\n    activate(parentContexts) {\n        const futureRoot = this.futureState._root;\n        const currRoot = this.currState ? this.currState._root : null;\n        this.deactivateChildRoutes(futureRoot, currRoot, parentContexts);\n        advanceActivatedRoute(this.futureState.root);\n        this.activateChildRoutes(futureRoot, currRoot, parentContexts);\n    }\n    // De-activate the child route that are not re-used for the future state\n    deactivateChildRoutes(futureNode, currNode, contexts) {\n        const children = nodeChildrenAsMap(currNode);\n        // Recurse on the routes active in the future state to de-activate deeper children\n        futureNode.children.forEach(futureChild => {\n            const childOutletName = futureChild.value.outlet;\n            this.deactivateRoutes(futureChild, children[childOutletName], contexts);\n            delete children[childOutletName];\n        });\n        // De-activate the routes that will not be re-used\n        forEach(children, (v, childName) => {\n            this.deactivateRouteAndItsChildren(v, contexts);\n        });\n    }\n    deactivateRoutes(futureNode, currNode, parentContext) {\n        const future = futureNode.value;\n        const curr = currNode ? currNode.value : null;\n        if (future === curr) {\n            // Reusing the node, check to see if the children need to be de-activated\n            if (future.component) {\n                // If we have a normal route, we need to go through an outlet.\n                const context = parentContext.getContext(future.outlet);\n                if (context) {\n                    this.deactivateChildRoutes(futureNode, currNode, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.deactivateChildRoutes(futureNode, currNode, parentContext);\n            }\n        }\n        else {\n            if (curr) {\n                // Deactivate the current route which will not be re-used\n                this.deactivateRouteAndItsChildren(currNode, parentContext);\n            }\n        }\n    }\n    deactivateRouteAndItsChildren(route, parentContexts) {\n        if (this.routeReuseStrategy.shouldDetach(route.value.snapshot)) {\n            this.detachAndStoreRouteSubtree(route, parentContexts);\n        }\n        else {\n            this.deactivateRouteAndOutlet(route, parentContexts);\n        }\n    }\n    detachAndStoreRouteSubtree(route, parentContexts) {\n        const context = parentContexts.getContext(route.value.outlet);\n        if (context && context.outlet) {\n            const componentRef = context.outlet.detach();\n            const contexts = context.children.onOutletDeactivated();\n            this.routeReuseStrategy.store(route.value.snapshot, { componentRef, route, contexts });\n        }\n    }\n    deactivateRouteAndOutlet(route, parentContexts) {\n        const context = parentContexts.getContext(route.value.outlet);\n        if (context) {\n            const children = nodeChildrenAsMap(route);\n            const contexts = route.value.component ? context.children : parentContexts;\n            forEach(children, (v, k) => this.deactivateRouteAndItsChildren(v, contexts));\n            if (context.outlet) {\n                // Destroy the component\n                context.outlet.deactivate();\n                // Destroy the contexts for all the outlets that were in the component\n                context.children.onOutletDeactivated();\n            }\n        }\n    }\n    activateChildRoutes(futureNode, currNode, contexts) {\n        const children = nodeChildrenAsMap(currNode);\n        futureNode.children.forEach(c => {\n            this.activateRoutes(c, children[c.value.outlet], contexts);\n            this.forwardEvent(new ActivationEnd(c.value.snapshot));\n        });\n        if (futureNode.children.length) {\n            this.forwardEvent(new ChildActivationEnd(futureNode.value.snapshot));\n        }\n    }\n    activateRoutes(futureNode, currNode, parentContexts) {\n        const future = futureNode.value;\n        const curr = currNode ? currNode.value : null;\n        advanceActivatedRoute(future);\n        // reusing the node\n        if (future === curr) {\n            if (future.component) {\n                // If we have a normal route, we need to go through an outlet.\n                const context = parentContexts.getOrCreateContext(future.outlet);\n                this.activateChildRoutes(futureNode, currNode, context.children);\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, currNode, parentContexts);\n            }\n        }\n        else {\n            if (future.component) {\n                // if we have a normal route, we need to place the component into the outlet and recurse.\n                const context = parentContexts.getOrCreateContext(future.outlet);\n                if (this.routeReuseStrategy.shouldAttach(future.snapshot)) {\n                    const stored = this.routeReuseStrategy.retrieve(future.snapshot);\n                    this.routeReuseStrategy.store(future.snapshot, null);\n                    context.children.onOutletReAttached(stored.contexts);\n                    context.attachRef = stored.componentRef;\n                    context.route = stored.route.value;\n                    if (context.outlet) {\n                        // Attach right away when the outlet has already been instantiated\n                        // Otherwise attach from `RouterOutlet.ngOnInit` when it is instantiated\n                        context.outlet.attach(stored.componentRef, stored.route.value);\n                    }\n                    advanceActivatedRouteNodeAndItsChildren(stored.route);\n                }\n                else {\n                    const config = parentLoadedConfig(future.snapshot);\n                    const cmpFactoryResolver = config ? config.module.componentFactoryResolver : null;\n                    context.attachRef = null;\n                    context.route = future;\n                    context.resolver = cmpFactoryResolver;\n                    if (context.outlet) {\n                        // Activate the outlet when it has already been instantiated\n                        // Otherwise it will get activated from its `ngOnInit` when instantiated\n                        context.outlet.activateWith(future, cmpFactoryResolver);\n                    }\n                    this.activateChildRoutes(futureNode, null, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, null, parentContexts);\n            }\n        }\n    }\n}\nfunction advanceActivatedRouteNodeAndItsChildren(node) {\n    advanceActivatedRoute(node.value);\n    node.children.forEach(advanceActivatedRouteNodeAndItsChildren);\n}\nfunction parentLoadedConfig(snapshot) {\n    for (let s = snapshot.parent; s; s = s.parent) {\n        const route = s.routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n        if (route && route.component)\n            return null;\n    }\n    return null;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass LoadedRouterConfig {\n    constructor(routes, module) {\n        this.routes = routes;\n        this.module = module;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Simple function check, but generic so type inference will flow. Example:\n *\n * function product(a: number, b: number) {\n *   return a * b;\n * }\n *\n * if (isFunction<product>(fn)) {\n *   return fn(1, 2);\n * } else {\n *   throw \"Must provide the `product` function\";\n * }\n */\nfunction isFunction(v) {\n    return typeof v === 'function';\n}\nfunction isBoolean(v) {\n    return typeof v === 'boolean';\n}\nfunction isUrlTree(v) {\n    return v instanceof UrlTree;\n}\nfunction isCanLoad(guard) {\n    return guard && isFunction(guard.canLoad);\n}\nfunction isCanActivate(guard) {\n    return guard && isFunction(guard.canActivate);\n}\nfunction isCanActivateChild(guard) {\n    return guard && isFunction(guard.canActivateChild);\n}\nfunction isCanDeactivate(guard) {\n    return guard && isFunction(guard.canDeactivate);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass NoMatch {\n    constructor(segmentGroup) {\n        this.segmentGroup = segmentGroup || null;\n    }\n}\nclass AbsoluteRedirect {\n    constructor(urlTree) {\n        this.urlTree = urlTree;\n    }\n}\nfunction noMatch(segmentGroup) {\n    return new Observable((obs) => obs.error(new NoMatch(segmentGroup)));\n}\nfunction absoluteRedirect(newTree) {\n    return new Observable((obs) => obs.error(new AbsoluteRedirect(newTree)));\n}\nfunction namedOutletsRedirect(redirectTo) {\n    return new Observable((obs) => obs.error(new Error(`Only absolute redirects can have named outlets. redirectTo: '${redirectTo}'`)));\n}\nfunction canLoadFails(route) {\n    return new Observable((obs) => obs.error(navigationCancelingError(`Cannot load children because the guard of the route \"path: '${route.path}'\" returned false`)));\n}\n/**\n * Returns the `UrlTree` with the redirection applied.\n *\n * Lazy modules are loaded along the way.\n */\nfunction applyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n    return new ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config).apply();\n}\nclass ApplyRedirects {\n    constructor(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n        this.configLoader = configLoader;\n        this.urlSerializer = urlSerializer;\n        this.urlTree = urlTree;\n        this.config = config;\n        this.allowRedirects = true;\n        this.ngModule = moduleInjector.get(NgModuleRef);\n    }\n    apply() {\n        const expanded$ = this.expandSegmentGroup(this.ngModule, this.config, this.urlTree.root, PRIMARY_OUTLET);\n        const urlTrees$ = expanded$.pipe(map((rootSegmentGroup) => this.createUrlTree(rootSegmentGroup, this.urlTree.queryParams, this.urlTree.fragment)));\n        return urlTrees$.pipe(catchError((e) => {\n            if (e instanceof AbsoluteRedirect) {\n                // after an absolute redirect we do not apply any more redirects!\n                this.allowRedirects = false;\n                // we need to run matching, so we can fetch all lazy-loaded modules\n                return this.match(e.urlTree);\n            }\n            if (e instanceof NoMatch) {\n                throw this.noMatchError(e);\n            }\n            throw e;\n        }));\n    }\n    match(tree) {\n        const expanded$ = this.expandSegmentGroup(this.ngModule, this.config, tree.root, PRIMARY_OUTLET);\n        const mapped$ = expanded$.pipe(map((rootSegmentGroup) => this.createUrlTree(rootSegmentGroup, tree.queryParams, tree.fragment)));\n        return mapped$.pipe(catchError((e) => {\n            if (e instanceof NoMatch) {\n                throw this.noMatchError(e);\n            }\n            throw e;\n        }));\n    }\n    noMatchError(e) {\n        return new Error(`Cannot match any routes. URL Segment: '${e.segmentGroup}'`);\n    }\n    createUrlTree(rootCandidate, queryParams, fragment) {\n        const root = rootCandidate.segments.length > 0 ?\n            new UrlSegmentGroup([], { [PRIMARY_OUTLET]: rootCandidate }) :\n            rootCandidate;\n        return new UrlTree(root, queryParams, fragment);\n    }\n    expandSegmentGroup(ngModule, routes, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return this.expandChildren(ngModule, routes, segmentGroup)\n                .pipe(map((children) => new UrlSegmentGroup([], children)));\n        }\n        return this.expandSegment(ngModule, segmentGroup, routes, segmentGroup.segments, outlet, true);\n    }\n    // Recursively expand segment groups for all the child outlets\n    expandChildren(ngModule, routes, segmentGroup) {\n        return waitForMap(segmentGroup.children, (childOutlet, child) => this.expandSegmentGroup(ngModule, routes, child, childOutlet));\n    }\n    expandSegment(ngModule, segmentGroup, routes, segments, outlet, allowRedirects) {\n        return of(...routes).pipe(map((r) => {\n            const expanded$ = this.expandSegmentAgainstRoute(ngModule, segmentGroup, routes, r, segments, outlet, allowRedirects);\n            return expanded$.pipe(catchError((e) => {\n                if (e instanceof NoMatch) {\n                    // TODO(i): this return type doesn't match the declared Observable<UrlSegmentGroup> -\n                    // talk to Jason\n                    return of(null);\n                }\n                throw e;\n            }));\n        }), concatAll(), first((s) => !!s), catchError((e, _) => {\n            if (e instanceof EmptyError || e.name === 'EmptyError') {\n                if (this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n                    return of(new UrlSegmentGroup([], {}));\n                }\n                throw new NoMatch(segmentGroup);\n            }\n            throw e;\n        }));\n    }\n    noLeftoversInUrl(segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    }\n    expandSegmentAgainstRoute(ngModule, segmentGroup, routes, route, paths, outlet, allowRedirects) {\n        if (getOutlet(route) !== outlet) {\n            return noMatch(segmentGroup);\n        }\n        if (route.redirectTo === undefined) {\n            return this.matchSegmentAgainstRoute(ngModule, segmentGroup, route, paths);\n        }\n        if (allowRedirects && this.allowRedirects) {\n            return this.expandSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, paths, outlet);\n        }\n        return noMatch(segmentGroup);\n    }\n    expandSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, segments, outlet) {\n        if (route.path === '**') {\n            return this.expandWildCardWithParamsAgainstRouteUsingRedirect(ngModule, routes, route, outlet);\n        }\n        return this.expandRegularSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, segments, outlet);\n    }\n    expandWildCardWithParamsAgainstRouteUsingRedirect(ngModule, routes, route, outlet) {\n        const newTree = this.applyRedirectCommands([], route.redirectTo, {});\n        if (route.redirectTo.startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return this.lineralizeSegments(route, newTree).pipe(mergeMap((newSegments) => {\n            const group = new UrlSegmentGroup(newSegments, {});\n            return this.expandSegment(ngModule, group, routes, newSegments, outlet, false);\n        }));\n    }\n    expandRegularSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, segments, outlet) {\n        const { matched, consumedSegments, lastChild, positionalParamSegments } = match(segmentGroup, route, segments);\n        if (!matched)\n            return noMatch(segmentGroup);\n        const newTree = this.applyRedirectCommands(consumedSegments, route.redirectTo, positionalParamSegments);\n        if (route.redirectTo.startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return this.lineralizeSegments(route, newTree).pipe(mergeMap((newSegments) => {\n            return this.expandSegment(ngModule, segmentGroup, routes, newSegments.concat(segments.slice(lastChild)), outlet, false);\n        }));\n    }\n    matchSegmentAgainstRoute(ngModule, rawSegmentGroup, route, segments) {\n        if (route.path === '**') {\n            if (route.loadChildren) {\n                return this.configLoader.load(ngModule.injector, route)\n                    .pipe(map((cfg) => {\n                    route._loadedConfig = cfg;\n                    return new UrlSegmentGroup(segments, {});\n                }));\n            }\n            return of(new UrlSegmentGroup(segments, {}));\n        }\n        const { matched, consumedSegments, lastChild } = match(rawSegmentGroup, route, segments);\n        if (!matched)\n            return noMatch(rawSegmentGroup);\n        const rawSlicedSegments = segments.slice(lastChild);\n        const childConfig$ = this.getChildConfig(ngModule, route, segments);\n        return childConfig$.pipe(mergeMap((routerConfig) => {\n            const childModule = routerConfig.module;\n            const childConfig = routerConfig.routes;\n            const { segmentGroup, slicedSegments } = split(rawSegmentGroup, consumedSegments, rawSlicedSegments, childConfig);\n            if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n                const expanded$ = this.expandChildren(childModule, childConfig, segmentGroup);\n                return expanded$.pipe(map((children) => new UrlSegmentGroup(consumedSegments, children)));\n            }\n            if (childConfig.length === 0 && slicedSegments.length === 0) {\n                return of(new UrlSegmentGroup(consumedSegments, {}));\n            }\n            const expanded$ = this.expandSegment(childModule, segmentGroup, childConfig, slicedSegments, PRIMARY_OUTLET, true);\n            return expanded$.pipe(map((cs) => new UrlSegmentGroup(consumedSegments.concat(cs.segments), cs.children)));\n        }));\n    }\n    getChildConfig(ngModule, route, segments) {\n        if (route.children) {\n            // The children belong to the same module\n            return of(new LoadedRouterConfig(route.children, ngModule));\n        }\n        if (route.loadChildren) {\n            // lazy children belong to the loaded module\n            if (route._loadedConfig !== undefined) {\n                return of(route._loadedConfig);\n            }\n            return this.runCanLoadGuards(ngModule.injector, route, segments)\n                .pipe(mergeMap((shouldLoadResult) => {\n                if (shouldLoadResult) {\n                    return this.configLoader.load(ngModule.injector, route)\n                        .pipe(map((cfg) => {\n                        route._loadedConfig = cfg;\n                        return cfg;\n                    }));\n                }\n                return canLoadFails(route);\n            }));\n        }\n        return of(new LoadedRouterConfig([], ngModule));\n    }\n    runCanLoadGuards(moduleInjector, route, segments) {\n        const canLoad = route.canLoad;\n        if (!canLoad || canLoad.length === 0)\n            return of(true);\n        const obs = from(canLoad).pipe(map((injectionToken) => {\n            const guard = moduleInjector.get(injectionToken);\n            let guardVal;\n            if (isCanLoad(guard)) {\n                guardVal = guard.canLoad(route, segments);\n            }\n            else if (isFunction(guard)) {\n                guardVal = guard(route, segments);\n            }\n            else {\n                throw new Error('Invalid CanLoad guard');\n            }\n            return wrapIntoObservable(guardVal);\n        }));\n        return obs.pipe(concatAll(), tap((result) => {\n            if (!isUrlTree(result))\n                return;\n            const error = navigationCancelingError(`Redirecting to \"${this.urlSerializer.serialize(result)}\"`);\n            error.url = result;\n            throw error;\n        }), every(result => result === true));\n    }\n    lineralizeSegments(route, urlTree) {\n        let res = [];\n        let c = urlTree.root;\n        while (true) {\n            res = res.concat(c.segments);\n            if (c.numberOfChildren === 0) {\n                return of(res);\n            }\n            if (c.numberOfChildren > 1 || !c.children[PRIMARY_OUTLET]) {\n                return namedOutletsRedirect(route.redirectTo);\n            }\n            c = c.children[PRIMARY_OUTLET];\n        }\n    }\n    applyRedirectCommands(segments, redirectTo, posParams) {\n        return this.applyRedirectCreatreUrlTree(redirectTo, this.urlSerializer.parse(redirectTo), segments, posParams);\n    }\n    applyRedirectCreatreUrlTree(redirectTo, urlTree, segments, posParams) {\n        const newRoot = this.createSegmentGroup(redirectTo, urlTree.root, segments, posParams);\n        return new UrlTree(newRoot, this.createQueryParams(urlTree.queryParams, this.urlTree.queryParams), urlTree.fragment);\n    }\n    createQueryParams(redirectToParams, actualParams) {\n        const res = {};\n        forEach(redirectToParams, (v, k) => {\n            const copySourceValue = typeof v === 'string' && v.startsWith(':');\n            if (copySourceValue) {\n                const sourceName = v.substring(1);\n                res[k] = actualParams[sourceName];\n            }\n            else {\n                res[k] = v;\n            }\n        });\n        return res;\n    }\n    createSegmentGroup(redirectTo, group, segments, posParams) {\n        const updatedSegments = this.createSegments(redirectTo, group.segments, segments, posParams);\n        let children = {};\n        forEach(group.children, (child, name) => {\n            children[name] = this.createSegmentGroup(redirectTo, child, segments, posParams);\n        });\n        return new UrlSegmentGroup(updatedSegments, children);\n    }\n    createSegments(redirectTo, redirectToSegments, actualSegments, posParams) {\n        return redirectToSegments.map(s => s.path.startsWith(':') ? this.findPosParam(redirectTo, s, posParams) :\n            this.findOrReturn(s, actualSegments));\n    }\n    findPosParam(redirectTo, redirectToUrlSegment, posParams) {\n        const pos = posParams[redirectToUrlSegment.path.substring(1)];\n        if (!pos)\n            throw new Error(`Cannot redirect to '${redirectTo}'. Cannot find '${redirectToUrlSegment.path}'.`);\n        return pos;\n    }\n    findOrReturn(redirectToUrlSegment, actualSegments) {\n        let idx = 0;\n        for (const s of actualSegments) {\n            if (s.path === redirectToUrlSegment.path) {\n                actualSegments.splice(idx);\n                return s;\n            }\n            idx++;\n        }\n        return redirectToUrlSegment;\n    }\n}\nfunction match(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if ((route.pathMatch === 'full') && (segmentGroup.hasChildren() || segments.length > 0)) {\n            return { matched: false, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n        }\n        return { matched: true, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n    }\n    const matcher = route.matcher || defaultUrlMatcher;\n    const res = matcher(segments, segmentGroup, route);\n    if (!res) {\n        return {\n            matched: false,\n            consumedSegments: [],\n            lastChild: 0,\n            positionalParamSegments: {},\n        };\n    }\n    return {\n        matched: true,\n        consumedSegments: res.consumed,\n        lastChild: res.consumed.length,\n        positionalParamSegments: res.posParams,\n    };\n}\nfunction split(segmentGroup, consumedSegments, slicedSegments, config) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        const s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptySegments(config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathRedirects(segmentGroup, slicedSegments, config)) {\n        const s = new UrlSegmentGroup(segmentGroup.segments, addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments };\n    }\n    return { segmentGroup, slicedSegments };\n}\nfunction mergeTrivialChildren(s) {\n    if (s.numberOfChildren === 1 && s.children[PRIMARY_OUTLET]) {\n        const c = s.children[PRIMARY_OUTLET];\n        return new UrlSegmentGroup(s.segments.concat(c.segments), c.children);\n    }\n    return s;\n}\nfunction addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n    const res = {};\n    for (const r of routes) {\n        if (isEmptyPathRedirect(segmentGroup, slicedSegments, r) && !children[getOutlet(r)]) {\n            res[getOutlet(r)] = new UrlSegmentGroup([], {});\n        }\n    }\n    return Object.assign(Object.assign({}, children), res);\n}\nfunction createChildrenForEmptySegments(routes, primarySegmentGroup) {\n    const res = {};\n    res[PRIMARY_OUTLET] = primarySegmentGroup;\n    for (const r of routes) {\n        if (r.path === '' && getOutlet(r) !== PRIMARY_OUTLET) {\n            res[getOutlet(r)] = new UrlSegmentGroup([], {});\n        }\n    }\n    return res;\n}\nfunction containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, segments, routes) {\n    return routes.some(r => isEmptyPathRedirect(segmentGroup, segments, r) && getOutlet(r) !== PRIMARY_OUTLET);\n}\nfunction containsEmptyPathRedirects(segmentGroup, segments, routes) {\n    return routes.some(r => isEmptyPathRedirect(segmentGroup, segments, r));\n}\nfunction isEmptyPathRedirect(segmentGroup, segments, r) {\n    if ((segmentGroup.hasChildren() || segments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo !== undefined;\n}\nfunction getOutlet(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction applyRedirects$1(moduleInjector, configLoader, urlSerializer, config) {\n    return function (source) {\n        return source.pipe(switchMap(t => applyRedirects(moduleInjector, configLoader, urlSerializer, t.extractedUrl, config)\n            .pipe(map(urlAfterRedirects => (Object.assign(Object.assign({}, t), { urlAfterRedirects }))))));\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CanActivate {\n    constructor(path) {\n        this.path = path;\n        this.route = this.path[this.path.length - 1];\n    }\n}\nclass CanDeactivate {\n    constructor(component, route) {\n        this.component = component;\n        this.route = route;\n    }\n}\nfunction getAllRouteGuards(future, curr, parentContexts) {\n    const futureRoot = future._root;\n    const currRoot = curr ? curr._root : null;\n    return getChildRouteGuards(futureRoot, currRoot, parentContexts, [futureRoot.value]);\n}\nfunction getCanActivateChild(p) {\n    const canActivateChild = p.routeConfig ? p.routeConfig.canActivateChild : null;\n    if (!canActivateChild || canActivateChild.length === 0)\n        return null;\n    return { node: p, guards: canActivateChild };\n}\nfunction getToken(token, snapshot, moduleInjector) {\n    const config = getClosestLoadedConfig(snapshot);\n    const injector = config ? config.module.injector : moduleInjector;\n    return injector.get(token);\n}\nfunction getClosestLoadedConfig(snapshot) {\n    if (!snapshot)\n        return null;\n    for (let s = snapshot.parent; s; s = s.parent) {\n        const route = s.routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n    }\n    return null;\n}\nfunction getChildRouteGuards(futureNode, currNode, contexts, futurePath, checks = {\n    canDeactivateChecks: [],\n    canActivateChecks: []\n}) {\n    const prevChildren = nodeChildrenAsMap(currNode);\n    // Process the children of the future route\n    futureNode.children.forEach(c => {\n        getRouteGuards(c, prevChildren[c.value.outlet], contexts, futurePath.concat([c.value]), checks);\n        delete prevChildren[c.value.outlet];\n    });\n    // Process any children left from the current route (not active for the future route)\n    forEach(prevChildren, (v, k) => deactivateRouteAndItsChildren(v, contexts.getContext(k), checks));\n    return checks;\n}\nfunction getRouteGuards(futureNode, currNode, parentContexts, futurePath, checks = {\n    canDeactivateChecks: [],\n    canActivateChecks: []\n}) {\n    const future = futureNode.value;\n    const curr = currNode ? currNode.value : null;\n    const context = parentContexts ? parentContexts.getContext(futureNode.value.outlet) : null;\n    // reusing the node\n    if (curr && future.routeConfig === curr.routeConfig) {\n        const shouldRun = shouldRunGuardsAndResolvers(curr, future, future.routeConfig.runGuardsAndResolvers);\n        if (shouldRun) {\n            checks.canActivateChecks.push(new CanActivate(futurePath));\n        }\n        else {\n            // we need to set the data\n            future.data = curr.data;\n            future._resolvedData = curr._resolvedData;\n        }\n        // If we have a component, we need to go through an outlet.\n        if (future.component) {\n            getChildRouteGuards(futureNode, currNode, context ? context.children : null, futurePath, checks);\n            // if we have a componentless route, we recurse but keep the same outlet map.\n        }\n        else {\n            getChildRouteGuards(futureNode, currNode, parentContexts, futurePath, checks);\n        }\n        if (shouldRun) {\n            const component = context && context.outlet && context.outlet.component || null;\n            checks.canDeactivateChecks.push(new CanDeactivate(component, curr));\n        }\n    }\n    else {\n        if (curr) {\n            deactivateRouteAndItsChildren(currNode, context, checks);\n        }\n        checks.canActivateChecks.push(new CanActivate(futurePath));\n        // If we have a component, we need to go through an outlet.\n        if (future.component) {\n            getChildRouteGuards(futureNode, null, context ? context.children : null, futurePath, checks);\n            // if we have a componentless route, we recurse but keep the same outlet map.\n        }\n        else {\n            getChildRouteGuards(futureNode, null, parentContexts, futurePath, checks);\n        }\n    }\n    return checks;\n}\nfunction shouldRunGuardsAndResolvers(curr, future, mode) {\n    if (typeof mode === 'function') {\n        return mode(curr, future);\n    }\n    switch (mode) {\n        case 'pathParamsChange':\n            return !equalPath(curr.url, future.url);\n        case 'pathParamsOrQueryParamsChange':\n            return !equalPath(curr.url, future.url) ||\n                !shallowEqual(curr.queryParams, future.queryParams);\n        case 'always':\n            return true;\n        case 'paramsOrQueryParamsChange':\n            return !equalParamsAndUrlSegments(curr, future) ||\n                !shallowEqual(curr.queryParams, future.queryParams);\n        case 'paramsChange':\n        default:\n            return !equalParamsAndUrlSegments(curr, future);\n    }\n}\nfunction deactivateRouteAndItsChildren(route, context, checks) {\n    const children = nodeChildrenAsMap(route);\n    const r = route.value;\n    forEach(children, (node, childName) => {\n        if (!r.component) {\n            deactivateRouteAndItsChildren(node, context, checks);\n        }\n        else if (context) {\n            deactivateRouteAndItsChildren(node, context.children.getContext(childName), checks);\n        }\n        else {\n            deactivateRouteAndItsChildren(node, null, checks);\n        }\n    });\n    if (!r.component) {\n        checks.canDeactivateChecks.push(new CanDeactivate(null, r));\n    }\n    else if (context && context.outlet && context.outlet.isActivated) {\n        checks.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, r));\n    }\n    else {\n        checks.canDeactivateChecks.push(new CanDeactivate(null, r));\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst INITIAL_VALUE = Symbol('INITIAL_VALUE');\nfunction prioritizedGuardValue() {\n    return switchMap(obs => {\n        return combineLatest(...obs.map(o => o.pipe(take(1), startWith(INITIAL_VALUE))))\n            .pipe(scan((acc, list) => {\n            let isPending = false;\n            return list.reduce((innerAcc, val, i) => {\n                if (innerAcc !== INITIAL_VALUE)\n                    return innerAcc;\n                // Toggle pending flag if any values haven't been set yet\n                if (val === INITIAL_VALUE)\n                    isPending = true;\n                // Any other return values are only valid if we haven't yet hit a pending\n                // call. This guarantees that in the case of a guard at the bottom of the\n                // tree that returns a redirect, we will wait for the higher priority\n                // guard at the top to finish before performing the redirect.\n                if (!isPending) {\n                    // Early return when we hit a `false` value as that should always\n                    // cancel navigation\n                    if (val === false)\n                        return val;\n                    if (i === list.length - 1 || isUrlTree(val)) {\n                        return val;\n                    }\n                }\n                return innerAcc;\n            }, acc);\n        }, INITIAL_VALUE), filter(item => item !== INITIAL_VALUE), map(item => isUrlTree(item) ? item : item === true), //\n        take(1));\n    });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction checkGuards(moduleInjector, forwardEvent) {\n    return function (source) {\n        return source.pipe(mergeMap(t => {\n            const { targetSnapshot, currentSnapshot, guards: { canActivateChecks, canDeactivateChecks } } = t;\n            if (canDeactivateChecks.length === 0 && canActivateChecks.length === 0) {\n                return of(Object.assign(Object.assign({}, t), { guardsResult: true }));\n            }\n            return runCanDeactivateChecks(canDeactivateChecks, targetSnapshot, currentSnapshot, moduleInjector)\n                .pipe(mergeMap(canDeactivate => {\n                return canDeactivate && isBoolean(canDeactivate) ?\n                    runCanActivateChecks(targetSnapshot, canActivateChecks, moduleInjector, forwardEvent) :\n                    of(canDeactivate);\n            }), map(guardsResult => (Object.assign(Object.assign({}, t), { guardsResult }))));\n        }));\n    };\n}\nfunction runCanDeactivateChecks(checks, futureRSS, currRSS, moduleInjector) {\n    return from(checks).pipe(mergeMap(check => runCanDeactivate(check.component, check.route, currRSS, futureRSS, moduleInjector)), first(result => {\n        return result !== true;\n    }, true));\n}\nfunction runCanActivateChecks(futureSnapshot, checks, moduleInjector, forwardEvent) {\n    return from(checks).pipe(concatMap((check) => {\n        return from([\n            fireChildActivationStart(check.route.parent, forwardEvent),\n            fireActivationStart(check.route, forwardEvent),\n            runCanActivateChild(futureSnapshot, check.path, moduleInjector),\n            runCanActivate(futureSnapshot, check.route, moduleInjector)\n        ])\n            .pipe(concatAll(), first(result => {\n            return result !== true;\n        }, true));\n    }), first(result => {\n        return result !== true;\n    }, true));\n}\n/**\n * This should fire off `ActivationStart` events for each route being activated at this\n * level.\n * In other words, if you're activating `a` and `b` below, `path` will contain the\n * `ActivatedRouteSnapshot`s for both and we will fire `ActivationStart` for both. Always\n * return\n * `true` so checks continue to run.\n */\nfunction fireActivationStart(snapshot, forwardEvent) {\n    if (snapshot !== null && forwardEvent) {\n        forwardEvent(new ActivationStart(snapshot));\n    }\n    return of(true);\n}\n/**\n * This should fire off `ChildActivationStart` events for each route being activated at this\n * level.\n * In other words, if you're activating `a` and `b` below, `path` will contain the\n * `ActivatedRouteSnapshot`s for both and we will fire `ChildActivationStart` for both. Always\n * return\n * `true` so checks continue to run.\n */\nfunction fireChildActivationStart(snapshot, forwardEvent) {\n    if (snapshot !== null && forwardEvent) {\n        forwardEvent(new ChildActivationStart(snapshot));\n    }\n    return of(true);\n}\nfunction runCanActivate(futureRSS, futureARS, moduleInjector) {\n    const canActivate = futureARS.routeConfig ? futureARS.routeConfig.canActivate : null;\n    if (!canActivate || canActivate.length === 0)\n        return of(true);\n    const canActivateObservables = canActivate.map((c) => {\n        return defer(() => {\n            const guard = getToken(c, futureARS, moduleInjector);\n            let observable;\n            if (isCanActivate(guard)) {\n                observable = wrapIntoObservable(guard.canActivate(futureARS, futureRSS));\n            }\n            else if (isFunction(guard)) {\n                observable = wrapIntoObservable(guard(futureARS, futureRSS));\n            }\n            else {\n                throw new Error('Invalid CanActivate guard');\n            }\n            return observable.pipe(first());\n        });\n    });\n    return of(canActivateObservables).pipe(prioritizedGuardValue());\n}\nfunction runCanActivateChild(futureRSS, path, moduleInjector) {\n    const futureARS = path[path.length - 1];\n    const canActivateChildGuards = path.slice(0, path.length - 1)\n        .reverse()\n        .map(p => getCanActivateChild(p))\n        .filter(_ => _ !== null);\n    const canActivateChildGuardsMapped = canActivateChildGuards.map((d) => {\n        return defer(() => {\n            const guardsMapped = d.guards.map((c) => {\n                const guard = getToken(c, d.node, moduleInjector);\n                let observable;\n                if (isCanActivateChild(guard)) {\n                    observable = wrapIntoObservable(guard.canActivateChild(futureARS, futureRSS));\n                }\n                else if (isFunction(guard)) {\n                    observable = wrapIntoObservable(guard(futureARS, futureRSS));\n                }\n                else {\n                    throw new Error('Invalid CanActivateChild guard');\n                }\n                return observable.pipe(first());\n            });\n            return of(guardsMapped).pipe(prioritizedGuardValue());\n        });\n    });\n    return of(canActivateChildGuardsMapped).pipe(prioritizedGuardValue());\n}\nfunction runCanDeactivate(component, currARS, currRSS, futureRSS, moduleInjector) {\n    const canDeactivate = currARS && currARS.routeConfig ? currARS.routeConfig.canDeactivate : null;\n    if (!canDeactivate || canDeactivate.length === 0)\n        return of(true);\n    const canDeactivateObservables = canDeactivate.map((c) => {\n        const guard = getToken(c, currARS, moduleInjector);\n        let observable;\n        if (isCanDeactivate(guard)) {\n            observable = wrapIntoObservable(guard.canDeactivate(component, currARS, currRSS, futureRSS));\n        }\n        else if (isFunction(guard)) {\n            observable = wrapIntoObservable(guard(component, currARS, currRSS, futureRSS));\n        }\n        else {\n            throw new Error('Invalid CanDeactivate guard');\n        }\n        return observable.pipe(first());\n    });\n    return of(canDeactivateObservables).pipe(prioritizedGuardValue());\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass NoMatch$1 {\n}\nfunction recognize(rootComponentType, config, urlTree, url, paramsInheritanceStrategy = 'emptyOnly', relativeLinkResolution = 'legacy') {\n    return new Recognizer(rootComponentType, config, urlTree, url, paramsInheritanceStrategy, relativeLinkResolution)\n        .recognize();\n}\nclass Recognizer {\n    constructor(rootComponentType, config, urlTree, url, paramsInheritanceStrategy, relativeLinkResolution) {\n        this.rootComponentType = rootComponentType;\n        this.config = config;\n        this.urlTree = urlTree;\n        this.url = url;\n        this.paramsInheritanceStrategy = paramsInheritanceStrategy;\n        this.relativeLinkResolution = relativeLinkResolution;\n    }\n    recognize() {\n        try {\n            const rootSegmentGroup = split$1(this.urlTree.root, [], [], this.config, this.relativeLinkResolution).segmentGroup;\n            const children = this.processSegmentGroup(this.config, rootSegmentGroup, PRIMARY_OUTLET);\n            const root = new ActivatedRouteSnapshot([], Object.freeze({}), Object.freeze(Object.assign({}, this.urlTree.queryParams)), this.urlTree.fragment, {}, PRIMARY_OUTLET, this.rootComponentType, null, this.urlTree.root, -1, {});\n            const rootNode = new TreeNode(root, children);\n            const routeState = new RouterStateSnapshot(this.url, rootNode);\n            this.inheritParamsAndData(routeState._root);\n            return of(routeState);\n        }\n        catch (e) {\n            return new Observable((obs) => obs.error(e));\n        }\n    }\n    inheritParamsAndData(routeNode) {\n        const route = routeNode.value;\n        const i = inheritedParamsDataResolve(route, this.paramsInheritanceStrategy);\n        route.params = Object.freeze(i.params);\n        route.data = Object.freeze(i.data);\n        routeNode.children.forEach(n => this.inheritParamsAndData(n));\n    }\n    processSegmentGroup(config, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return this.processChildren(config, segmentGroup);\n        }\n        return this.processSegment(config, segmentGroup, segmentGroup.segments, outlet);\n    }\n    processChildren(config, segmentGroup) {\n        const children = mapChildrenIntoArray(segmentGroup, (child, childOutlet) => this.processSegmentGroup(config, child, childOutlet));\n        checkOutletNameUniqueness(children);\n        sortActivatedRouteSnapshots(children);\n        return children;\n    }\n    processSegment(config, segmentGroup, segments, outlet) {\n        for (const r of config) {\n            try {\n                return this.processSegmentAgainstRoute(r, segmentGroup, segments, outlet);\n            }\n            catch (e) {\n                if (!(e instanceof NoMatch$1))\n                    throw e;\n            }\n        }\n        if (this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n            return [];\n        }\n        throw new NoMatch$1();\n    }\n    noLeftoversInUrl(segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    }\n    processSegmentAgainstRoute(route, rawSegment, segments, outlet) {\n        if (route.redirectTo)\n            throw new NoMatch$1();\n        if ((route.outlet || PRIMARY_OUTLET) !== outlet)\n            throw new NoMatch$1();\n        let snapshot;\n        let consumedSegments = [];\n        let rawSlicedSegments = [];\n        if (route.path === '**') {\n            const params = segments.length > 0 ? last(segments).parameters : {};\n            snapshot = new ActivatedRouteSnapshot(segments, params, Object.freeze(Object.assign({}, this.urlTree.queryParams)), this.urlTree.fragment, getData(route), outlet, route.component, route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + segments.length, getResolve(route));\n        }\n        else {\n            const result = match$1(rawSegment, route, segments);\n            consumedSegments = result.consumedSegments;\n            rawSlicedSegments = segments.slice(result.lastChild);\n            snapshot = new ActivatedRouteSnapshot(consumedSegments, result.parameters, Object.freeze(Object.assign({}, this.urlTree.queryParams)), this.urlTree.fragment, getData(route), outlet, route.component, route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + consumedSegments.length, getResolve(route));\n        }\n        const childConfig = getChildConfig(route);\n        const { segmentGroup, slicedSegments } = split$1(rawSegment, consumedSegments, rawSlicedSegments, childConfig, this.relativeLinkResolution);\n        if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n            const children = this.processChildren(childConfig, segmentGroup);\n            return [new TreeNode(snapshot, children)];\n        }\n        if (childConfig.length === 0 && slicedSegments.length === 0) {\n            return [new TreeNode(snapshot, [])];\n        }\n        const children = this.processSegment(childConfig, segmentGroup, slicedSegments, PRIMARY_OUTLET);\n        return [new TreeNode(snapshot, children)];\n    }\n}\nfunction sortActivatedRouteSnapshots(nodes) {\n    nodes.sort((a, b) => {\n        if (a.value.outlet === PRIMARY_OUTLET)\n            return -1;\n        if (b.value.outlet === PRIMARY_OUTLET)\n            return 1;\n        return a.value.outlet.localeCompare(b.value.outlet);\n    });\n}\nfunction getChildConfig(route) {\n    if (route.children) {\n        return route.children;\n    }\n    if (route.loadChildren) {\n        return route._loadedConfig.routes;\n    }\n    return [];\n}\nfunction match$1(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {\n            throw new NoMatch$1();\n        }\n        return { consumedSegments: [], lastChild: 0, parameters: {} };\n    }\n    const matcher = route.matcher || defaultUrlMatcher;\n    const res = matcher(segments, segmentGroup, route);\n    if (!res)\n        throw new NoMatch$1();\n    const posParams = {};\n    forEach(res.posParams, (v, k) => {\n        posParams[k] = v.path;\n    });\n    const parameters = res.consumed.length > 0 ? Object.assign(Object.assign({}, posParams), res.consumed[res.consumed.length - 1].parameters) :\n        posParams;\n    return { consumedSegments: res.consumed, lastChild: res.consumed.length, parameters };\n}\nfunction checkOutletNameUniqueness(nodes) {\n    const names = {};\n    nodes.forEach(n => {\n        const routeWithSameOutletName = names[n.value.outlet];\n        if (routeWithSameOutletName) {\n            const p = routeWithSameOutletName.url.map(s => s.toString()).join('/');\n            const c = n.value.url.map(s => s.toString()).join('/');\n            throw new Error(`Two segments cannot have the same outlet name: '${p}' and '${c}'.`);\n        }\n        names[n.value.outlet] = n.value;\n    });\n}\nfunction getSourceSegmentGroup(segmentGroup) {\n    let s = segmentGroup;\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n    }\n    return s;\n}\nfunction getPathIndexShift(segmentGroup) {\n    let s = segmentGroup;\n    let res = (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n        res += (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    }\n    return res - 1;\n}\nfunction split$1(segmentGroup, consumedSegments, slicedSegments, config, relativeLinkResolution) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        const s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptyPaths(segmentGroup, consumedSegments, config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        s._sourceSegment = segmentGroup;\n        s._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s, slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathMatches(segmentGroup, slicedSegments, config)) {\n        const s = new UrlSegmentGroup(segmentGroup.segments, addEmptyPathsToChildrenIfNeeded(segmentGroup, consumedSegments, slicedSegments, config, segmentGroup.children, relativeLinkResolution));\n        s._sourceSegment = segmentGroup;\n        s._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s, slicedSegments };\n    }\n    const s = new UrlSegmentGroup(segmentGroup.segments, segmentGroup.children);\n    s._sourceSegment = segmentGroup;\n    s._segmentIndexShift = consumedSegments.length;\n    return { segmentGroup: s, slicedSegments };\n}\nfunction addEmptyPathsToChildrenIfNeeded(segmentGroup, consumedSegments, slicedSegments, routes, children, relativeLinkResolution) {\n    const res = {};\n    for (const r of routes) {\n        if (emptyPathMatch(segmentGroup, slicedSegments, r) && !children[getOutlet$1(r)]) {\n            const s = new UrlSegmentGroup([], {});\n            s._sourceSegment = segmentGroup;\n            if (relativeLinkResolution === 'legacy') {\n                s._segmentIndexShift = segmentGroup.segments.length;\n            }\n            else {\n                s._segmentIndexShift = consumedSegments.length;\n            }\n            res[getOutlet$1(r)] = s;\n        }\n    }\n    return Object.assign(Object.assign({}, children), res);\n}\nfunction createChildrenForEmptyPaths(segmentGroup, consumedSegments, routes, primarySegment) {\n    const res = {};\n    res[PRIMARY_OUTLET] = primarySegment;\n    primarySegment._sourceSegment = segmentGroup;\n    primarySegment._segmentIndexShift = consumedSegments.length;\n    for (const r of routes) {\n        if (r.path === '' && getOutlet$1(r) !== PRIMARY_OUTLET) {\n            const s = new UrlSegmentGroup([], {});\n            s._sourceSegment = segmentGroup;\n            s._segmentIndexShift = consumedSegments.length;\n            res[getOutlet$1(r)] = s;\n        }\n    }\n    return res;\n}\nfunction containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, routes) {\n    return routes.some(r => emptyPathMatch(segmentGroup, slicedSegments, r) && getOutlet$1(r) !== PRIMARY_OUTLET);\n}\nfunction containsEmptyPathMatches(segmentGroup, slicedSegments, routes) {\n    return routes.some(r => emptyPathMatch(segmentGroup, slicedSegments, r));\n}\nfunction emptyPathMatch(segmentGroup, slicedSegments, r) {\n    if ((segmentGroup.hasChildren() || slicedSegments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo === undefined;\n}\nfunction getOutlet$1(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\nfunction getData(route) {\n    return route.data || {};\n}\nfunction getResolve(route) {\n    return route.resolve || {};\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction recognize$1(rootComponentType, config, serializer, paramsInheritanceStrategy, relativeLinkResolution) {\n    return function (source) {\n        return source.pipe(mergeMap(t => recognize(rootComponentType, config, t.urlAfterRedirects, serializer(t.urlAfterRedirects), paramsInheritanceStrategy, relativeLinkResolution)\n            .pipe(map(targetSnapshot => (Object.assign(Object.assign({}, t), { targetSnapshot }))))));\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction resolveData(paramsInheritanceStrategy, moduleInjector) {\n    return function (source) {\n        return source.pipe(mergeMap(t => {\n            const { targetSnapshot, guards: { canActivateChecks } } = t;\n            if (!canActivateChecks.length) {\n                return of(t);\n            }\n            let canActivateChecksResolved = 0;\n            return from(canActivateChecks)\n                .pipe(concatMap(check => runResolve(check.route, targetSnapshot, paramsInheritanceStrategy, moduleInjector)), tap(() => canActivateChecksResolved++), takeLast(1), mergeMap(_ => canActivateChecksResolved === canActivateChecks.length ? of(t) : EMPTY));\n        }));\n    };\n}\nfunction runResolve(futureARS, futureRSS, paramsInheritanceStrategy, moduleInjector) {\n    const resolve = futureARS._resolve;\n    return resolveNode(resolve, futureARS, futureRSS, moduleInjector)\n        .pipe(map((resolvedData) => {\n        futureARS._resolvedData = resolvedData;\n        futureARS.data = Object.assign(Object.assign({}, futureARS.data), inheritedParamsDataResolve(futureARS, paramsInheritanceStrategy).resolve);\n        return null;\n    }));\n}\nfunction resolveNode(resolve, futureARS, futureRSS, moduleInjector) {\n    const keys = Object.keys(resolve);\n    if (keys.length === 0) {\n        return of({});\n    }\n    const data = {};\n    return from(keys).pipe(mergeMap((key) => getResolver(resolve[key], futureARS, futureRSS, moduleInjector)\n        .pipe(tap((value) => {\n        data[key] = value;\n    }))), takeLast(1), mergeMap(() => {\n        // Ensure all resolvers returned values, otherwise don't emit any \"next\" and just complete\n        // the chain which will cancel navigation\n        if (Object.keys(data).length === keys.length) {\n            return of(data);\n        }\n        return EMPTY;\n    }));\n}\nfunction getResolver(injectionToken, futureARS, futureRSS, moduleInjector) {\n    const resolver = getToken(injectionToken, futureARS, moduleInjector);\n    return resolver.resolve ? wrapIntoObservable(resolver.resolve(futureARS, futureRSS)) :\n        wrapIntoObservable(resolver(futureARS, futureRSS));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Perform a side effect through a switchMap for every emission on the source Observable,\n * but return an Observable that is identical to the source. It's essentially the same as\n * the `tap` operator, but if the side effectful `next` function returns an ObservableInput,\n * it will wait before continuing with the original value.\n */\nfunction switchTap(next) {\n    return function (source) {\n        return source.pipe(switchMap(v => {\n            const nextResult = next(v);\n            if (nextResult) {\n                return from(nextResult).pipe(map(() => v));\n            }\n            return from([v]);\n        }));\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Provides a way to customize when activated routes get reused.\n *\n * @publicApi\n */\nclass RouteReuseStrategy {\n}\n/**\n * Does not detach any subtrees. Reuses routes as long as their route config is the same.\n */\nclass DefaultRouteReuseStrategy {\n    shouldDetach(route) {\n        return false;\n    }\n    store(route, detachedTree) { }\n    shouldAttach(route) {\n        return false;\n    }\n    retrieve(route) {\n        return null;\n    }\n    shouldReuseRoute(future, curr) {\n        return future.routeConfig === curr.routeConfig;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This component is used internally within the router to be a placeholder when an empty\n * router-outlet is needed. For example, with a config such as:\n *\n * `{path: 'parent', outlet: 'nav', children: [...]}`\n *\n * In order to render, there needs to be a component on this config, which will default\n * to this `EmptyOutletComponent`.\n */\nclass ɵEmptyOutletComponent {\n}\nɵEmptyOutletComponent.ɵfac = function ɵEmptyOutletComponent_Factory(t) { return new (t || ɵEmptyOutletComponent)(); };\nɵEmptyOutletComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ɵEmptyOutletComponent, selectors: [[\"ng-component\"]], decls: 1, vars: 0, template: function ɵEmptyOutletComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"router-outlet\");\n    } }, directives: function () { return [RouterOutlet]; }, encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ɵEmptyOutletComponent, [{\n        type: Component,\n        args: [{ template: `<router-outlet></router-outlet>` }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction validateConfig(config, parentPath = '') {\n    // forEach doesn't iterate undefined values\n    for (let i = 0; i < config.length; i++) {\n        const route = config[i];\n        const fullPath = getFullPath(parentPath, route);\n        validateNode(route, fullPath);\n    }\n}\nfunction validateNode(route, fullPath) {\n    if (!route) {\n        throw new Error(`\n      Invalid configuration of route '${fullPath}': Encountered undefined route.\n      The reason might be an extra comma.\n\n      Example:\n      const routes: Routes = [\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\n        { path: 'detail/:id', component: HeroDetailComponent }\n      ];\n    `);\n    }\n    if (Array.isArray(route)) {\n        throw new Error(`Invalid configuration of route '${fullPath}': Array cannot be specified`);\n    }\n    if (!route.component && !route.children && !route.loadChildren &&\n        (route.outlet && route.outlet !== PRIMARY_OUTLET)) {\n        throw new Error(`Invalid configuration of route '${fullPath}': a componentless route without children or loadChildren cannot have a named outlet set`);\n    }\n    if (route.redirectTo && route.children) {\n        throw new Error(`Invalid configuration of route '${fullPath}': redirectTo and children cannot be used together`);\n    }\n    if (route.redirectTo && route.loadChildren) {\n        throw new Error(`Invalid configuration of route '${fullPath}': redirectTo and loadChildren cannot be used together`);\n    }\n    if (route.children && route.loadChildren) {\n        throw new Error(`Invalid configuration of route '${fullPath}': children and loadChildren cannot be used together`);\n    }\n    if (route.redirectTo && route.component) {\n        throw new Error(`Invalid configuration of route '${fullPath}': redirectTo and component cannot be used together`);\n    }\n    if (route.path && route.matcher) {\n        throw new Error(`Invalid configuration of route '${fullPath}': path and matcher cannot be used together`);\n    }\n    if (route.redirectTo === void 0 && !route.component && !route.children && !route.loadChildren) {\n        throw new Error(`Invalid configuration of route '${fullPath}'. One of the following must be provided: component, redirectTo, children or loadChildren`);\n    }\n    if (route.path === void 0 && route.matcher === void 0) {\n        throw new Error(`Invalid configuration of route '${fullPath}': routes must have either a path or a matcher specified`);\n    }\n    if (typeof route.path === 'string' && route.path.charAt(0) === '/') {\n        throw new Error(`Invalid configuration of route '${fullPath}': path cannot start with a slash`);\n    }\n    if (route.path === '' && route.redirectTo !== void 0 && route.pathMatch === void 0) {\n        const exp = `The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.`;\n        throw new Error(`Invalid configuration of route '{path: \"${fullPath}\", redirectTo: \"${route.redirectTo}\"}': please provide 'pathMatch'. ${exp}`);\n    }\n    if (route.pathMatch !== void 0 && route.pathMatch !== 'full' && route.pathMatch !== 'prefix') {\n        throw new Error(`Invalid configuration of route '${fullPath}': pathMatch can only be set to 'prefix' or 'full'`);\n    }\n    if (route.children) {\n        validateConfig(route.children, fullPath);\n    }\n}\nfunction getFullPath(parentPath, currentRoute) {\n    if (!currentRoute) {\n        return parentPath;\n    }\n    if (!parentPath && !currentRoute.path) {\n        return '';\n    }\n    else if (parentPath && !currentRoute.path) {\n        return `${parentPath}/`;\n    }\n    else if (!parentPath && currentRoute.path) {\n        return currentRoute.path;\n    }\n    else {\n        return `${parentPath}/${currentRoute.path}`;\n    }\n}\n/**\n * Makes a copy of the config and adds any default required properties.\n */\nfunction standardizeConfig(r) {\n    const children = r.children && r.children.map(standardizeConfig);\n    const c = children ? Object.assign(Object.assign({}, r), { children }) : Object.assign({}, r);\n    if (!c.component && (children || c.loadChildren) && (c.outlet && c.outlet !== PRIMARY_OUTLET)) {\n        c.component = ɵEmptyOutletComponent;\n    }\n    return c;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The [DI token](guide/glossary/#di-token) for a router configuration.\n * @see `ROUTES`\n * @publicApi\n */\nconst ROUTES = new InjectionToken('ROUTES');\nclass RouterConfigLoader {\n    constructor(loader, compiler, onLoadStartListener, onLoadEndListener) {\n        this.loader = loader;\n        this.compiler = compiler;\n        this.onLoadStartListener = onLoadStartListener;\n        this.onLoadEndListener = onLoadEndListener;\n    }\n    load(parentInjector, route) {\n        if (this.onLoadStartListener) {\n            this.onLoadStartListener(route);\n        }\n        const moduleFactory$ = this.loadModuleFactory(route.loadChildren);\n        return moduleFactory$.pipe(map((factory) => {\n            if (this.onLoadEndListener) {\n                this.onLoadEndListener(route);\n            }\n            const module = factory.create(parentInjector);\n            return new LoadedRouterConfig(flatten(module.injector.get(ROUTES)).map(standardizeConfig), module);\n        }));\n    }\n    loadModuleFactory(loadChildren) {\n        if (typeof loadChildren === 'string') {\n            return from(this.loader.load(loadChildren));\n        }\n        else {\n            return wrapIntoObservable(loadChildren()).pipe(mergeMap((t) => {\n                if (t instanceof NgModuleFactory) {\n                    return of(t);\n                }\n                else {\n                    return from(this.compiler.compileModuleAsync(t));\n                }\n            }));\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Store contextual information about a `RouterOutlet`\n *\n * @publicApi\n */\nclass OutletContext {\n    constructor() {\n        this.outlet = null;\n        this.route = null;\n        this.resolver = null;\n        this.children = new ChildrenOutletContexts();\n        this.attachRef = null;\n    }\n}\n/**\n * Store contextual information about the children (= nested) `RouterOutlet`\n *\n * @publicApi\n */\nclass ChildrenOutletContexts {\n    constructor() {\n        // contexts for child outlets, by name.\n        this.contexts = new Map();\n    }\n    /** Called when a `RouterOutlet` directive is instantiated */\n    onChildOutletCreated(childName, outlet) {\n        const context = this.getOrCreateContext(childName);\n        context.outlet = outlet;\n        this.contexts.set(childName, context);\n    }\n    /**\n     * Called when a `RouterOutlet` directive is destroyed.\n     * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n     * re-created later.\n     */\n    onChildOutletDestroyed(childName) {\n        const context = this.getContext(childName);\n        if (context) {\n            context.outlet = null;\n        }\n    }\n    /**\n     * Called when the corresponding route is deactivated during navigation.\n     * Because the component get destroyed, all children outlet are destroyed.\n     */\n    onOutletDeactivated() {\n        const contexts = this.contexts;\n        this.contexts = new Map();\n        return contexts;\n    }\n    onOutletReAttached(contexts) {\n        this.contexts = contexts;\n    }\n    getOrCreateContext(childName) {\n        let context = this.getContext(childName);\n        if (!context) {\n            context = new OutletContext();\n            this.contexts.set(childName, context);\n        }\n        return context;\n    }\n    getContext(childName) {\n        return this.contexts.get(childName) || null;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Provides a way to migrate AngularJS applications to Angular.\n *\n * @publicApi\n */\nclass UrlHandlingStrategy {\n}\n/**\n * @publicApi\n */\nclass DefaultUrlHandlingStrategy {\n    shouldProcessUrl(url) {\n        return true;\n    }\n    extract(url) {\n        return url;\n    }\n    merge(newUrlPart, wholeUrl) {\n        return newUrlPart;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction defaultErrorHandler(error) {\n    throw error;\n}\nfunction defaultMalformedUriErrorHandler(error, urlSerializer, url) {\n    return urlSerializer.parse('/');\n}\n/**\n * @internal\n */\nfunction defaultRouterHook(snapshot, runExtras) {\n    return of(null);\n}\n/**\n * @description\n *\n * A service that provides navigation among views and URL manipulation capabilities.\n *\n * @see `Route`.\n * @see [Routing and Navigation Guide](guide/router).\n *\n * @ngModule RouterModule\n *\n * @publicApi\n */\nclass Router {\n    /**\n     * Creates the router service.\n     */\n    // TODO: vsavkin make internal after the final is out.\n    constructor(rootComponentType, urlSerializer, rootContexts, location, injector, loader, compiler, config) {\n        this.rootComponentType = rootComponentType;\n        this.urlSerializer = urlSerializer;\n        this.rootContexts = rootContexts;\n        this.location = location;\n        this.config = config;\n        this.lastSuccessfulNavigation = null;\n        this.currentNavigation = null;\n        this.navigationId = 0;\n        this.isNgZoneEnabled = false;\n        /**\n         * An event stream for routing events in this NgModule.\n         */\n        this.events = new Subject();\n        /**\n         * A handler for navigation errors in this NgModule.\n         */\n        this.errorHandler = defaultErrorHandler;\n        /**\n         * A handler for errors thrown by `Router.parseUrl(url)`\n         * when `url` contains an invalid character.\n         * The most common case is a `%` sign\n         * that's not encoded and is not part of a percent encoded sequence.\n         */\n        this.malformedUriErrorHandler = defaultMalformedUriErrorHandler;\n        /**\n         * True if at least one navigation event has occurred,\n         * false otherwise.\n         */\n        this.navigated = false;\n        this.lastSuccessfulId = -1;\n        /**\n         * Hooks that enable you to pause navigation,\n         * either before or after the preactivation phase.\n         * Used by `RouterModule`.\n         *\n         * @internal\n         */\n        this.hooks = { beforePreactivation: defaultRouterHook, afterPreactivation: defaultRouterHook };\n        /**\n         * A strategy for extracting and merging URLs.\n         * Used for AngularJS to Angular migrations.\n         */\n        this.urlHandlingStrategy = new DefaultUrlHandlingStrategy();\n        /**\n         * A strategy for re-using routes.\n         */\n        this.routeReuseStrategy = new DefaultRouteReuseStrategy();\n        /**\n         * How to handle a navigation request to the current URL. One of:\n         * - `'ignore'` :  The router ignores the request.\n         * - `'reload'` : The router reloads the URL. Use to implement a \"refresh\" feature.\n         */\n        this.onSameUrlNavigation = 'ignore';\n        /**\n         * How to merge parameters, data, and resolved data from parent to child\n         * routes. One of:\n         *\n         * - `'emptyOnly'` : Inherit parent parameters, data, and resolved data\n         * for path-less or component-less routes.\n         * - `'always'` : Inherit parent parameters, data, and resolved data\n         * for all child routes.\n         */\n        this.paramsInheritanceStrategy = 'emptyOnly';\n        /**\n         * Determines when the router updates the browser URL.\n         * By default (`\"deferred\"`), updates the browser URL after navigation has finished.\n         * Set to `'eager'` to update the browser URL at the beginning of navigation.\n         * You can choose to update early so that, if navigation fails,\n         * you can show an error message with the URL that failed.\n         */\n        this.urlUpdateStrategy = 'deferred';\n        /**\n         * Enables a bug fix that corrects relative link resolution in components with empty paths.\n         * @see `RouterModule`\n         */\n        this.relativeLinkResolution = 'legacy';\n        const onLoadStart = (r) => this.triggerEvent(new RouteConfigLoadStart(r));\n        const onLoadEnd = (r) => this.triggerEvent(new RouteConfigLoadEnd(r));\n        this.ngModule = injector.get(NgModuleRef);\n        this.console = injector.get(ɵConsole);\n        const ngZone = injector.get(NgZone);\n        this.isNgZoneEnabled = ngZone instanceof NgZone;\n        this.resetConfig(config);\n        this.currentUrlTree = createEmptyUrlTree();\n        this.rawUrlTree = this.currentUrlTree;\n        this.browserUrlTree = this.currentUrlTree;\n        this.configLoader = new RouterConfigLoader(loader, compiler, onLoadStart, onLoadEnd);\n        this.routerState = createEmptyState(this.currentUrlTree, this.rootComponentType);\n        this.transitions = new BehaviorSubject({\n            id: 0,\n            currentUrlTree: this.currentUrlTree,\n            currentRawUrl: this.currentUrlTree,\n            extractedUrl: this.urlHandlingStrategy.extract(this.currentUrlTree),\n            urlAfterRedirects: this.urlHandlingStrategy.extract(this.currentUrlTree),\n            rawUrl: this.currentUrlTree,\n            extras: {},\n            resolve: null,\n            reject: null,\n            promise: Promise.resolve(true),\n            source: 'imperative',\n            restoredState: null,\n            currentSnapshot: this.routerState.snapshot,\n            targetSnapshot: null,\n            currentRouterState: this.routerState,\n            targetRouterState: null,\n            guards: { canActivateChecks: [], canDeactivateChecks: [] },\n            guardsResult: null,\n        });\n        this.navigations = this.setupNavigations(this.transitions);\n        this.processNavigations();\n    }\n    setupNavigations(transitions) {\n        const eventsSubject = this.events;\n        return transitions.pipe(filter(t => t.id !== 0), \n        // Extract URL\n        map(t => (Object.assign(Object.assign({}, t), { extractedUrl: this.urlHandlingStrategy.extract(t.rawUrl) }))), \n        // Using switchMap so we cancel executing navigations when a new one comes in\n        switchMap(t => {\n            let completed = false;\n            let errored = false;\n            return of(t).pipe(\n            // Store the Navigation object\n            tap(t => {\n                this.currentNavigation = {\n                    id: t.id,\n                    initialUrl: t.currentRawUrl,\n                    extractedUrl: t.extractedUrl,\n                    trigger: t.source,\n                    extras: t.extras,\n                    previousNavigation: this.lastSuccessfulNavigation ? Object.assign(Object.assign({}, this.lastSuccessfulNavigation), { previousNavigation: null }) :\n                        null\n                };\n            }), switchMap(t => {\n                const urlTransition = !this.navigated ||\n                    t.extractedUrl.toString() !== this.browserUrlTree.toString();\n                const processCurrentUrl = (this.onSameUrlNavigation === 'reload' ? true : urlTransition) &&\n                    this.urlHandlingStrategy.shouldProcessUrl(t.rawUrl);\n                if (processCurrentUrl) {\n                    return of(t).pipe(\n                    // Fire NavigationStart event\n                    switchMap(t => {\n                        const transition = this.transitions.getValue();\n                        eventsSubject.next(new NavigationStart(t.id, this.serializeUrl(t.extractedUrl), t.source, t.restoredState));\n                        if (transition !== this.transitions.getValue()) {\n                            return EMPTY;\n                        }\n                        return [t];\n                    }), \n                    // This delay is required to match old behavior that forced navigation\n                    // to always be async\n                    switchMap(t => Promise.resolve(t)), \n                    // ApplyRedirects\n                    applyRedirects$1(this.ngModule.injector, this.configLoader, this.urlSerializer, this.config), \n                    // Update the currentNavigation\n                    tap(t => {\n                        this.currentNavigation = Object.assign(Object.assign({}, this.currentNavigation), { finalUrl: t.urlAfterRedirects });\n                    }), \n                    // Recognize\n                    recognize$1(this.rootComponentType, this.config, (url) => this.serializeUrl(url), this.paramsInheritanceStrategy, this.relativeLinkResolution), \n                    // Update URL if in `eager` update mode\n                    tap(t => {\n                        if (this.urlUpdateStrategy === 'eager') {\n                            if (!t.extras.skipLocationChange) {\n                                this.setBrowserUrl(t.urlAfterRedirects, !!t.extras.replaceUrl, t.id, t.extras.state);\n                            }\n                            this.browserUrlTree = t.urlAfterRedirects;\n                        }\n                    }), \n                    // Fire RoutesRecognized\n                    tap(t => {\n                        const routesRecognized = new RoutesRecognized(t.id, this.serializeUrl(t.extractedUrl), this.serializeUrl(t.urlAfterRedirects), t.targetSnapshot);\n                        eventsSubject.next(routesRecognized);\n                    }));\n                }\n                else {\n                    const processPreviousUrl = urlTransition && this.rawUrlTree &&\n                        this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree);\n                    /* When the current URL shouldn't be processed, but the previous one was,\n                     * we handle this \"error condition\" by navigating to the previously\n                     * successful URL, but leaving the URL intact.*/\n                    if (processPreviousUrl) {\n                        const { id, extractedUrl, source, restoredState, extras } = t;\n                        const navStart = new NavigationStart(id, this.serializeUrl(extractedUrl), source, restoredState);\n                        eventsSubject.next(navStart);\n                        const targetSnapshot = createEmptyState(extractedUrl, this.rootComponentType).snapshot;\n                        return of(Object.assign(Object.assign({}, t), { targetSnapshot, urlAfterRedirects: extractedUrl, extras: Object.assign(Object.assign({}, extras), { skipLocationChange: false, replaceUrl: false }) }));\n                    }\n                    else {\n                        /* When neither the current or previous URL can be processed, do nothing\n                         * other than update router's internal reference to the current \"settled\"\n                         * URL. This way the next navigation will be coming from the current URL\n                         * in the browser.\n                         */\n                        this.rawUrlTree = t.rawUrl;\n                        this.browserUrlTree = t.urlAfterRedirects;\n                        t.resolve(null);\n                        return EMPTY;\n                    }\n                }\n            }), \n            // Before Preactivation\n            switchTap(t => {\n                const { targetSnapshot, id: navigationId, extractedUrl: appliedUrlTree, rawUrl: rawUrlTree, extras: { skipLocationChange, replaceUrl } } = t;\n                return this.hooks.beforePreactivation(targetSnapshot, {\n                    navigationId,\n                    appliedUrlTree,\n                    rawUrlTree,\n                    skipLocationChange: !!skipLocationChange,\n                    replaceUrl: !!replaceUrl,\n                });\n            }), \n            // --- GUARDS ---\n            tap(t => {\n                const guardsStart = new GuardsCheckStart(t.id, this.serializeUrl(t.extractedUrl), this.serializeUrl(t.urlAfterRedirects), t.targetSnapshot);\n                this.triggerEvent(guardsStart);\n            }), map(t => (Object.assign(Object.assign({}, t), { guards: getAllRouteGuards(t.targetSnapshot, t.currentSnapshot, this.rootContexts) }))), checkGuards(this.ngModule.injector, (evt) => this.triggerEvent(evt)), tap(t => {\n                if (isUrlTree(t.guardsResult)) {\n                    const error = navigationCancelingError(`Redirecting to \"${this.serializeUrl(t.guardsResult)}\"`);\n                    error.url = t.guardsResult;\n                    throw error;\n                }\n            }), tap(t => {\n                const guardsEnd = new GuardsCheckEnd(t.id, this.serializeUrl(t.extractedUrl), this.serializeUrl(t.urlAfterRedirects), t.targetSnapshot, !!t.guardsResult);\n                this.triggerEvent(guardsEnd);\n            }), filter(t => {\n                if (!t.guardsResult) {\n                    this.resetUrlToCurrentUrlTree();\n                    const navCancel = new NavigationCancel(t.id, this.serializeUrl(t.extractedUrl), '');\n                    eventsSubject.next(navCancel);\n                    t.resolve(false);\n                    return false;\n                }\n                return true;\n            }), \n            // --- RESOLVE ---\n            switchTap(t => {\n                if (t.guards.canActivateChecks.length) {\n                    return of(t).pipe(tap(t => {\n                        const resolveStart = new ResolveStart(t.id, this.serializeUrl(t.extractedUrl), this.serializeUrl(t.urlAfterRedirects), t.targetSnapshot);\n                        this.triggerEvent(resolveStart);\n                    }), switchMap(t => {\n                        let dataResolved = false;\n                        return of(t).pipe(resolveData(this.paramsInheritanceStrategy, this.ngModule.injector), tap({\n                            next: () => dataResolved = true,\n                            complete: () => {\n                                if (!dataResolved) {\n                                    const navCancel = new NavigationCancel(t.id, this.serializeUrl(t.extractedUrl), `At least one route resolver didn't emit any value.`);\n                                    eventsSubject.next(navCancel);\n                                    t.resolve(false);\n                                }\n                            }\n                        }));\n                    }), tap(t => {\n                        const resolveEnd = new ResolveEnd(t.id, this.serializeUrl(t.extractedUrl), this.serializeUrl(t.urlAfterRedirects), t.targetSnapshot);\n                        this.triggerEvent(resolveEnd);\n                    }));\n                }\n                return undefined;\n            }), \n            // --- AFTER PREACTIVATION ---\n            switchTap((t) => {\n                const { targetSnapshot, id: navigationId, extractedUrl: appliedUrlTree, rawUrl: rawUrlTree, extras: { skipLocationChange, replaceUrl } } = t;\n                return this.hooks.afterPreactivation(targetSnapshot, {\n                    navigationId,\n                    appliedUrlTree,\n                    rawUrlTree,\n                    skipLocationChange: !!skipLocationChange,\n                    replaceUrl: !!replaceUrl,\n                });\n            }), map((t) => {\n                const targetRouterState = createRouterState(this.routeReuseStrategy, t.targetSnapshot, t.currentRouterState);\n                return (Object.assign(Object.assign({}, t), { targetRouterState }));\n            }), \n            /* Once here, we are about to activate syncronously. The assumption is this\n               will succeed, and user code may read from the Router service. Therefore\n               before activation, we need to update router properties storing the current\n               URL and the RouterState, as well as updated the browser URL. All this should\n               happen *before* activating. */\n            tap((t) => {\n                this.currentUrlTree = t.urlAfterRedirects;\n                this.rawUrlTree =\n                    this.urlHandlingStrategy.merge(this.currentUrlTree, t.rawUrl);\n                this.routerState = t.targetRouterState;\n                if (this.urlUpdateStrategy === 'deferred') {\n                    if (!t.extras.skipLocationChange) {\n                        this.setBrowserUrl(this.rawUrlTree, !!t.extras.replaceUrl, t.id, t.extras.state);\n                    }\n                    this.browserUrlTree = t.urlAfterRedirects;\n                }\n            }), activateRoutes(this.rootContexts, this.routeReuseStrategy, (evt) => this.triggerEvent(evt)), tap({\n                next() {\n                    completed = true;\n                },\n                complete() {\n                    completed = true;\n                }\n            }), finalize(() => {\n                /* When the navigation stream finishes either through error or success, we\n                 * set the `completed` or `errored` flag. However, there are some situations\n                 * where we could get here without either of those being set. For instance, a\n                 * redirect during NavigationStart. Therefore, this is a catch-all to make\n                 * sure the NavigationCancel\n                 * event is fired when a navigation gets cancelled but not caught by other\n                 * means. */\n                if (!completed && !errored) {\n                    // Must reset to current URL tree here to ensure history.state is set. On a\n                    // fresh page load, if a new navigation comes in before a successful\n                    // navigation completes, there will be nothing in\n                    // history.state.navigationId. This can cause sync problems with AngularJS\n                    // sync code which looks for a value here in order to determine whether or\n                    // not to handle a given popstate event or to leave it to the Angualr\n                    // router.\n                    this.resetUrlToCurrentUrlTree();\n                    const navCancel = new NavigationCancel(t.id, this.serializeUrl(t.extractedUrl), `Navigation ID ${t.id} is not equal to the current navigation id ${this.navigationId}`);\n                    eventsSubject.next(navCancel);\n                    t.resolve(false);\n                }\n                // currentNavigation should always be reset to null here. If navigation was\n                // successful, lastSuccessfulTransition will have already been set. Therefore\n                // we can safely set currentNavigation to null here.\n                this.currentNavigation = null;\n            }), catchError((e) => {\n                errored = true;\n                /* This error type is issued during Redirect, and is handled as a\n                 * cancellation rather than an error. */\n                if (isNavigationCancelingError(e)) {\n                    const redirecting = isUrlTree(e.url);\n                    if (!redirecting) {\n                        // Set property only if we're not redirecting. If we landed on a page and\n                        // redirect to `/` route, the new navigation is going to see the `/`\n                        // isn't a change from the default currentUrlTree and won't navigate.\n                        // This is only applicable with initial navigation, so setting\n                        // `navigated` only when not redirecting resolves this scenario.\n                        this.navigated = true;\n                        this.resetStateAndUrl(t.currentRouterState, t.currentUrlTree, t.rawUrl);\n                    }\n                    const navCancel = new NavigationCancel(t.id, this.serializeUrl(t.extractedUrl), e.message);\n                    eventsSubject.next(navCancel);\n                    // When redirecting, we need to delay resolving the navigation\n                    // promise and push it to the redirect navigation\n                    if (!redirecting) {\n                        t.resolve(false);\n                    }\n                    else {\n                        // setTimeout is required so this navigation finishes with\n                        // the return EMPTY below. If it isn't allowed to finish\n                        // processing, there can be multiple navigations to the same\n                        // URL.\n                        setTimeout(() => {\n                            const mergedTree = this.urlHandlingStrategy.merge(e.url, this.rawUrlTree);\n                            const extras = {\n                                skipLocationChange: t.extras.skipLocationChange,\n                                replaceUrl: this.urlUpdateStrategy === 'eager'\n                            };\n                            return this.scheduleNavigation(mergedTree, 'imperative', null, extras, { resolve: t.resolve, reject: t.reject, promise: t.promise });\n                        }, 0);\n                    }\n                    /* All other errors should reset to the router's internal URL reference to\n                     * the pre-error state. */\n                }\n                else {\n                    this.resetStateAndUrl(t.currentRouterState, t.currentUrlTree, t.rawUrl);\n                    const navError = new NavigationError(t.id, this.serializeUrl(t.extractedUrl), e);\n                    eventsSubject.next(navError);\n                    try {\n                        t.resolve(this.errorHandler(e));\n                    }\n                    catch (ee) {\n                        t.reject(ee);\n                    }\n                }\n                return EMPTY;\n            }));\n            // TODO(jasonaden): remove cast once g3 is on updated TypeScript\n        }));\n    }\n    /**\n     * @internal\n     * TODO: this should be removed once the constructor of the router made internal\n     */\n    resetRootComponentType(rootComponentType) {\n        this.rootComponentType = rootComponentType;\n        // TODO: vsavkin router 4.0 should make the root component set to null\n        // this will simplify the lifecycle of the router.\n        this.routerState.root.component = this.rootComponentType;\n    }\n    getTransition() {\n        const transition = this.transitions.value;\n        // This value needs to be set. Other values such as extractedUrl are set on initial navigation\n        // but the urlAfterRedirects may not get set if we aren't processing the new URL *and* not\n        // processing the previous URL.\n        transition.urlAfterRedirects = this.browserUrlTree;\n        return transition;\n    }\n    setTransition(t) {\n        this.transitions.next(Object.assign(Object.assign({}, this.getTransition()), t));\n    }\n    /**\n     * Sets up the location change listener and performs the initial navigation.\n     */\n    initialNavigation() {\n        this.setUpLocationChangeListener();\n        if (this.navigationId === 0) {\n            this.navigateByUrl(this.location.path(true), { replaceUrl: true });\n        }\n    }\n    /**\n     * Sets up the location change listener.\n     */\n    setUpLocationChangeListener() {\n        // Don't need to use Zone.wrap any more, because zone.js\n        // already patch onPopState, so location change callback will\n        // run into ngZone\n        if (!this.locationSubscription) {\n            this.locationSubscription = this.location.subscribe((change) => {\n                let rawUrlTree = this.parseUrl(change['url']);\n                const source = change['type'] === 'popstate' ? 'popstate' : 'hashchange';\n                // Navigations coming from Angular router have a navigationId state property. When this\n                // exists, restore the state.\n                const state = change.state && change.state.navigationId ? change.state : null;\n                setTimeout(() => {\n                    this.scheduleNavigation(rawUrlTree, source, state, { replaceUrl: true });\n                }, 0);\n            });\n        }\n    }\n    /** The current URL. */\n    get url() {\n        return this.serializeUrl(this.currentUrlTree);\n    }\n    /** The current Navigation object if one exists */\n    getCurrentNavigation() {\n        return this.currentNavigation;\n    }\n    /** @internal */\n    triggerEvent(event) {\n        this.events.next(event);\n    }\n    /**\n     * Resets the route configuration used for navigation and generating links.\n     *\n     * @param config The route array for the new configuration.\n     *\n     * @usageNotes\n     *\n     * ```\n     * router.resetConfig([\n     *  { path: 'team/:id', component: TeamCmp, children: [\n     *    { path: 'simple', component: SimpleCmp },\n     *    { path: 'user/:name', component: UserCmp }\n     *  ]}\n     * ]);\n     * ```\n     */\n    resetConfig(config) {\n        validateConfig(config);\n        this.config = config.map(standardizeConfig);\n        this.navigated = false;\n        this.lastSuccessfulId = -1;\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        this.dispose();\n    }\n    /** Disposes of the router. */\n    dispose() {\n        if (this.locationSubscription) {\n            this.locationSubscription.unsubscribe();\n            this.locationSubscription = null;\n        }\n    }\n    /**\n     * Appends URL segments to the current URL tree to create a new URL tree.\n     *\n     * @param commands An array of URL fragments with which to construct the new URL tree.\n     * If the path is static, can be the literal URL string. For a dynamic path, pass an array of path\n     * segments, followed by the parameters for each segment.\n     * The fragments are applied to the current URL tree or the one provided  in the `relativeTo`\n     * property of the options object, if supplied.\n     * @param navigationExtras Options that control the navigation strategy. This function\n     * only uses properties in `NavigationExtras` that would change the provided URL.\n     * @returns The new URL tree.\n     *\n     * @usageNotes\n     *\n     * ```\n     * // create /team/33/user/11\n     * router.createUrlTree(['/team', 33, 'user', 11]);\n     *\n     * // create /team/33;expand=true/user/11\n     * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n     *\n     * // you can collapse static segments like this (this works only with the first passed-in value):\n     * router.createUrlTree(['/team/33/user', userId]);\n     *\n     * // If the first segment can contain slashes, and you do not want the router to split it,\n     * // you can do the following:\n     * router.createUrlTree([{segmentPath: '/one/two'}]);\n     *\n     * // create /team/33/(user/11//right:chat)\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n     *\n     * // remove the right secondary node\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n     *\n     * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n     *\n     * // navigate to /team/33/user/11/details\n     * router.createUrlTree(['details'], {relativeTo: route});\n     *\n     * // navigate to /team/33/user/22\n     * router.createUrlTree(['../22'], {relativeTo: route});\n     *\n     * // navigate to /team/44/user/22\n     * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n     * ```\n     */\n    createUrlTree(commands, navigationExtras = {}) {\n        const { relativeTo, queryParams, fragment, preserveQueryParams, queryParamsHandling, preserveFragment } = navigationExtras;\n        if (isDevMode() && preserveQueryParams && console && console.warn) {\n            console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n        }\n        const a = relativeTo || this.routerState.root;\n        const f = preserveFragment ? this.currentUrlTree.fragment : fragment;\n        let q = null;\n        if (queryParamsHandling) {\n            switch (queryParamsHandling) {\n                case 'merge':\n                    q = Object.assign(Object.assign({}, this.currentUrlTree.queryParams), queryParams);\n                    break;\n                case 'preserve':\n                    q = this.currentUrlTree.queryParams;\n                    break;\n                default:\n                    q = queryParams || null;\n            }\n        }\n        else {\n            q = preserveQueryParams ? this.currentUrlTree.queryParams : queryParams || null;\n        }\n        if (q !== null) {\n            q = this.removeEmptyProps(q);\n        }\n        return createUrlTree(a, this.currentUrlTree, commands, q, f);\n    }\n    /**\n     * Navigates to a view using an absolute route path.\n     *\n     * @param url An absolute path for a defined route. The function does not apply any delta to the\n     *     current URL.\n     * @param extras An object containing properties that modify the navigation strategy.\n     * The function ignores any properties in the `NavigationExtras` that would change the\n     * provided URL.\n     *\n     * @returns A Promise that resolves to 'true' when navigation succeeds,\n     * to 'false' when navigation fails, or is rejected on error.\n     *\n     * @usageNotes\n     *\n     * The following calls request navigation to an absolute path.\n     *\n     * ```\n     * router.navigateByUrl(\"/team/33/user/11\");\n     *\n     * // Navigate without updating the URL\n     * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n     * ```\n     *\n     * @see [Routing and Navigation guide](guide/router)\n     *\n     */\n    navigateByUrl(url, extras = { skipLocationChange: false }) {\n        if (isDevMode() && this.isNgZoneEnabled && !NgZone.isInAngularZone()) {\n            this.console.warn(`Navigation triggered outside Angular zone, did you forget to call 'ngZone.run()'?`);\n        }\n        const urlTree = isUrlTree(url) ? url : this.parseUrl(url);\n        const mergedTree = this.urlHandlingStrategy.merge(urlTree, this.rawUrlTree);\n        return this.scheduleNavigation(mergedTree, 'imperative', null, extras);\n    }\n    /**\n     * Navigate based on the provided array of commands and a starting point.\n     * If no starting route is provided, the navigation is absolute.\n     *\n     * @param commands An array of URL fragments with which to construct the target URL.\n     * If the path is static, can be the literal URL string. For a dynamic path, pass an array of path\n     * segments, followed by the parameters for each segment.\n     * The fragments are applied to the current URL or the one provided  in the `relativeTo` property\n     * of the options object, if supplied.\n     * @param extras An options object that determines how the URL should be constructed or\n     *     interpreted.\n     *\n     * @returns A Promise that resolves to `true` when navigation succeeds, to `false` when navigation\n     *     fails,\n     * or is rejected on error.\n     *\n     * @usageNotes\n     *\n     * The following calls request navigation to a dynamic route path relative to the current URL.\n     *\n     * ```\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n     *\n     * // Navigate without updating the URL, overriding the default behavior\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n     * ```\n     *\n     * @see [Routing and Navigation guide](guide/router)\n     *\n     */\n    navigate(commands, extras = { skipLocationChange: false }) {\n        validateCommands(commands);\n        return this.navigateByUrl(this.createUrlTree(commands, extras), extras);\n    }\n    /** Serializes a `UrlTree` into a string */\n    serializeUrl(url) {\n        return this.urlSerializer.serialize(url);\n    }\n    /** Parses a string into a `UrlTree` */\n    parseUrl(url) {\n        let urlTree;\n        try {\n            urlTree = this.urlSerializer.parse(url);\n        }\n        catch (e) {\n            urlTree = this.malformedUriErrorHandler(e, this.urlSerializer, url);\n        }\n        return urlTree;\n    }\n    /** Returns whether the url is activated */\n    isActive(url, exact) {\n        if (isUrlTree(url)) {\n            return containsTree(this.currentUrlTree, url, exact);\n        }\n        const urlTree = this.parseUrl(url);\n        return containsTree(this.currentUrlTree, urlTree, exact);\n    }\n    removeEmptyProps(params) {\n        return Object.keys(params).reduce((result, key) => {\n            const value = params[key];\n            if (value !== null && value !== undefined) {\n                result[key] = value;\n            }\n            return result;\n        }, {});\n    }\n    processNavigations() {\n        this.navigations.subscribe(t => {\n            this.navigated = true;\n            this.lastSuccessfulId = t.id;\n            this.events\n                .next(new NavigationEnd(t.id, this.serializeUrl(t.extractedUrl), this.serializeUrl(this.currentUrlTree)));\n            this.lastSuccessfulNavigation = this.currentNavigation;\n            this.currentNavigation = null;\n            t.resolve(true);\n        }, e => {\n            this.console.warn(`Unhandled Navigation Error: `);\n        });\n    }\n    scheduleNavigation(rawUrl, source, restoredState, extras, priorPromise) {\n        const lastNavigation = this.getTransition();\n        // If the user triggers a navigation imperatively (e.g., by using navigateByUrl),\n        // and that navigation results in 'replaceState' that leads to the same URL,\n        // we should skip those.\n        if (lastNavigation && source !== 'imperative' && lastNavigation.source === 'imperative' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        // Because of a bug in IE and Edge, the location class fires two events (popstate and\n        // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n        // flicker. Handles the case when a popstate was emitted first.\n        if (lastNavigation && source == 'hashchange' && lastNavigation.source === 'popstate' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        // Because of a bug in IE and Edge, the location class fires two events (popstate and\n        // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n        // flicker. Handles the case when a hashchange was emitted first.\n        if (lastNavigation && source == 'popstate' && lastNavigation.source === 'hashchange' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        let resolve;\n        let reject;\n        let promise;\n        if (priorPromise) {\n            resolve = priorPromise.resolve;\n            reject = priorPromise.reject;\n            promise = priorPromise.promise;\n        }\n        else {\n            promise = new Promise((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n        }\n        const id = ++this.navigationId;\n        this.setTransition({\n            id,\n            source,\n            restoredState,\n            currentUrlTree: this.currentUrlTree,\n            currentRawUrl: this.rawUrlTree,\n            rawUrl,\n            extras,\n            resolve,\n            reject,\n            promise,\n            currentSnapshot: this.routerState.snapshot,\n            currentRouterState: this.routerState\n        });\n        // Make sure that the error is propagated even though `processNavigations` catch\n        // handler does not rethrow\n        return promise.catch((e) => {\n            return Promise.reject(e);\n        });\n    }\n    setBrowserUrl(url, replaceUrl, id, state) {\n        const path = this.urlSerializer.serialize(url);\n        state = state || {};\n        if (this.location.isCurrentPathEqualTo(path) || replaceUrl) {\n            // TODO(jasonaden): Remove first `navigationId` and rely on `ng` namespace.\n            this.location.replaceState(path, '', Object.assign(Object.assign({}, state), { navigationId: id }));\n        }\n        else {\n            this.location.go(path, '', Object.assign(Object.assign({}, state), { navigationId: id }));\n        }\n    }\n    resetStateAndUrl(storedState, storedUrl, rawUrl) {\n        this.routerState = storedState;\n        this.currentUrlTree = storedUrl;\n        this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, rawUrl);\n        this.resetUrlToCurrentUrlTree();\n    }\n    resetUrlToCurrentUrlTree() {\n        this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree), '', { navigationId: this.lastSuccessfulId });\n    }\n}\nRouter.ɵfac = function Router_Factory(t) { return new (t || Router)(ɵngcc0.ɵɵinject(ɵngcc0.Type), ɵngcc0.ɵɵinject(UrlSerializer), ɵngcc0.ɵɵinject(ChildrenOutletContexts), ɵngcc0.ɵɵinject(ɵngcc1.Location), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc0.NgModuleFactoryLoader), ɵngcc0.ɵɵinject(ɵngcc0.Compiler), ɵngcc0.ɵɵinject(undefined)); };\nRouter.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: Router, factory: Router.ɵfac });\nRouter.ctorParameters = () => [\n    { type: Type },\n    { type: UrlSerializer },\n    { type: ChildrenOutletContexts },\n    { type: Location },\n    { type: Injector },\n    { type: NgModuleFactoryLoader },\n    { type: Compiler },\n    { type: undefined }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Router, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc0.Type }, { type: UrlSerializer }, { type: ChildrenOutletContexts }, { type: ɵngcc1.Location }, { type: ɵngcc0.Injector }, { type: ɵngcc0.NgModuleFactoryLoader }, { type: ɵngcc0.Compiler }, { type: undefined }]; }, null); })();\nfunction validateCommands(commands) {\n    for (let i = 0; i < commands.length; i++) {\n        const cmd = commands[i];\n        if (cmd == null) {\n            throw new Error(`The requested path contains ${cmd} segment at index ${i}`);\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * When applied to an element in a template, makes that element a link\n * that initiates navigation to a route. Navigation opens one or more routed components\n * in one or more `<router-outlet>` locations on the page.\n *\n * Given a route configuration `[{ path: 'user/:name', component: UserCmp }]`,\n * the following creates a static link to the route:\n * `<a routerLink=\"/user/bob\">link to user component</a>`\n *\n * You can use dynamic values to generate the link.\n * For a dynamic link, pass an array of path segments,\n * followed by the params for each segment.\n * For example, `['/team', teamId, 'user', userName, {details: true}]`\n * generates a link to `/team/11/user/bob;details=true`.\n *\n * Multiple static segments can be merged into one term and combined with dynamic segements.\n * For example, `['/team/11/user', userName, {details: true}]`\n *\n * The input that you provide to the link is treated as a delta to the current URL.\n * For instance, suppose the current URL is `/user/(box//aux:team)`.\n * The link `<a [routerLink]=\"['/user/jim']\">Jim</a>` creates the URL\n * `/user/(jim//aux:team)`.\n * See {@link Router#createUrlTree createUrlTree} for more information.\n *\n * @usageNotes\n *\n * You can use absolute or relative paths in a link, set query parameters,\n * control how parameters are handled, and keep a history of navigation states.\n *\n * ### Relative link paths\n *\n * The first segment name can be prepended with `/`, `./`, or `../`.\n * * If the first segment begins with `/`, the router looks up the route from the root of the\n *   app.\n * * If the first segment begins with `./`, or doesn't begin with a slash, the router\n *   looks in the children of the current activated route.\n * * If the first segment begins with `../`, the router goes up one level in the route tree.\n *\n * ### Setting and handling query params and fragments\n *\n * The following link adds a query parameter and a fragment to the generated URL:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" fragment=\"education\">\n *   link to user component\n * </a>\n * ```\n * By default, the directive constructs the new URL using the given query parameters.\n * The example generates the link: `/user/bob?debug=true#education`.\n *\n * You can instruct the directive to handle query parameters differently\n * by specifying the `queryParamsHandling` option in the link.\n * Allowed values are:\n *\n *  - `'merge'`: Merge the given `queryParams` into the current query params.\n *  - `'preserve'`: Preserve the current query params.\n *\n * For example:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" queryParamsHandling=\"merge\">\n *   link to user component\n * </a>\n * ```\n *\n * See {@link NavigationExtras.queryParamsHandling NavigationExtras#queryParamsHandling}.\n *\n * ### Preserving navigation history\n *\n * You can provide a `state` value to be persisted to the browser's\n * [`History.state` property](https://developer.mozilla.org/en-US/docs/Web/API/History#Properties).\n * For example:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [state]=\"{tracingId: 123}\">\n *   link to user component\n * </a>\n * ```\n *\n * Use {@link Router.getCurrentNavigation() Router#getCurrentNavigation} to retrieve a saved\n * navigation-state value. For example, to capture the `tracingId` during the `NavigationStart`\n * event:\n *\n * ```\n * // Get NavigationStart events\n * router.events.pipe(filter(e => e instanceof NavigationStart)).subscribe(e => {\n *   const navigation = router.getCurrentNavigation();\n *   tracingService.trace({id: navigation.extras.state.tracingId});\n * });\n * ```\n *\n * @ngModule RouterModule\n *\n * @publicApi\n */\nclass RouterLink {\n    constructor(router, route, tabIndex, renderer, el) {\n        this.router = router;\n        this.route = route;\n        this.commands = [];\n        /** @internal */\n        this.onChanges = new Subject();\n        if (tabIndex == null) {\n            renderer.setAttribute(el.nativeElement, 'tabindex', '0');\n        }\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n        // This is subscribed to by `RouterLinkActive` so that it knows to update when there are changes\n        // to the RouterLinks it's tracking.\n        this.onChanges.next(this);\n    }\n    /**\n     * Commands to pass to {@link Router#createUrlTree Router#createUrlTree}.\n     *   - **array**: commands to pass to {@link Router#createUrlTree Router#createUrlTree}.\n     *   - **string**: shorthand for array of commands with just the string, i.e. `['/route']`\n     *   - **null|undefined**: shorthand for an empty array of commands, i.e. `[]`\n     * @see {@link Router#createUrlTree Router#createUrlTree}\n     */\n    set routerLink(commands) {\n        if (commands != null) {\n            this.commands = Array.isArray(commands) ? commands : [commands];\n        }\n        else {\n            this.commands = [];\n        }\n    }\n    /**\n     * @deprecated As of Angular v4.0 use `queryParamsHandling` instead.\n     */\n    set preserveQueryParams(value) {\n        if (isDevMode() && console && console.warn) {\n            console.warn('preserveQueryParams is deprecated!, use queryParamsHandling instead.');\n        }\n        this.preserve = value;\n    }\n    /** @nodoc */\n    onClick() {\n        const extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n            state: this.state,\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return true;\n    }\n    get urlTree() {\n        return this.router.createUrlTree(this.commands, {\n            relativeTo: this.route,\n            queryParams: this.queryParams,\n            fragment: this.fragment,\n            preserveQueryParams: attrBoolValue(this.preserve),\n            queryParamsHandling: this.queryParamsHandling,\n            preserveFragment: attrBoolValue(this.preserveFragment),\n        });\n    }\n}\nRouterLink.ɵfac = function RouterLink_Factory(t) { return new (t || RouterLink)(ɵngcc0.ɵɵdirectiveInject(Router), ɵngcc0.ɵɵdirectiveInject(ActivatedRoute), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nRouterLink.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: RouterLink, selectors: [[\"\", \"routerLink\", \"\", 5, \"a\", 5, \"area\"]], hostBindings: function RouterLink_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function RouterLink_click_HostBindingHandler() { return ctx.onClick(); });\n    } }, inputs: { routerLink: \"routerLink\", preserveQueryParams: \"preserveQueryParams\", queryParams: \"queryParams\", fragment: \"fragment\", queryParamsHandling: \"queryParamsHandling\", preserveFragment: \"preserveFragment\", skipLocationChange: \"skipLocationChange\", replaceUrl: \"replaceUrl\", state: \"state\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nRouterLink.ctorParameters = () => [\n    { type: Router },\n    { type: ActivatedRoute },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: Renderer2 },\n    { type: ElementRef }\n];\nRouterLink.propDecorators = {\n    queryParams: [{ type: Input }],\n    fragment: [{ type: Input }],\n    queryParamsHandling: [{ type: Input }],\n    preserveFragment: [{ type: Input }],\n    skipLocationChange: [{ type: Input }],\n    replaceUrl: [{ type: Input }],\n    state: [{ type: Input }],\n    routerLink: [{ type: Input }],\n    preserveQueryParams: [{ type: Input }],\n    onClick: [{ type: HostListener, args: ['click',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RouterLink, [{\n        type: Directive,\n        args: [{ selector: ':not(a):not(area)[routerLink]' }]\n    }], function () { return [{ type: Router }, { type: ActivatedRoute }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, { routerLink: [{\n            type: Input\n        }], preserveQueryParams: [{\n            type: Input\n        }], \n    /** @nodoc */\n    onClick: [{\n            type: HostListener,\n            args: ['click']\n        }], queryParams: [{\n            type: Input\n        }], fragment: [{\n            type: Input\n        }], queryParamsHandling: [{\n            type: Input\n        }], preserveFragment: [{\n            type: Input\n        }], skipLocationChange: [{\n            type: Input\n        }], replaceUrl: [{\n            type: Input\n        }], state: [{\n            type: Input\n        }] }); })();\n/**\n * @description\n *\n * Lets you link to specific routes in your app.\n *\n * See `RouterLink` for more information.\n *\n * @ngModule RouterModule\n *\n * @publicApi\n */\nclass RouterLinkWithHref {\n    constructor(router, route, locationStrategy) {\n        this.router = router;\n        this.route = route;\n        this.locationStrategy = locationStrategy;\n        this.commands = [];\n        /** @internal */\n        this.onChanges = new Subject();\n        this.subscription = router.events.subscribe((s) => {\n            if (s instanceof NavigationEnd) {\n                this.updateTargetUrlAndHref();\n            }\n        });\n    }\n    /**\n     * Commands to pass to {@link Router#createUrlTree Router#createUrlTree}.\n     *   - **array**: commands to pass to {@link Router#createUrlTree Router#createUrlTree}.\n     *   - **string**: shorthand for array of commands with just the string, i.e. `['/route']`\n     *   - **null|undefined**: shorthand for an empty array of commands, i.e. `[]`\n     * @see {@link Router#createUrlTree Router#createUrlTree}\n     */\n    set routerLink(commands) {\n        if (commands != null) {\n            this.commands = Array.isArray(commands) ? commands : [commands];\n        }\n        else {\n            this.commands = [];\n        }\n    }\n    /**\n     * @deprecated As of Angular v4.0 use `queryParamsHandling` instead.\n     */\n    set preserveQueryParams(value) {\n        if (isDevMode() && console && console.warn) {\n            console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n        }\n        this.preserve = value;\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n        this.updateTargetUrlAndHref();\n        this.onChanges.next(this);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n    /** @nodoc */\n    onClick(button, ctrlKey, metaKey, shiftKey) {\n        if (button !== 0 || ctrlKey || metaKey || shiftKey) {\n            return true;\n        }\n        if (typeof this.target === 'string' && this.target != '_self') {\n            return true;\n        }\n        const extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n            state: this.state\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return false;\n    }\n    updateTargetUrlAndHref() {\n        this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));\n    }\n    get urlTree() {\n        return this.router.createUrlTree(this.commands, {\n            relativeTo: this.route,\n            queryParams: this.queryParams,\n            fragment: this.fragment,\n            preserveQueryParams: attrBoolValue(this.preserve),\n            queryParamsHandling: this.queryParamsHandling,\n            preserveFragment: attrBoolValue(this.preserveFragment),\n        });\n    }\n}\nRouterLinkWithHref.ɵfac = function RouterLinkWithHref_Factory(t) { return new (t || RouterLinkWithHref)(ɵngcc0.ɵɵdirectiveInject(Router), ɵngcc0.ɵɵdirectiveInject(ActivatedRoute), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocationStrategy)); };\nRouterLinkWithHref.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: RouterLinkWithHref, selectors: [[\"a\", \"routerLink\", \"\"], [\"area\", \"routerLink\", \"\"]], hostVars: 2, hostBindings: function RouterLinkWithHref_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function RouterLinkWithHref_click_HostBindingHandler($event) { return ctx.onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"href\", ctx.href, ɵngcc0.ɵɵsanitizeUrl);\n        ɵngcc0.ɵɵattribute(\"target\", ctx.target);\n    } }, inputs: { routerLink: \"routerLink\", preserveQueryParams: \"preserveQueryParams\", target: \"target\", queryParams: \"queryParams\", fragment: \"fragment\", queryParamsHandling: \"queryParamsHandling\", preserveFragment: \"preserveFragment\", skipLocationChange: \"skipLocationChange\", replaceUrl: \"replaceUrl\", state: \"state\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nRouterLinkWithHref.ctorParameters = () => [\n    { type: Router },\n    { type: ActivatedRoute },\n    { type: LocationStrategy }\n];\nRouterLinkWithHref.propDecorators = {\n    target: [{ type: HostBinding, args: ['attr.target',] }, { type: Input }],\n    queryParams: [{ type: Input }],\n    fragment: [{ type: Input }],\n    queryParamsHandling: [{ type: Input }],\n    preserveFragment: [{ type: Input }],\n    skipLocationChange: [{ type: Input }],\n    replaceUrl: [{ type: Input }],\n    state: [{ type: Input }],\n    href: [{ type: HostBinding }],\n    routerLink: [{ type: Input }],\n    preserveQueryParams: [{ type: Input }],\n    onClick: [{ type: HostListener, args: ['click', ['$event.button', '$event.ctrlKey', '$event.metaKey', '$event.shiftKey'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RouterLinkWithHref, [{\n        type: Directive,\n        args: [{ selector: 'a[routerLink],area[routerLink]' }]\n    }], function () { return [{ type: Router }, { type: ActivatedRoute }, { type: ɵngcc1.LocationStrategy }]; }, { routerLink: [{\n            type: Input\n        }], preserveQueryParams: [{\n            type: Input\n        }], \n    /** @nodoc */\n    onClick: [{\n            type: HostListener,\n            args: ['click', ['$event.button', '$event.ctrlKey', '$event.metaKey', '$event.shiftKey']]\n        }], href: [{\n            type: HostBinding\n        }], target: [{\n            type: HostBinding,\n            args: ['attr.target']\n        }, {\n            type: Input\n        }], queryParams: [{\n            type: Input\n        }], fragment: [{\n            type: Input\n        }], queryParamsHandling: [{\n            type: Input\n        }], preserveFragment: [{\n            type: Input\n        }], skipLocationChange: [{\n            type: Input\n        }], replaceUrl: [{\n            type: Input\n        }], state: [{\n            type: Input\n        }] }); })();\nfunction attrBoolValue(s) {\n    return s === '' || !!s;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n *\n * @description\n *\n * Tracks whether the linked route of an element is currently active, and allows you\n * to specify one or more CSS classes to add to the element when the linked route\n * is active.\n *\n * Use this directive to create a visual distinction for elements associated with an active route.\n * For example, the following code highlights the word \"Bob\" when the the router\n * activates the associated route:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n *\n * Whenever the URL is either '/user' or '/user/bob', the \"active-link\" class is\n * added to the anchor tag. If the URL changes, the class is removed.\n *\n * You can set more than one class using a space-separated string or an array.\n * For example:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"class1 class2\">Bob</a>\n * <a routerLink=\"/user/bob\" [routerLinkActive]=\"['class1', 'class2']\">Bob</a>\n * ```\n *\n * To add the classes only when the URL matches the link exactly, add the option `exact: true`:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact:\n * true}\">Bob</a>\n * ```\n *\n * To directly check the `isActive` status of the link, assign the `RouterLinkActive`\n * instance to a template variable.\n * For example, the following checks the status without assigning any CSS classes:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive #rla=\"routerLinkActive\">\n *   Bob {{ rla.isActive ? '(already open)' : ''}}\n * </a>\n * ```\n *\n * You can apply the `RouterLinkActive` directive to an ancestor of linked elements.\n * For example, the following sets the active-link class on the `<div>`  parent tag\n * when the URL is either '/user/jim' or '/user/bob'.\n *\n * ```\n * <div routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\">\n *   <a routerLink=\"/user/jim\">Jim</a>\n *   <a routerLink=\"/user/bob\">Bob</a>\n * </div>\n * ```\n *\n * @ngModule RouterModule\n *\n * @publicApi\n */\nclass RouterLinkActive {\n    constructor(router, element, renderer, cdr, link, linkWithHref) {\n        this.router = router;\n        this.element = element;\n        this.renderer = renderer;\n        this.cdr = cdr;\n        this.link = link;\n        this.linkWithHref = linkWithHref;\n        this.classes = [];\n        this.isActive = false;\n        this.routerLinkActiveOptions = { exact: false };\n        this.routerEventsSubscription = router.events.subscribe((s) => {\n            if (s instanceof NavigationEnd) {\n                this.update();\n            }\n        });\n    }\n    /** @nodoc */\n    ngAfterContentInit() {\n        // `of(null)` is used to force subscribe body to execute once immediately (like `startWith`).\n        from([this.links.changes, this.linksWithHrefs.changes, of(null)])\n            .pipe(mergeAll())\n            .subscribe(_ => {\n            this.update();\n            this.subscribeToEachLinkOnChanges();\n        });\n    }\n    subscribeToEachLinkOnChanges() {\n        var _a;\n        (_a = this.linkInputChangesSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n        const allLinkChanges = [...this.links.toArray(), ...this.linksWithHrefs.toArray(), this.link, this.linkWithHref]\n            .filter((link) => !!link)\n            .map(link => link.onChanges);\n        this.linkInputChangesSubscription = from(allLinkChanges).pipe(mergeAll()).subscribe(link => {\n            if (this.isActive !== this.isLinkActive(this.router)(link)) {\n                this.update();\n            }\n        });\n    }\n    set routerLinkActive(data) {\n        const classes = Array.isArray(data) ? data : data.split(' ');\n        this.classes = classes.filter(c => !!c);\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n        this.update();\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        var _a;\n        this.routerEventsSubscription.unsubscribe();\n        (_a = this.linkInputChangesSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n    }\n    update() {\n        if (!this.links || !this.linksWithHrefs || !this.router.navigated)\n            return;\n        Promise.resolve().then(() => {\n            const hasActiveLinks = this.hasActiveLinks();\n            if (this.isActive !== hasActiveLinks) {\n                this.isActive = hasActiveLinks;\n                this.cdr.markForCheck();\n                this.classes.forEach((c) => {\n                    if (hasActiveLinks) {\n                        this.renderer.addClass(this.element.nativeElement, c);\n                    }\n                    else {\n                        this.renderer.removeClass(this.element.nativeElement, c);\n                    }\n                });\n            }\n        });\n    }\n    isLinkActive(router) {\n        return (link) => router.isActive(link.urlTree, this.routerLinkActiveOptions.exact);\n    }\n    hasActiveLinks() {\n        const isActiveCheckFn = this.isLinkActive(this.router);\n        return this.link && isActiveCheckFn(this.link) ||\n            this.linkWithHref && isActiveCheckFn(this.linkWithHref) ||\n            this.links.some(isActiveCheckFn) || this.linksWithHrefs.some(isActiveCheckFn);\n    }\n}\nRouterLinkActive.ɵfac = function RouterLinkActive_Factory(t) { return new (t || RouterLinkActive)(ɵngcc0.ɵɵdirectiveInject(Router), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(RouterLink, 8), ɵngcc0.ɵɵdirectiveInject(RouterLinkWithHref, 8)); };\nRouterLinkActive.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: RouterLinkActive, selectors: [[\"\", \"routerLinkActive\", \"\"]], contentQueries: function RouterLinkActive_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, RouterLink, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, RouterLinkWithHref, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.links = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.linksWithHrefs = _t);\n    } }, inputs: { routerLinkActiveOptions: \"routerLinkActiveOptions\", routerLinkActive: \"routerLinkActive\" }, exportAs: [\"routerLinkActive\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nRouterLinkActive.ctorParameters = () => [\n    { type: Router },\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: ChangeDetectorRef },\n    { type: RouterLink, decorators: [{ type: Optional }] },\n    { type: RouterLinkWithHref, decorators: [{ type: Optional }] }\n];\nRouterLinkActive.propDecorators = {\n    links: [{ type: ContentChildren, args: [RouterLink, { descendants: true },] }],\n    linksWithHrefs: [{ type: ContentChildren, args: [RouterLinkWithHref, { descendants: true },] }],\n    routerLinkActiveOptions: [{ type: Input }],\n    routerLinkActive: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RouterLinkActive, [{\n        type: Directive,\n        args: [{\n                selector: '[routerLinkActive]',\n                exportAs: 'routerLinkActive'\n            }]\n    }], function () { return [{ type: Router }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ChangeDetectorRef }, { type: RouterLink, decorators: [{\n                type: Optional\n            }] }, { type: RouterLinkWithHref, decorators: [{\n                type: Optional\n            }] }]; }, { routerLinkActiveOptions: [{\n            type: Input\n        }], routerLinkActive: [{\n            type: Input\n        }], links: [{\n            type: ContentChildren,\n            args: [RouterLink, { descendants: true }]\n        }], linksWithHrefs: [{\n            type: ContentChildren,\n            args: [RouterLinkWithHref, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Acts as a placeholder that Angular dynamically fills based on the current router state.\n *\n * Each outlet can have a unique name, determined by the optional `name` attribute.\n * The name cannot be set or changed dynamically. If not set, default value is \"primary\".\n *\n * ```\n * <router-outlet></router-outlet>\n * <router-outlet name='left'></router-outlet>\n * <router-outlet name='right'></router-outlet>\n * ```\n *\n * Named outlets can be the targets of secondary routes.\n * The `Route` object for a secondary route has an `outlet` property to identify the target outlet:\n *\n * `{path: <base-path>, component: <component>, outlet: <target_outlet_name>}`\n *\n * Using named outlets and secondary routes, you can target multiple outlets in\n * the same `RouterLink` directive.\n *\n * The router keeps track of separate branches in a navigation tree for each named outlet and\n * generates a representation of that tree in the URL.\n * The URL for a secondary route uses the following syntax to specify both the primary and secondary\n * routes at the same time:\n *\n * `http://base-path/primary-route-path(outlet-name:route-path)`\n *\n * A router outlet emits an activate event when a new component is instantiated,\n * and a deactivate event when a component is destroyed.\n *\n * ```\n * <router-outlet\n *   (activate)='onActivate($event)'\n *   (deactivate)='onDeactivate($event)'></router-outlet>\n * ```\n *\n * @see [Routing tutorial](guide/router-tutorial-toh#named-outlets \"Example of a named\n * outlet and secondary route configuration\").\n * @see `RouterLink`\n * @see `Route`\n * @ngModule RouterModule\n *\n * @publicApi\n */\nclass RouterOutlet {\n    constructor(parentContexts, location, resolver, name, changeDetector) {\n        this.parentContexts = parentContexts;\n        this.location = location;\n        this.resolver = resolver;\n        this.changeDetector = changeDetector;\n        this.activated = null;\n        this._activatedRoute = null;\n        this.activateEvents = new EventEmitter();\n        this.deactivateEvents = new EventEmitter();\n        this.name = name || PRIMARY_OUTLET;\n        parentContexts.onChildOutletCreated(this.name, this);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        this.parentContexts.onChildOutletDestroyed(this.name);\n    }\n    /** @nodoc */\n    ngOnInit() {\n        if (!this.activated) {\n            // If the outlet was not instantiated at the time the route got activated we need to populate\n            // the outlet when it is initialized (ie inside a NgIf)\n            const context = this.parentContexts.getContext(this.name);\n            if (context && context.route) {\n                if (context.attachRef) {\n                    // `attachRef` is populated when there is an existing component to mount\n                    this.attach(context.attachRef, context.route);\n                }\n                else {\n                    // otherwise the component defined in the configuration is created\n                    this.activateWith(context.route, context.resolver || null);\n                }\n            }\n        }\n    }\n    get isActivated() {\n        return !!this.activated;\n    }\n    get component() {\n        if (!this.activated)\n            throw new Error('Outlet is not activated');\n        return this.activated.instance;\n    }\n    get activatedRoute() {\n        if (!this.activated)\n            throw new Error('Outlet is not activated');\n        return this._activatedRoute;\n    }\n    get activatedRouteData() {\n        if (this._activatedRoute) {\n            return this._activatedRoute.snapshot.data;\n        }\n        return {};\n    }\n    /**\n     * Called when the `RouteReuseStrategy` instructs to detach the subtree\n     */\n    detach() {\n        if (!this.activated)\n            throw new Error('Outlet is not activated');\n        this.location.detach();\n        const cmp = this.activated;\n        this.activated = null;\n        this._activatedRoute = null;\n        return cmp;\n    }\n    /**\n     * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n     */\n    attach(ref, activatedRoute) {\n        this.activated = ref;\n        this._activatedRoute = activatedRoute;\n        this.location.insert(ref.hostView);\n    }\n    deactivate() {\n        if (this.activated) {\n            const c = this.component;\n            this.activated.destroy();\n            this.activated = null;\n            this._activatedRoute = null;\n            this.deactivateEvents.emit(c);\n        }\n    }\n    activateWith(activatedRoute, resolver) {\n        if (this.isActivated) {\n            throw new Error('Cannot activate an already activated outlet');\n        }\n        this._activatedRoute = activatedRoute;\n        const snapshot = activatedRoute._futureSnapshot;\n        const component = snapshot.routeConfig.component;\n        resolver = resolver || this.resolver;\n        const factory = resolver.resolveComponentFactory(component);\n        const childContexts = this.parentContexts.getOrCreateContext(this.name).children;\n        const injector = new OutletInjector(activatedRoute, childContexts, this.location.injector);\n        this.activated = this.location.createComponent(factory, this.location.length, injector);\n        // Calling `markForCheck` to make sure we will run the change detection when the\n        // `RouterOutlet` is inside a `ChangeDetectionStrategy.OnPush` component.\n        this.changeDetector.markForCheck();\n        this.activateEvents.emit(this.activated.instance);\n    }\n}\nRouterOutlet.ɵfac = function RouterOutlet_Factory(t) { return new (t || RouterOutlet)(ɵngcc0.ɵɵdirectiveInject(ChildrenOutletContexts), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵinjectAttribute('name'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nRouterOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: RouterOutlet, selectors: [[\"router-outlet\"]], outputs: { activateEvents: \"activate\", deactivateEvents: \"deactivate\" }, exportAs: [\"outlet\"] });\nRouterOutlet.ctorParameters = () => [\n    { type: ChildrenOutletContexts },\n    { type: ViewContainerRef },\n    { type: ComponentFactoryResolver },\n    { type: String, decorators: [{ type: Attribute, args: ['name',] }] },\n    { type: ChangeDetectorRef }\n];\nRouterOutlet.propDecorators = {\n    activateEvents: [{ type: Output, args: ['activate',] }],\n    deactivateEvents: [{ type: Output, args: ['deactivate',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RouterOutlet, [{\n        type: Directive,\n        args: [{ selector: 'router-outlet', exportAs: 'outlet' }]\n    }], function () { return [{ type: ChildrenOutletContexts }, { type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ComponentFactoryResolver }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['name']\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { activateEvents: [{\n            type: Output,\n            args: ['activate']\n        }], deactivateEvents: [{\n            type: Output,\n            args: ['deactivate']\n        }] }); })();\nclass OutletInjector {\n    constructor(route, childContexts, parent) {\n        this.route = route;\n        this.childContexts = childContexts;\n        this.parent = parent;\n    }\n    get(token, notFoundValue) {\n        if (token === ActivatedRoute) {\n            return this.route;\n        }\n        if (token === ChildrenOutletContexts) {\n            return this.childContexts;\n        }\n        return this.parent.get(token, notFoundValue);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Provides a preloading strategy.\n *\n * @publicApi\n */\nclass PreloadingStrategy {\n}\n/**\n * @description\n *\n * Provides a preloading strategy that preloads all modules as quickly as possible.\n *\n * ```\n * RouteModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})\n * ```\n *\n * @publicApi\n */\nclass PreloadAllModules {\n    preload(route, fn) {\n        return fn().pipe(catchError(() => of(null)));\n    }\n}\n/**\n * @description\n *\n * Provides a preloading strategy that does not preload any modules.\n *\n * This strategy is enabled by default.\n *\n * @publicApi\n */\nclass NoPreloading {\n    preload(route, fn) {\n        return of(null);\n    }\n}\n/**\n * The preloader optimistically loads all router configurations to\n * make navigations into lazily-loaded sections of the application faster.\n *\n * The preloader runs in the background. When the router bootstraps, the preloader\n * starts listening to all navigation events. After every such event, the preloader\n * will check if any configurations can be loaded lazily.\n *\n * If a route is protected by `canLoad` guards, the preloaded will not load it.\n *\n * @publicApi\n */\nclass RouterPreloader {\n    constructor(router, moduleLoader, compiler, injector, preloadingStrategy) {\n        this.router = router;\n        this.injector = injector;\n        this.preloadingStrategy = preloadingStrategy;\n        const onStartLoad = (r) => router.triggerEvent(new RouteConfigLoadStart(r));\n        const onEndLoad = (r) => router.triggerEvent(new RouteConfigLoadEnd(r));\n        this.loader = new RouterConfigLoader(moduleLoader, compiler, onStartLoad, onEndLoad);\n    }\n    setUpPreloading() {\n        this.subscription =\n            this.router.events\n                .pipe(filter((e) => e instanceof NavigationEnd), concatMap(() => this.preload()))\n                .subscribe(() => { });\n    }\n    preload() {\n        const ngModule = this.injector.get(NgModuleRef);\n        return this.processRoutes(ngModule, this.router.config);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    processRoutes(ngModule, routes) {\n        const res = [];\n        for (const route of routes) {\n            // we already have the config loaded, just recurse\n            if (route.loadChildren && !route.canLoad && route._loadedConfig) {\n                const childConfig = route._loadedConfig;\n                res.push(this.processRoutes(childConfig.module, childConfig.routes));\n                // no config loaded, fetch the config\n            }\n            else if (route.loadChildren && !route.canLoad) {\n                res.push(this.preloadConfig(ngModule, route));\n                // recurse into children\n            }\n            else if (route.children) {\n                res.push(this.processRoutes(ngModule, route.children));\n            }\n        }\n        return from(res).pipe(mergeAll(), map((_) => void 0));\n    }\n    preloadConfig(ngModule, route) {\n        return this.preloadingStrategy.preload(route, () => {\n            const loaded$ = this.loader.load(ngModule.injector, route);\n            return loaded$.pipe(mergeMap((config) => {\n                route._loadedConfig = config;\n                return this.processRoutes(config.module, config.routes);\n            }));\n        });\n    }\n}\nRouterPreloader.ɵfac = function RouterPreloader_Factory(t) { return new (t || RouterPreloader)(ɵngcc0.ɵɵinject(Router), ɵngcc0.ɵɵinject(ɵngcc0.NgModuleFactoryLoader), ɵngcc0.ɵɵinject(ɵngcc0.Compiler), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(PreloadingStrategy)); };\nRouterPreloader.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: RouterPreloader, factory: RouterPreloader.ɵfac });\nRouterPreloader.ctorParameters = () => [\n    { type: Router },\n    { type: NgModuleFactoryLoader },\n    { type: Compiler },\n    { type: Injector },\n    { type: PreloadingStrategy }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RouterPreloader, [{\n        type: Injectable\n    }], function () { return [{ type: Router }, { type: ɵngcc0.NgModuleFactoryLoader }, { type: ɵngcc0.Compiler }, { type: ɵngcc0.Injector }, { type: PreloadingStrategy }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass RouterScroller {\n    constructor(router, \n    /** @docsNotRequired */ viewportScroller, options = {}) {\n        this.router = router;\n        this.viewportScroller = viewportScroller;\n        this.options = options;\n        this.lastId = 0;\n        this.lastSource = 'imperative';\n        this.restoredId = 0;\n        this.store = {};\n        // Default both options to 'disabled'\n        options.scrollPositionRestoration = options.scrollPositionRestoration || 'disabled';\n        options.anchorScrolling = options.anchorScrolling || 'disabled';\n    }\n    init() {\n        // we want to disable the automatic scrolling because having two places\n        // responsible for scrolling results race conditions, especially given\n        // that browser don't implement this behavior consistently\n        if (this.options.scrollPositionRestoration !== 'disabled') {\n            this.viewportScroller.setHistoryScrollRestoration('manual');\n        }\n        this.routerEventsSubscription = this.createScrollEvents();\n        this.scrollEventsSubscription = this.consumeScrollEvents();\n    }\n    createScrollEvents() {\n        return this.router.events.subscribe(e => {\n            if (e instanceof NavigationStart) {\n                // store the scroll position of the current stable navigations.\n                this.store[this.lastId] = this.viewportScroller.getScrollPosition();\n                this.lastSource = e.navigationTrigger;\n                this.restoredId = e.restoredState ? e.restoredState.navigationId : 0;\n            }\n            else if (e instanceof NavigationEnd) {\n                this.lastId = e.id;\n                this.scheduleScrollEvent(e, this.router.parseUrl(e.urlAfterRedirects).fragment);\n            }\n        });\n    }\n    consumeScrollEvents() {\n        return this.router.events.subscribe(e => {\n            if (!(e instanceof Scroll))\n                return;\n            // a popstate event. The pop state event will always ignore anchor scrolling.\n            if (e.position) {\n                if (this.options.scrollPositionRestoration === 'top') {\n                    this.viewportScroller.scrollToPosition([0, 0]);\n                }\n                else if (this.options.scrollPositionRestoration === 'enabled') {\n                    this.viewportScroller.scrollToPosition(e.position);\n                }\n                // imperative navigation \"forward\"\n            }\n            else {\n                if (e.anchor && this.options.anchorScrolling === 'enabled') {\n                    this.viewportScroller.scrollToAnchor(e.anchor);\n                }\n                else if (this.options.scrollPositionRestoration !== 'disabled') {\n                    this.viewportScroller.scrollToPosition([0, 0]);\n                }\n            }\n        });\n    }\n    scheduleScrollEvent(routerEvent, anchor) {\n        this.router.triggerEvent(new Scroll(routerEvent, this.lastSource === 'popstate' ? this.store[this.restoredId] : null, anchor));\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        if (this.routerEventsSubscription) {\n            this.routerEventsSubscription.unsubscribe();\n        }\n        if (this.scrollEventsSubscription) {\n            this.scrollEventsSubscription.unsubscribe();\n        }\n    }\n}\nRouterScroller.ɵfac = function RouterScroller_Factory(t) { return new (t || RouterScroller)(ɵngcc0.ɵɵinject(Router), ɵngcc0.ɵɵinject(ɵngcc1.ViewportScroller), ɵngcc0.ɵɵinject(undefined)); };\nRouterScroller.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: RouterScroller, factory: RouterScroller.ɵfac });\nRouterScroller.ctorParameters = () => [\n    { type: Router },\n    { type: ViewportScroller },\n    { type: undefined }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RouterScroller, [{\n        type: Injectable\n    }], function () { return [{ type: Router }, { type: ɵngcc1.ViewportScroller }, { type: undefined }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The directives defined in the `RouterModule`.\n */\nconst ROUTER_DIRECTIVES = [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive, ɵEmptyOutletComponent];\n/**\n * A [DI token](guide/glossary/#di-token) for the router service.\n *\n * @publicApi\n */\nconst ROUTER_CONFIGURATION = new InjectionToken('ROUTER_CONFIGURATION');\n/**\n * @docsNotRequired\n */\nconst ROUTER_FORROOT_GUARD = new InjectionToken('ROUTER_FORROOT_GUARD');\nconst ɵ0 = { enableTracing: false };\nconst ROUTER_PROVIDERS = [\n    Location,\n    { provide: UrlSerializer, useClass: DefaultUrlSerializer },\n    {\n        provide: Router,\n        useFactory: setupRouter,\n        deps: [\n            UrlSerializer, ChildrenOutletContexts, Location, Injector, NgModuleFactoryLoader, Compiler,\n            ROUTES, ROUTER_CONFIGURATION, [UrlHandlingStrategy, new Optional()],\n            [RouteReuseStrategy, new Optional()]\n        ]\n    },\n    ChildrenOutletContexts,\n    { provide: ActivatedRoute, useFactory: rootRoute, deps: [Router] },\n    { provide: NgModuleFactoryLoader, useClass: SystemJsNgModuleLoader },\n    RouterPreloader,\n    NoPreloading,\n    PreloadAllModules,\n    { provide: ROUTER_CONFIGURATION, useValue: ɵ0 },\n];\nfunction routerNgProbeToken() {\n    return new NgProbeToken('Router', Router);\n}\n/**\n * @description\n *\n * Adds directives and providers for in-app navigation among views defined in an application.\n * Use the Angular `Router` service to declaratively specify application states and manage state\n * transitions.\n *\n * You can import this NgModule multiple times, once for each lazy-loaded bundle.\n * However, only one `Router` service can be active.\n * To ensure this, there are two ways to register routes when importing this module:\n *\n * * The `forRoot()` method creates an `NgModule` that contains all the directives, the given\n * routes, and the `Router` service itself.\n * * The `forChild()` method creates an `NgModule` that contains all the directives and the given\n * routes, but does not include the `Router` service.\n *\n * @see [Routing and Navigation guide](guide/router) for an\n * overview of how the `Router` service should be used.\n *\n * @publicApi\n */\nclass RouterModule {\n    // Note: We are injecting the Router so it gets created eagerly...\n    constructor(guard, router) { }\n    /**\n     * Creates and configures a module with all the router providers and directives.\n     * Optionally sets up an application listener to perform an initial navigation.\n     *\n     * When registering the NgModule at the root, import as follows:\n     *\n     * ```\n     * @NgModule({\n     *   imports: [RouterModule.forRoot(ROUTES)]\n     * })\n     * class MyNgModule {}\n     * ```\n     *\n     * @param routes An array of `Route` objects that define the navigation paths for the application.\n     * @param config An `ExtraOptions` configuration object that controls how navigation is performed.\n     * @return The new `NgModule`.\n     *\n     */\n    static forRoot(routes, config) {\n        return {\n            ngModule: RouterModule,\n            providers: [\n                ROUTER_PROVIDERS,\n                provideRoutes(routes),\n                {\n                    provide: ROUTER_FORROOT_GUARD,\n                    useFactory: provideForRootGuard,\n                    deps: [[Router, new Optional(), new SkipSelf()]]\n                },\n                { provide: ROUTER_CONFIGURATION, useValue: config ? config : {} },\n                {\n                    provide: LocationStrategy,\n                    useFactory: provideLocationStrategy,\n                    deps: [PlatformLocation, [new Inject(APP_BASE_HREF), new Optional()], ROUTER_CONFIGURATION]\n                },\n                {\n                    provide: RouterScroller,\n                    useFactory: createRouterScroller,\n                    deps: [Router, ViewportScroller, ROUTER_CONFIGURATION]\n                },\n                {\n                    provide: PreloadingStrategy,\n                    useExisting: config && config.preloadingStrategy ? config.preloadingStrategy :\n                        NoPreloading\n                },\n                { provide: NgProbeToken, multi: true, useFactory: routerNgProbeToken },\n                provideRouterInitializer(),\n            ],\n        };\n    }\n    /**\n     * Creates a module with all the router directives and a provider registering routes,\n     * without creating a new Router service.\n     * When registering for submodules and lazy-loaded submodules, create the NgModule as follows:\n     *\n     * ```\n     * @NgModule({\n     *   imports: [RouterModule.forChild(ROUTES)]\n     * })\n     * class MyNgModule {}\n     * ```\n     *\n     * @param routes An array of `Route` objects that define the navigation paths for the submodule.\n     * @return The new NgModule.\n     *\n     */\n    static forChild(routes) {\n        return { ngModule: RouterModule, providers: [provideRoutes(routes)] };\n    }\n}\nRouterModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: RouterModule });\nRouterModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function RouterModule_Factory(t) { return new (t || RouterModule)(ɵngcc0.ɵɵinject(ROUTER_FORROOT_GUARD, 8), ɵngcc0.ɵɵinject(Router, 8)); } });\nRouterModule.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [ROUTER_FORROOT_GUARD,] }] },\n    { type: Router, decorators: [{ type: Optional }] }\n];\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(RouterModule, { declarations: [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive, ɵEmptyOutletComponent], exports: [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive, ɵEmptyOutletComponent] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RouterModule, [{\n        type: NgModule,\n        args: [{\n                declarations: ROUTER_DIRECTIVES,\n                exports: ROUTER_DIRECTIVES,\n                entryComponents: [ɵEmptyOutletComponent]\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ROUTER_FORROOT_GUARD]\n            }] }, { type: Router, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\nfunction createRouterScroller(router, viewportScroller, config) {\n    if (config.scrollOffset) {\n        viewportScroller.setOffset(config.scrollOffset);\n    }\n    return new RouterScroller(router, viewportScroller, config);\n}\nfunction provideLocationStrategy(platformLocationStrategy, baseHref, options = {}) {\n    return options.useHash ? new HashLocationStrategy(platformLocationStrategy, baseHref) :\n        new PathLocationStrategy(platformLocationStrategy, baseHref);\n}\nfunction provideForRootGuard(router) {\n    if (router) {\n        throw new Error(`RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead.`);\n    }\n    return 'guarded';\n}\n/**\n * Registers a [DI provider](guide/glossary#provider) for a set of routes.\n * @param routes The route configuration to provide.\n *\n * @usageNotes\n *\n * ```\n * @NgModule({\n *   imports: [RouterModule.forChild(ROUTES)],\n *   providers: [provideRoutes(EXTRA_ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * @publicApi\n */\nfunction provideRoutes(routes) {\n    return [\n        { provide: ANALYZE_FOR_ENTRY_COMPONENTS, multi: true, useValue: routes },\n        { provide: ROUTES, multi: true, useValue: routes },\n    ];\n}\nfunction setupRouter(urlSerializer, contexts, location, injector, loader, compiler, config, opts = {}, urlHandlingStrategy, routeReuseStrategy) {\n    const router = new Router(null, urlSerializer, contexts, location, injector, loader, compiler, flatten(config));\n    if (urlHandlingStrategy) {\n        router.urlHandlingStrategy = urlHandlingStrategy;\n    }\n    if (routeReuseStrategy) {\n        router.routeReuseStrategy = routeReuseStrategy;\n    }\n    if (opts.errorHandler) {\n        router.errorHandler = opts.errorHandler;\n    }\n    if (opts.malformedUriErrorHandler) {\n        router.malformedUriErrorHandler = opts.malformedUriErrorHandler;\n    }\n    if (opts.enableTracing) {\n        const dom = ɵgetDOM();\n        router.events.subscribe((e) => {\n            dom.logGroup(`Router Event: ${e.constructor.name}`);\n            dom.log(e.toString());\n            dom.log(e);\n            dom.logGroupEnd();\n        });\n    }\n    if (opts.onSameUrlNavigation) {\n        router.onSameUrlNavigation = opts.onSameUrlNavigation;\n    }\n    if (opts.paramsInheritanceStrategy) {\n        router.paramsInheritanceStrategy = opts.paramsInheritanceStrategy;\n    }\n    if (opts.urlUpdateStrategy) {\n        router.urlUpdateStrategy = opts.urlUpdateStrategy;\n    }\n    if (opts.relativeLinkResolution) {\n        router.relativeLinkResolution = opts.relativeLinkResolution;\n    }\n    return router;\n}\nfunction rootRoute(router) {\n    return router.routerState.root;\n}\n/**\n * Router initialization requires two steps:\n *\n * First, we start the navigation in a `APP_INITIALIZER` to block the bootstrap if\n * a resolver or a guard executes asynchronously.\n *\n * Next, we actually run activation in a `BOOTSTRAP_LISTENER`, using the\n * `afterPreactivation` hook provided by the router.\n * The router navigation starts, reaches the point when preactivation is done, and then\n * pauses. It waits for the hook to be resolved. We then resolve it only in a bootstrap listener.\n */\nclass RouterInitializer {\n    constructor(injector) {\n        this.injector = injector;\n        this.initNavigation = false;\n        this.resultOfPreactivationDone = new Subject();\n    }\n    appInitializer() {\n        const p = this.injector.get(LOCATION_INITIALIZED, Promise.resolve(null));\n        return p.then(() => {\n            let resolve = null;\n            const res = new Promise(r => resolve = r);\n            const router = this.injector.get(Router);\n            const opts = this.injector.get(ROUTER_CONFIGURATION);\n            if (this.isLegacyDisabled(opts) || this.isLegacyEnabled(opts)) {\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'disabled') {\n                router.setUpLocationChangeListener();\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'enabled') {\n                router.hooks.afterPreactivation = () => {\n                    // only the initial navigation should be delayed\n                    if (!this.initNavigation) {\n                        this.initNavigation = true;\n                        resolve(true);\n                        return this.resultOfPreactivationDone;\n                        // subsequent navigations should not be delayed\n                    }\n                    else {\n                        return of(null);\n                    }\n                };\n                router.initialNavigation();\n            }\n            else {\n                throw new Error(`Invalid initialNavigation options: '${opts.initialNavigation}'`);\n            }\n            return res;\n        });\n    }\n    bootstrapListener(bootstrappedComponentRef) {\n        const opts = this.injector.get(ROUTER_CONFIGURATION);\n        const preloader = this.injector.get(RouterPreloader);\n        const routerScroller = this.injector.get(RouterScroller);\n        const router = this.injector.get(Router);\n        const ref = this.injector.get(ApplicationRef);\n        if (bootstrappedComponentRef !== ref.components[0]) {\n            return;\n        }\n        if (this.isLegacyEnabled(opts)) {\n            router.initialNavigation();\n        }\n        else if (this.isLegacyDisabled(opts)) {\n            router.setUpLocationChangeListener();\n        }\n        preloader.setUpPreloading();\n        routerScroller.init();\n        router.resetRootComponentType(ref.componentTypes[0]);\n        this.resultOfPreactivationDone.next(null);\n        this.resultOfPreactivationDone.complete();\n    }\n    isLegacyEnabled(opts) {\n        return opts.initialNavigation === 'legacy_enabled' || opts.initialNavigation === true ||\n            opts.initialNavigation === undefined;\n    }\n    isLegacyDisabled(opts) {\n        return opts.initialNavigation === 'legacy_disabled' || opts.initialNavigation === false;\n    }\n}\nRouterInitializer.ɵfac = function RouterInitializer_Factory(t) { return new (t || RouterInitializer)(ɵngcc0.ɵɵinject(ɵngcc0.Injector)); };\nRouterInitializer.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: RouterInitializer, factory: RouterInitializer.ɵfac });\nRouterInitializer.ctorParameters = () => [\n    { type: Injector }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RouterInitializer, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc0.Injector }]; }, null); })();\nfunction getAppInitializer(r) {\n    return r.appInitializer.bind(r);\n}\nfunction getBootstrapListener(r) {\n    return r.bootstrapListener.bind(r);\n}\n/**\n * A [DI token](guide/glossary/#di-token) for the router initializer that\n * is called after the app is bootstrapped.\n *\n * @publicApi\n */\nconst ROUTER_INITIALIZER = new InjectionToken('Router Initializer');\nfunction provideRouterInitializer() {\n    return [\n        RouterInitializer,\n        {\n            provide: APP_INITIALIZER,\n            multi: true,\n            useFactory: getAppInitializer,\n            deps: [RouterInitializer]\n        },\n        { provide: ROUTER_INITIALIZER, useFactory: getBootstrapListener, deps: [RouterInitializer] },\n        { provide: APP_BOOTSTRAP_LISTENER, multi: true, useExisting: ROUTER_INITIALIZER },\n    ];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('10.0.11');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ActivatedRoute, ActivatedRouteSnapshot, ActivationEnd, ActivationStart, ChildActivationEnd, ChildActivationStart, ChildrenOutletContexts, DefaultUrlSerializer, GuardsCheckEnd, GuardsCheckStart, NavigationCancel, NavigationEnd, NavigationError, NavigationStart, NoPreloading, OutletContext, PRIMARY_OUTLET, PreloadAllModules, PreloadingStrategy, ROUTER_CONFIGURATION, ROUTER_INITIALIZER, ROUTES, ResolveEnd, ResolveStart, RouteConfigLoadEnd, RouteConfigLoadStart, RouteReuseStrategy, Router, RouterEvent, RouterLink, RouterLinkActive, RouterLinkWithHref, RouterModule, RouterOutlet, RouterPreloader, RouterState, RouterStateSnapshot, RoutesRecognized, Scroll, UrlHandlingStrategy, UrlSegment, UrlSegmentGroup, UrlSerializer, UrlTree, VERSION, convertToParamMap, provideRoutes, ɵEmptyOutletComponent, ROUTER_PROVIDERS as ɵROUTER_PROVIDERS, ROUTER_FORROOT_GUARD as ɵangular_packages_router_router_a, routerNgProbeToken as ɵangular_packages_router_router_b, createRouterScroller as ɵangular_packages_router_router_c, provideLocationStrategy as ɵangular_packages_router_router_d, provideForRootGuard as ɵangular_packages_router_router_e, setupRouter as ɵangular_packages_router_router_f, rootRoute as ɵangular_packages_router_router_g, RouterInitializer as ɵangular_packages_router_router_h, getAppInitializer as ɵangular_packages_router_router_i, getBootstrapListener as ɵangular_packages_router_router_j, provideRouterInitializer as ɵangular_packages_router_router_k, ɵEmptyOutletComponent as ɵangular_packages_router_router_l, Tree as ɵangular_packages_router_router_m, TreeNode as ɵangular_packages_router_router_n, RouterScroller as ɵangular_packages_router_router_o, flatten as ɵflatten };\n\n//# sourceMappingURL=router.js.map","import { EmptyError } from '../util/EmptyError';\nimport { filter } from './filter';\nimport { takeLast } from './takeLast';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { identity } from '../util/identity';\nexport function last(predicate, defaultValue) {\n    const hasDefaultValue = arguments.length >= 2;\n    return (source) => source.pipe(predicate ? filter((v, i) => predicate(v, i, source)) : identity, takeLast(1), hasDefaultValue ? defaultIfEmpty(defaultValue) : throwIfEmpty(() => new EmptyError()));\n}\n//# sourceMappingURL=last.js.map","import { ElementRef } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Coerces a data-bound value (typically a string) to a boolean. */\nfunction coerceBooleanProperty(value) {\n    return value != null && `${value}` !== 'false';\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction coerceNumberProperty(value, fallbackValue = 0) {\n    return _isNumberValue(value) ? Number(value) : fallbackValue;\n}\n/**\n * Whether the provided value is considered a number.\n * @docs-private\n */\nfunction _isNumberValue(value) {\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n    return !isNaN(parseFloat(value)) && !isNaN(Number(value));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction coerceArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Coerces a value to a CSS pixel value. */\nfunction coerceCssPixelValue(value) {\n    if (value == null) {\n        return '';\n    }\n    return typeof value === 'string' ? value : `${value}px`;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Coerces an ElementRef or an Element into an element.\n * Useful for APIs that can accept either a ref or the native element itself.\n */\nfunction coerceElement(elementOrRef) {\n    return elementOrRef instanceof ElementRef ? elementOrRef.nativeElement : elementOrRef;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport { _isNumberValue, coerceArray, coerceBooleanProperty, coerceCssPixelValue, coerceElement, coerceNumberProperty };\n//# sourceMappingURL=coercion.js.map\n","import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function audit(durationSelector) {\n    return function auditOperatorFunction(source) {\n        return source.lift(new AuditOperator(durationSelector));\n    };\n}\nclass AuditOperator {\n    constructor(durationSelector) {\n        this.durationSelector = durationSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new AuditSubscriber(subscriber, this.durationSelector));\n    }\n}\nclass AuditSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, durationSelector) {\n        super(destination);\n        this.durationSelector = durationSelector;\n        this.hasValue = false;\n    }\n    _next(value) {\n        this.value = value;\n        this.hasValue = true;\n        if (!this.throttled) {\n            let duration;\n            try {\n                const { durationSelector } = this;\n                duration = durationSelector(value);\n            }\n            catch (err) {\n                return this.destination.error(err);\n            }\n            const innerSubscription = innerSubscribe(duration, new SimpleInnerSubscriber(this));\n            if (!innerSubscription || innerSubscription.closed) {\n                this.clearThrottle();\n            }\n            else {\n                this.add(this.throttled = innerSubscription);\n            }\n        }\n    }\n    clearThrottle() {\n        const { value, hasValue, throttled } = this;\n        if (throttled) {\n            this.remove(throttled);\n            this.throttled = undefined;\n            throttled.unsubscribe();\n        }\n        if (hasValue) {\n            this.value = undefined;\n            this.hasValue = false;\n            this.destination.next(value);\n        }\n    }\n    notifyNext() {\n        this.clearThrottle();\n    }\n    notifyComplete() {\n        this.clearThrottle();\n    }\n}\n//# sourceMappingURL=audit.js.map","import { async } from '../scheduler/async';\nimport { audit } from './audit';\nimport { timer } from '../observable/timer';\nexport function auditTime(duration, scheduler = async) {\n    return audit(() => timer(duration, scheduler));\n}\n//# sourceMappingURL=auditTime.js.map","import { innerSubscribe, SimpleInnerSubscriber, SimpleOuterSubscriber } from '../innerSubscribe';\nexport function takeUntil(notifier) {\n    return (source) => source.lift(new TakeUntilOperator(notifier));\n}\nclass TakeUntilOperator {\n    constructor(notifier) {\n        this.notifier = notifier;\n    }\n    call(subscriber, source) {\n        const takeUntilSubscriber = new TakeUntilSubscriber(subscriber);\n        const notifierSubscription = innerSubscribe(this.notifier, new SimpleInnerSubscriber(takeUntilSubscriber));\n        if (notifierSubscription && !takeUntilSubscriber.seenValue) {\n            takeUntilSubscriber.add(notifierSubscription);\n            return source.subscribe(takeUntilSubscriber);\n        }\n        return takeUntilSubscriber;\n    }\n}\nclass TakeUntilSubscriber extends SimpleOuterSubscriber {\n    constructor(destination) {\n        super(destination);\n        this.seenValue = false;\n    }\n    notifyNext() {\n        this.seenValue = true;\n        this.complete();\n    }\n    notifyComplete() {\n    }\n}\n//# sourceMappingURL=takeUntil.js.map","import { ɵɵdefineInjectable, ɵɵinject, PLATFORM_ID, Injectable, Inject, NgModule } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\nimport * as ɵngcc0 from '@angular/core';\nlet hasV8BreakIterator;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    hasV8BreakIterator = (typeof Intl !== 'undefined' && Intl.v8BreakIterator);\n}\ncatch (_a) {\n    hasV8BreakIterator = false;\n}\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nclass Platform {\n    constructor(_platformId) {\n        this._platformId = _platformId;\n        // We want to use the Angular platform check because if the Document is shimmed\n        // without the navigator, the following checks will fail. This is preferred because\n        // sometimes the Document may be shimmed without the user's knowledge or intention\n        /** Whether the Angular application is being rendered in the browser. */\n        this.isBrowser = this._platformId ?\n            isPlatformBrowser(this._platformId) : typeof document === 'object' && !!document;\n        /** Whether the current browser is Microsoft Edge. */\n        this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n        /** Whether the current rendering engine is Microsoft Trident. */\n        this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n        // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n        /** Whether the current rendering engine is Blink. */\n        this.BLINK = this.isBrowser && (!!(window.chrome || hasV8BreakIterator) &&\n            typeof CSS !== 'undefined' && !this.EDGE && !this.TRIDENT);\n        // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n        // ensure that Webkit runs standalone and is not used as another engine's base.\n        /** Whether the current rendering engine is WebKit. */\n        this.WEBKIT = this.isBrowser &&\n            /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n        /** Whether the current platform is Apple iOS. */\n        this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) &&\n            !('MSStream' in window);\n        // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n        // them self as Gecko-like browsers and modify the userAgent's according to that.\n        // Since we only cover one explicit Firefox case, we can simply check for Firefox\n        // instead of having an unstable check for Gecko.\n        /** Whether the current browser is Firefox. */\n        this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n        /** Whether the current platform is Android. */\n        // Trident on mobile adds the android platform to the userAgent to trick detections.\n        this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n        // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n        // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n        // Safari browser should also use Webkit as its layout engine.\n        /** Whether the current browser is Safari. */\n        this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n    }\n}\nPlatform.ɵfac = function Platform_Factory(t) { return new (t || Platform)(ɵngcc0.ɵɵinject(PLATFORM_ID)); };\nPlatform.ɵprov = ɵɵdefineInjectable({ factory: function Platform_Factory() { return new Platform(ɵɵinject(PLATFORM_ID)); }, token: Platform, providedIn: \"root\" });\nPlatform.ctorParameters = () => [\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Platform, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass PlatformModule {\n}\nPlatformModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: PlatformModule });\nPlatformModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function PlatformModule_Factory(t) { return new (t || PlatformModule)(); } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PlatformModule, [{\n        type: NgModule,\n        args: [{}]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Cached result Set of input types support by the current browser. */\nlet supportedInputTypes;\n/** Types of `<input>` that *might* be supported. */\nconst candidateInputTypes = [\n    // `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\n    // first changing it to something else:\n    // The specified value \"\" does not conform to the required format.\n    // The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\n    'color',\n    'button',\n    'checkbox',\n    'date',\n    'datetime-local',\n    'email',\n    'file',\n    'hidden',\n    'image',\n    'month',\n    'number',\n    'password',\n    'radio',\n    'range',\n    'reset',\n    'search',\n    'submit',\n    'tel',\n    'text',\n    'time',\n    'url',\n    'week',\n];\n/** @returns The input types supported by this browser. */\nfunction getSupportedInputTypes() {\n    // Result is cached.\n    if (supportedInputTypes) {\n        return supportedInputTypes;\n    }\n    // We can't check if an input type is not supported until we're on the browser, so say that\n    // everything is supported when not on the browser. We don't use `Platform` here since it's\n    // just a helper function and can't inject it.\n    if (typeof document !== 'object' || !document) {\n        supportedInputTypes = new Set(candidateInputTypes);\n        return supportedInputTypes;\n    }\n    let featureTestInput = document.createElement('input');\n    supportedInputTypes = new Set(candidateInputTypes.filter(value => {\n        featureTestInput.setAttribute('type', value);\n        return featureTestInput.type === value;\n    }));\n    return supportedInputTypes;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Cached result of whether the user's browser supports passive event listeners. */\nlet supportsPassiveEvents;\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n */\nfunction supportsPassiveEventListeners() {\n    if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n        try {\n            window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n                get: () => supportsPassiveEvents = true\n            }));\n        }\n        finally {\n            supportsPassiveEvents = supportsPassiveEvents || false;\n        }\n    }\n    return supportsPassiveEvents;\n}\n/**\n * Normalizes an `AddEventListener` object to something that can be passed\n * to `addEventListener` on any browser, no matter whether it supports the\n * `options` parameter.\n * @param options Object to be normalized.\n */\nfunction normalizePassiveListenerOptions(options) {\n    return supportsPassiveEventListeners() ? options : !!options.capture;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Cached result of the way the browser handles the horizontal scroll axis in RTL mode. */\nlet rtlScrollAxisType;\n/** Check whether the browser supports scroll behaviors. */\nfunction supportsScrollBehavior() {\n    return !!(typeof document == 'object' && 'scrollBehavior' in document.documentElement.style);\n}\n/**\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\n */\nfunction getRtlScrollAxisType() {\n    // We can't check unless we're on the browser. Just assume 'normal' if we're not.\n    if (typeof document !== 'object' || !document) {\n        return 0 /* NORMAL */;\n    }\n    if (rtlScrollAxisType == null) {\n        // Create a 1px wide scrolling container and a 2px wide content element.\n        const scrollContainer = document.createElement('div');\n        const containerStyle = scrollContainer.style;\n        scrollContainer.dir = 'rtl';\n        containerStyle.width = '1px';\n        containerStyle.overflow = 'auto';\n        containerStyle.visibility = 'hidden';\n        containerStyle.pointerEvents = 'none';\n        containerStyle.position = 'absolute';\n        const content = document.createElement('div');\n        const contentStyle = content.style;\n        contentStyle.width = '2px';\n        contentStyle.height = '1px';\n        scrollContainer.appendChild(content);\n        document.body.appendChild(scrollContainer);\n        rtlScrollAxisType = 0 /* NORMAL */;\n        // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\n        // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\n        // dealing with one of the other two types of browsers.\n        if (scrollContainer.scrollLeft === 0) {\n            // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\n            // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\n            // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\n            // return 0 when we read it again.\n            scrollContainer.scrollLeft = 1;\n            rtlScrollAxisType =\n                scrollContainer.scrollLeft === 0 ? 1 /* NEGATED */ : 2 /* INVERTED */;\n        }\n        scrollContainer.parentNode.removeChild(scrollContainer);\n    }\n    return rtlScrollAxisType;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet shadowDomIsSupported;\n/** Checks whether the user's browser support Shadow DOM. */\nfunction _supportsShadowDom() {\n    if (shadowDomIsSupported == null) {\n        const head = typeof document !== 'undefined' ? document.head : null;\n        shadowDomIsSupported = !!(head && (head.createShadowRoot || head.attachShadow));\n    }\n    return shadowDomIsSupported;\n}\n/** Gets the shadow root of an element, if supported and the element is inside the Shadow DOM. */\nfunction _getShadowRoot(element) {\n    if (_supportsShadowDom()) {\n        const rootNode = element.getRootNode ? element.getRootNode() : null;\n        // Note that this should be caught by `_supportsShadowDom`, but some\n        // teams have been able to hit this code path on unsupported browsers.\n        if (typeof ShadowRoot !== 'undefined' && ShadowRoot && rootNode instanceof ShadowRoot) {\n            return rootNode;\n        }\n    }\n    return null;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Platform, PlatformModule, _getShadowRoot, _supportsShadowDom, getRtlScrollAxisType, getSupportedInputTypes, normalizePassiveListenerOptions, supportsPassiveEventListeners, supportsScrollBehavior };\n\n//# sourceMappingURL=platform.js.map","import { InjectionToken, inject, EventEmitter, ɵɵdefineInjectable, ɵɵinject, Injectable, Optional, Inject, Directive, Output, Input, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n    providedIn: 'root',\n    factory: DIR_DOCUMENT_FACTORY,\n});\n/** @docs-private */\nfunction DIR_DOCUMENT_FACTORY() {\n    return inject(DOCUMENT);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nclass Directionality {\n    constructor(_document) {\n        /** The current 'ltr' or 'rtl' value. */\n        this.value = 'ltr';\n        /** Stream that emits whenever the 'ltr' / 'rtl' state changes. */\n        this.change = new EventEmitter();\n        if (_document) {\n            // TODO: handle 'auto' value -\n            // We still need to account for dir=\"auto\".\n            // It looks like HTMLElemenet.dir is also \"auto\" when that's set to the attribute,\n            // but getComputedStyle return either \"ltr\" or \"rtl\". avoiding getComputedStyle for now\n            const bodyDir = _document.body ? _document.body.dir : null;\n            const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n            const value = bodyDir || htmlDir;\n            this.value = (value === 'ltr' || value === 'rtl') ? value : 'ltr';\n        }\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDirectionality.ɵfac = function Directionality_Factory(t) { return new (t || Directionality)(ɵngcc0.ɵɵinject(DIR_DOCUMENT, 8)); };\nDirectionality.ɵprov = ɵɵdefineInjectable({ factory: function Directionality_Factory() { return new Directionality(ɵɵinject(DIR_DOCUMENT, 8)); }, token: Directionality, providedIn: \"root\" });\nDirectionality.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DIR_DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Directionality, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DIR_DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nclass Dir {\n    constructor() {\n        /** Normalized direction that accounts for invalid/unsupported values. */\n        this._dir = 'ltr';\n        /** Whether the `value` has been set to its initial value. */\n        this._isInitialized = false;\n        /** Event emitted when the direction changes. */\n        this.change = new EventEmitter();\n    }\n    /** @docs-private */\n    get dir() { return this._dir; }\n    set dir(value) {\n        const old = this._dir;\n        const normalizedValue = value ? value.toLowerCase() : value;\n        this._rawDir = value;\n        this._dir = (normalizedValue === 'ltr' || normalizedValue === 'rtl') ? normalizedValue : 'ltr';\n        if (old !== this._dir && this._isInitialized) {\n            this.change.emit(this._dir);\n        }\n    }\n    /** Current layout direction of the element. */\n    get value() { return this.dir; }\n    /** Initialize once default value has been set. */\n    ngAfterContentInit() {\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDir.ɵfac = function Dir_Factory(t) { return new (t || Dir)(); };\nDir.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: Dir, selectors: [[\"\", \"dir\", \"\"]], hostVars: 1, hostBindings: function Dir_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"dir\", ctx._rawDir);\n    } }, inputs: { dir: \"dir\" }, outputs: { change: \"dirChange\" }, exportAs: [\"dir\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: Directionality, useExisting: Dir }])] });\nDir.propDecorators = {\n    change: [{ type: Output, args: ['dirChange',] }],\n    dir: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Dir, [{\n        type: Directive,\n        args: [{\n                selector: '[dir]',\n                providers: [{ provide: Directionality, useExisting: Dir }],\n                host: { '[attr.dir]': '_rawDir' },\n                exportAs: 'dir'\n            }]\n    }], function () { return []; }, { change: [{\n            type: Output,\n            args: ['dirChange']\n        }], dir: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass BidiModule {\n}\nBidiModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: BidiModule });\nBidiModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function BidiModule_Factory(t) { return new (t || BidiModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BidiModule, { declarations: [Dir], exports: [Dir] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BidiModule, [{\n        type: NgModule,\n        args: [{\n                exports: [Dir],\n                declarations: [Dir]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BidiModule, DIR_DOCUMENT, Dir, Directionality, DIR_DOCUMENT_FACTORY as ɵangular_material_src_cdk_bidi_bidi_a };\n\n//# sourceMappingURL=bidi.js.map","import { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { InjectionToken, Directive, forwardRef, Input, ɵɵdefineInjectable, ɵɵinject, NgZone, Injectable, Optional, Inject, ElementRef, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, Output, ViewChild, ViewContainerRef, TemplateRef, IterableDiffers, SkipSelf, NgModule } from '@angular/core';\nimport { Subject, of, Observable, fromEvent, animationFrameScheduler, asapScheduler, Subscription, isObservable } from 'rxjs';\nimport { distinctUntilChanged, auditTime, filter, takeUntil, startWith, pairwise, switchMap, shareReplay } from 'rxjs/operators';\nimport { Platform, getRtlScrollAxisType, supportsScrollBehavior, PlatformModule } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { isDataSource, ArrayDataSource } from '@angular/cdk/collections';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The injection token used to specify the virtual scrolling strategy. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\n\nconst _c0 = [\"contentWrapper\"];\nconst _c1 = [\"*\"];\nconst VIRTUAL_SCROLL_STRATEGY = new InjectionToken('VIRTUAL_SCROLL_STRATEGY');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Virtual scrolling strategy for lists with items of known fixed size. */\nclass FixedSizeVirtualScrollStrategy {\n    /**\n     * @param itemSize The size of the items in the virtually scrolling list.\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    constructor(itemSize, minBufferPx, maxBufferPx) {\n        this._scrolledIndexChange = new Subject();\n        /** @docs-private Implemented as part of VirtualScrollStrategy. */\n        this.scrolledIndexChange = this._scrolledIndexChange.pipe(distinctUntilChanged());\n        /** The attached viewport. */\n        this._viewport = null;\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n    }\n    /**\n     * Attaches this scroll strategy to a viewport.\n     * @param viewport The viewport to attach this strategy to.\n     */\n    attach(viewport) {\n        this._viewport = viewport;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** Detaches this scroll strategy from the currently attached viewport. */\n    detach() {\n        this._scrolledIndexChange.complete();\n        this._viewport = null;\n    }\n    /**\n     * Update the item size and buffer size.\n     * @param itemSize The size of the items in the virtually scrolling list.\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    updateItemAndBufferSize(itemSize, minBufferPx, maxBufferPx) {\n        if (maxBufferPx < minBufferPx) {\n            throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');\n        }\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onContentScrolled() {\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onDataLengthChanged() {\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onContentRendered() { }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onRenderedOffsetChanged() { }\n    /**\n     * Scroll to the offset for the given index.\n     * @param index The index of the element to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling.\n     */\n    scrollToIndex(index, behavior) {\n        if (this._viewport) {\n            this._viewport.scrollToOffset(index * this._itemSize, behavior);\n        }\n    }\n    /** Update the viewport's total content size. */\n    _updateTotalContentSize() {\n        if (!this._viewport) {\n            return;\n        }\n        this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);\n    }\n    /** Update the viewport's rendered range. */\n    _updateRenderedRange() {\n        if (!this._viewport) {\n            return;\n        }\n        const renderedRange = this._viewport.getRenderedRange();\n        const newRange = { start: renderedRange.start, end: renderedRange.end };\n        const viewportSize = this._viewport.getViewportSize();\n        const dataLength = this._viewport.getDataLength();\n        let scrollOffset = this._viewport.measureScrollOffset();\n        let firstVisibleIndex = scrollOffset / this._itemSize;\n        // If user scrolls to the bottom of the list and data changes to a smaller list\n        if (newRange.end > dataLength) {\n            // We have to recalculate the first visible index based on new data length and viewport size.\n            const maxVisibleItems = Math.ceil(viewportSize / this._itemSize);\n            const newVisibleIndex = Math.max(0, Math.min(firstVisibleIndex, dataLength - maxVisibleItems));\n            // If first visible index changed we must update scroll offset to handle start/end buffers\n            // Current range must also be adjusted to cover the new position (bottom of new list).\n            if (firstVisibleIndex != newVisibleIndex) {\n                firstVisibleIndex = newVisibleIndex;\n                scrollOffset = newVisibleIndex * this._itemSize;\n                newRange.start = Math.floor(firstVisibleIndex);\n            }\n            newRange.end = Math.max(0, Math.min(dataLength, newRange.start + maxVisibleItems));\n        }\n        const startBuffer = scrollOffset - newRange.start * this._itemSize;\n        if (startBuffer < this._minBufferPx && newRange.start != 0) {\n            const expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);\n            newRange.start = Math.max(0, newRange.start - expandStart);\n            newRange.end = Math.min(dataLength, Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));\n        }\n        else {\n            const endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);\n            if (endBuffer < this._minBufferPx && newRange.end != dataLength) {\n                const expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);\n                if (expandEnd > 0) {\n                    newRange.end = Math.min(dataLength, newRange.end + expandEnd);\n                    newRange.start = Math.max(0, Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));\n                }\n            }\n        }\n        this._viewport.setRenderedRange(newRange);\n        this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);\n        this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));\n    }\n}\n/**\n * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created\n * `FixedSizeVirtualScrollStrategy` from the given directive.\n * @param fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the\n *     `FixedSizeVirtualScrollStrategy` from.\n */\nfunction _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir) {\n    return fixedSizeDir._scrollStrategy;\n}\n/** A virtual scroll strategy that supports fixed-size items. */\nclass CdkFixedSizeVirtualScroll {\n    constructor() {\n        this._itemSize = 20;\n        this._minBufferPx = 100;\n        this._maxBufferPx = 200;\n        /** The scroll strategy used by this directive. */\n        this._scrollStrategy = new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n    /** The size of the items in the list (in pixels). */\n    get itemSize() { return this._itemSize; }\n    set itemSize(value) { this._itemSize = coerceNumberProperty(value); }\n    /**\n     * The minimum amount of buffer rendered beyond the viewport (in pixels).\n     * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\n     */\n    get minBufferPx() { return this._minBufferPx; }\n    set minBufferPx(value) { this._minBufferPx = coerceNumberProperty(value); }\n    /**\n     * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\n     */\n    get maxBufferPx() { return this._maxBufferPx; }\n    set maxBufferPx(value) { this._maxBufferPx = coerceNumberProperty(value); }\n    ngOnChanges() {\n        this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n}\nCdkFixedSizeVirtualScroll.ɵfac = function CdkFixedSizeVirtualScroll_Factory(t) { return new (t || CdkFixedSizeVirtualScroll)(); };\nCdkFixedSizeVirtualScroll.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFixedSizeVirtualScroll, selectors: [[\"cdk-virtual-scroll-viewport\", \"itemSize\", \"\"]], inputs: { itemSize: \"itemSize\", minBufferPx: \"minBufferPx\", maxBufferPx: \"maxBufferPx\" }, features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: VIRTUAL_SCROLL_STRATEGY,\n                useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                deps: [forwardRef(() => CdkFixedSizeVirtualScroll)]\n            }]), ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkFixedSizeVirtualScroll.propDecorators = {\n    itemSize: [{ type: Input }],\n    minBufferPx: [{ type: Input }],\n    maxBufferPx: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFixedSizeVirtualScroll, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-virtual-scroll-viewport[itemSize]',\n                providers: [{\n                        provide: VIRTUAL_SCROLL_STRATEGY,\n                        useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                        deps: [forwardRef(() => CdkFixedSizeVirtualScroll)]\n                    }]\n            }]\n    }], function () { return []; }, { itemSize: [{\n            type: Input\n        }], minBufferPx: [{\n            type: Input\n        }], maxBufferPx: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Time in ms to throttle the scrolling events by default. */\nconst DEFAULT_SCROLL_TIME = 20;\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\nclass ScrollDispatcher {\n    constructor(_ngZone, _platform, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /** Subject for notifying that a registered scrollable reference element has been scrolled. */\n        this._scrolled = new Subject();\n        /** Keeps track of the global `scroll` and `resize` subscriptions. */\n        this._globalSubscription = null;\n        /** Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards. */\n        this._scrolledCount = 0;\n        /**\n         * Map of all the scrollable references that are registered with the service and their\n         * scroll event subscriptions.\n         */\n        this.scrollContainers = new Map();\n        this._document = document;\n    }\n    /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param scrollable Scrollable instance to be registered.\n     */\n    register(scrollable) {\n        if (!this.scrollContainers.has(scrollable)) {\n            this.scrollContainers.set(scrollable, scrollable.elementScrolled()\n                .subscribe(() => this._scrolled.next(scrollable)));\n        }\n    }\n    /**\n     * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param scrollable Scrollable instance to be deregistered.\n     */\n    deregister(scrollable) {\n        const scrollableReference = this.scrollContainers.get(scrollable);\n        if (scrollableReference) {\n            scrollableReference.unsubscribe();\n            this.scrollContainers.delete(scrollable);\n        }\n    }\n    /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     */\n    scrolled(auditTimeInMs = DEFAULT_SCROLL_TIME) {\n        if (!this._platform.isBrowser) {\n            return of();\n        }\n        return new Observable((observer) => {\n            if (!this._globalSubscription) {\n                this._addGlobalListener();\n            }\n            // In the case of a 0ms delay, use an observable without auditTime\n            // since it does add a perceptible delay in processing overhead.\n            const subscription = auditTimeInMs > 0 ?\n                this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer) :\n                this._scrolled.subscribe(observer);\n            this._scrolledCount++;\n            return () => {\n                subscription.unsubscribe();\n                this._scrolledCount--;\n                if (!this._scrolledCount) {\n                    this._removeGlobalListener();\n                }\n            };\n        });\n    }\n    ngOnDestroy() {\n        this._removeGlobalListener();\n        this.scrollContainers.forEach((_, container) => this.deregister(container));\n        this._scrolled.complete();\n    }\n    /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param elementRef Element whose ancestors to listen for.\n     * @param auditTimeInMs Time to throttle the scroll events.\n     */\n    ancestorScrolled(elementRef, auditTimeInMs) {\n        const ancestors = this.getAncestorScrollContainers(elementRef);\n        return this.scrolled(auditTimeInMs).pipe(filter(target => {\n            return !target || ancestors.indexOf(target) > -1;\n        }));\n    }\n    /** Returns all registered Scrollables that contain the provided element. */\n    getAncestorScrollContainers(elementRef) {\n        const scrollingContainers = [];\n        this.scrollContainers.forEach((_subscription, scrollable) => {\n            if (this._scrollableContainsElement(scrollable, elementRef)) {\n                scrollingContainers.push(scrollable);\n            }\n        });\n        return scrollingContainers;\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n        return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /** Returns true if the element is contained within the provided Scrollable. */\n    _scrollableContainsElement(scrollable, elementRef) {\n        let element = elementRef.nativeElement;\n        let scrollableElement = scrollable.getElementRef().nativeElement;\n        // Traverse through the element parents until we reach null, checking if any of the elements\n        // are the scrollable's element.\n        do {\n            if (element == scrollableElement) {\n                return true;\n            }\n        } while (element = element.parentElement);\n        return false;\n    }\n    /** Sets up the global scroll listeners. */\n    _addGlobalListener() {\n        this._globalSubscription = this._ngZone.runOutsideAngular(() => {\n            const window = this._getWindow();\n            return fromEvent(window.document, 'scroll').subscribe(() => this._scrolled.next());\n        });\n    }\n    /** Cleans up the global scroll listener. */\n    _removeGlobalListener() {\n        if (this._globalSubscription) {\n            this._globalSubscription.unsubscribe();\n            this._globalSubscription = null;\n        }\n    }\n}\nScrollDispatcher.ɵfac = function ScrollDispatcher_Factory(t) { return new (t || ScrollDispatcher)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(DOCUMENT, 8)); };\nScrollDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function ScrollDispatcher_Factory() { return new ScrollDispatcher(ɵɵinject(NgZone), ɵɵinject(Platform), ɵɵinject(DOCUMENT, 8)); }, token: ScrollDispatcher, providedIn: \"root\" });\nScrollDispatcher.ctorParameters = () => [\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nclass CdkScrollable {\n    constructor(elementRef, scrollDispatcher, ngZone, dir) {\n        this.elementRef = elementRef;\n        this.scrollDispatcher = scrollDispatcher;\n        this.ngZone = ngZone;\n        this.dir = dir;\n        this._destroyed = new Subject();\n        this._elementScrolled = new Observable((observer) => this.ngZone.runOutsideAngular(() => fromEvent(this.elementRef.nativeElement, 'scroll').pipe(takeUntil(this._destroyed))\n            .subscribe(observer)));\n    }\n    ngOnInit() {\n        this.scrollDispatcher.register(this);\n    }\n    ngOnDestroy() {\n        this.scrollDispatcher.deregister(this);\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Returns observable that emits when a scroll event is fired on the host element. */\n    elementScrolled() {\n        return this._elementScrolled;\n    }\n    /** Gets the ElementRef for the viewport. */\n    getElementRef() {\n        return this.elementRef;\n    }\n    /**\n     * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n     * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param options specified the offsets to scroll to.\n     */\n    scrollTo(options) {\n        const el = this.elementRef.nativeElement;\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        // Rewrite start & end offsets as right or left offsets.\n        if (options.left == null) {\n            options.left = isRtl ? options.end : options.start;\n        }\n        if (options.right == null) {\n            options.right = isRtl ? options.start : options.end;\n        }\n        // Rewrite the bottom offset as a top offset.\n        if (options.bottom != null) {\n            options.top =\n                el.scrollHeight - el.clientHeight - options.bottom;\n        }\n        // Rewrite the right offset as a left offset.\n        if (isRtl && getRtlScrollAxisType() != 0 /* NORMAL */) {\n            if (options.left != null) {\n                options.right =\n                    el.scrollWidth - el.clientWidth - options.left;\n            }\n            if (getRtlScrollAxisType() == 2 /* INVERTED */) {\n                options.left = options.right;\n            }\n            else if (getRtlScrollAxisType() == 1 /* NEGATED */) {\n                options.left = options.right ? -options.right : options.right;\n            }\n        }\n        else {\n            if (options.right != null) {\n                options.left =\n                    el.scrollWidth - el.clientWidth - options.right;\n            }\n        }\n        this._applyScrollToOptions(options);\n    }\n    _applyScrollToOptions(options) {\n        const el = this.elementRef.nativeElement;\n        if (supportsScrollBehavior()) {\n            el.scrollTo(options);\n        }\n        else {\n            if (options.top != null) {\n                el.scrollTop = options.top;\n            }\n            if (options.left != null) {\n                el.scrollLeft = options.left;\n            }\n        }\n    }\n    /**\n     * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n     * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n     * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param from The edge to measure from.\n     */\n    measureScrollOffset(from) {\n        const LEFT = 'left';\n        const RIGHT = 'right';\n        const el = this.elementRef.nativeElement;\n        if (from == 'top') {\n            return el.scrollTop;\n        }\n        if (from == 'bottom') {\n            return el.scrollHeight - el.clientHeight - el.scrollTop;\n        }\n        // Rewrite start & end as left or right offsets.\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        if (from == 'start') {\n            from = isRtl ? RIGHT : LEFT;\n        }\n        else if (from == 'end') {\n            from = isRtl ? LEFT : RIGHT;\n        }\n        if (isRtl && getRtlScrollAxisType() == 2 /* INVERTED */) {\n            // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n            else {\n                return el.scrollLeft;\n            }\n        }\n        else if (isRtl && getRtlScrollAxisType() == 1 /* NEGATED */) {\n            // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft + el.scrollWidth - el.clientWidth;\n            }\n            else {\n                return -el.scrollLeft;\n            }\n        }\n        else {\n            // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and\n            // (scrollWidth - clientWidth) when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft;\n            }\n            else {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n        }\n    }\n}\nCdkScrollable.ɵfac = function CdkScrollable_Factory(t) { return new (t || CdkScrollable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8)); };\nCdkScrollable.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkScrollable, selectors: [[\"\", \"cdk-scrollable\", \"\"], [\"\", \"cdkScrollable\", \"\"]] });\nCdkScrollable.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkScrollable, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-scrollable], [cdkScrollable]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ScrollDispatcher }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Time in ms to throttle the resize events by default. */\nconst DEFAULT_RESIZE_TIME = 20;\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * @docs-private\n */\nclass ViewportRuler {\n    constructor(_platform, ngZone, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        this._platform = _platform;\n        /** Stream of viewport change events. */\n        this._change = new Subject();\n        /** Event listener that will be used to handle the viewport change events. */\n        this._changeListener = (event) => {\n            this._change.next(event);\n        };\n        this._document = document;\n        ngZone.runOutsideAngular(() => {\n            if (_platform.isBrowser) {\n                const window = this._getWindow();\n                // Note that bind the events ourselves, rather than going through something like RxJS's\n                // `fromEvent` so that we can ensure that they're bound outside of the NgZone.\n                window.addEventListener('resize', this._changeListener);\n                window.addEventListener('orientationchange', this._changeListener);\n            }\n            // We don't need to keep track of the subscription,\n            // because we complete the `change` stream on destroy.\n            this.change().subscribe(() => this._updateViewportSize());\n        });\n    }\n    ngOnDestroy() {\n        if (this._platform.isBrowser) {\n            const window = this._getWindow();\n            window.removeEventListener('resize', this._changeListener);\n            window.removeEventListener('orientationchange', this._changeListener);\n        }\n        this._change.complete();\n    }\n    /** Returns the viewport's width and height. */\n    getViewportSize() {\n        if (!this._viewportSize) {\n            this._updateViewportSize();\n        }\n        const output = { width: this._viewportSize.width, height: this._viewportSize.height };\n        // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n        if (!this._platform.isBrowser) {\n            this._viewportSize = null;\n        }\n        return output;\n    }\n    /** Gets a ClientRect for the viewport's bounds. */\n    getViewportRect() {\n        // Use the document element's bounding rect rather than the window scroll properties\n        // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n        // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n        // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n        // can disagree when the page is pinch-zoomed (on devices that support touch).\n        // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n        // We use the documentElement instead of the body because, by default (without a css reset)\n        // browsers typically give the document body an 8px margin, which is not included in\n        // getBoundingClientRect().\n        const scrollPosition = this.getViewportScrollPosition();\n        const { width, height } = this.getViewportSize();\n        return {\n            top: scrollPosition.top,\n            left: scrollPosition.left,\n            bottom: scrollPosition.top + height,\n            right: scrollPosition.left + width,\n            height,\n            width,\n        };\n    }\n    /** Gets the (top, left) scroll position of the viewport. */\n    getViewportScrollPosition() {\n        // While we can get a reference to the fake document\n        // during SSR, it doesn't have getBoundingClientRect.\n        if (!this._platform.isBrowser) {\n            return { top: 0, left: 0 };\n        }\n        // The top-left-corner of the viewport is determined by the scroll position of the document\n        // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n        // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n        // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n        // `document.documentElement` works consistently, where the `top` and `left` values will\n        // equal negative the scroll position.\n        const document = this._getDocument();\n        const window = this._getWindow();\n        const documentElement = document.documentElement;\n        const documentRect = documentElement.getBoundingClientRect();\n        const top = -documentRect.top || document.body.scrollTop || window.scrollY ||\n            documentElement.scrollTop || 0;\n        const left = -documentRect.left || document.body.scrollLeft || window.scrollX ||\n            documentElement.scrollLeft || 0;\n        return { top, left };\n    }\n    /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * @param throttleTime Time in milliseconds to throttle the stream.\n     */\n    change(throttleTime = DEFAULT_RESIZE_TIME) {\n        return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n        return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /** Updates the cached viewport size. */\n    _updateViewportSize() {\n        const window = this._getWindow();\n        this._viewportSize = this._platform.isBrowser ?\n            { width: window.innerWidth, height: window.innerHeight } :\n            { width: 0, height: 0 };\n    }\n}\nViewportRuler.ɵfac = function ViewportRuler_Factory(t) { return new (t || ViewportRuler)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT, 8)); };\nViewportRuler.ɵprov = ɵɵdefineInjectable({ factory: function ViewportRuler_Factory() { return new ViewportRuler(ɵɵinject(Platform), ɵɵinject(NgZone), ɵɵinject(DOCUMENT, 8)); }, token: ViewportRuler, providedIn: \"root\" });\nViewportRuler.ctorParameters = () => [\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ViewportRuler, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Checks if the given ranges are equal. */\nfunction rangesEqual(r1, r2) {\n    return r1.start == r2.start && r1.end == r2.end;\n}\n/**\n * Scheduler to be used for scroll events. Needs to fall back to\n * something that doesn't rely on requestAnimationFrame on environments\n * that don't support it (e.g. server-side rendering).\n */\nconst SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\n/** A viewport that virtualizes its scrolling with the help of `CdkVirtualForOf`. */\nclass CdkVirtualScrollViewport extends CdkScrollable {\n    constructor(elementRef, _changeDetectorRef, ngZone, _scrollStrategy, dir, scrollDispatcher, \n    /**\n     * @deprecated `viewportRuler` parameter to become required.\n     * @breaking-change 11.0.0\n     */\n    viewportRuler) {\n        super(elementRef, scrollDispatcher, ngZone, dir);\n        this.elementRef = elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._scrollStrategy = _scrollStrategy;\n        /** Emits when the viewport is detached from a CdkVirtualForOf. */\n        this._detachedSubject = new Subject();\n        /** Emits when the rendered range changes. */\n        this._renderedRangeSubject = new Subject();\n        this._orientation = 'vertical';\n        // Note: we don't use the typical EventEmitter here because we need to subscribe to the scroll\n        // strategy lazily (i.e. only if the user is actually listening to the events). We do this because\n        // depending on how the strategy calculates the scrolled index, it may come at a cost to\n        // performance.\n        /** Emits when the index of the first element visible in the viewport changes. */\n        this.scrolledIndexChange = new Observable((observer) => this._scrollStrategy.scrolledIndexChange.subscribe(index => Promise.resolve().then(() => this.ngZone.run(() => observer.next(index)))));\n        /** A stream that emits whenever the rendered range changes. */\n        this.renderedRangeStream = this._renderedRangeSubject.asObservable();\n        /**\n         * The total size of all content (in pixels), including content that is not currently rendered.\n         */\n        this._totalContentSize = 0;\n        /** A string representing the `style.width` property value to be used for the spacer element. */\n        this._totalContentWidth = '';\n        /** A string representing the `style.height` property value to be used for the spacer element. */\n        this._totalContentHeight = '';\n        /** The currently rendered range of indices. */\n        this._renderedRange = { start: 0, end: 0 };\n        /** The length of the data bound to this viewport (in number of items). */\n        this._dataLength = 0;\n        /** The size of the viewport (in pixels). */\n        this._viewportSize = 0;\n        /** The last rendered content offset that was set. */\n        this._renderedContentOffset = 0;\n        /**\n         * Whether the last rendered content offset was to the end of the content (and therefore needs to\n         * be rewritten as an offset to the start of the content).\n         */\n        this._renderedContentOffsetNeedsRewrite = false;\n        /** Whether there is a pending change detection cycle. */\n        this._isChangeDetectionPending = false;\n        /** A list of functions to run after the next change detection cycle. */\n        this._runAfterChangeDetection = [];\n        /** Subscription to changes in the viewport size. */\n        this._viewportChanges = Subscription.EMPTY;\n        if (!_scrollStrategy) {\n            throw Error('Error: cdk-virtual-scroll-viewport requires the \"itemSize\" property to be set.');\n        }\n        // @breaking-change 11.0.0 Remove null check for `viewportRuler`.\n        if (viewportRuler) {\n            this._viewportChanges = viewportRuler.change().subscribe(() => {\n                this.checkViewportSize();\n            });\n        }\n    }\n    /** The direction the viewport scrolls. */\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(orientation) {\n        if (this._orientation !== orientation) {\n            this._orientation = orientation;\n            this._calculateSpacerSize();\n        }\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        // It's still too early to measure the viewport at this point. Deferring with a promise allows\n        // the Viewport to be rendered with the correct size before we measure. We run this outside the\n        // zone to avoid causing more change detection cycles. We handle the change detection loop\n        // ourselves instead.\n        this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n            this._measureViewportSize();\n            this._scrollStrategy.attach(this);\n            this.elementScrolled()\n                .pipe(\n            // Start off with a fake scroll event so we properly detect our initial position.\n            startWith(null), \n            // Collect multiple events into one until the next animation frame. This way if\n            // there are multiple scroll events in the same frame we only need to recheck\n            // our layout once.\n            auditTime(0, SCROLL_SCHEDULER))\n                .subscribe(() => this._scrollStrategy.onContentScrolled());\n            this._markChangeDetectionNeeded();\n        }));\n    }\n    ngOnDestroy() {\n        this.detach();\n        this._scrollStrategy.detach();\n        // Complete all subjects\n        this._renderedRangeSubject.complete();\n        this._detachedSubject.complete();\n        this._viewportChanges.unsubscribe();\n        super.ngOnDestroy();\n    }\n    /** Attaches a `CdkVirtualScrollRepeater` to this viewport. */\n    attach(forOf) {\n        if (this._forOf) {\n            throw Error('CdkVirtualScrollViewport is already attached.');\n        }\n        // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length\n        // changes. Run outside the zone to avoid triggering change detection, since we're managing the\n        // change detection loop ourselves.\n        this.ngZone.runOutsideAngular(() => {\n            this._forOf = forOf;\n            this._forOf.dataStream.pipe(takeUntil(this._detachedSubject)).subscribe(data => {\n                const newLength = data.length;\n                if (newLength !== this._dataLength) {\n                    this._dataLength = newLength;\n                    this._scrollStrategy.onDataLengthChanged();\n                }\n                this._doChangeDetection();\n            });\n        });\n    }\n    /** Detaches the current `CdkVirtualForOf`. */\n    detach() {\n        this._forOf = null;\n        this._detachedSubject.next();\n    }\n    /** Gets the length of the data bound to this viewport (in number of items). */\n    getDataLength() {\n        return this._dataLength;\n    }\n    /** Gets the size of the viewport (in pixels). */\n    getViewportSize() {\n        return this._viewportSize;\n    }\n    // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\n    // cycle happens. I'm being careful to only call it after the render cycle is complete and before\n    // setting it to something else, but its error prone and should probably be split into\n    // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\n    /** Get the current rendered range of items. */\n    getRenderedRange() {\n        return this._renderedRange;\n    }\n    /**\n     * Sets the total size of all content (in pixels), including content that is not currently\n     * rendered.\n     */\n    setTotalContentSize(size) {\n        if (this._totalContentSize !== size) {\n            this._totalContentSize = size;\n            this._calculateSpacerSize();\n            this._markChangeDetectionNeeded();\n        }\n    }\n    /** Sets the currently rendered range of indices. */\n    setRenderedRange(range) {\n        if (!rangesEqual(this._renderedRange, range)) {\n            this._renderedRangeSubject.next(this._renderedRange = range);\n            this._markChangeDetectionNeeded(() => this._scrollStrategy.onContentRendered());\n        }\n    }\n    /**\n     * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n     */\n    getOffsetToRenderedContentStart() {\n        return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;\n    }\n    /**\n     * Sets the offset from the start of the viewport to either the start or end of the rendered data\n     * (in pixels).\n     */\n    setRenderedContentOffset(offset, to = 'to-start') {\n        // For a horizontal viewport in a right-to-left language we need to translate along the x-axis\n        // in the negative direction.\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        const isHorizontal = this.orientation == 'horizontal';\n        const axis = isHorizontal ? 'X' : 'Y';\n        const axisDirection = isHorizontal && isRtl ? -1 : 1;\n        let transform = `translate${axis}(${Number(axisDirection * offset)}px)`;\n        this._renderedContentOffset = offset;\n        if (to === 'to-end') {\n            transform += ` translate${axis}(-100%)`;\n            // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise\n            // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would\n            // expand upward).\n            this._renderedContentOffsetNeedsRewrite = true;\n        }\n        if (this._renderedContentTransform != transform) {\n            // We know this value is safe because we parse `offset` with `Number()` before passing it\n            // into the string.\n            this._renderedContentTransform = transform;\n            this._markChangeDetectionNeeded(() => {\n                if (this._renderedContentOffsetNeedsRewrite) {\n                    this._renderedContentOffset -= this.measureRenderedContentSize();\n                    this._renderedContentOffsetNeedsRewrite = false;\n                    this.setRenderedContentOffset(this._renderedContentOffset);\n                }\n                else {\n                    this._scrollStrategy.onRenderedOffsetChanged();\n                }\n            });\n        }\n    }\n    /**\n     * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n     * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n     * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n     * @param offset The offset to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    scrollToOffset(offset, behavior = 'auto') {\n        const options = { behavior };\n        if (this.orientation === 'horizontal') {\n            options.start = offset;\n        }\n        else {\n            options.top = offset;\n        }\n        this.scrollTo(options);\n    }\n    /**\n     * Scrolls to the offset for the given index.\n     * @param index The index of the element to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    scrollToIndex(index, behavior = 'auto') {\n        this._scrollStrategy.scrollToIndex(index, behavior);\n    }\n    /**\n     * Gets the current scroll offset from the start of the viewport (in pixels).\n     * @param from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n     *     in horizontal mode.\n     */\n    measureScrollOffset(from) {\n        return from ?\n            super.measureScrollOffset(from) :\n            super.measureScrollOffset(this.orientation === 'horizontal' ? 'start' : 'top');\n    }\n    /** Measure the combined size of all of the rendered items. */\n    measureRenderedContentSize() {\n        const contentEl = this._contentWrapper.nativeElement;\n        return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;\n    }\n    /**\n     * Measure the total combined size of the given range. Throws if the range includes items that are\n     * not rendered.\n     */\n    measureRangeSize(range) {\n        if (!this._forOf) {\n            return 0;\n        }\n        return this._forOf.measureRangeSize(range, this.orientation);\n    }\n    /** Update the viewport dimensions and re-render. */\n    checkViewportSize() {\n        // TODO: Cleanup later when add logic for handling content resize\n        this._measureViewportSize();\n        this._scrollStrategy.onDataLengthChanged();\n    }\n    /** Measure the viewport size. */\n    _measureViewportSize() {\n        const viewportEl = this.elementRef.nativeElement;\n        this._viewportSize = this.orientation === 'horizontal' ?\n            viewportEl.clientWidth : viewportEl.clientHeight;\n    }\n    /** Queue up change detection to run. */\n    _markChangeDetectionNeeded(runAfter) {\n        if (runAfter) {\n            this._runAfterChangeDetection.push(runAfter);\n        }\n        // Use a Promise to batch together calls to `_doChangeDetection`. This way if we set a bunch of\n        // properties sequentially we only have to run `_doChangeDetection` once at the end.\n        if (!this._isChangeDetectionPending) {\n            this._isChangeDetectionPending = true;\n            this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n                this._doChangeDetection();\n            }));\n        }\n    }\n    /** Run change detection. */\n    _doChangeDetection() {\n        this._isChangeDetectionPending = false;\n        // Apply the content transform. The transform can't be set via an Angular binding because\n        // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of\n        // string literals, a variable that can only be 'X' or 'Y', and user input that is run through\n        // the `Number` function first to coerce it to a numeric value.\n        this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform;\n        // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection\n        // from the root, since the repeated items are content projected in. Calling `detectChanges`\n        // instead does not properly check the projected content.\n        this.ngZone.run(() => this._changeDetectorRef.markForCheck());\n        const runAfterChangeDetection = this._runAfterChangeDetection;\n        this._runAfterChangeDetection = [];\n        for (const fn of runAfterChangeDetection) {\n            fn();\n        }\n    }\n    /** Calculates the `style.width` and `style.height` for the spacer element. */\n    _calculateSpacerSize() {\n        this._totalContentHeight =\n            this.orientation === 'horizontal' ? '' : `${this._totalContentSize}px`;\n        this._totalContentWidth =\n            this.orientation === 'horizontal' ? `${this._totalContentSize}px` : '';\n    }\n}\nCdkVirtualScrollViewport.ɵfac = function CdkVirtualScrollViewport_Factory(t) { return new (t || CdkVirtualScrollViewport)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(VIRTUAL_SCROLL_STRATEGY, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ViewportRuler, 8)); };\nCdkVirtualScrollViewport.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkVirtualScrollViewport, selectors: [[\"cdk-virtual-scroll-viewport\"]], viewQuery: function CdkVirtualScrollViewport_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentWrapper = _t.first);\n    } }, hostAttrs: [1, \"cdk-virtual-scroll-viewport\"], hostVars: 4, hostBindings: function CdkVirtualScrollViewport_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"cdk-virtual-scroll-orientation-horizontal\", ctx.orientation === \"horizontal\")(\"cdk-virtual-scroll-orientation-vertical\", ctx.orientation !== \"horizontal\");\n    } }, inputs: { orientation: \"orientation\" }, outputs: { scrolledIndexChange: \"scrolledIndexChange\" }, features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkScrollable,\n                useExisting: CdkVirtualScrollViewport\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 4, vars: 4, consts: [[1, \"cdk-virtual-scroll-content-wrapper\"], [\"contentWrapper\", \"\"], [1, \"cdk-virtual-scroll-spacer\"]], template: function CdkVirtualScrollViewport_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx._totalContentWidth)(\"height\", ctx._totalContentHeight);\n    } }, styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\\n\"], encapsulation: 2, changeDetection: 0 });\nCdkVirtualScrollViewport.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [VIRTUAL_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ScrollDispatcher },\n    { type: ViewportRuler, decorators: [{ type: Optional }] }\n];\nCdkVirtualScrollViewport.propDecorators = {\n    orientation: [{ type: Input }],\n    scrolledIndexChange: [{ type: Output }],\n    _contentWrapper: [{ type: ViewChild, args: ['contentWrapper', { static: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkVirtualScrollViewport, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-virtual-scroll-viewport',\n                template: \"<!--\\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\\n  position.\\n-->\\n<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\">\\n  <ng-content></ng-content>\\n</div>\\n<!--\\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\\n  so that the scrollbar captures the size of the entire data set.\\n-->\\n<div class=\\\"cdk-virtual-scroll-spacer\\\"\\n     [style.width]=\\\"_totalContentWidth\\\" [style.height]=\\\"_totalContentHeight\\\"></div>\\n\",\n                host: {\n                    'class': 'cdk-virtual-scroll-viewport',\n                    '[class.cdk-virtual-scroll-orientation-horizontal]': 'orientation === \"horizontal\"',\n                    '[class.cdk-virtual-scroll-orientation-vertical]': 'orientation !== \"horizontal\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [{\n                        provide: CdkScrollable,\n                        useExisting: CdkVirtualScrollViewport\n                    }],\n                styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [VIRTUAL_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ScrollDispatcher }, { type: ViewportRuler, decorators: [{\n                type: Optional\n            }] }]; }, { scrolledIndexChange: [{\n            type: Output\n        }], orientation: [{\n            type: Input\n        }], _contentWrapper: [{\n            type: ViewChild,\n            args: ['contentWrapper', { static: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Helper to extract the offset of a DOM Node in a certain direction. */\nfunction getOffset(orientation, direction, node) {\n    const el = node;\n    if (!el.getBoundingClientRect) {\n        return 0;\n    }\n    const rect = el.getBoundingClientRect();\n    if (orientation === 'horizontal') {\n        return direction === 'start' ? rect.left : rect.right;\n    }\n    return direction === 'start' ? rect.top : rect.bottom;\n}\n/**\n * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling\n * container.\n */\nclass CdkVirtualForOf {\n    constructor(\n    /** The view container to add items to. */\n    _viewContainerRef, \n    /** The template to use when stamping out new items. */\n    _template, \n    /** The set of available differs. */\n    _differs, \n    /** The virtual scrolling viewport that these items are being rendered in. */\n    _viewport, ngZone) {\n        this._viewContainerRef = _viewContainerRef;\n        this._template = _template;\n        this._differs = _differs;\n        this._viewport = _viewport;\n        /** Emits when the rendered view of the data changes. */\n        this.viewChange = new Subject();\n        /** Subject that emits when a new DataSource instance is given. */\n        this._dataSourceChanges = new Subject();\n        /**\n         * The size of the cache used to store templates that are not being used for re-use later.\n         * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n         */\n        this.cdkVirtualForTemplateCacheSize = 20;\n        /** Emits whenever the data in the current DataSource changes. */\n        this.dataStream = this._dataSourceChanges\n            .pipe(\n        // Start off with null `DataSource`.\n        startWith(null), \n        // Bundle up the previous and current data sources so we can work with both.\n        pairwise(), \n        // Use `_changeDataSource` to disconnect from the previous data source and connect to the\n        // new one, passing back a stream of data changes which we run through `switchMap` to give\n        // us a data stream that emits the latest data from whatever the current `DataSource` is.\n        switchMap(([prev, cur]) => this._changeDataSource(prev, cur)), \n        // Replay the last emitted data when someone subscribes.\n        shareReplay(1));\n        /** The differ used to calculate changes to the data. */\n        this._differ = null;\n        /**\n         * The template cache used to hold on ot template instancess that have been stamped out, but don't\n         * currently need to be rendered. These instances will be reused in the future rather than\n         * stamping out brand new ones.\n         */\n        this._templateCache = [];\n        /** Whether the rendered data should be updated during the next ngDoCheck cycle. */\n        this._needsUpdate = false;\n        this._destroyed = new Subject();\n        this.dataStream.subscribe(data => {\n            this._data = data;\n            this._onRenderedDataChange();\n        });\n        this._viewport.renderedRangeStream.pipe(takeUntil(this._destroyed)).subscribe(range => {\n            this._renderedRange = range;\n            ngZone.run(() => this.viewChange.next(this._renderedRange));\n            this._onRenderedDataChange();\n        });\n        this._viewport.attach(this);\n    }\n    /** The DataSource to display. */\n    get cdkVirtualForOf() {\n        return this._cdkVirtualForOf;\n    }\n    set cdkVirtualForOf(value) {\n        this._cdkVirtualForOf = value;\n        if (isDataSource(value)) {\n            this._dataSourceChanges.next(value);\n        }\n        else {\n            // Slice the value if its an NgIterable to ensure we're working with an array.\n            this._dataSourceChanges.next(new ArrayDataSource(isObservable(value) ? value : Array.prototype.slice.call(value || [])));\n        }\n    }\n    /**\n     * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\n     * the item and produces a value to be used as the item's identity when tracking changes.\n     */\n    get cdkVirtualForTrackBy() {\n        return this._cdkVirtualForTrackBy;\n    }\n    set cdkVirtualForTrackBy(fn) {\n        this._needsUpdate = true;\n        this._cdkVirtualForTrackBy = fn ?\n            (index, item) => fn(index + (this._renderedRange ? this._renderedRange.start : 0), item) :\n            undefined;\n    }\n    /** The template used to stamp out new elements. */\n    set cdkVirtualForTemplate(value) {\n        if (value) {\n            this._needsUpdate = true;\n            this._template = value;\n        }\n    }\n    /**\n     * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n     * in the specified range. Throws an error if the range includes items that are not currently\n     * rendered.\n     */\n    measureRangeSize(range, orientation) {\n        if (range.start >= range.end) {\n            return 0;\n        }\n        if (range.start < this._renderedRange.start || range.end > this._renderedRange.end) {\n            throw Error(`Error: attempted to measure an item that isn't rendered.`);\n        }\n        // The index into the list of rendered views for the first item in the range.\n        const renderedStartIndex = range.start - this._renderedRange.start;\n        // The length of the range we're measuring.\n        const rangeLen = range.end - range.start;\n        // Loop over all the views, find the first and land node and compute the size by subtracting\n        // the top of the first node from the bottom of the last one.\n        let firstNode;\n        let lastNode;\n        // Find the first node by starting from the beginning and going forwards.\n        for (let i = 0; i < rangeLen; i++) {\n            const view = this._viewContainerRef.get(i + renderedStartIndex);\n            if (view && view.rootNodes.length) {\n                firstNode = lastNode = view.rootNodes[0];\n                break;\n            }\n        }\n        // Find the last node by starting from the end and going backwards.\n        for (let i = rangeLen - 1; i > -1; i--) {\n            const view = this._viewContainerRef.get(i + renderedStartIndex);\n            if (view && view.rootNodes.length) {\n                lastNode = view.rootNodes[view.rootNodes.length - 1];\n                break;\n            }\n        }\n        return firstNode && lastNode ?\n            getOffset(orientation, 'end', lastNode) - getOffset(orientation, 'start', firstNode) : 0;\n    }\n    ngDoCheck() {\n        if (this._differ && this._needsUpdate) {\n            // TODO(mmalerba): We should differentiate needs update due to scrolling and a new portion of\n            // this list being rendered (can use simpler algorithm) vs needs update due to data actually\n            // changing (need to do this diff).\n            const changes = this._differ.diff(this._renderedItems);\n            if (!changes) {\n                this._updateContext();\n            }\n            else {\n                this._applyChanges(changes);\n            }\n            this._needsUpdate = false;\n        }\n    }\n    ngOnDestroy() {\n        this._viewport.detach();\n        this._dataSourceChanges.next(undefined);\n        this._dataSourceChanges.complete();\n        this.viewChange.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n        for (let view of this._templateCache) {\n            view.destroy();\n        }\n    }\n    /** React to scroll state changes in the viewport. */\n    _onRenderedDataChange() {\n        if (!this._renderedRange) {\n            return;\n        }\n        this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);\n        if (!this._differ) {\n            this._differ = this._differs.find(this._renderedItems).create(this.cdkVirtualForTrackBy);\n        }\n        this._needsUpdate = true;\n    }\n    /** Swap out one `DataSource` for another. */\n    _changeDataSource(oldDs, newDs) {\n        if (oldDs) {\n            oldDs.disconnect(this);\n        }\n        this._needsUpdate = true;\n        return newDs ? newDs.connect(this) : of();\n    }\n    /** Update the `CdkVirtualForOfContext` for all views. */\n    _updateContext() {\n        const count = this._data.length;\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            let view = this._viewContainerRef.get(i);\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n            view.detectChanges();\n        }\n    }\n    /** Apply changes to the DOM. */\n    _applyChanges(changes) {\n        // Rearrange the views to put them in the right location.\n        changes.forEachOperation((record, adjustedPreviousIndex, currentIndex) => {\n            if (record.previousIndex == null) { // Item added.\n                const view = this._insertViewForNewItem(currentIndex);\n                view.context.$implicit = record.item;\n            }\n            else if (currentIndex == null) { // Item removed.\n                this._cacheView(this._detachView(adjustedPreviousIndex));\n            }\n            else { // Item moved.\n                const view = this._viewContainerRef.get(adjustedPreviousIndex);\n                this._viewContainerRef.move(view, currentIndex);\n                view.context.$implicit = record.item;\n            }\n        });\n        // Update $implicit for any items that had an identity change.\n        changes.forEachIdentityChange((record) => {\n            const view = this._viewContainerRef.get(record.currentIndex);\n            view.context.$implicit = record.item;\n        });\n        // Update the context variables on all items.\n        const count = this._data.length;\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            const view = this._viewContainerRef.get(i);\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n        }\n    }\n    /** Cache the given detached view. */\n    _cacheView(view) {\n        if (this._templateCache.length < this.cdkVirtualForTemplateCacheSize) {\n            this._templateCache.push(view);\n        }\n        else {\n            const index = this._viewContainerRef.indexOf(view);\n            // It's very unlikely that the index will ever be -1, but just in case,\n            // destroy the view on its own, otherwise destroy it through the\n            // container to ensure that all the references are removed.\n            if (index === -1) {\n                view.destroy();\n            }\n            else {\n                this._viewContainerRef.remove(index);\n            }\n        }\n    }\n    /** Inserts a view for a new item, either from the cache or by creating a new one. */\n    _insertViewForNewItem(index) {\n        return this._insertViewFromCache(index) || this._createEmbeddedViewAt(index);\n    }\n    /** Update the computed properties on the `CdkVirtualForOfContext`. */\n    _updateComputedContextProperties(context) {\n        context.first = context.index === 0;\n        context.last = context.index === context.count - 1;\n        context.even = context.index % 2 === 0;\n        context.odd = !context.even;\n    }\n    /** Creates a new embedded view and moves it to the given index */\n    _createEmbeddedViewAt(index) {\n        // Note that it's important that we insert the item directly at the proper index,\n        // rather than inserting it and the moving it in place, because if there's a directive\n        // on the same node that injects the `ViewContainerRef`, Angular will insert another\n        // comment node which can throw off the move when it's being repeated for all items.\n        return this._viewContainerRef.createEmbeddedView(this._template, {\n            $implicit: null,\n            // It's guaranteed that the iterable is not \"undefined\" or \"null\" because we only\n            // generate views for elements if the \"cdkVirtualForOf\" iterable has elements.\n            cdkVirtualForOf: this._cdkVirtualForOf,\n            index: -1,\n            count: -1,\n            first: false,\n            last: false,\n            odd: false,\n            even: false\n        }, index);\n    }\n    /** Inserts a recycled view from the cache at the given index. */\n    _insertViewFromCache(index) {\n        const cachedView = this._templateCache.pop();\n        if (cachedView) {\n            this._viewContainerRef.insert(cachedView, index);\n        }\n        return cachedView || null;\n    }\n    /** Detaches the embedded view at the given index. */\n    _detachView(index) {\n        return this._viewContainerRef.detach(index);\n    }\n}\nCdkVirtualForOf.ɵfac = function CdkVirtualForOf_Factory(t) { return new (t || CdkVirtualForOf)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CdkVirtualScrollViewport, 4), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCdkVirtualForOf.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkVirtualForOf, selectors: [[\"\", \"cdkVirtualFor\", \"\", \"cdkVirtualForOf\", \"\"]], inputs: { cdkVirtualForTemplateCacheSize: \"cdkVirtualForTemplateCacheSize\", cdkVirtualForOf: \"cdkVirtualForOf\", cdkVirtualForTrackBy: \"cdkVirtualForTrackBy\", cdkVirtualForTemplate: \"cdkVirtualForTemplate\" } });\nCdkVirtualForOf.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: CdkVirtualScrollViewport, decorators: [{ type: SkipSelf }] },\n    { type: NgZone }\n];\nCdkVirtualForOf.propDecorators = {\n    cdkVirtualForOf: [{ type: Input }],\n    cdkVirtualForTrackBy: [{ type: Input }],\n    cdkVirtualForTemplate: [{ type: Input }],\n    cdkVirtualForTemplateCacheSize: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkVirtualForOf, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkVirtualFor][cdkVirtualForOf]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: CdkVirtualScrollViewport, decorators: [{\n                type: SkipSelf\n            }] }, { type: ɵngcc0.NgZone }]; }, { cdkVirtualForTemplateCacheSize: [{\n            type: Input\n        }], cdkVirtualForOf: [{\n            type: Input\n        }], cdkVirtualForTrackBy: [{\n            type: Input\n        }], cdkVirtualForTemplate: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkScrollableModule {\n}\nCdkScrollableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkScrollableModule });\nCdkScrollableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CdkScrollableModule_Factory(t) { return new (t || CdkScrollableModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkScrollableModule, { declarations: [CdkScrollable], exports: [CdkScrollable] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkScrollableModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkScrollable],\n                declarations: [CdkScrollable]\n            }]\n    }], null, null); })();\n/**\n * @docs-primary-export\n */\nclass ScrollingModule {\n}\nScrollingModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ScrollingModule });\nScrollingModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ScrollingModule_Factory(t) { return new (t || ScrollingModule)(); }, imports: [[\n            BidiModule,\n            PlatformModule,\n            CdkScrollableModule\n        ], BidiModule, CdkScrollableModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ScrollingModule, { declarations: function () { return [CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport]; }, imports: function () { return [BidiModule,\n        PlatformModule, CdkScrollableModule]; }, exports: function () { return [BidiModule, CdkScrollableModule, CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollingModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    BidiModule,\n                    PlatformModule,\n                    CdkScrollableModule\n                ],\n                exports: [\n                    BidiModule,\n                    CdkScrollableModule,\n                    CdkFixedSizeVirtualScroll,\n                    CdkVirtualForOf,\n                    CdkVirtualScrollViewport,\n                ],\n                declarations: [\n                    CdkFixedSizeVirtualScroll,\n                    CdkVirtualForOf,\n                    CdkVirtualScrollViewport,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkFixedSizeVirtualScroll, CdkScrollable, CdkScrollableModule, CdkVirtualForOf, CdkVirtualScrollViewport, DEFAULT_RESIZE_TIME, DEFAULT_SCROLL_TIME, FixedSizeVirtualScrollStrategy, ScrollDispatcher, ScrollingModule, VIRTUAL_SCROLL_STRATEGY, ViewportRuler, _fixedSizeVirtualScrollStrategyFactory };\n\n//# sourceMappingURL=scrolling.js.map","import { ɵɵdefineInjectable, ɵɵinject, NgZone, Injectable, Inject, InjectionToken, Directive, Input, EventEmitter, isDevMode, ElementRef, ChangeDetectorRef, Optional, SkipSelf, Output, TemplateRef, ViewContainerRef, Self, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { ViewportRuler, ScrollDispatcher, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { normalizePassiveListenerOptions, _getShadowRoot } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceElement, coerceArray, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Subject, Subscription, interval, animationFrameScheduler, Observable, merge } from 'rxjs';\nimport { takeUntil, startWith, map, take, tap, switchMap } from 'rxjs/operators';\nimport { Directionality } from '@angular/cdk/bidi';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Shallow-extends a stylesheet object with another stylesheet object.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nfunction extendStyles(dest, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            dest[key] = source[key];\n        }\n    }\n    return dest;\n}\n/**\n * Toggles whether the native drag interactions should be enabled for an element.\n * @param element Element on which to toggle the drag interactions.\n * @param enable Whether the drag interactions should be enabled.\n * @docs-private\n */\nfunction toggleNativeDragInteractions(element, enable) {\n    const userSelect = enable ? '' : 'none';\n    extendStyles(element.style, {\n        touchAction: enable ? '' : 'none',\n        webkitUserDrag: enable ? '' : 'none',\n        webkitTapHighlightColor: enable ? '' : 'transparent',\n        userSelect: userSelect,\n        msUserSelect: userSelect,\n        webkitUserSelect: userSelect,\n        MozUserSelect: userSelect\n    });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Parses a CSS time value to milliseconds. */\nfunction parseCssTimeUnitsToMs(value) {\n    // Some browsers will return it in seconds, whereas others will return milliseconds.\n    const multiplier = value.toLowerCase().indexOf('ms') > -1 ? 1 : 1000;\n    return parseFloat(value) * multiplier;\n}\n/** Gets the transform transition duration, including the delay, of an element in milliseconds. */\nfunction getTransformTransitionDurationInMs(element) {\n    const computedStyle = getComputedStyle(element);\n    const transitionedProperties = parseCssPropertyValue(computedStyle, 'transition-property');\n    const property = transitionedProperties.find(prop => prop === 'transform' || prop === 'all');\n    // If there's no transition for `all` or `transform`, we shouldn't do anything.\n    if (!property) {\n        return 0;\n    }\n    // Get the index of the property that we're interested in and match\n    // it up to the same index in `transition-delay` and `transition-duration`.\n    const propertyIndex = transitionedProperties.indexOf(property);\n    const rawDurations = parseCssPropertyValue(computedStyle, 'transition-duration');\n    const rawDelays = parseCssPropertyValue(computedStyle, 'transition-delay');\n    return parseCssTimeUnitsToMs(rawDurations[propertyIndex]) +\n        parseCssTimeUnitsToMs(rawDelays[propertyIndex]);\n}\n/** Parses out multiple values from a computed style into an array. */\nfunction parseCssPropertyValue(computedStyle, name) {\n    const value = computedStyle.getPropertyValue(name);\n    return value.split(',').map(part => part.trim());\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Gets a mutable version of an element's bounding `ClientRect`. */\nfunction getMutableClientRect(element) {\n    const clientRect = element.getBoundingClientRect();\n    // We need to clone the `clientRect` here, because all the values on it are readonly\n    // and we need to be able to update them. Also we can't use a spread here, because\n    // the values on a `ClientRect` aren't own properties. See:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes\n    return {\n        top: clientRect.top,\n        right: clientRect.right,\n        bottom: clientRect.bottom,\n        left: clientRect.left,\n        width: clientRect.width,\n        height: clientRect.height\n    };\n}\n/**\n * Checks whether some coordinates are within a `ClientRect`.\n * @param clientRect ClientRect that is being checked.\n * @param x Coordinates along the X axis.\n * @param y Coordinates along the Y axis.\n */\nfunction isInsideClientRect(clientRect, x, y) {\n    const { top, bottom, left, right } = clientRect;\n    return y >= top && y <= bottom && x >= left && x <= right;\n}\n/**\n * Updates the top/left positions of a `ClientRect`, as well as their bottom/right counterparts.\n * @param clientRect `ClientRect` that should be updated.\n * @param top Amount to add to the `top` position.\n * @param left Amount to add to the `left` position.\n */\nfunction adjustClientRect(clientRect, top, left) {\n    clientRect.top += top;\n    clientRect.bottom = clientRect.top + clientRect.height;\n    clientRect.left += left;\n    clientRect.right = clientRect.left + clientRect.width;\n}\n/**\n * Checks whether the pointer coordinates are close to a ClientRect.\n * @param rect ClientRect to check against.\n * @param threshold Threshold around the ClientRect.\n * @param pointerX Coordinates along the X axis.\n * @param pointerY Coordinates along the Y axis.\n */\nfunction isPointerNearClientRect(rect, threshold, pointerX, pointerY) {\n    const { top, right, bottom, left, width, height } = rect;\n    const xThreshold = width * threshold;\n    const yThreshold = height * threshold;\n    return pointerY > top - yThreshold && pointerY < bottom + yThreshold &&\n        pointerX > left - xThreshold && pointerX < right + xThreshold;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Keeps track of the scroll position and dimensions of the parents of an element. */\nclass ParentPositionTracker {\n    constructor(_document, _viewportRuler) {\n        this._document = _document;\n        this._viewportRuler = _viewportRuler;\n        /** Cached positions of the scrollable parent elements. */\n        this.positions = new Map();\n    }\n    /** Clears the cached positions. */\n    clear() {\n        this.positions.clear();\n    }\n    /** Caches the positions. Should be called at the beginning of a drag sequence. */\n    cache(elements) {\n        this.clear();\n        this.positions.set(this._document, {\n            scrollPosition: this._viewportRuler.getViewportScrollPosition(),\n        });\n        elements.forEach(element => {\n            this.positions.set(element, {\n                scrollPosition: { top: element.scrollTop, left: element.scrollLeft },\n                clientRect: getMutableClientRect(element)\n            });\n        });\n    }\n    /** Handles scrolling while a drag is taking place. */\n    handleScroll(event) {\n        const target = event.target;\n        const cachedPosition = this.positions.get(target);\n        if (!cachedPosition) {\n            return null;\n        }\n        // Used when figuring out whether an element is inside the scroll parent. If the scrolled\n        // parent is the `document`, we use the `documentElement`, because IE doesn't support\n        // `contains` on the `document`.\n        const scrolledParentNode = target === this._document ? target.documentElement : target;\n        const scrollPosition = cachedPosition.scrollPosition;\n        let newTop;\n        let newLeft;\n        if (target === this._document) {\n            const viewportScrollPosition = this._viewportRuler.getViewportScrollPosition();\n            newTop = viewportScrollPosition.top;\n            newLeft = viewportScrollPosition.left;\n        }\n        else {\n            newTop = target.scrollTop;\n            newLeft = target.scrollLeft;\n        }\n        const topDifference = scrollPosition.top - newTop;\n        const leftDifference = scrollPosition.left - newLeft;\n        // Go through and update the cached positions of the scroll\n        // parents that are inside the element that was scrolled.\n        this.positions.forEach((position, node) => {\n            if (position.clientRect && target !== node && scrolledParentNode.contains(node)) {\n                adjustClientRect(position.clientRect, topDifference, leftDifference);\n            }\n        });\n        scrollPosition.top = newTop;\n        scrollPosition.left = newLeft;\n        return { top: topDifference, left: leftDifference };\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Creates a deep clone of an element. */\nfunction deepCloneNode(node) {\n    const clone = node.cloneNode(true);\n    const descendantsWithId = clone.querySelectorAll('[id]');\n    const nodeName = node.nodeName.toLowerCase();\n    // Remove the `id` to avoid having multiple elements with the same id on the page.\n    clone.removeAttribute('id');\n    for (let i = 0; i < descendantsWithId.length; i++) {\n        descendantsWithId[i].removeAttribute('id');\n    }\n    if (nodeName === 'canvas') {\n        transferCanvasData(node, clone);\n    }\n    else if (nodeName === 'input' || nodeName === 'select' || nodeName === 'textarea') {\n        transferInputData(node, clone);\n    }\n    transferData('canvas', node, clone, transferCanvasData);\n    transferData('input, textarea, select', node, clone, transferInputData);\n    return clone;\n}\n/** Matches elements between an element and its clone and allows for their data to be cloned. */\nfunction transferData(selector, node, clone, callback) {\n    const descendantElements = node.querySelectorAll(selector);\n    if (descendantElements.length) {\n        const cloneElements = clone.querySelectorAll(selector);\n        for (let i = 0; i < descendantElements.length; i++) {\n            callback(descendantElements[i], cloneElements[i]);\n        }\n    }\n}\n/** Transfers the data of one input element to another. */\nfunction transferInputData(source, clone) {\n    clone.value = source.value;\n}\n/** Transfers the data of one canvas element to another. */\nfunction transferCanvasData(source, clone) {\n    const context = clone.getContext('2d');\n    if (context) {\n        // In some cases `drawImage` can throw (e.g. if the canvas size is 0x0).\n        // We can't do much about it so just ignore the error.\n        try {\n            context.drawImage(source, 0, 0);\n        }\n        catch (_a) { }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Options that can be used to bind a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/** Options that can be used to bind an active event listener. */\nconst activeEventListenerOptions = normalizePassiveListenerOptions({ passive: false });\n/**\n * Time in milliseconds for which to ignore mouse events, after\n * receiving a touch event. Used to avoid doing double work for\n * touch devices where the browser fires fake mouse events, in\n * addition to touch events.\n */\nconst MOUSE_EVENT_IGNORE_TIME = 800;\n/**\n * Reference to a draggable item. Used to manipulate or dispose of the item.\n */\nclass DragRef {\n    constructor(element, _config, _document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._config = _config;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n        /**\n         * CSS `transform` applied to the element when it isn't being dragged. We need a\n         * passive transform in order for the dragged element to retain its new position\n         * after the user has stopped dragging and because we need to know the relative\n         * position in case they start dragging again. This corresponds to `element.style.transform`.\n         */\n        this._passiveTransform = { x: 0, y: 0 };\n        /** CSS `transform` that is applied to the element while it's being dragged. */\n        this._activeTransform = { x: 0, y: 0 };\n        /** Emits when the item is being moved. */\n        this._moveEvents = new Subject();\n        /** Subscription to pointer movement events. */\n        this._pointerMoveSubscription = Subscription.EMPTY;\n        /** Subscription to the event that is dispatched when the user lifts their pointer. */\n        this._pointerUpSubscription = Subscription.EMPTY;\n        /** Subscription to the viewport being scrolled. */\n        this._scrollSubscription = Subscription.EMPTY;\n        /** Subscription to the viewport being resized. */\n        this._resizeSubscription = Subscription.EMPTY;\n        /** Cached reference to the boundary element. */\n        this._boundaryElement = null;\n        /** Whether the native dragging interactions have been enabled on the root element. */\n        this._nativeInteractionsEnabled = true;\n        /** Elements that can be used to drag the draggable item. */\n        this._handles = [];\n        /** Registered handles that are currently disabled. */\n        this._disabledHandles = new Set();\n        /** Layout direction of the item. */\n        this._direction = 'ltr';\n        /**\n         * Amount of milliseconds to wait after the user has put their\n         * pointer down before starting to drag the element.\n         */\n        this.dragStartDelay = 0;\n        this._disabled = false;\n        /** Emits as the drag sequence is being prepared. */\n        this.beforeStarted = new Subject();\n        /** Emits when the user starts dragging the item. */\n        this.started = new Subject();\n        /** Emits when the user has released a drag item, before any animations have started. */\n        this.released = new Subject();\n        /** Emits when the user stops dragging an item in the container. */\n        this.ended = new Subject();\n        /** Emits when the user has moved the item into a new container. */\n        this.entered = new Subject();\n        /** Emits when the user removes the item its container by dragging it into another container. */\n        this.exited = new Subject();\n        /** Emits when the user drops the item inside a container. */\n        this.dropped = new Subject();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = this._moveEvents.asObservable();\n        /** Handler for the `mousedown`/`touchstart` events. */\n        this._pointerDown = (event) => {\n            this.beforeStarted.next();\n            // Delegate the event based on whether it started from a handle or the element itself.\n            if (this._handles.length) {\n                const targetHandle = this._handles.find(handle => {\n                    const target = event.target;\n                    return !!target && (target === handle || handle.contains(target));\n                });\n                if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n                    this._initializeDragSequence(targetHandle, event);\n                }\n            }\n            else if (!this.disabled) {\n                this._initializeDragSequence(this._rootElement, event);\n            }\n        };\n        /** Handler that is invoked when the user moves their pointer after they've initiated a drag. */\n        this._pointerMove = (event) => {\n            // Prevent the default action as early as possible in order to block\n            // native actions like dragging the selected text or images with the mouse.\n            event.preventDefault();\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            if (!this._hasStartedDragging) {\n                const distanceX = Math.abs(pointerPosition.x - this._pickupPositionOnPage.x);\n                const distanceY = Math.abs(pointerPosition.y - this._pickupPositionOnPage.y);\n                const isOverThreshold = distanceX + distanceY >= this._config.dragStartThreshold;\n                // Only start dragging after the user has moved more than the minimum distance in either\n                // direction. Note that this is preferrable over doing something like `skip(minimumDistance)`\n                // in the `pointerMove` subscription, because we're not guaranteed to have one move event\n                // per pixel of movement (e.g. if the user moves their pointer quickly).\n                if (isOverThreshold) {\n                    const isDelayElapsed = Date.now() >= this._dragStartTime + this._getDragStartDelay(event);\n                    if (!isDelayElapsed) {\n                        this._endDragSequence(event);\n                        return;\n                    }\n                    // Prevent other drag sequences from starting while something in the container is still\n                    // being dragged. This can happen while we're waiting for the drop animation to finish\n                    // and can cause errors, because some elements might still be moving around.\n                    if (!this._dropContainer || !this._dropContainer.isDragging()) {\n                        this._hasStartedDragging = true;\n                        this._ngZone.run(() => this._startDragSequence(event));\n                    }\n                }\n                return;\n            }\n            // We only need the preview dimensions if we have a boundary element.\n            if (this._boundaryElement) {\n                // Cache the preview element rect if we haven't cached it already or if\n                // we cached it too early before the element dimensions were computed.\n                if (!this._previewRect || (!this._previewRect.width && !this._previewRect.height)) {\n                    this._previewRect = (this._preview || this._rootElement).getBoundingClientRect();\n                }\n            }\n            const constrainedPointerPosition = this._getConstrainedPointerPosition(pointerPosition);\n            this._hasMoved = true;\n            this._lastKnownPointerPosition = pointerPosition;\n            this._updatePointerDirectionDelta(constrainedPointerPosition);\n            if (this._dropContainer) {\n                this._updateActiveDropContainer(constrainedPointerPosition, pointerPosition);\n            }\n            else {\n                const activeTransform = this._activeTransform;\n                activeTransform.x =\n                    constrainedPointerPosition.x - this._pickupPositionOnPage.x + this._passiveTransform.x;\n                activeTransform.y =\n                    constrainedPointerPosition.y - this._pickupPositionOnPage.y + this._passiveTransform.y;\n                this._applyRootElementTransform(activeTransform.x, activeTransform.y);\n                // Apply transform as attribute if dragging and svg element to work for IE\n                if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\n                    const appliedTransform = `translate(${activeTransform.x} ${activeTransform.y})`;\n                    this._rootElement.setAttribute('transform', appliedTransform);\n                }\n            }\n            // Since this event gets fired for every pixel while dragging, we only\n            // want to fire it if the consumer opted into it. Also we have to\n            // re-enter the zone because we run all of the events on the outside.\n            if (this._moveEvents.observers.length) {\n                this._ngZone.run(() => {\n                    this._moveEvents.next({\n                        source: this,\n                        pointerPosition: constrainedPointerPosition,\n                        event,\n                        distance: this._getDragDistance(constrainedPointerPosition),\n                        delta: this._pointerDirectionDelta\n                    });\n                });\n            }\n        };\n        /** Handler that is invoked when the user lifts their pointer up, after initiating a drag. */\n        this._pointerUp = (event) => {\n            this._endDragSequence(event);\n        };\n        this.withRootElement(element);\n        this._parentPositions = new ParentPositionTracker(_document, _viewportRuler);\n        _dragDropRegistry.registerDragItem(this);\n    }\n    /** Whether starting to drag this element is disabled. */\n    get disabled() {\n        return this._disabled || !!(this._dropContainer && this._dropContainer.disabled);\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._toggleNativeDragInteractions();\n        }\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    getPlaceholderElement() {\n        return this._placeholder;\n    }\n    /** Returns the root draggable element. */\n    getRootElement() {\n        return this._rootElement;\n    }\n    /**\n     * Gets the currently-visible element that represents the drag item.\n     * While dragging this is the placeholder, otherwise it's the root element.\n     */\n    getVisibleElement() {\n        return this.isDragging() ? this.getPlaceholderElement() : this.getRootElement();\n    }\n    /** Registers the handles that can be used to drag the element. */\n    withHandles(handles) {\n        this._handles = handles.map(handle => coerceElement(handle));\n        this._handles.forEach(handle => toggleNativeDragInteractions(handle, false));\n        this._toggleNativeDragInteractions();\n        return this;\n    }\n    /**\n     * Registers the template that should be used for the drag preview.\n     * @param template Template that from which to stamp out the preview.\n     */\n    withPreviewTemplate(template) {\n        this._previewTemplate = template;\n        return this;\n    }\n    /**\n     * Registers the template that should be used for the drag placeholder.\n     * @param template Template that from which to stamp out the placeholder.\n     */\n    withPlaceholderTemplate(template) {\n        this._placeholderTemplate = template;\n        return this;\n    }\n    /**\n     * Sets an alternate drag root element. The root element is the element that will be moved as\n     * the user is dragging. Passing an alternate root element is useful when trying to enable\n     * dragging on an element that you might not have access to.\n     */\n    withRootElement(rootElement) {\n        const element = coerceElement(rootElement);\n        if (element !== this._rootElement) {\n            if (this._rootElement) {\n                this._removeRootElementListeners(this._rootElement);\n            }\n            this._ngZone.runOutsideAngular(() => {\n                element.addEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n                element.addEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n            });\n            this._initialTransform = undefined;\n            this._rootElement = element;\n        }\n        if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\n            this._ownerSVGElement = this._rootElement.ownerSVGElement;\n        }\n        return this;\n    }\n    /**\n     * Element to which the draggable's position will be constrained.\n     */\n    withBoundaryElement(boundaryElement) {\n        this._boundaryElement = boundaryElement ? coerceElement(boundaryElement) : null;\n        this._resizeSubscription.unsubscribe();\n        if (boundaryElement) {\n            this._resizeSubscription = this._viewportRuler\n                .change(10)\n                .subscribe(() => this._containInsideBoundaryOnResize());\n        }\n        return this;\n    }\n    /** Removes the dragging functionality from the DOM element. */\n    dispose() {\n        this._removeRootElementListeners(this._rootElement);\n        // Do this check before removing from the registry since it'll\n        // stop being considered as dragged once it is removed.\n        if (this.isDragging()) {\n            // Since we move out the element to the end of the body while it's being\n            // dragged, we have to make sure that it's removed if it gets destroyed.\n            removeNode(this._rootElement);\n        }\n        removeNode(this._anchor);\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._dragDropRegistry.removeDragItem(this);\n        this._removeSubscriptions();\n        this.beforeStarted.complete();\n        this.started.complete();\n        this.released.complete();\n        this.ended.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this._moveEvents.complete();\n        this._handles = [];\n        this._disabledHandles.clear();\n        this._dropContainer = undefined;\n        this._resizeSubscription.unsubscribe();\n        this._parentPositions.clear();\n        this._boundaryElement = this._rootElement = this._ownerSVGElement = this._placeholderTemplate =\n            this._previewTemplate = this._anchor = null;\n    }\n    /** Checks whether the element is currently being dragged. */\n    isDragging() {\n        return this._hasStartedDragging && this._dragDropRegistry.isDragging(this);\n    }\n    /** Resets a standalone drag item to its initial position. */\n    reset() {\n        this._rootElement.style.transform = this._initialTransform || '';\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform = { x: 0, y: 0 };\n    }\n    /**\n     * Sets a handle as disabled. While a handle is disabled, it'll capture and interrupt dragging.\n     * @param handle Handle element that should be disabled.\n     */\n    disableHandle(handle) {\n        if (this._handles.indexOf(handle) > -1) {\n            this._disabledHandles.add(handle);\n        }\n    }\n    /**\n     * Enables a handle, if it has been disabled.\n     * @param handle Handle element to be enabled.\n     */\n    enableHandle(handle) {\n        this._disabledHandles.delete(handle);\n    }\n    /** Sets the layout direction of the draggable item. */\n    withDirection(direction) {\n        this._direction = direction;\n        return this;\n    }\n    /** Sets the container that the item is part of. */\n    _withDropContainer(container) {\n        this._dropContainer = container;\n    }\n    /**\n     * Gets the current position in pixels the draggable outside of a drop container.\n     */\n    getFreeDragPosition() {\n        const position = this.isDragging() ? this._activeTransform : this._passiveTransform;\n        return { x: position.x, y: position.y };\n    }\n    /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @param value New position to be set.\n     */\n    setFreeDragPosition(value) {\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform.x = value.x;\n        this._passiveTransform.y = value.y;\n        if (!this._dropContainer) {\n            this._applyRootElementTransform(value.x, value.y);\n        }\n        return this;\n    }\n    /** Updates the item's sort order based on the last-known pointer position. */\n    _sortFromLastPointerPosition() {\n        const position = this._lastKnownPointerPosition;\n        if (position && this._dropContainer) {\n            this._updateActiveDropContainer(this._getConstrainedPointerPosition(position), position);\n        }\n    }\n    /** Unsubscribes from the global subscriptions. */\n    _removeSubscriptions() {\n        this._pointerMoveSubscription.unsubscribe();\n        this._pointerUpSubscription.unsubscribe();\n        this._scrollSubscription.unsubscribe();\n    }\n    /** Destroys the preview element and its ViewRef. */\n    _destroyPreview() {\n        if (this._preview) {\n            removeNode(this._preview);\n        }\n        if (this._previewRef) {\n            this._previewRef.destroy();\n        }\n        this._preview = this._previewRef = null;\n    }\n    /** Destroys the placeholder element and its ViewRef. */\n    _destroyPlaceholder() {\n        if (this._placeholder) {\n            removeNode(this._placeholder);\n        }\n        if (this._placeholderRef) {\n            this._placeholderRef.destroy();\n        }\n        this._placeholder = this._placeholderRef = null;\n    }\n    /**\n     * Clears subscriptions and stops the dragging sequence.\n     * @param event Browser event object that ended the sequence.\n     */\n    _endDragSequence(event) {\n        // Note that here we use `isDragging` from the service, rather than from `this`.\n        // The difference is that the one from the service reflects whether a dragging sequence\n        // has been initiated, whereas the one on `this` includes whether the user has passed\n        // the minimum dragging threshold.\n        if (!this._dragDropRegistry.isDragging(this)) {\n            return;\n        }\n        this._removeSubscriptions();\n        this._dragDropRegistry.stopDragging(this);\n        this._toggleNativeDragInteractions();\n        if (this._handles) {\n            this._rootElement.style.webkitTapHighlightColor = this._rootElementTapHighlight;\n        }\n        if (!this._hasStartedDragging) {\n            return;\n        }\n        this.released.next({ source: this });\n        if (this._dropContainer) {\n            // Stop scrolling immediately, instead of waiting for the animation to finish.\n            this._dropContainer._stopScrolling();\n            this._animatePreviewToPlaceholder().then(() => {\n                this._cleanupDragArtifacts(event);\n                this._cleanupCachedDimensions();\n                this._dragDropRegistry.stopDragging(this);\n            });\n        }\n        else {\n            // Convert the active transform into a passive one. This means that next time\n            // the user starts dragging the item, its position will be calculated relatively\n            // to the new passive transform.\n            this._passiveTransform.x = this._activeTransform.x;\n            this._passiveTransform.y = this._activeTransform.y;\n            this._ngZone.run(() => {\n                this.ended.next({\n                    source: this,\n                    distance: this._getDragDistance(this._getPointerPositionOnPage(event))\n                });\n            });\n            this._cleanupCachedDimensions();\n            this._dragDropRegistry.stopDragging(this);\n        }\n    }\n    /** Starts the dragging sequence. */\n    _startDragSequence(event) {\n        if (isTouchEvent(event)) {\n            this._lastTouchEventTime = Date.now();\n        }\n        this._toggleNativeDragInteractions();\n        const dropContainer = this._dropContainer;\n        if (dropContainer) {\n            const element = this._rootElement;\n            const parent = element.parentNode;\n            const preview = this._preview = this._createPreviewElement();\n            const placeholder = this._placeholder = this._createPlaceholderElement();\n            const anchor = this._anchor = this._anchor || this._document.createComment('');\n            // Insert an anchor node so that we can restore the element's position in the DOM.\n            parent.insertBefore(anchor, element);\n            // We move the element out at the end of the body and we make it hidden, because keeping it in\n            // place will throw off the consumer's `:last-child` selectors. We can't remove the element\n            // from the DOM completely, because iOS will stop firing all subsequent events in the chain.\n            element.style.display = 'none';\n            this._document.body.appendChild(parent.replaceChild(placeholder, element));\n            getPreviewInsertionPoint(this._document).appendChild(preview);\n            this.started.next({ source: this }); // Emit before notifying the container.\n            dropContainer.start();\n            this._initialContainer = dropContainer;\n            this._initialIndex = dropContainer.getItemIndex(this);\n        }\n        else {\n            this.started.next({ source: this });\n            this._initialContainer = this._initialIndex = undefined;\n        }\n        // Important to run after we've called `start` on the parent container\n        // so that it has had time to resolve its scrollable parents.\n        this._parentPositions.cache(dropContainer ? dropContainer.getScrollableParents() : []);\n    }\n    /**\n     * Sets up the different variables and subscriptions\n     * that will be necessary for the dragging sequence.\n     * @param referenceElement Element that started the drag sequence.\n     * @param event Browser event object that started the sequence.\n     */\n    _initializeDragSequence(referenceElement, event) {\n        // Always stop propagation for the event that initializes\n        // the dragging sequence, in order to prevent it from potentially\n        // starting another sequence for a draggable parent somewhere up the DOM tree.\n        event.stopPropagation();\n        const isDragging = this.isDragging();\n        const isTouchSequence = isTouchEvent(event);\n        const isAuxiliaryMouseButton = !isTouchSequence && event.button !== 0;\n        const rootElement = this._rootElement;\n        const isSyntheticEvent = !isTouchSequence && this._lastTouchEventTime &&\n            this._lastTouchEventTime + MOUSE_EVENT_IGNORE_TIME > Date.now();\n        // If the event started from an element with the native HTML drag&drop, it'll interfere\n        // with our own dragging (e.g. `img` tags do it by default). Prevent the default action\n        // to stop it from happening. Note that preventing on `dragstart` also seems to work, but\n        // it's flaky and it fails if the user drags it away quickly. Also note that we only want\n        // to do this for `mousedown` since doing the same for `touchstart` will stop any `click`\n        // events from firing on touch devices.\n        if (event.target && event.target.draggable && event.type === 'mousedown') {\n            event.preventDefault();\n        }\n        // Abort if the user is already dragging or is using a mouse button other than the primary one.\n        if (isDragging || isAuxiliaryMouseButton || isSyntheticEvent) {\n            return;\n        }\n        // If we've got handles, we need to disable the tap highlight on the entire root element,\n        // otherwise iOS will still add it, even though all the drag interactions on the handle\n        // are disabled.\n        if (this._handles.length) {\n            this._rootElementTapHighlight = rootElement.style.webkitTapHighlightColor || '';\n            rootElement.style.webkitTapHighlightColor = 'transparent';\n        }\n        this._hasStartedDragging = this._hasMoved = false;\n        // Avoid multiple subscriptions and memory leaks when multi touch\n        // (isDragging check above isn't enough because of possible temporal and/or dimensional delays)\n        this._removeSubscriptions();\n        this._pointerMoveSubscription = this._dragDropRegistry.pointerMove.subscribe(this._pointerMove);\n        this._pointerUpSubscription = this._dragDropRegistry.pointerUp.subscribe(this._pointerUp);\n        this._scrollSubscription = this._dragDropRegistry.scroll.subscribe(scrollEvent => {\n            this._updateOnScroll(scrollEvent);\n        });\n        if (this._boundaryElement) {\n            this._boundaryRect = getMutableClientRect(this._boundaryElement);\n        }\n        // If we have a custom preview we can't know ahead of time how large it'll be so we position\n        // it next to the cursor. The exception is when the consumer has opted into making the preview\n        // the same size as the root element, in which case we do know the size.\n        const previewTemplate = this._previewTemplate;\n        this._pickupPositionInElement = previewTemplate && previewTemplate.template &&\n            !previewTemplate.matchSize ? { x: 0, y: 0 } :\n            this._getPointerPositionInElement(referenceElement, event);\n        const pointerPosition = this._pickupPositionOnPage = this._lastKnownPointerPosition =\n            this._getPointerPositionOnPage(event);\n        this._pointerDirectionDelta = { x: 0, y: 0 };\n        this._pointerPositionAtLastDirectionChange = { x: pointerPosition.x, y: pointerPosition.y };\n        this._dragStartTime = Date.now();\n        this._dragDropRegistry.startDragging(this, event);\n    }\n    /** Cleans up the DOM artifacts that were added to facilitate the element being dragged. */\n    _cleanupDragArtifacts(event) {\n        // Restore the element's visibility and insert it at its old position in the DOM.\n        // It's important that we maintain the position, because moving the element around in the DOM\n        // can throw off `NgFor` which does smart diffing and re-creates elements only when necessary,\n        // while moving the existing elements in all other cases.\n        this._rootElement.style.display = '';\n        this._anchor.parentNode.replaceChild(this._rootElement, this._anchor);\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._boundaryRect = this._previewRect = undefined;\n        // Re-enter the NgZone since we bound `document` events on the outside.\n        this._ngZone.run(() => {\n            const container = this._dropContainer;\n            const currentIndex = container.getItemIndex(this);\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            const distance = this._getDragDistance(this._getPointerPositionOnPage(event));\n            const isPointerOverContainer = container._isOverContainer(pointerPosition.x, pointerPosition.y);\n            this.ended.next({ source: this, distance });\n            this.dropped.next({\n                item: this,\n                currentIndex,\n                previousIndex: this._initialIndex,\n                container: container,\n                previousContainer: this._initialContainer,\n                isPointerOverContainer,\n                distance\n            });\n            container.drop(this, currentIndex, this._initialContainer, isPointerOverContainer, distance, this._initialIndex);\n            this._dropContainer = this._initialContainer;\n        });\n    }\n    /**\n     * Updates the item's position in its drop container, or moves it\n     * into a new one, depending on its current drag position.\n     */\n    _updateActiveDropContainer({ x, y }, { x: rawX, y: rawY }) {\n        // Drop container that draggable has been moved into.\n        let newContainer = this._initialContainer._getSiblingContainerFromPosition(this, x, y);\n        // If we couldn't find a new container to move the item into, and the item has left its\n        // initial container, check whether the it's over the initial container. This handles the\n        // case where two containers are connected one way and the user tries to undo dragging an\n        // item into a new container.\n        if (!newContainer && this._dropContainer !== this._initialContainer &&\n            this._initialContainer._isOverContainer(x, y)) {\n            newContainer = this._initialContainer;\n        }\n        if (newContainer && newContainer !== this._dropContainer) {\n            this._ngZone.run(() => {\n                // Notify the old container that the item has left.\n                this.exited.next({ item: this, container: this._dropContainer });\n                this._dropContainer.exit(this);\n                // Notify the new container that the item has entered.\n                this._dropContainer = newContainer;\n                this._dropContainer.enter(this, x, y, newContainer === this._initialContainer &&\n                    // If we're re-entering the initial container and sorting is disabled,\n                    // put item the into its starting index to begin with.\n                    newContainer.sortingDisabled ? this._initialIndex : undefined);\n                this.entered.next({\n                    item: this,\n                    container: newContainer,\n                    currentIndex: newContainer.getItemIndex(this)\n                });\n            });\n        }\n        this._dropContainer._startScrollingIfNecessary(rawX, rawY);\n        this._dropContainer._sortItem(this, x, y, this._pointerDirectionDelta);\n        this._preview.style.transform =\n            getTransform(x - this._pickupPositionInElement.x, y - this._pickupPositionInElement.y);\n    }\n    /**\n     * Creates the element that will be rendered next to the user's pointer\n     * and will be used as a preview of the element that is being dragged.\n     */\n    _createPreviewElement() {\n        const previewConfig = this._previewTemplate;\n        const previewClass = this.previewClass;\n        const previewTemplate = previewConfig ? previewConfig.template : null;\n        let preview;\n        if (previewTemplate && previewConfig) {\n            // Measure the element before we've inserted the preview\n            // since the insertion could throw off the measurement.\n            const rootRect = previewConfig.matchSize ? this._rootElement.getBoundingClientRect() : null;\n            const viewRef = previewConfig.viewContainer.createEmbeddedView(previewTemplate, previewConfig.context);\n            viewRef.detectChanges();\n            preview = getRootNode(viewRef, this._document);\n            this._previewRef = viewRef;\n            if (previewConfig.matchSize) {\n                matchElementSize(preview, rootRect);\n            }\n            else {\n                preview.style.transform =\n                    getTransform(this._pickupPositionOnPage.x, this._pickupPositionOnPage.y);\n            }\n        }\n        else {\n            const element = this._rootElement;\n            preview = deepCloneNode(element);\n            matchElementSize(preview, element.getBoundingClientRect());\n        }\n        extendStyles(preview.style, {\n            // It's important that we disable the pointer events on the preview, because\n            // it can throw off the `document.elementFromPoint` calls in the `CdkDropList`.\n            pointerEvents: 'none',\n            // We have to reset the margin, because it can throw off positioning relative to the viewport.\n            margin: '0',\n            position: 'fixed',\n            top: '0',\n            left: '0',\n            zIndex: `${this._config.zIndex || 1000}`\n        });\n        toggleNativeDragInteractions(preview, false);\n        preview.classList.add('cdk-drag-preview');\n        preview.setAttribute('dir', this._direction);\n        if (previewClass) {\n            if (Array.isArray(previewClass)) {\n                previewClass.forEach(className => preview.classList.add(className));\n            }\n            else {\n                preview.classList.add(previewClass);\n            }\n        }\n        return preview;\n    }\n    /**\n     * Animates the preview element from its current position to the location of the drop placeholder.\n     * @returns Promise that resolves when the animation completes.\n     */\n    _animatePreviewToPlaceholder() {\n        // If the user hasn't moved yet, the transitionend event won't fire.\n        if (!this._hasMoved) {\n            return Promise.resolve();\n        }\n        const placeholderRect = this._placeholder.getBoundingClientRect();\n        // Apply the class that adds a transition to the preview.\n        this._preview.classList.add('cdk-drag-animating');\n        // Move the preview to the placeholder position.\n        this._preview.style.transform = getTransform(placeholderRect.left, placeholderRect.top);\n        // If the element doesn't have a `transition`, the `transitionend` event won't fire. Since\n        // we need to trigger a style recalculation in order for the `cdk-drag-animating` class to\n        // apply its style, we take advantage of the available info to figure out whether we need to\n        // bind the event in the first place.\n        const duration = getTransformTransitionDurationInMs(this._preview);\n        if (duration === 0) {\n            return Promise.resolve();\n        }\n        return this._ngZone.runOutsideAngular(() => {\n            return new Promise(resolve => {\n                const handler = ((event) => {\n                    if (!event || (event.target === this._preview && event.propertyName === 'transform')) {\n                        this._preview.removeEventListener('transitionend', handler);\n                        resolve();\n                        clearTimeout(timeout);\n                    }\n                });\n                // If a transition is short enough, the browser might not fire the `transitionend` event.\n                // Since we know how long it's supposed to take, add a timeout with a 50% buffer that'll\n                // fire if the transition hasn't completed when it was supposed to.\n                const timeout = setTimeout(handler, duration * 1.5);\n                this._preview.addEventListener('transitionend', handler);\n            });\n        });\n    }\n    /** Creates an element that will be shown instead of the current element while dragging. */\n    _createPlaceholderElement() {\n        const placeholderConfig = this._placeholderTemplate;\n        const placeholderTemplate = placeholderConfig ? placeholderConfig.template : null;\n        let placeholder;\n        if (placeholderTemplate) {\n            this._placeholderRef = placeholderConfig.viewContainer.createEmbeddedView(placeholderTemplate, placeholderConfig.context);\n            this._placeholderRef.detectChanges();\n            placeholder = getRootNode(this._placeholderRef, this._document);\n        }\n        else {\n            placeholder = deepCloneNode(this._rootElement);\n        }\n        placeholder.classList.add('cdk-drag-placeholder');\n        return placeholder;\n    }\n    /**\n     * Figures out the coordinates at which an element was picked up.\n     * @param referenceElement Element that initiated the dragging.\n     * @param event Event that initiated the dragging.\n     */\n    _getPointerPositionInElement(referenceElement, event) {\n        const elementRect = this._rootElement.getBoundingClientRect();\n        const handleElement = referenceElement === this._rootElement ? null : referenceElement;\n        const referenceRect = handleElement ? handleElement.getBoundingClientRect() : elementRect;\n        const point = isTouchEvent(event) ? event.targetTouches[0] : event;\n        const scrollPosition = this._getViewportScrollPosition();\n        const x = point.pageX - referenceRect.left - scrollPosition.left;\n        const y = point.pageY - referenceRect.top - scrollPosition.top;\n        return {\n            x: referenceRect.left - elementRect.left + x,\n            y: referenceRect.top - elementRect.top + y\n        };\n    }\n    /** Determines the point of the page that was touched by the user. */\n    _getPointerPositionOnPage(event) {\n        const scrollPosition = this._getViewportScrollPosition();\n        const point = isTouchEvent(event) ?\n            // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n            // Also note that on real devices we're guaranteed for either `touches` or `changedTouches`\n            // to have a value, but Firefox in device emulation mode has a bug where both can be empty\n            // for `touchstart` and `touchend` so we fall back to a dummy object in order to avoid\n            // throwing an error. The value returned here will be incorrect, but since this only\n            // breaks inside a developer tool and the value is only used for secondary information,\n            // we can get away with it. See https://bugzilla.mozilla.org/show_bug.cgi?id=1615824.\n            (event.touches[0] || event.changedTouches[0] || { pageX: 0, pageY: 0 }) : event;\n        const x = point.pageX - scrollPosition.left;\n        const y = point.pageY - scrollPosition.top;\n        // if dragging SVG element, try to convert from the screen coordinate system to the SVG\n        // coordinate system\n        if (this._ownerSVGElement) {\n            const svgMatrix = this._ownerSVGElement.getScreenCTM();\n            if (svgMatrix) {\n                const svgPoint = this._ownerSVGElement.createSVGPoint();\n                svgPoint.x = x;\n                svgPoint.y = y;\n                return svgPoint.matrixTransform(svgMatrix.inverse());\n            }\n        }\n        return { x, y };\n    }\n    /** Gets the pointer position on the page, accounting for any position constraints. */\n    _getConstrainedPointerPosition(point) {\n        const dropContainerLock = this._dropContainer ? this._dropContainer.lockAxis : null;\n        let { x, y } = this.constrainPosition ? this.constrainPosition(point, this) : point;\n        if (this.lockAxis === 'x' || dropContainerLock === 'x') {\n            y = this._pickupPositionOnPage.y;\n        }\n        else if (this.lockAxis === 'y' || dropContainerLock === 'y') {\n            x = this._pickupPositionOnPage.x;\n        }\n        if (this._boundaryRect) {\n            const { x: pickupX, y: pickupY } = this._pickupPositionInElement;\n            const boundaryRect = this._boundaryRect;\n            const previewRect = this._previewRect;\n            const minY = boundaryRect.top + pickupY;\n            const maxY = boundaryRect.bottom - (previewRect.height - pickupY);\n            const minX = boundaryRect.left + pickupX;\n            const maxX = boundaryRect.right - (previewRect.width - pickupX);\n            x = clamp(x, minX, maxX);\n            y = clamp(y, minY, maxY);\n        }\n        return { x, y };\n    }\n    /** Updates the current drag delta, based on the user's current pointer position on the page. */\n    _updatePointerDirectionDelta(pointerPositionOnPage) {\n        const { x, y } = pointerPositionOnPage;\n        const delta = this._pointerDirectionDelta;\n        const positionSinceLastChange = this._pointerPositionAtLastDirectionChange;\n        // Amount of pixels the user has dragged since the last time the direction changed.\n        const changeX = Math.abs(x - positionSinceLastChange.x);\n        const changeY = Math.abs(y - positionSinceLastChange.y);\n        // Because we handle pointer events on a per-pixel basis, we don't want the delta\n        // to change for every pixel, otherwise anything that depends on it can look erratic.\n        // To make the delta more consistent, we track how much the user has moved since the last\n        // delta change and we only update it after it has reached a certain threshold.\n        if (changeX > this._config.pointerDirectionChangeThreshold) {\n            delta.x = x > positionSinceLastChange.x ? 1 : -1;\n            positionSinceLastChange.x = x;\n        }\n        if (changeY > this._config.pointerDirectionChangeThreshold) {\n            delta.y = y > positionSinceLastChange.y ? 1 : -1;\n            positionSinceLastChange.y = y;\n        }\n        return delta;\n    }\n    /** Toggles the native drag interactions, based on how many handles are registered. */\n    _toggleNativeDragInteractions() {\n        if (!this._rootElement || !this._handles) {\n            return;\n        }\n        const shouldEnable = this._handles.length > 0 || !this.isDragging();\n        if (shouldEnable !== this._nativeInteractionsEnabled) {\n            this._nativeInteractionsEnabled = shouldEnable;\n            toggleNativeDragInteractions(this._rootElement, shouldEnable);\n        }\n    }\n    /** Removes the manually-added event listeners from the root element. */\n    _removeRootElementListeners(element) {\n        element.removeEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n        element.removeEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n    }\n    /**\n     * Applies a `transform` to the root element, taking into account any existing transforms on it.\n     * @param x New transform value along the X axis.\n     * @param y New transform value along the Y axis.\n     */\n    _applyRootElementTransform(x, y) {\n        const transform = getTransform(x, y);\n        // Cache the previous transform amount only after the first drag sequence, because\n        // we don't want our own transforms to stack on top of each other.\n        if (this._initialTransform == null) {\n            this._initialTransform = this._rootElement.style.transform || '';\n        }\n        // Preserve the previous `transform` value, if there was one. Note that we apply our own\n        // transform before the user's, because things like rotation can affect which direction\n        // the element will be translated towards.\n        this._rootElement.style.transform = this._initialTransform ?\n            transform + ' ' + this._initialTransform : transform;\n    }\n    /**\n     * Gets the distance that the user has dragged during the current drag sequence.\n     * @param currentPosition Current position of the user's pointer.\n     */\n    _getDragDistance(currentPosition) {\n        const pickupPosition = this._pickupPositionOnPage;\n        if (pickupPosition) {\n            return { x: currentPosition.x - pickupPosition.x, y: currentPosition.y - pickupPosition.y };\n        }\n        return { x: 0, y: 0 };\n    }\n    /** Cleans up any cached element dimensions that we don't need after dragging has stopped. */\n    _cleanupCachedDimensions() {\n        this._boundaryRect = this._previewRect = undefined;\n        this._parentPositions.clear();\n    }\n    /**\n     * Checks whether the element is still inside its boundary after the viewport has been resized.\n     * If not, the position is adjusted so that the element fits again.\n     */\n    _containInsideBoundaryOnResize() {\n        let { x, y } = this._passiveTransform;\n        if ((x === 0 && y === 0) || this.isDragging() || !this._boundaryElement) {\n            return;\n        }\n        const boundaryRect = this._boundaryElement.getBoundingClientRect();\n        const elementRect = this._rootElement.getBoundingClientRect();\n        // It's possible that the element got hidden away after dragging (e.g. by switching to a\n        // different tab). Don't do anything in this case so we don't clear the user's position.\n        if ((boundaryRect.width === 0 && boundaryRect.height === 0) ||\n            (elementRect.width === 0 && elementRect.height === 0)) {\n            return;\n        }\n        const leftOverflow = boundaryRect.left - elementRect.left;\n        const rightOverflow = elementRect.right - boundaryRect.right;\n        const topOverflow = boundaryRect.top - elementRect.top;\n        const bottomOverflow = elementRect.bottom - boundaryRect.bottom;\n        // If the element has become wider than the boundary, we can't\n        // do much to make it fit so we just anchor it to the left.\n        if (boundaryRect.width > elementRect.width) {\n            if (leftOverflow > 0) {\n                x += leftOverflow;\n            }\n            if (rightOverflow > 0) {\n                x -= rightOverflow;\n            }\n        }\n        else {\n            x = 0;\n        }\n        // If the element has become taller than the boundary, we can't\n        // do much to make it fit so we just anchor it to the top.\n        if (boundaryRect.height > elementRect.height) {\n            if (topOverflow > 0) {\n                y += topOverflow;\n            }\n            if (bottomOverflow > 0) {\n                y -= bottomOverflow;\n            }\n        }\n        else {\n            y = 0;\n        }\n        if (x !== this._passiveTransform.x || y !== this._passiveTransform.y) {\n            this.setFreeDragPosition({ y, x });\n        }\n    }\n    /** Gets the drag start delay, based on the event type. */\n    _getDragStartDelay(event) {\n        const value = this.dragStartDelay;\n        if (typeof value === 'number') {\n            return value;\n        }\n        else if (isTouchEvent(event)) {\n            return value.touch;\n        }\n        return value ? value.mouse : 0;\n    }\n    /** Updates the internal state of the draggable element when scrolling has occurred. */\n    _updateOnScroll(event) {\n        const scrollDifference = this._parentPositions.handleScroll(event);\n        if (scrollDifference) {\n            const target = event.target;\n            // ClientRect dimensions are based on the scroll position of the page and its parent node so\n            // we have to update the cached boundary ClientRect if the user has scrolled. Check for\n            // the `document` specifically since IE doesn't support `contains` on it.\n            if (this._boundaryRect && (target === this._document ||\n                (target !== this._boundaryElement && target.contains(this._boundaryElement)))) {\n                adjustClientRect(this._boundaryRect, scrollDifference.top, scrollDifference.left);\n            }\n            this._pickupPositionOnPage.x += scrollDifference.left;\n            this._pickupPositionOnPage.y += scrollDifference.top;\n            // If we're in free drag mode, we have to update the active transform, because\n            // it isn't relative to the viewport like the preview inside a drop list.\n            if (!this._dropContainer) {\n                this._activeTransform.x -= scrollDifference.left;\n                this._activeTransform.y -= scrollDifference.top;\n                this._applyRootElementTransform(this._activeTransform.x, this._activeTransform.y);\n            }\n        }\n    }\n    /** Gets the scroll position of the viewport. */\n    _getViewportScrollPosition() {\n        const cachedPosition = this._parentPositions.positions.get(this._document);\n        return cachedPosition ? cachedPosition.scrollPosition :\n            this._viewportRuler.getViewportScrollPosition();\n    }\n}\n/**\n * Gets a 3d `transform` that can be applied to an element.\n * @param x Desired position of the element along the X axis.\n * @param y Desired position of the element along the Y axis.\n */\nfunction getTransform(x, y) {\n    // Round the transforms since some browsers will\n    // blur the elements for sub-pixel transforms.\n    return `translate3d(${Math.round(x)}px, ${Math.round(y)}px, 0)`;\n}\n/** Clamps a value between a minimum and a maximum. */\nfunction clamp(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * Helper to remove a node from the DOM and to do all the necessary null checks.\n * @param node Node to be removed.\n */\nfunction removeNode(node) {\n    if (node && node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\n/** Determines whether an event is a touch event. */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/** Gets the element into which the drag preview should be inserted. */\nfunction getPreviewInsertionPoint(documentRef) {\n    // We can't use the body if the user is in fullscreen mode,\n    // because the preview will render under the fullscreen element.\n    // TODO(crisbeto): dedupe this with the `FullscreenOverlayContainer` eventually.\n    return documentRef.fullscreenElement ||\n        documentRef.webkitFullscreenElement ||\n        documentRef.mozFullScreenElement ||\n        documentRef.msFullscreenElement ||\n        documentRef.body;\n}\n/**\n * Gets the root HTML element of an embedded view.\n * If the root is not an HTML element it gets wrapped in one.\n */\nfunction getRootNode(viewRef, _document) {\n    const rootNodes = viewRef.rootNodes;\n    if (rootNodes.length === 1 && rootNodes[0].nodeType === _document.ELEMENT_NODE) {\n        return rootNodes[0];\n    }\n    const wrapper = _document.createElement('div');\n    rootNodes.forEach(node => wrapper.appendChild(node));\n    return wrapper;\n}\n/**\n * Matches the target element's size to the source's size.\n * @param target Element that needs to be resized.\n * @param sourceRect Dimensions of the source element.\n */\nfunction matchElementSize(target, sourceRect) {\n    target.style.width = `${sourceRect.width}px`;\n    target.style.height = `${sourceRect.height}px`;\n    target.style.transform = getTransform(sourceRect.left, sourceRect.top);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Moves an item one index in an array to another.\n * @param array Array in which to move the item.\n * @param fromIndex Starting index of the item.\n * @param toIndex Index to which the item should be moved.\n */\nfunction moveItemInArray(array, fromIndex, toIndex) {\n    const from = clamp$1(fromIndex, array.length - 1);\n    const to = clamp$1(toIndex, array.length - 1);\n    if (from === to) {\n        return;\n    }\n    const target = array[from];\n    const delta = to < from ? -1 : 1;\n    for (let i = from; i !== to; i += delta) {\n        array[i] = array[i + delta];\n    }\n    array[to] = target;\n}\n/**\n * Moves an item from one array to another.\n * @param currentArray Array from which to transfer the item.\n * @param targetArray Array into which to put the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n */\nfunction transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    const from = clamp$1(currentIndex, currentArray.length - 1);\n    const to = clamp$1(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\n    }\n}\n/**\n * Copies an item from one array to another, leaving it in its\n * original position in current array.\n * @param currentArray Array from which to copy the item.\n * @param targetArray Array into which is copy the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n *\n */\nfunction copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    const to = clamp$1(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray[currentIndex]);\n    }\n}\n/** Clamps a number between zero and a maximum. */\nfunction clamp$1(value, max) {\n    return Math.max(0, Math.min(max, value));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Proximity, as a ratio to width/height, at which a\n * dragged item will affect the drop container.\n */\nconst DROP_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Proximity, as a ratio to width/height at which to start auto-scrolling the drop list or the\n * viewport. The value comes from trying it out manually until it feels right.\n */\nconst SCROLL_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Number of pixels to scroll for each frame when auto-scrolling an element.\n * The value comes from trying it out manually until it feels right.\n */\nconst AUTO_SCROLL_STEP = 2;\n/**\n * Reference to a drop list. Used to manipulate or dispose of the container.\n */\nclass DropListRef {\n    constructor(element, _dragDropRegistry, _document, _ngZone, _viewportRuler) {\n        this._dragDropRegistry = _dragDropRegistry;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        /** Whether starting a dragging sequence from this container is disabled. */\n        this.disabled = false;\n        /** Whether sorting items within the list is disabled. */\n        this.sortingDisabled = false;\n        /**\n         * Whether auto-scrolling the view when the user\n         * moves their pointer close to the edges is disabled.\n         */\n        this.autoScrollDisabled = false;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = () => true;\n        /** Emits right before dragging has started. */\n        this.beforeStarted = new Subject();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new Subject();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new Subject();\n        /** Emits when the user drops an item inside the container. */\n        this.dropped = new Subject();\n        /** Emits as the user is swapping items while actively dragging. */\n        this.sorted = new Subject();\n        /** Whether an item in the list is being dragged. */\n        this._isDragging = false;\n        /** Cache of the dimensions of all the items inside the container. */\n        this._itemPositions = [];\n        /**\n         * Keeps track of the item that was last swapped with the dragged item, as well as what direction\n         * the pointer was moving in when the swap occured and whether the user's pointer continued to\n         * overlap with the swapped item after the swapping occurred.\n         */\n        this._previousSwap = { drag: null, delta: 0, overlaps: false };\n        /** Drop lists that are connected to the current one. */\n        this._siblings = [];\n        /** Direction in which the list is oriented. */\n        this._orientation = 'vertical';\n        /** Connected siblings that currently have a dragged item. */\n        this._activeSiblings = new Set();\n        /** Layout direction of the drop list. */\n        this._direction = 'ltr';\n        /** Subscription to the window being scrolled. */\n        this._viewportScrollSubscription = Subscription.EMPTY;\n        /** Vertical direction in which the list is currently scrolling. */\n        this._verticalScrollDirection = 0 /* NONE */;\n        /** Horizontal direction in which the list is currently scrolling. */\n        this._horizontalScrollDirection = 0 /* NONE */;\n        /** Used to signal to the current auto-scroll sequence when to stop. */\n        this._stopScrollTimers = new Subject();\n        /** Shadow root of the current element. Necessary for `elementFromPoint` to resolve correctly. */\n        this._cachedShadowRoot = null;\n        /** Starts the interval that'll auto-scroll the element. */\n        this._startScrollInterval = () => {\n            this._stopScrolling();\n            interval(0, animationFrameScheduler)\n                .pipe(takeUntil(this._stopScrollTimers))\n                .subscribe(() => {\n                const node = this._scrollNode;\n                if (this._verticalScrollDirection === 1 /* UP */) {\n                    incrementVerticalScroll(node, -AUTO_SCROLL_STEP);\n                }\n                else if (this._verticalScrollDirection === 2 /* DOWN */) {\n                    incrementVerticalScroll(node, AUTO_SCROLL_STEP);\n                }\n                if (this._horizontalScrollDirection === 1 /* LEFT */) {\n                    incrementHorizontalScroll(node, -AUTO_SCROLL_STEP);\n                }\n                else if (this._horizontalScrollDirection === 2 /* RIGHT */) {\n                    incrementHorizontalScroll(node, AUTO_SCROLL_STEP);\n                }\n            });\n        };\n        this.element = coerceElement(element);\n        this._document = _document;\n        this.withScrollableParents([this.element]);\n        _dragDropRegistry.registerDropContainer(this);\n        this._parentPositions = new ParentPositionTracker(_document, _viewportRuler);\n    }\n    /** Removes the drop list functionality from the DOM element. */\n    dispose() {\n        this._stopScrolling();\n        this._stopScrollTimers.complete();\n        this._viewportScrollSubscription.unsubscribe();\n        this.beforeStarted.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this.sorted.complete();\n        this._activeSiblings.clear();\n        this._scrollNode = null;\n        this._parentPositions.clear();\n        this._dragDropRegistry.removeDropContainer(this);\n    }\n    /** Whether an item from this list is currently being dragged. */\n    isDragging() {\n        return this._isDragging;\n    }\n    /** Starts dragging an item. */\n    start() {\n        const styles = coerceElement(this.element).style;\n        this.beforeStarted.next();\n        this._isDragging = true;\n        // We need to disable scroll snapping while the user is dragging, because it breaks automatic\n        // scrolling. The browser seems to round the value based on the snapping points which means\n        // that we can't increment/decrement the scroll position.\n        this._initialScrollSnap = styles.msScrollSnapType || styles.scrollSnapType || '';\n        styles.scrollSnapType = styles.msScrollSnapType = 'none';\n        this._cacheItems();\n        this._siblings.forEach(sibling => sibling._startReceiving(this));\n        this._viewportScrollSubscription.unsubscribe();\n        this._listenToScrollEvents();\n    }\n    /**\n     * Emits an event to indicate that the user moved an item into the container.\n     * @param item Item that was moved into the container.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param index Index at which the item entered. If omitted, the container will try to figure it\n     *   out automatically.\n     */\n    enter(item, pointerX, pointerY, index) {\n        this.start();\n        // If sorting is disabled, we want the item to return to its starting\n        // position if the user is returning it to its initial container.\n        let newIndex;\n        if (index == null) {\n            newIndex = this.sortingDisabled ? this._draggables.indexOf(item) : -1;\n            if (newIndex === -1) {\n                // We use the coordinates of where the item entered the drop\n                // zone to figure out at which index it should be inserted.\n                newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY);\n            }\n        }\n        else {\n            newIndex = index;\n        }\n        const activeDraggables = this._activeDraggables;\n        const currentIndex = activeDraggables.indexOf(item);\n        const placeholder = item.getPlaceholderElement();\n        let newPositionReference = activeDraggables[newIndex];\n        // If the item at the new position is the same as the item that is being dragged,\n        // it means that we're trying to restore the item to its initial position. In this\n        // case we should use the next item from the list as the reference.\n        if (newPositionReference === item) {\n            newPositionReference = activeDraggables[newIndex + 1];\n        }\n        // Since the item may be in the `activeDraggables` already (e.g. if the user dragged it\n        // into another container and back again), we have to ensure that it isn't duplicated.\n        if (currentIndex > -1) {\n            activeDraggables.splice(currentIndex, 1);\n        }\n        // Don't use items that are being dragged as a reference, because\n        // their element has been moved down to the bottom of the body.\n        if (newPositionReference && !this._dragDropRegistry.isDragging(newPositionReference)) {\n            const element = newPositionReference.getRootElement();\n            element.parentElement.insertBefore(placeholder, element);\n            activeDraggables.splice(newIndex, 0, item);\n        }\n        else if (this._shouldEnterAsFirstChild(pointerX, pointerY)) {\n            const reference = activeDraggables[0].getRootElement();\n            reference.parentNode.insertBefore(placeholder, reference);\n            activeDraggables.unshift(item);\n        }\n        else {\n            coerceElement(this.element).appendChild(placeholder);\n            activeDraggables.push(item);\n        }\n        // The transform needs to be cleared so it doesn't throw off the measurements.\n        placeholder.style.transform = '';\n        // Note that the positions were already cached when we called `start` above,\n        // but we need to refresh them since the amount of items has changed and also parent rects.\n        this._cacheItemPositions();\n        this._cacheParentPositions();\n        this.entered.next({ item, container: this, currentIndex: this.getItemIndex(item) });\n    }\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param item Item that was dragged out.\n     */\n    exit(item) {\n        this._reset();\n        this.exited.next({ item, container: this });\n    }\n    /**\n     * Drops an item into this container.\n     * @param item Item being dropped into the container.\n     * @param currentIndex Index at which the item should be inserted.\n     * @param previousContainer Container from which the item got dragged in.\n     * @param isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     * @param distance Distance the user has dragged since the start of the dragging sequence.\n     * @param previousIndex Index of the item when dragging started.\n     *\n     * @breaking-change 11.0.0 `previousIndex` parameter to become required.\n     */\n    drop(item, currentIndex, previousContainer, isPointerOverContainer, distance, previousIndex) {\n        this._reset();\n        // @breaking-change 11.0.0 Remove this fallback logic once `previousIndex` is a required param.\n        if (previousIndex == null) {\n            previousIndex = previousContainer.getItemIndex(item);\n        }\n        this.dropped.next({ item,\n            currentIndex,\n            previousIndex,\n            container: this,\n            previousContainer,\n            isPointerOverContainer,\n            distance\n        });\n    }\n    /**\n     * Sets the draggable items that are a part of this list.\n     * @param items Items that are a part of this list.\n     */\n    withItems(items) {\n        const previousItems = this._draggables;\n        this._draggables = items;\n        items.forEach(item => item._withDropContainer(this));\n        if (this.isDragging()) {\n            const draggedItems = previousItems.filter(item => item.isDragging());\n            // If all of the items being dragged were removed\n            // from the list, abort the current drag sequence.\n            if (draggedItems.every(item => items.indexOf(item) === -1)) {\n                this._reset();\n            }\n            else {\n                this._cacheItems();\n            }\n        }\n        return this;\n    }\n    /** Sets the layout direction of the drop list. */\n    withDirection(direction) {\n        this._direction = direction;\n        return this;\n    }\n    /**\n     * Sets the containers that are connected to this one. When two or more containers are\n     * connected, the user will be allowed to transfer items between them.\n     * @param connectedTo Other containers that the current containers should be connected to.\n     */\n    connectedTo(connectedTo) {\n        this._siblings = connectedTo.slice();\n        return this;\n    }\n    /**\n     * Sets the orientation of the container.\n     * @param orientation New orientation for the container.\n     */\n    withOrientation(orientation) {\n        this._orientation = orientation;\n        return this;\n    }\n    /**\n     * Sets which parent elements are can be scrolled while the user is dragging.\n     * @param elements Elements that can be scrolled.\n     */\n    withScrollableParents(elements) {\n        const element = coerceElement(this.element);\n        // We always allow the current element to be scrollable\n        // so we need to ensure that it's in the array.\n        this._scrollableElements =\n            elements.indexOf(element) === -1 ? [element, ...elements] : elements.slice();\n        return this;\n    }\n    /** Gets the scrollable parents that are registered with this drop container. */\n    getScrollableParents() {\n        return this._scrollableElements;\n    }\n    /**\n     * Figures out the index of an item in the container.\n     * @param item Item whose index should be determined.\n     */\n    getItemIndex(item) {\n        if (!this._isDragging) {\n            return this._draggables.indexOf(item);\n        }\n        // Items are sorted always by top/left in the cache, however they flow differently in RTL.\n        // The rest of the logic still stands no matter what orientation we're in, however\n        // we need to invert the array when determining the index.\n        const items = this._orientation === 'horizontal' && this._direction === 'rtl' ?\n            this._itemPositions.slice().reverse() : this._itemPositions;\n        return findIndex(items, currentItem => currentItem.drag === item);\n    }\n    /**\n     * Whether the list is able to receive the item that\n     * is currently being dragged inside a connected drop list.\n     */\n    isReceiving() {\n        return this._activeSiblings.size > 0;\n    }\n    /**\n     * Sorts an item inside the container based on its position.\n     * @param item Item to be sorted.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param pointerDelta Direction in which the pointer is moving along each axis.\n     */\n    _sortItem(item, pointerX, pointerY, pointerDelta) {\n        // Don't sort the item if sorting is disabled or it's out of range.\n        if (this.sortingDisabled ||\n            !isPointerNearClientRect(this._clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n            return;\n        }\n        const siblings = this._itemPositions;\n        const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY, pointerDelta);\n        if (newIndex === -1 && siblings.length > 0) {\n            return;\n        }\n        const isHorizontal = this._orientation === 'horizontal';\n        const currentIndex = findIndex(siblings, currentItem => currentItem.drag === item);\n        const siblingAtNewPosition = siblings[newIndex];\n        const currentPosition = siblings[currentIndex].clientRect;\n        const newPosition = siblingAtNewPosition.clientRect;\n        const delta = currentIndex > newIndex ? 1 : -1;\n        // How many pixels the item's placeholder should be offset.\n        const itemOffset = this._getItemOffsetPx(currentPosition, newPosition, delta);\n        // How many pixels all the other items should be offset.\n        const siblingOffset = this._getSiblingOffsetPx(currentIndex, siblings, delta);\n        // Save the previous order of the items before moving the item to its new index.\n        // We use this to check whether an item has been moved as a result of the sorting.\n        const oldOrder = siblings.slice();\n        // Shuffle the array in place.\n        moveItemInArray(siblings, currentIndex, newIndex);\n        this.sorted.next({\n            previousIndex: currentIndex,\n            currentIndex: newIndex,\n            container: this,\n            item\n        });\n        siblings.forEach((sibling, index) => {\n            // Don't do anything if the position hasn't changed.\n            if (oldOrder[index] === sibling) {\n                return;\n            }\n            const isDraggedItem = sibling.drag === item;\n            const offset = isDraggedItem ? itemOffset : siblingOffset;\n            const elementToOffset = isDraggedItem ? item.getPlaceholderElement() :\n                sibling.drag.getRootElement();\n            // Update the offset to reflect the new position.\n            sibling.offset += offset;\n            // Since we're moving the items with a `transform`, we need to adjust their cached\n            // client rects to reflect their new position, as well as swap their positions in the cache.\n            // Note that we shouldn't use `getBoundingClientRect` here to update the cache, because the\n            // elements may be mid-animation which will give us a wrong result.\n            if (isHorizontal) {\n                // Round the transforms since some browsers will\n                // blur the elements, for sub-pixel transforms.\n                elementToOffset.style.transform = `translate3d(${Math.round(sibling.offset)}px, 0, 0)`;\n                adjustClientRect(sibling.clientRect, 0, offset);\n            }\n            else {\n                elementToOffset.style.transform = `translate3d(0, ${Math.round(sibling.offset)}px, 0)`;\n                adjustClientRect(sibling.clientRect, offset, 0);\n            }\n        });\n        // Note that it's important that we do this after the client rects have been adjusted.\n        this._previousSwap.overlaps = isInsideClientRect(newPosition, pointerX, pointerY);\n        this._previousSwap.drag = siblingAtNewPosition.drag;\n        this._previousSwap.delta = isHorizontal ? pointerDelta.x : pointerDelta.y;\n    }\n    /**\n     * Checks whether the user's pointer is close to the edges of either the\n     * viewport or the drop list and starts the auto-scroll sequence.\n     * @param pointerX User's pointer position along the x axis.\n     * @param pointerY User's pointer position along the y axis.\n     */\n    _startScrollingIfNecessary(pointerX, pointerY) {\n        if (this.autoScrollDisabled) {\n            return;\n        }\n        let scrollNode;\n        let verticalScrollDirection = 0 /* NONE */;\n        let horizontalScrollDirection = 0 /* NONE */;\n        // Check whether we should start scrolling any of the parent containers.\n        this._parentPositions.positions.forEach((position, element) => {\n            // We have special handling for the `document` below. Also this would be\n            // nicer with a  for...of loop, but it requires changing a compiler flag.\n            if (element === this._document || !position.clientRect || scrollNode) {\n                return;\n            }\n            if (isPointerNearClientRect(position.clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n                [verticalScrollDirection, horizontalScrollDirection] = getElementScrollDirections(element, position.clientRect, pointerX, pointerY);\n                if (verticalScrollDirection || horizontalScrollDirection) {\n                    scrollNode = element;\n                }\n            }\n        });\n        // Otherwise check if we can start scrolling the viewport.\n        if (!verticalScrollDirection && !horizontalScrollDirection) {\n            const { width, height } = this._viewportRuler.getViewportSize();\n            const clientRect = { width, height, top: 0, right: width, bottom: height, left: 0 };\n            verticalScrollDirection = getVerticalScrollDirection(clientRect, pointerY);\n            horizontalScrollDirection = getHorizontalScrollDirection(clientRect, pointerX);\n            scrollNode = window;\n        }\n        if (scrollNode && (verticalScrollDirection !== this._verticalScrollDirection ||\n            horizontalScrollDirection !== this._horizontalScrollDirection ||\n            scrollNode !== this._scrollNode)) {\n            this._verticalScrollDirection = verticalScrollDirection;\n            this._horizontalScrollDirection = horizontalScrollDirection;\n            this._scrollNode = scrollNode;\n            if ((verticalScrollDirection || horizontalScrollDirection) && scrollNode) {\n                this._ngZone.runOutsideAngular(this._startScrollInterval);\n            }\n            else {\n                this._stopScrolling();\n            }\n        }\n    }\n    /** Stops any currently-running auto-scroll sequences. */\n    _stopScrolling() {\n        this._stopScrollTimers.next();\n    }\n    /** Caches the positions of the configured scrollable parents. */\n    _cacheParentPositions() {\n        const element = coerceElement(this.element);\n        this._parentPositions.cache(this._scrollableElements);\n        // The list element is always in the `scrollableElements`\n        // so we can take advantage of the cached `ClientRect`.\n        this._clientRect = this._parentPositions.positions.get(element).clientRect;\n    }\n    /** Refreshes the position cache of the items and sibling containers. */\n    _cacheItemPositions() {\n        const isHorizontal = this._orientation === 'horizontal';\n        this._itemPositions = this._activeDraggables.map(drag => {\n            const elementToMeasure = drag.getVisibleElement();\n            return { drag, offset: 0, clientRect: getMutableClientRect(elementToMeasure) };\n        }).sort((a, b) => {\n            return isHorizontal ? a.clientRect.left - b.clientRect.left :\n                a.clientRect.top - b.clientRect.top;\n        });\n    }\n    /** Resets the container to its initial state. */\n    _reset() {\n        this._isDragging = false;\n        const styles = coerceElement(this.element).style;\n        styles.scrollSnapType = styles.msScrollSnapType = this._initialScrollSnap;\n        // TODO(crisbeto): may have to wait for the animations to finish.\n        this._activeDraggables.forEach(item => {\n            const rootElement = item.getRootElement();\n            if (rootElement) {\n                rootElement.style.transform = '';\n            }\n        });\n        this._siblings.forEach(sibling => sibling._stopReceiving(this));\n        this._activeDraggables = [];\n        this._itemPositions = [];\n        this._previousSwap.drag = null;\n        this._previousSwap.delta = 0;\n        this._previousSwap.overlaps = false;\n        this._stopScrolling();\n        this._viewportScrollSubscription.unsubscribe();\n        this._parentPositions.clear();\n    }\n    /**\n     * Gets the offset in pixels by which the items that aren't being dragged should be moved.\n     * @param currentIndex Index of the item currently being dragged.\n     * @param siblings All of the items in the list.\n     * @param delta Direction in which the user is moving.\n     */\n    _getSiblingOffsetPx(currentIndex, siblings, delta) {\n        const isHorizontal = this._orientation === 'horizontal';\n        const currentPosition = siblings[currentIndex].clientRect;\n        const immediateSibling = siblings[currentIndex + delta * -1];\n        let siblingOffset = currentPosition[isHorizontal ? 'width' : 'height'] * delta;\n        if (immediateSibling) {\n            const start = isHorizontal ? 'left' : 'top';\n            const end = isHorizontal ? 'right' : 'bottom';\n            // Get the spacing between the start of the current item and the end of the one immediately\n            // after it in the direction in which the user is dragging, or vice versa. We add it to the\n            // offset in order to push the element to where it will be when it's inline and is influenced\n            // by the `margin` of its siblings.\n            if (delta === -1) {\n                siblingOffset -= immediateSibling.clientRect[start] - currentPosition[end];\n            }\n            else {\n                siblingOffset += currentPosition[start] - immediateSibling.clientRect[end];\n            }\n        }\n        return siblingOffset;\n    }\n    /**\n     * Gets the offset in pixels by which the item that is being dragged should be moved.\n     * @param currentPosition Current position of the item.\n     * @param newPosition Position of the item where the current item should be moved.\n     * @param delta Direction in which the user is moving.\n     */\n    _getItemOffsetPx(currentPosition, newPosition, delta) {\n        const isHorizontal = this._orientation === 'horizontal';\n        let itemOffset = isHorizontal ? newPosition.left - currentPosition.left :\n            newPosition.top - currentPosition.top;\n        // Account for differences in the item width/height.\n        if (delta === -1) {\n            itemOffset += isHorizontal ? newPosition.width - currentPosition.width :\n                newPosition.height - currentPosition.height;\n        }\n        return itemOffset;\n    }\n    /**\n     * Checks if pointer is entering in the first position\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     */\n    _shouldEnterAsFirstChild(pointerX, pointerY) {\n        if (!this._activeDraggables.length) {\n            return false;\n        }\n        const itemPositions = this._itemPositions;\n        const isHorizontal = this._orientation === 'horizontal';\n        // `itemPositions` are sorted by position while `activeDraggables` are sorted by child index\n        // check if container is using some sort of \"reverse\" ordering (eg: flex-direction: row-reverse)\n        const reversed = itemPositions[0].drag !== this._activeDraggables[0];\n        if (reversed) {\n            const lastItemRect = itemPositions[itemPositions.length - 1].clientRect;\n            return isHorizontal ? pointerX >= lastItemRect.right : pointerY >= lastItemRect.bottom;\n        }\n        else {\n            const firstItemRect = itemPositions[0].clientRect;\n            return isHorizontal ? pointerX <= firstItemRect.left : pointerY <= firstItemRect.top;\n        }\n    }\n    /**\n     * Gets the index of an item in the drop container, based on the position of the user's pointer.\n     * @param item Item that is being sorted.\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     * @param delta Direction in which the user is moving their pointer.\n     */\n    _getItemIndexFromPointerPosition(item, pointerX, pointerY, delta) {\n        const isHorizontal = this._orientation === 'horizontal';\n        return findIndex(this._itemPositions, ({ drag, clientRect }, _, array) => {\n            if (drag === item) {\n                // If there's only one item left in the container, it must be\n                // the dragged item itself so we use it as a reference.\n                return array.length < 2;\n            }\n            if (delta) {\n                const direction = isHorizontal ? delta.x : delta.y;\n                // If the user is still hovering over the same item as last time, their cursor hasn't left\n                // the item after we made the swap, and they didn't change the direction in which they're\n                // dragging, we don't consider it a direction swap.\n                if (drag === this._previousSwap.drag && this._previousSwap.overlaps &&\n                    direction === this._previousSwap.delta) {\n                    return false;\n                }\n            }\n            return isHorizontal ?\n                // Round these down since most browsers report client rects with\n                // sub-pixel precision, whereas the pointer coordinates are rounded to pixels.\n                pointerX >= Math.floor(clientRect.left) && pointerX < Math.floor(clientRect.right) :\n                pointerY >= Math.floor(clientRect.top) && pointerY < Math.floor(clientRect.bottom);\n        });\n    }\n    /** Caches the current items in the list and their positions. */\n    _cacheItems() {\n        this._activeDraggables = this._draggables.slice();\n        this._cacheItemPositions();\n        this._cacheParentPositions();\n    }\n    /**\n     * Checks whether the user's pointer is positioned over the container.\n     * @param x Pointer position along the X axis.\n     * @param y Pointer position along the Y axis.\n     */\n    _isOverContainer(x, y) {\n        return isInsideClientRect(this._clientRect, x, y);\n    }\n    /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param item Drag item that is being moved.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    _getSiblingContainerFromPosition(item, x, y) {\n        return this._siblings.find(sibling => sibling._canReceive(item, x, y));\n    }\n    /**\n     * Checks whether the drop list can receive the passed-in item.\n     * @param item Item that is being dragged into the list.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    _canReceive(item, x, y) {\n        if (!isInsideClientRect(this._clientRect, x, y) || !this.enterPredicate(item, this)) {\n            return false;\n        }\n        const elementFromPoint = this._getShadowRoot().elementFromPoint(x, y);\n        // If there's no element at the pointer position, then\n        // the client rect is probably scrolled out of the view.\n        if (!elementFromPoint) {\n            return false;\n        }\n        const nativeElement = coerceElement(this.element);\n        // The `ClientRect`, that we're using to find the container over which the user is\n        // hovering, doesn't give us any information on whether the element has been scrolled\n        // out of the view or whether it's overlapping with other containers. This means that\n        // we could end up transferring the item into a container that's invisible or is positioned\n        // below another one. We use the result from `elementFromPoint` to get the top-most element\n        // at the pointer position and to find whether it's one of the intersecting drop containers.\n        return elementFromPoint === nativeElement || nativeElement.contains(elementFromPoint);\n    }\n    /**\n     * Called by one of the connected drop lists when a dragging sequence has started.\n     * @param sibling Sibling in which dragging has started.\n     */\n    _startReceiving(sibling) {\n        const activeSiblings = this._activeSiblings;\n        if (!activeSiblings.has(sibling)) {\n            activeSiblings.add(sibling);\n            this._cacheParentPositions();\n            this._listenToScrollEvents();\n        }\n    }\n    /**\n     * Called by a connected drop list when dragging has stopped.\n     * @param sibling Sibling whose dragging has stopped.\n     */\n    _stopReceiving(sibling) {\n        this._activeSiblings.delete(sibling);\n        this._viewportScrollSubscription.unsubscribe();\n    }\n    /**\n     * Starts listening to scroll events on the viewport.\n     * Used for updating the internal state of the list.\n     */\n    _listenToScrollEvents() {\n        this._viewportScrollSubscription = this._dragDropRegistry.scroll.subscribe(event => {\n            if (this.isDragging()) {\n                const scrollDifference = this._parentPositions.handleScroll(event);\n                if (scrollDifference) {\n                    // Since we know the amount that the user has scrolled we can shift all of the\n                    // client rectangles ourselves. This is cheaper than re-measuring everything and\n                    // we can avoid inconsistent behavior where we might be measuring the element before\n                    // its position has changed.\n                    this._itemPositions.forEach(({ clientRect }) => {\n                        adjustClientRect(clientRect, scrollDifference.top, scrollDifference.left);\n                    });\n                    // We need two loops for this, because we want all of the cached\n                    // positions to be up-to-date before we re-sort the item.\n                    this._itemPositions.forEach(({ drag }) => {\n                        if (this._dragDropRegistry.isDragging(drag)) {\n                            // We need to re-sort the item manually, because the pointer move\n                            // events won't be dispatched while the user is scrolling.\n                            drag._sortFromLastPointerPosition();\n                        }\n                    });\n                }\n            }\n            else if (this.isReceiving()) {\n                this._cacheParentPositions();\n            }\n        });\n    }\n    /**\n     * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n     * than saving it in property directly on init, because we want to resolve it as late as possible\n     * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n     * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n     */\n    _getShadowRoot() {\n        if (!this._cachedShadowRoot) {\n            const shadowRoot = _getShadowRoot(coerceElement(this.element));\n            this._cachedShadowRoot = shadowRoot || this._document;\n        }\n        return this._cachedShadowRoot;\n    }\n}\n/**\n * Finds the index of an item that matches a predicate function. Used as an equivalent\n * of `Array.prototype.findIndex` which isn't part of the standard Google typings.\n * @param array Array in which to look for matches.\n * @param predicate Function used to determine whether an item is a match.\n */\nfunction findIndex(array, predicate) {\n    for (let i = 0; i < array.length; i++) {\n        if (predicate(array[i], i, array)) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Increments the vertical scroll position of a node.\n * @param node Node whose scroll position should change.\n * @param amount Amount of pixels that the `node` should be scrolled.\n */\nfunction incrementVerticalScroll(node, amount) {\n    if (node === window) {\n        node.scrollBy(0, amount);\n    }\n    else {\n        // Ideally we could use `Element.scrollBy` here as well, but IE and Edge don't support it.\n        node.scrollTop += amount;\n    }\n}\n/**\n * Increments the horizontal scroll position of a node.\n * @param node Node whose scroll position should change.\n * @param amount Amount of pixels that the `node` should be scrolled.\n */\nfunction incrementHorizontalScroll(node, amount) {\n    if (node === window) {\n        node.scrollBy(amount, 0);\n    }\n    else {\n        // Ideally we could use `Element.scrollBy` here as well, but IE and Edge don't support it.\n        node.scrollLeft += amount;\n    }\n}\n/**\n * Gets whether the vertical auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getVerticalScrollDirection(clientRect, pointerY) {\n    const { top, bottom, height } = clientRect;\n    const yThreshold = height * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerY >= top - yThreshold && pointerY <= top + yThreshold) {\n        return 1 /* UP */;\n    }\n    else if (pointerY >= bottom - yThreshold && pointerY <= bottom + yThreshold) {\n        return 2 /* DOWN */;\n    }\n    return 0 /* NONE */;\n}\n/**\n * Gets whether the horizontal auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerX Position of the user's pointer along the x axis.\n */\nfunction getHorizontalScrollDirection(clientRect, pointerX) {\n    const { left, right, width } = clientRect;\n    const xThreshold = width * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerX >= left - xThreshold && pointerX <= left + xThreshold) {\n        return 1 /* LEFT */;\n    }\n    else if (pointerX >= right - xThreshold && pointerX <= right + xThreshold) {\n        return 2 /* RIGHT */;\n    }\n    return 0 /* NONE */;\n}\n/**\n * Gets the directions in which an element node should be scrolled,\n * assuming that the user's pointer is already within it scrollable region.\n * @param element Element for which we should calculate the scroll direction.\n * @param clientRect Bounding client rectangle of the element.\n * @param pointerX Position of the user's pointer along the x axis.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getElementScrollDirections(element, clientRect, pointerX, pointerY) {\n    const computedVertical = getVerticalScrollDirection(clientRect, pointerY);\n    const computedHorizontal = getHorizontalScrollDirection(clientRect, pointerX);\n    let verticalScrollDirection = 0 /* NONE */;\n    let horizontalScrollDirection = 0 /* NONE */;\n    // Note that we here we do some extra checks for whether the element is actually scrollable in\n    // a certain direction and we only assign the scroll direction if it is. We do this so that we\n    // can allow other elements to be scrolled, if the current element can't be scrolled anymore.\n    // This allows us to handle cases where the scroll regions of two scrollable elements overlap.\n    if (computedVertical) {\n        const scrollTop = element.scrollTop;\n        if (computedVertical === 1 /* UP */) {\n            if (scrollTop > 0) {\n                verticalScrollDirection = 1 /* UP */;\n            }\n        }\n        else if (element.scrollHeight - scrollTop > element.clientHeight) {\n            verticalScrollDirection = 2 /* DOWN */;\n        }\n    }\n    if (computedHorizontal) {\n        const scrollLeft = element.scrollLeft;\n        if (computedHorizontal === 1 /* LEFT */) {\n            if (scrollLeft > 0) {\n                horizontalScrollDirection = 1 /* LEFT */;\n            }\n        }\n        else if (element.scrollWidth - scrollLeft > element.clientWidth) {\n            horizontalScrollDirection = 2 /* RIGHT */;\n        }\n    }\n    return [verticalScrollDirection, horizontalScrollDirection];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Event options that can be used to bind an active, capturing event. */\nconst activeCapturingEventOptions = normalizePassiveListenerOptions({\n    passive: false,\n    capture: true\n});\n/**\n * Service that keeps track of all the drag item and drop container\n * instances, and manages global event listeners on the `document`.\n * @docs-private\n */\n// Note: this class is generic, rather than referencing CdkDrag and CdkDropList directly, in order\n// to avoid circular imports. If we were to reference them here, importing the registry into the\n// classes that are registering themselves will introduce a circular import.\nclass DragDropRegistry {\n    constructor(_ngZone, _document) {\n        this._ngZone = _ngZone;\n        /** Registered drop container instances. */\n        this._dropInstances = new Set();\n        /** Registered drag item instances. */\n        this._dragInstances = new Set();\n        /** Drag item instances that are currently being dragged. */\n        this._activeDragInstances = new Set();\n        /** Keeps track of the event listeners that we've bound to the `document`. */\n        this._globalListeners = new Map();\n        /**\n         * Emits the `touchmove` or `mousemove` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerMove = new Subject();\n        /**\n         * Emits the `touchend` or `mouseup` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerUp = new Subject();\n        /** Emits when the viewport has been scrolled while the user is dragging an item. */\n        this.scroll = new Subject();\n        /**\n         * Event listener that will prevent the default browser action while the user is dragging.\n         * @param event Event whose default action should be prevented.\n         */\n        this._preventDefaultWhileDragging = (event) => {\n            if (this._activeDragInstances.size) {\n                event.preventDefault();\n            }\n        };\n        this._document = _document;\n    }\n    /** Adds a drop container to the registry. */\n    registerDropContainer(drop) {\n        if (!this._dropInstances.has(drop)) {\n            this._dropInstances.add(drop);\n        }\n    }\n    /** Adds a drag item instance to the registry. */\n    registerDragItem(drag) {\n        this._dragInstances.add(drag);\n        // The `touchmove` event gets bound once, ahead of time, because WebKit\n        // won't preventDefault on a dynamically-added `touchmove` listener.\n        // See https://bugs.webkit.org/show_bug.cgi?id=184250.\n        if (this._dragInstances.size === 1) {\n            this._ngZone.runOutsideAngular(() => {\n                // The event handler has to be explicitly active,\n                // because newer browsers make it passive by default.\n                this._document.addEventListener('touchmove', this._preventDefaultWhileDragging, activeCapturingEventOptions);\n            });\n        }\n    }\n    /** Removes a drop container from the registry. */\n    removeDropContainer(drop) {\n        this._dropInstances.delete(drop);\n    }\n    /** Removes a drag item instance from the registry. */\n    removeDragItem(drag) {\n        this._dragInstances.delete(drag);\n        this.stopDragging(drag);\n        if (this._dragInstances.size === 0) {\n            this._document.removeEventListener('touchmove', this._preventDefaultWhileDragging, activeCapturingEventOptions);\n        }\n    }\n    /**\n     * Starts the dragging sequence for a drag instance.\n     * @param drag Drag instance which is being dragged.\n     * @param event Event that initiated the dragging.\n     */\n    startDragging(drag, event) {\n        // Do not process the same drag twice to avoid memory leaks and redundant listeners\n        if (this._activeDragInstances.has(drag)) {\n            return;\n        }\n        this._activeDragInstances.add(drag);\n        if (this._activeDragInstances.size === 1) {\n            const isTouchEvent = event.type.startsWith('touch');\n            const moveEvent = isTouchEvent ? 'touchmove' : 'mousemove';\n            const upEvent = isTouchEvent ? 'touchend' : 'mouseup';\n            // We explicitly bind __active__ listeners here, because newer browsers will default to\n            // passive ones for `mousemove` and `touchmove`. The events need to be active, because we\n            // use `preventDefault` to prevent the page from scrolling while the user is dragging.\n            this._globalListeners\n                .set(moveEvent, {\n                handler: (e) => this.pointerMove.next(e),\n                options: activeCapturingEventOptions\n            })\n                .set(upEvent, {\n                handler: (e) => this.pointerUp.next(e),\n                options: true\n            })\n                .set('scroll', {\n                handler: (e) => this.scroll.next(e),\n                // Use capturing so that we pick up scroll changes in any scrollable nodes that aren't\n                // the document. See https://github.com/angular/components/issues/17144.\n                options: true\n            })\n                // Preventing the default action on `mousemove` isn't enough to disable text selection\n                // on Safari so we need to prevent the selection event as well. Alternatively this can\n                // be done by setting `user-select: none` on the `body`, however it has causes a style\n                // recalculation which can be expensive on pages with a lot of elements.\n                .set('selectstart', {\n                handler: this._preventDefaultWhileDragging,\n                options: activeCapturingEventOptions\n            });\n            this._ngZone.runOutsideAngular(() => {\n                this._globalListeners.forEach((config, name) => {\n                    this._document.addEventListener(name, config.handler, config.options);\n                });\n            });\n        }\n    }\n    /** Stops dragging a drag item instance. */\n    stopDragging(drag) {\n        this._activeDragInstances.delete(drag);\n        if (this._activeDragInstances.size === 0) {\n            this._clearGlobalListeners();\n        }\n    }\n    /** Gets whether a drag item instance is currently being dragged. */\n    isDragging(drag) {\n        return this._activeDragInstances.has(drag);\n    }\n    ngOnDestroy() {\n        this._dragInstances.forEach(instance => this.removeDragItem(instance));\n        this._dropInstances.forEach(instance => this.removeDropContainer(instance));\n        this._clearGlobalListeners();\n        this.pointerMove.complete();\n        this.pointerUp.complete();\n    }\n    /** Clears out the global event listeners from the `document`. */\n    _clearGlobalListeners() {\n        this._globalListeners.forEach((config, name) => {\n            this._document.removeEventListener(name, config.handler, config.options);\n        });\n        this._globalListeners.clear();\n    }\n}\nDragDropRegistry.ɵfac = function DragDropRegistry_Factory(t) { return new (t || DragDropRegistry)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT)); };\nDragDropRegistry.ɵprov = ɵɵdefineInjectable({ factory: function DragDropRegistry_Factory() { return new DragDropRegistry(ɵɵinject(NgZone), ɵɵinject(DOCUMENT)); }, token: DragDropRegistry, providedIn: \"root\" });\nDragDropRegistry.ctorParameters = () => [\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DragDropRegistry, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Default configuration to be used when creating a `DragRef`. */\nconst DEFAULT_CONFIG = {\n    dragStartThreshold: 5,\n    pointerDirectionChangeThreshold: 5\n};\n/**\n * Service that allows for drag-and-drop functionality to be attached to DOM elements.\n */\nclass DragDrop {\n    constructor(_document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n    }\n    /**\n     * Turns an element into a draggable item.\n     * @param element Element to which to attach the dragging functionality.\n     * @param config Object used to configure the dragging behavior.\n     */\n    createDrag(element, config = DEFAULT_CONFIG) {\n        return new DragRef(element, config, this._document, this._ngZone, this._viewportRuler, this._dragDropRegistry);\n    }\n    /**\n     * Turns an element into a drop list.\n     * @param element Element to which to attach the drop list functionality.\n     */\n    createDropList(element) {\n        return new DropListRef(element, this._dragDropRegistry, this._document, this._ngZone, this._viewportRuler);\n    }\n}\nDragDrop.ɵfac = function DragDrop_Factory(t) { return new (t || DragDrop)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵinject(DragDropRegistry)); };\nDragDrop.ɵprov = ɵɵdefineInjectable({ factory: function DragDrop_Factory() { return new DragDrop(ɵɵinject(DOCUMENT), ɵɵinject(NgZone), ɵɵinject(ViewportRuler), ɵɵinject(DragDropRegistry)); }, token: DragDrop, providedIn: \"root\" });\nDragDrop.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: NgZone },\n    { type: ViewportRuler },\n    { type: DragDropRegistry }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DragDrop, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc1.ViewportRuler }, { type: DragDropRegistry }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDropListGroup`. It serves as\n * alternative token to the actual `CdkDropListGroup` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST_GROUP = new InjectionToken('CdkDropListGroup');\n/**\n * Declaratively connects sibling `cdkDropList` instances together. All of the `cdkDropList`\n * elements that are placed inside a `cdkDropListGroup` will be connected to each other\n * automatically. Can be used as an alternative to the `cdkDropListConnectedTo` input\n * from `cdkDropList`.\n */\nclass CdkDropListGroup {\n    constructor() {\n        /** Drop lists registered inside the group. */\n        this._items = new Set();\n        this._disabled = false;\n    }\n    /** Whether starting a dragging sequence from inside this group is disabled. */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    ngOnDestroy() {\n        this._items.clear();\n    }\n}\nCdkDropListGroup.ɵfac = function CdkDropListGroup_Factory(t) { return new (t || CdkDropListGroup)(); };\nCdkDropListGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDropListGroup, selectors: [[\"\", \"cdkDropListGroup\", \"\"]], inputs: { disabled: [\"cdkDropListGroupDisabled\", \"disabled\"] }, exportAs: [\"cdkDropListGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_DROP_LIST_GROUP, useExisting: CdkDropListGroup }])] });\nCdkDropListGroup.propDecorators = {\n    disabled: [{ type: Input, args: ['cdkDropListGroupDisabled',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDropListGroup, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDropListGroup]',\n                exportAs: 'cdkDropListGroup',\n                providers: [{ provide: CDK_DROP_LIST_GROUP, useExisting: CdkDropListGroup }]\n            }]\n    }], function () { return []; }, { disabled: [{\n            type: Input,\n            args: ['cdkDropListGroupDisabled']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to configure the\n * behavior of the drag&drop-related components.\n */\nconst CDK_DRAG_CONFIG = new InjectionToken('CDK_DRAG_CONFIG');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Counter used to generate unique ids for drop zones. */\nlet _uniqueIdCounter = 0;\n/**\n * Injection token that can be used to reference instances of `CdkDropList`. It serves as\n * alternative token to the actual `CdkDropList` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST = new InjectionToken('CdkDropList');\nconst ɵ0 = undefined;\n/** Container that wraps a set of draggable items. */\nclass CdkDropList {\n    constructor(\n    /** Element that the drop list is attached to. */\n    element, dragDrop, _changeDetectorRef, _dir, _group, \n    /**\n     * @deprecated _scrollDispatcher parameter to become required.\n     * @breaking-change 11.0.0\n     */\n    _scrollDispatcher, config) {\n        this.element = element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._group = _group;\n        this._scrollDispatcher = _scrollDispatcher;\n        /** Emits when the list has been destroyed. */\n        this._destroyed = new Subject();\n        /**\n         * Other draggable containers that this container is connected to and into which the\n         * container's items can be transferred. Can either be references to other drop containers,\n         * or their unique IDs.\n         */\n        this.connectedTo = [];\n        /**\n         * Unique ID for the drop zone. Can be used as a reference\n         * in the `connectedTo` of another `CdkDropList`.\n         */\n        this.id = `cdk-drop-list-${_uniqueIdCounter++}`;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = () => true;\n        /** Emits when the user drops an item inside the container. */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new EventEmitter();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new EventEmitter();\n        /** Emits as the user is swapping items while actively dragging. */\n        this.sorted = new EventEmitter();\n        /**\n         * Keeps track of the items that are registered with this container. Historically we used to\n         * do this with a `ContentChildren` query, however queries don't handle transplanted views very\n         * well which means that we can't handle cases like dragging the headers of a `mat-table`\n         * correctly. What we do instead is to have the items register themselves with the container\n         * and then we sort them based on their position in the DOM.\n         */\n        this._unsortedItems = new Set();\n        this._dropListRef = dragDrop.createDropList(element);\n        this._dropListRef.data = this;\n        if (config) {\n            this._assignDefaults(config);\n        }\n        this._dropListRef.enterPredicate = (drag, drop) => {\n            return this.enterPredicate(drag.data, drop.data);\n        };\n        this._setupInputSyncSubscription(this._dropListRef);\n        this._handleEvents(this._dropListRef);\n        CdkDropList._dropLists.push(this);\n        if (_group) {\n            _group._items.add(this);\n        }\n    }\n    /** Whether starting a dragging sequence from this container is disabled. */\n    get disabled() {\n        return this._disabled || (!!this._group && this._group.disabled);\n    }\n    set disabled(value) {\n        // Usually we sync the directive and ref state right before dragging starts, in order to have\n        // a single point of failure and to avoid having to use setters for everything. `disabled` is\n        // a special case, because it can prevent the `beforeStarted` event from firing, which can lock\n        // the user in a disabled state, so we also need to sync it as it's being set.\n        this._dropListRef.disabled = this._disabled = coerceBooleanProperty(value);\n    }\n    /** Registers an items with the drop list. */\n    addItem(item) {\n        this._unsortedItems.add(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /** Removes an item from the drop list. */\n    removeItem(item) {\n        this._unsortedItems.delete(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /** Gets the registered items in the list, sorted by their position in the DOM. */\n    getSortedItems() {\n        return Array.from(this._unsortedItems).sort((a, b) => {\n            const documentPosition = a._dragRef.getVisibleElement().compareDocumentPosition(b._dragRef.getVisibleElement());\n            // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n            // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n            // tslint:disable-next-line:no-bitwise\n            return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n        });\n    }\n    ngOnDestroy() {\n        const index = CdkDropList._dropLists.indexOf(this);\n        if (index > -1) {\n            CdkDropList._dropLists.splice(index, 1);\n        }\n        if (this._group) {\n            this._group._items.delete(this);\n        }\n        this._unsortedItems.clear();\n        this._dropListRef.dispose();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Syncs the inputs of the CdkDropList with the options of the underlying DropListRef. */\n    _setupInputSyncSubscription(ref) {\n        if (this._dir) {\n            this._dir.change\n                .pipe(startWith(this._dir.value), takeUntil(this._destroyed))\n                .subscribe(value => ref.withDirection(value));\n        }\n        ref.beforeStarted.subscribe(() => {\n            const siblings = coerceArray(this.connectedTo).map(drop => {\n                if (typeof drop === 'string') {\n                    const correspondingDropList = CdkDropList._dropLists.find(list => list.id === drop);\n                    if (!correspondingDropList && isDevMode()) {\n                        console.warn(`CdkDropList could not find connected drop list with id \"${drop}\"`);\n                    }\n                    return correspondingDropList;\n                }\n                return drop;\n            });\n            if (this._group) {\n                this._group._items.forEach(drop => {\n                    if (siblings.indexOf(drop) === -1) {\n                        siblings.push(drop);\n                    }\n                });\n            }\n            // Note that we resolve the scrollable parents here so that we delay the resolution\n            // as long as possible, ensuring that the element is in its final place in the DOM.\n            // @breaking-change 11.0.0 Remove null check for _scrollDispatcher once it's required.\n            if (!this._scrollableParentsResolved && this._scrollDispatcher) {\n                const scrollableParents = this._scrollDispatcher\n                    .getAncestorScrollContainers(this.element)\n                    .map(scrollable => scrollable.getElementRef().nativeElement);\n                this._dropListRef.withScrollableParents(scrollableParents);\n                // Only do this once since it involves traversing the DOM and the parents\n                // shouldn't be able to change without the drop list being destroyed.\n                this._scrollableParentsResolved = true;\n            }\n            ref.disabled = this.disabled;\n            ref.lockAxis = this.lockAxis;\n            ref.sortingDisabled = coerceBooleanProperty(this.sortingDisabled);\n            ref.autoScrollDisabled = coerceBooleanProperty(this.autoScrollDisabled);\n            ref\n                .connectedTo(siblings.filter(drop => drop && drop !== this).map(list => list._dropListRef))\n                .withOrientation(this.orientation);\n        });\n    }\n    /** Handles events from the underlying DropListRef. */\n    _handleEvents(ref) {\n        ref.beforeStarted.subscribe(() => {\n            this._syncItemsWithRef();\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.entered.subscribe(event => {\n            this.entered.emit({\n                container: this,\n                item: event.item.data,\n                currentIndex: event.currentIndex\n            });\n        });\n        ref.exited.subscribe(event => {\n            this.exited.emit({\n                container: this,\n                item: event.item.data\n            });\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.sorted.subscribe(event => {\n            this.sorted.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                container: this,\n                item: event.item.data\n            });\n        });\n        ref.dropped.subscribe(event => {\n            this.dropped.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                previousContainer: event.previousContainer.data,\n                container: event.container.data,\n                item: event.item.data,\n                isPointerOverContainer: event.isPointerOverContainer,\n                distance: event.distance\n            });\n            // Mark for check since all of these events run outside of change\n            // detection and we're not guaranteed for something else to have triggered it.\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n        const { lockAxis, draggingDisabled, sortingDisabled, listAutoScrollDisabled, listOrientation } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.sortingDisabled = sortingDisabled == null ? false : sortingDisabled;\n        this.autoScrollDisabled = listAutoScrollDisabled == null ? false : listAutoScrollDisabled;\n        this.orientation = listOrientation || 'vertical';\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n    }\n    /** Syncs up the registered drag items with underlying drop list ref. */\n    _syncItemsWithRef() {\n        this._dropListRef.withItems(this.getSortedItems().map(item => item._dragRef));\n    }\n}\nCdkDropList.ɵfac = function CdkDropList_Factory(t) { return new (t || CdkDropList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DragDrop), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(CDK_DROP_LIST_GROUP, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_CONFIG, 8)); };\nCdkDropList.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDropList, selectors: [[\"\", \"cdkDropList\", \"\"], [\"cdk-drop-list\"]], hostAttrs: [1, \"cdk-drop-list\"], hostVars: 7, hostBindings: function CdkDropList_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵclassProp(\"cdk-drop-list-disabled\", ctx.disabled)(\"cdk-drop-list-dragging\", ctx._dropListRef.isDragging())(\"cdk-drop-list-receiving\", ctx._dropListRef.isReceiving());\n    } }, inputs: { connectedTo: [\"cdkDropListConnectedTo\", \"connectedTo\"], id: \"id\", enterPredicate: [\"cdkDropListEnterPredicate\", \"enterPredicate\"], disabled: [\"cdkDropListDisabled\", \"disabled\"], sortingDisabled: [\"cdkDropListSortingDisabled\", \"sortingDisabled\"], autoScrollDisabled: [\"cdkDropListAutoScrollDisabled\", \"autoScrollDisabled\"], orientation: [\"cdkDropListOrientation\", \"orientation\"], lockAxis: [\"cdkDropListLockAxis\", \"lockAxis\"], data: [\"cdkDropListData\", \"data\"] }, outputs: { dropped: \"cdkDropListDropped\", entered: \"cdkDropListEntered\", exited: \"cdkDropListExited\", sorted: \"cdkDropListSorted\" }, exportAs: [\"cdkDropList\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Prevent child drop lists from picking up the same group as their parent.\n            { provide: CDK_DROP_LIST_GROUP, useValue: ɵ0 },\n            { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n        ])] });\n/** Keeps track of the drop lists that are currently on the page. */\nCdkDropList._dropLists = [];\nCdkDropList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: DragDrop },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: CdkDropListGroup, decorators: [{ type: Optional }, { type: Inject, args: [CDK_DROP_LIST_GROUP,] }, { type: SkipSelf }] },\n    { type: ScrollDispatcher },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [CDK_DRAG_CONFIG,] }] }\n];\nCdkDropList.propDecorators = {\n    connectedTo: [{ type: Input, args: ['cdkDropListConnectedTo',] }],\n    data: [{ type: Input, args: ['cdkDropListData',] }],\n    orientation: [{ type: Input, args: ['cdkDropListOrientation',] }],\n    id: [{ type: Input }],\n    lockAxis: [{ type: Input, args: ['cdkDropListLockAxis',] }],\n    disabled: [{ type: Input, args: ['cdkDropListDisabled',] }],\n    sortingDisabled: [{ type: Input, args: ['cdkDropListSortingDisabled',] }],\n    enterPredicate: [{ type: Input, args: ['cdkDropListEnterPredicate',] }],\n    autoScrollDisabled: [{ type: Input, args: ['cdkDropListAutoScrollDisabled',] }],\n    dropped: [{ type: Output, args: ['cdkDropListDropped',] }],\n    entered: [{ type: Output, args: ['cdkDropListEntered',] }],\n    exited: [{ type: Output, args: ['cdkDropListExited',] }],\n    sorted: [{ type: Output, args: ['cdkDropListSorted',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDropList, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDropList], cdk-drop-list',\n                exportAs: 'cdkDropList',\n                providers: [\n                    // Prevent child drop lists from picking up the same group as their parent.\n                    { provide: CDK_DROP_LIST_GROUP, useValue: ɵ0 },\n                    { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n                ],\n                host: {\n                    'class': 'cdk-drop-list',\n                    '[id]': 'id',\n                    '[class.cdk-drop-list-disabled]': 'disabled',\n                    '[class.cdk-drop-list-dragging]': '_dropListRef.isDragging()',\n                    '[class.cdk-drop-list-receiving]': '_dropListRef.isReceiving()'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: DragDrop }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: CdkDropListGroup, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [CDK_DROP_LIST_GROUP]\n            }, {\n                type: SkipSelf\n            }] }, { type: ɵngcc1.ScrollDispatcher }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [CDK_DRAG_CONFIG]\n            }] }]; }, { connectedTo: [{\n            type: Input,\n            args: ['cdkDropListConnectedTo']\n        }], id: [{\n            type: Input\n        }], enterPredicate: [{\n            type: Input,\n            args: ['cdkDropListEnterPredicate']\n        }], dropped: [{\n            type: Output,\n            args: ['cdkDropListDropped']\n        }], entered: [{\n            type: Output,\n            args: ['cdkDropListEntered']\n        }], exited: [{\n            type: Output,\n            args: ['cdkDropListExited']\n        }], sorted: [{\n            type: Output,\n            args: ['cdkDropListSorted']\n        }], disabled: [{\n            type: Input,\n            args: ['cdkDropListDisabled']\n        }], sortingDisabled: [{\n            type: Input,\n            args: ['cdkDropListSortingDisabled']\n        }], autoScrollDisabled: [{\n            type: Input,\n            args: ['cdkDropListAutoScrollDisabled']\n        }], orientation: [{\n            type: Input,\n            args: ['cdkDropListOrientation']\n        }], lockAxis: [{\n            type: Input,\n            args: ['cdkDropListLockAxis']\n        }], data: [{\n            type: Input,\n            args: ['cdkDropListData']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used for a `CdkDrag` to provide itself as a parent to the\n * drag-specific child directive (`CdkDragHandle`, `CdkDragPreview` etc.). Used primarily\n * to avoid circular imports.\n * @docs-private\n */\nconst CDK_DRAG_PARENT = new InjectionToken('CDK_DRAG_PARENT');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDragHandle`. It serves as\n * alternative token to the actual `CdkDragHandle` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_HANDLE = new InjectionToken('CdkDragHandle');\n/** Handle that can be used to drag a CdkDrag instance. */\nclass CdkDragHandle {\n    constructor(element, parentDrag) {\n        this.element = element;\n        /** Emits when the state of the handle has changed. */\n        this._stateChanges = new Subject();\n        this._disabled = false;\n        this._parentDrag = parentDrag;\n        toggleNativeDragInteractions(element.nativeElement, false);\n    }\n    /** Whether starting to drag through this handle is disabled. */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._stateChanges.next(this);\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nCdkDragHandle.ɵfac = function CdkDragHandle_Factory(t) { return new (t || CdkDragHandle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_PARENT, 12)); };\nCdkDragHandle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDragHandle, selectors: [[\"\", \"cdkDragHandle\", \"\"]], hostAttrs: [1, \"cdk-drag-handle\"], inputs: { disabled: [\"cdkDragHandleDisabled\", \"disabled\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_DRAG_HANDLE, useExisting: CdkDragHandle }])] });\nCdkDragHandle.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_DRAG_PARENT,] }, { type: Optional }, { type: SkipSelf }] }\n];\nCdkDragHandle.propDecorators = {\n    disabled: [{ type: Input, args: ['cdkDragHandleDisabled',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDragHandle, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDragHandle]',\n                host: {\n                    'class': 'cdk-drag-handle'\n                },\n                providers: [{ provide: CDK_DRAG_HANDLE, useExisting: CdkDragHandle }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_DRAG_PARENT]\n            }, {\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }]; }, { disabled: [{\n            type: Input,\n            args: ['cdkDragHandleDisabled']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDragPlaceholder`. It serves as\n * alternative token to the actual `CdkDragPlaceholder` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PLACEHOLDER = new InjectionToken('CdkDragPlaceholder');\n/**\n * Element that will be used as a template for the placeholder of a CdkDrag when\n * it is being dragged. The placeholder is displayed in place of the element being dragged.\n */\nclass CdkDragPlaceholder {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nCdkDragPlaceholder.ɵfac = function CdkDragPlaceholder_Factory(t) { return new (t || CdkDragPlaceholder)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkDragPlaceholder.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDragPlaceholder, selectors: [[\"ng-template\", \"cdkDragPlaceholder\", \"\"]], inputs: { data: \"data\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_DRAG_PLACEHOLDER, useExisting: CdkDragPlaceholder }])] });\nCdkDragPlaceholder.ctorParameters = () => [\n    { type: TemplateRef }\n];\nCdkDragPlaceholder.propDecorators = {\n    data: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDragPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[cdkDragPlaceholder]',\n                providers: [{ provide: CDK_DRAG_PLACEHOLDER, useExisting: CdkDragPlaceholder }]\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, { data: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDragPreview`. It serves as\n * alternative token to the actual `CdkDragPreview` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PREVIEW = new InjectionToken('CdkDragPreview');\n/**\n * Element that will be used as a template for the preview\n * of a CdkDrag when it is being dragged.\n */\nclass CdkDragPreview {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this._matchSize = false;\n    }\n    /** Whether the preview should preserve the same size as the item that is being dragged. */\n    get matchSize() { return this._matchSize; }\n    set matchSize(value) { this._matchSize = coerceBooleanProperty(value); }\n}\nCdkDragPreview.ɵfac = function CdkDragPreview_Factory(t) { return new (t || CdkDragPreview)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkDragPreview.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDragPreview, selectors: [[\"ng-template\", \"cdkDragPreview\", \"\"]], inputs: { matchSize: \"matchSize\", data: \"data\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_DRAG_PREVIEW, useExisting: CdkDragPreview }])] });\nCdkDragPreview.ctorParameters = () => [\n    { type: TemplateRef }\n];\nCdkDragPreview.propDecorators = {\n    data: [{ type: Input }],\n    matchSize: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDragPreview, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[cdkDragPreview]',\n                providers: [{ provide: CDK_DRAG_PREVIEW, useExisting: CdkDragPreview }]\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, { matchSize: [{\n            type: Input\n        }], data: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Element that can be moved inside a CdkDropList container. */\nclass CdkDrag {\n    constructor(\n    /** Element that the draggable is attached to. */\n    element, \n    /** Droppable container that the draggable is a part of. */\n    dropContainer, _document, _ngZone, _viewContainerRef, config, _dir, dragDrop, _changeDetectorRef, _selfHandle) {\n        this.element = element;\n        this.dropContainer = dropContainer;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._selfHandle = _selfHandle;\n        this._destroyed = new Subject();\n        /** Emits when the user starts dragging the item. */\n        this.started = new EventEmitter();\n        /** Emits when the user has released a drag item, before any animations have started. */\n        this.released = new EventEmitter();\n        /** Emits when the user stops dragging an item in the container. */\n        this.ended = new EventEmitter();\n        /** Emits when the user has moved the item into a new container. */\n        this.entered = new EventEmitter();\n        /** Emits when the user removes the item its container by dragging it into another container. */\n        this.exited = new EventEmitter();\n        /** Emits when the user drops the item inside a container. */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = new Observable((observer) => {\n            const subscription = this._dragRef.moved.pipe(map(movedEvent => ({\n                source: this,\n                pointerPosition: movedEvent.pointerPosition,\n                event: movedEvent.event,\n                delta: movedEvent.delta,\n                distance: movedEvent.distance\n            }))).subscribe(observer);\n            return () => {\n                subscription.unsubscribe();\n            };\n        });\n        this._dragRef = dragDrop.createDrag(element, {\n            dragStartThreshold: config && config.dragStartThreshold != null ?\n                config.dragStartThreshold : 5,\n            pointerDirectionChangeThreshold: config && config.pointerDirectionChangeThreshold != null ?\n                config.pointerDirectionChangeThreshold : 5,\n            zIndex: config === null || config === void 0 ? void 0 : config.zIndex\n        });\n        this._dragRef.data = this;\n        if (config) {\n            this._assignDefaults(config);\n        }\n        // Note that usually the container is assigned when the drop list is picks up the item, but in\n        // some cases (mainly transplanted views with OnPush, see #18341) we may end up in a situation\n        // where there are no items on the first change detection pass, but the items get picked up as\n        // soon as the user triggers another pass by dragging. This is a problem, because the item would\n        // have to switch from standalone mode to drag mode in the middle of the dragging sequence which\n        // is too late since the two modes save different kinds of information. We work around it by\n        // assigning the drop container both from here and the list.\n        if (dropContainer) {\n            this._dragRef._withDropContainer(dropContainer._dropListRef);\n            dropContainer.addItem(this);\n        }\n        this._syncInputs(this._dragRef);\n        this._handleEvents(this._dragRef);\n    }\n    /** Whether starting to drag this element is disabled. */\n    get disabled() {\n        return this._disabled || (this.dropContainer && this.dropContainer.disabled);\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._dragRef.disabled = this._disabled;\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    getPlaceholderElement() {\n        return this._dragRef.getPlaceholderElement();\n    }\n    /** Returns the root draggable element. */\n    getRootElement() {\n        return this._dragRef.getRootElement();\n    }\n    /** Resets a standalone drag item to its initial position. */\n    reset() {\n        this._dragRef.reset();\n    }\n    /**\n     * Gets the pixel coordinates of the draggable outside of a drop container.\n     */\n    getFreeDragPosition() {\n        return this._dragRef.getFreeDragPosition();\n    }\n    ngAfterViewInit() {\n        // We need to wait for the zone to stabilize, in order for the reference\n        // element to be in the proper place in the DOM. This is mostly relevant\n        // for draggable elements inside portals since they get stamped out in\n        // their original DOM position and then they get transferred to the portal.\n        this._ngZone.onStable.asObservable()\n            .pipe(take(1), takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._updateRootElement();\n            // Listen for any newly-added handles.\n            this._handles.changes.pipe(startWith(this._handles), \n            // Sync the new handles with the DragRef.\n            tap((handles) => {\n                const childHandleElements = handles\n                    .filter(handle => handle._parentDrag === this)\n                    .map(handle => handle.element);\n                // Usually handles are only allowed to be a descendant of the drag element, but if\n                // the consumer defined a different drag root, we should allow the drag element\n                // itself to be a handle too.\n                if (this._selfHandle && this.rootElementSelector) {\n                    childHandleElements.push(this.element);\n                }\n                this._dragRef.withHandles(childHandleElements);\n            }), \n            // Listen if the state of any of the handles changes.\n            switchMap((handles) => {\n                return merge(...handles.map(item => {\n                    return item._stateChanges.pipe(startWith(item));\n                }));\n            }), takeUntil(this._destroyed)).subscribe(handleInstance => {\n                // Enabled/disable the handle that changed in the DragRef.\n                const dragRef = this._dragRef;\n                const handle = handleInstance.element.nativeElement;\n                handleInstance.disabled ? dragRef.disableHandle(handle) : dragRef.enableHandle(handle);\n            });\n            if (this.freeDragPosition) {\n                this._dragRef.setFreeDragPosition(this.freeDragPosition);\n            }\n        });\n    }\n    ngOnChanges(changes) {\n        const rootSelectorChange = changes['rootElementSelector'];\n        const positionChange = changes['freeDragPosition'];\n        // We don't have to react to the first change since it's being\n        // handled in `ngAfterViewInit` where it needs to be deferred.\n        if (rootSelectorChange && !rootSelectorChange.firstChange) {\n            this._updateRootElement();\n        }\n        // Skip the first change since it's being handled in `ngAfterViewInit`.\n        if (positionChange && !positionChange.firstChange && this.freeDragPosition) {\n            this._dragRef.setFreeDragPosition(this.freeDragPosition);\n        }\n    }\n    ngOnDestroy() {\n        if (this.dropContainer) {\n            this.dropContainer.removeItem(this);\n        }\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._dragRef.dispose();\n    }\n    /** Syncs the root element with the `DragRef`. */\n    _updateRootElement() {\n        const element = this.element.nativeElement;\n        const rootElement = this.rootElementSelector ?\n            getClosestMatchingAncestor(element, this.rootElementSelector) : element;\n        if (rootElement && rootElement.nodeType !== this._document.ELEMENT_NODE) {\n            throw Error(`cdkDrag must be attached to an element node. ` +\n                `Currently attached to \"${rootElement.nodeName}\".`);\n        }\n        this._dragRef.withRootElement(rootElement || element);\n    }\n    /** Gets the boundary element, based on the `boundaryElement` value. */\n    _getBoundaryElement() {\n        const boundary = this.boundaryElement;\n        if (!boundary) {\n            return null;\n        }\n        if (typeof boundary === 'string') {\n            return getClosestMatchingAncestor(this.element.nativeElement, boundary);\n        }\n        const element = coerceElement(boundary);\n        if (isDevMode() && !element.contains(this.element.nativeElement)) {\n            throw Error('Draggable element is not inside of the node passed into cdkDragBoundary.');\n        }\n        return element;\n    }\n    /** Syncs the inputs of the CdkDrag with the options of the underlying DragRef. */\n    _syncInputs(ref) {\n        ref.beforeStarted.subscribe(() => {\n            if (!ref.isDragging()) {\n                const dir = this._dir;\n                const dragStartDelay = this.dragStartDelay;\n                const placeholder = this._placeholderTemplate ? {\n                    template: this._placeholderTemplate.templateRef,\n                    context: this._placeholderTemplate.data,\n                    viewContainer: this._viewContainerRef\n                } : null;\n                const preview = this._previewTemplate ? {\n                    template: this._previewTemplate.templateRef,\n                    context: this._previewTemplate.data,\n                    matchSize: this._previewTemplate.matchSize,\n                    viewContainer: this._viewContainerRef\n                } : null;\n                ref.disabled = this.disabled;\n                ref.lockAxis = this.lockAxis;\n                ref.dragStartDelay = (typeof dragStartDelay === 'object' && dragStartDelay) ?\n                    dragStartDelay : coerceNumberProperty(dragStartDelay);\n                ref.constrainPosition = this.constrainPosition;\n                ref.previewClass = this.previewClass;\n                ref\n                    .withBoundaryElement(this._getBoundaryElement())\n                    .withPlaceholderTemplate(placeholder)\n                    .withPreviewTemplate(preview);\n                if (dir) {\n                    ref.withDirection(dir.value);\n                }\n            }\n        });\n    }\n    /** Handles the events from the underlying `DragRef`. */\n    _handleEvents(ref) {\n        ref.started.subscribe(() => {\n            this.started.emit({ source: this });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.released.subscribe(() => {\n            this.released.emit({ source: this });\n        });\n        ref.ended.subscribe(event => {\n            this.ended.emit({ source: this, distance: event.distance });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.entered.subscribe(event => {\n            this.entered.emit({\n                container: event.container.data,\n                item: this,\n                currentIndex: event.currentIndex\n            });\n        });\n        ref.exited.subscribe(event => {\n            this.exited.emit({\n                container: event.container.data,\n                item: this\n            });\n        });\n        ref.dropped.subscribe(event => {\n            this.dropped.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                previousContainer: event.previousContainer.data,\n                container: event.container.data,\n                isPointerOverContainer: event.isPointerOverContainer,\n                item: this,\n                distance: event.distance\n            });\n        });\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n        const { lockAxis, dragStartDelay, constrainPosition, previewClass, boundaryElement, draggingDisabled, rootElementSelector } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.dragStartDelay = dragStartDelay || 0;\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n        if (constrainPosition) {\n            this.constrainPosition = constrainPosition;\n        }\n        if (previewClass) {\n            this.previewClass = previewClass;\n        }\n        if (boundaryElement) {\n            this.boundaryElement = boundaryElement;\n        }\n        if (rootElementSelector) {\n            this.rootElementSelector = rootElementSelector;\n        }\n    }\n}\nCdkDrag.ɵfac = function CdkDrag_Factory(t) { return new (t || CdkDrag)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(CDK_DROP_LIST, 12), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DragDrop), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_HANDLE, 10)); };\nCdkDrag.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDrag, selectors: [[\"\", \"cdkDrag\", \"\"]], contentQueries: function CdkDrag_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CDK_DRAG_PREVIEW, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CDK_DRAG_PLACEHOLDER, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CDK_DRAG_HANDLE, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previewTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._handles = _t);\n    } }, hostAttrs: [1, \"cdk-drag\"], hostVars: 4, hostBindings: function CdkDrag_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"cdk-drag-disabled\", ctx.disabled)(\"cdk-drag-dragging\", ctx._dragRef.isDragging());\n    } }, inputs: { disabled: [\"cdkDragDisabled\", \"disabled\"], dragStartDelay: [\"cdkDragStartDelay\", \"dragStartDelay\"], lockAxis: [\"cdkDragLockAxis\", \"lockAxis\"], constrainPosition: [\"cdkDragConstrainPosition\", \"constrainPosition\"], previewClass: [\"cdkDragPreviewClass\", \"previewClass\"], boundaryElement: [\"cdkDragBoundary\", \"boundaryElement\"], rootElementSelector: [\"cdkDragRootElement\", \"rootElementSelector\"], data: [\"cdkDragData\", \"data\"], freeDragPosition: [\"cdkDragFreeDragPosition\", \"freeDragPosition\"] }, outputs: { started: \"cdkDragStarted\", released: \"cdkDragReleased\", ended: \"cdkDragEnded\", entered: \"cdkDragEntered\", exited: \"cdkDragExited\", dropped: \"cdkDragDropped\", moved: \"cdkDragMoved\" }, exportAs: [\"cdkDrag\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }]), ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkDrag.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_DROP_LIST,] }, { type: Optional }, { type: SkipSelf }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: NgZone },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [CDK_DRAG_CONFIG,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: DragDrop },\n    { type: ChangeDetectorRef },\n    { type: CdkDragHandle, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [CDK_DRAG_HANDLE,] }] }\n];\nCdkDrag.propDecorators = {\n    _handles: [{ type: ContentChildren, args: [CDK_DRAG_HANDLE, { descendants: true },] }],\n    _previewTemplate: [{ type: ContentChild, args: [CDK_DRAG_PREVIEW,] }],\n    _placeholderTemplate: [{ type: ContentChild, args: [CDK_DRAG_PLACEHOLDER,] }],\n    data: [{ type: Input, args: ['cdkDragData',] }],\n    lockAxis: [{ type: Input, args: ['cdkDragLockAxis',] }],\n    rootElementSelector: [{ type: Input, args: ['cdkDragRootElement',] }],\n    boundaryElement: [{ type: Input, args: ['cdkDragBoundary',] }],\n    dragStartDelay: [{ type: Input, args: ['cdkDragStartDelay',] }],\n    freeDragPosition: [{ type: Input, args: ['cdkDragFreeDragPosition',] }],\n    disabled: [{ type: Input, args: ['cdkDragDisabled',] }],\n    constrainPosition: [{ type: Input, args: ['cdkDragConstrainPosition',] }],\n    previewClass: [{ type: Input, args: ['cdkDragPreviewClass',] }],\n    started: [{ type: Output, args: ['cdkDragStarted',] }],\n    released: [{ type: Output, args: ['cdkDragReleased',] }],\n    ended: [{ type: Output, args: ['cdkDragEnded',] }],\n    entered: [{ type: Output, args: ['cdkDragEntered',] }],\n    exited: [{ type: Output, args: ['cdkDragExited',] }],\n    dropped: [{ type: Output, args: ['cdkDragDropped',] }],\n    moved: [{ type: Output, args: ['cdkDragMoved',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDrag, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDrag]',\n                exportAs: 'cdkDrag',\n                host: {\n                    'class': 'cdk-drag',\n                    '[class.cdk-drag-disabled]': 'disabled',\n                    '[class.cdk-drag-dragging]': '_dragRef.isDragging()'\n                },\n                providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_DROP_LIST]\n            }, {\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [CDK_DRAG_CONFIG]\n            }] }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: DragDrop }, { type: ɵngcc0.ChangeDetectorRef }, { type: CdkDragHandle, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [CDK_DRAG_HANDLE]\n            }] }]; }, { started: [{\n            type: Output,\n            args: ['cdkDragStarted']\n        }], released: [{\n            type: Output,\n            args: ['cdkDragReleased']\n        }], ended: [{\n            type: Output,\n            args: ['cdkDragEnded']\n        }], entered: [{\n            type: Output,\n            args: ['cdkDragEntered']\n        }], exited: [{\n            type: Output,\n            args: ['cdkDragExited']\n        }], dropped: [{\n            type: Output,\n            args: ['cdkDragDropped']\n        }], moved: [{\n            type: Output,\n            args: ['cdkDragMoved']\n        }], disabled: [{\n            type: Input,\n            args: ['cdkDragDisabled']\n        }], dragStartDelay: [{\n            type: Input,\n            args: ['cdkDragStartDelay']\n        }], lockAxis: [{\n            type: Input,\n            args: ['cdkDragLockAxis']\n        }], constrainPosition: [{\n            type: Input,\n            args: ['cdkDragConstrainPosition']\n        }], previewClass: [{\n            type: Input,\n            args: ['cdkDragPreviewClass']\n        }], boundaryElement: [{\n            type: Input,\n            args: ['cdkDragBoundary']\n        }], rootElementSelector: [{\n            type: Input,\n            args: ['cdkDragRootElement']\n        }], _handles: [{\n            type: ContentChildren,\n            args: [CDK_DRAG_HANDLE, { descendants: true }]\n        }], _previewTemplate: [{\n            type: ContentChild,\n            args: [CDK_DRAG_PREVIEW]\n        }], _placeholderTemplate: [{\n            type: ContentChild,\n            args: [CDK_DRAG_PLACEHOLDER]\n        }], data: [{\n            type: Input,\n            args: ['cdkDragData']\n        }], freeDragPosition: [{\n            type: Input,\n            args: ['cdkDragFreeDragPosition']\n        }] }); })();\n/** Gets the closest ancestor of an element that matches a selector. */\nfunction getClosestMatchingAncestor(element, selector) {\n    let currentElement = element.parentElement;\n    while (currentElement) {\n        // IE doesn't support `matches` so we have to fall back to `msMatchesSelector`.\n        if (currentElement.matches ? currentElement.matches(selector) :\n            currentElement.msMatchesSelector(selector)) {\n            return currentElement;\n        }\n        currentElement = currentElement.parentElement;\n    }\n    return null;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass DragDropModule {\n}\nDragDropModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DragDropModule });\nDragDropModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DragDropModule_Factory(t) { return new (t || DragDropModule)(); }, providers: [\n        DragDrop,\n    ], imports: [CdkScrollableModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DragDropModule, { declarations: function () { return [CdkDropList, CdkDropListGroup, CdkDrag, CdkDragHandle, CdkDragPreview, CdkDragPlaceholder]; }, exports: function () { return [CdkScrollableModule, CdkDropList, CdkDropListGroup, CdkDrag, CdkDragHandle, CdkDragPreview, CdkDragPlaceholder]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DragDropModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    CdkDropList,\n                    CdkDropListGroup,\n                    CdkDrag,\n                    CdkDragHandle,\n                    CdkDragPreview,\n                    CdkDragPlaceholder,\n                ],\n                exports: [\n                    CdkScrollableModule,\n                    CdkDropList,\n                    CdkDropListGroup,\n                    CdkDrag,\n                    CdkDragHandle,\n                    CdkDragPreview,\n                    CdkDragPlaceholder,\n                ],\n                providers: [\n                    DragDrop,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_DRAG_CONFIG, CDK_DRAG_HANDLE, CDK_DRAG_PLACEHOLDER, CDK_DRAG_PREVIEW, CDK_DROP_LIST_GROUP, CdkDrag, CdkDragHandle, CdkDragPlaceholder, CdkDragPreview, CdkDropList, CdkDropListGroup, DragDrop, DragDropModule, DragDropRegistry, DragRef, DropListRef, copyArrayItem, moveItemInArray, transferArrayItem, CDK_DROP_LIST as ɵangular_material_src_cdk_drag_drop_drag_drop_b, CDK_DRAG_PARENT as ɵangular_material_src_cdk_drag_drop_drag_drop_c };\n\n//# sourceMappingURL=drag-drop.js.map","export class Activity {\n  constructor(public userId: number,\n              public text: string,\n              public before: any,\n              public after: any,\n              public itemType: string,\n              public itemId: number,\n              public timestamp: number) {\n  }\n}\n\nexport class ActivitySimple {\n  constructor(public text: string, public timestamp: number) {\n  }\n}\n\n","export class Attachment {\n  constructor(public id: number = 0,\n              public filename: string = '',\n              public diskfilename: string = '',\n              public name: string = '',\n              public type: string = '',\n              public user_id: number = 0, // tslint:disable-line\n              public timestamp: number = Date.now(),\n              public task_id: number = 0,\n              public data: any = null) { // tslint:disable-line\n  }\n}\n\n","export enum ActionTrigger {\n  MovedToColumn = 1,\n  AssignedToUser,\n  AddedToCategory,\n  PointsChanged\n}\n\nexport enum ActionType {\n  SetColor = 1,\n  SetCategory,\n  AddCategory,\n  SetAssignee,\n  AddAssignee,\n  ClearDueDate,\n  AlterColorByPoints\n}\n\nexport class AutoAction {\n  constructor(public id: number = 0,\n              public trigger: ActionTrigger = ActionTrigger.MovedToColumn,\n              public source_id: number = null, // tslint:disable-line\n              public type: ActionType = ActionType.SetColor,\n              public change_to: string = null, // tslint:disable-line\n              public board_id: number = null) { // tslint:disable-line\n  }\n}\n\n","export class Category {\n  constructor(public id: number = 0,\n              public name: string = '',\n              public default_task_color: string = '', // tslint:disable-line\n              public board_id: number = 0) { // tslint:disable-line\n  }\n}\n\n","import { SafeHtml } from '@angular/platform-browser';\n\nexport class Comment {\n  public html: SafeHtml;\n\n  constructor(public id: number = 0,\n              public text: string = '',\n              public user_id: number = 0, // tslint:disable-line\n              public task_id: number = 0, // tslint:disable-line\n              public timestamp: number = Date.now(),\n              public is_edited: boolean = false) { // tslint:disable-line\n  }\n}\n\n","export class User {\n  constructor(public default_board_id: number = 0, // tslint:disable-line\n              public email: string = '',\n              public id: number = 0,\n              public last_login: Date = null, // tslint:disable-line\n              public security_level: number = 4, // tslint:disable-line\n              public user_option_id: number = 0, // tslint:disable-line\n              public username: string = '',\n              public board_access: number[] = [], // tslint:disable-line\n              public collapsed: number[] = []) {\n  }\n\n  isAdmin() {\n    return this.security_level === 1;\n  }\n\n  isBoardAdmin() {\n    return this.security_level === 2;\n  }\n\n  isAnyAdmin() {\n    return this.security_level === 1 || this.security_level === 2;\n  }\n}\n\n","import { SafeHtml } from '@angular/platform-browser';\n\nimport { Attachment } from './attachment.model';\nimport { Category } from './category.model';\nimport { Comment } from './comment.model';\nimport { User } from './user.model';\n\nexport class Task {\n  public comments: Comment[];\n  public attachments: Attachment[];\n  public assignees: User[];\n  public categories: Category[];\n  public html: SafeHtml;\n\n  public filtered: boolean;\n  public hideFiltered: boolean;\n\n  constructor(public id: number = 0,\n              public title: string = '',\n              public description: string = '',\n              public color: string = '#ffffe0',\n              public due_date: string = '', // tslint:disable-line\n              public points: number = 0,\n              public position: number = 0,\n              public column_id: number = 0, // tslint:disable-line\n              commentArray: any[] = [],\n              attachmentArray: any[] = [],\n              assigneeArray: any[] = [],\n              categoryArray: any[] = []) {\n    this.comments = [];\n    this.attachments = [];\n    this.assignees = [];\n    this.categories = [];\n\n    commentArray.forEach((comment: any) => {\n      this.comments.push(new Comment(+comment.id,\n        comment.text,\n        +comment.user_id,\n        +comment.task_id,\n        +comment.timestamp,\n        +comment.is_edited === 1));\n    });\n\n    attachmentArray.forEach((attachment: any) => {\n      this.attachments.push(new Attachment(+attachment.id,\n        attachment.filename,\n        attachment.diskfilename,\n        attachment.name,\n        attachment.type,\n        +attachment.user_id,\n        +attachment.timestamp,\n        +attachment.task_id));\n    });\n\n    assigneeArray.forEach((user: any) => {\n      this.assignees.push(new User(+user.default_board_id,\n        user.email,\n        +user.id,\n        user.last_login,\n        +user.security_level,\n        +user.user_option_id,\n        user.username,\n        user.board_access,\n        user.collapsed));\n    });\n\n    categoryArray.forEach((category: any) => {\n      this.categories.push(new Category(+category.id,\n        category.name,\n        category.default_task_color,\n        +category.board_id));\n    });\n  }\n}\n\n","import { Task } from './task.model';\n\nexport class Column {\n  public tasks: Task[];\n\n  constructor(public id: number = 0,\n              public name: string = '',\n              public position: number = 0,\n              public board_id: number = 0, // tslint:disable-line\n              public task_limit: number = 0, // tslint:disable-line\n              ownTask: any[] = []) {\n    this.tasks = [];\n\n    ownTask.forEach((task: any) => {\n      this.tasks.push(new Task(+task.id,\n        task.title,\n        task.description,\n        task.color,\n        task.due_date,\n        +task.points,\n        +task.position,\n        +task.column_id,\n        task.ownComment || task.comments,\n        task.ownAttachment || task.attachments,\n        task.sharedUser || task.assignees,\n        task.sharedCategory || task.categories));\n    });\n  }\n\n  hasTaskLimit() {\n    return this.task_limit > 0;\n  }\n}\n\n","export class IssueTracker {\n  constructor(public id: number = 0,\n              public url: string = '',\n              public regex: string = '') {\n  }\n}\n\n","import { AutoAction } from './auto-actions.model';\nimport { Column } from './column.model';\nimport { Category } from './category.model';\nimport { IssueTracker } from './issue-tracker.model';\nimport { User } from './user.model';\n\nexport class Board {\n  public columns: Column[];\n  public categories: Category[];\n  public auto_actions: AutoAction[]; // tslint:disable-line\n  public issue_trackers: IssueTracker[]; // tslint:disable-line\n  public users: User[];\n\n  constructor(public id: number = 0,\n              public name: string = '',\n              public is_active: boolean = true, // tslint:disable-line\n              columnArray: any[] = [],\n              categoryArray: any[] = [],\n              actionsArray: any[] = [],\n              trackerArray: any[] = [],\n              userArray: any[] = []) {\n    this.columns = [];\n    this.categories = [];\n    this.auto_actions = [];\n    this.issue_trackers = [];\n    this.users = [];\n\n    columnArray.forEach((column: any) => {\n      this.columns.push(this.convertColumn(column));\n    });\n\n    this.columns.sort((a, b) => a.position - b.position);\n\n    categoryArray.forEach((category: any) => {\n      this.categories.push(this.convertCategory(category));\n    });\n\n    actionsArray.forEach((action: any) => {\n      this.auto_actions.push(new AutoAction(+action.id,\n        +action.trigger,\n        +action.source_id,\n        +action.type,\n        action.change_to,\n        +action.board_id));\n    });\n\n    trackerArray.forEach((tracker: any) => {\n      this.issue_trackers.push(new IssueTracker(+tracker.id,\n        tracker.url,\n        tracker.regex));\n    });\n\n    userArray.forEach((user: any) => {\n      this.users.push(new User(+user.default_board_id,\n        user.email,\n        +user.id,\n        user.last_login,\n        +user.security_level,\n        +user.user_option_id,\n        user.username,\n        user.board_access,\n        user.collapsed));\n    });\n  }\n\n  addColumn(name: string): void {\n    const column = new Column(0, name, this.columns.length);\n    this.columns.push(column);\n  }\n\n  addCategory(name: string, color: string): void {\n    this.categories.push(new Category(0, name, color));\n  }\n\n  addIssueTracker(url: string, regex: string): void {\n    this.issue_trackers.push(new IssueTracker(0, url, regex));\n  }\n\n  private convertColumn(column: any): Column {\n    const col = new Column(+column.id, column.name, +column.position,\n                           +column.board_id, +column.task_limit,\n                           column.ownTask);\n\n    return col;\n  }\n\n  private convertCategory(category: any): Category {\n\n    const cat = new Category(+category.id, category.name,\n                             category.default_task_color, +category.board_id);\n\n    return cat;\n  }\n}\n\n","export class Notification {\n  constructor(public type: string = '',\n              public text: string = '') {\n  }\n}\n\n","export class UserOptions {\n  constructor(public id: number = 0,\n              public new_tasks_at_bottom: boolean = true, // tslint:disable-line\n              public show_animations: boolean = true, // tslint:disable-line\n              public show_assignee: boolean = true, // tslint:disable-line\n              public multiple_tasks_per_row: boolean = false, // tslint:disable-line\n              public language: string = 'en') {\n  }\n}\n\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { LocationStrategy } from '@angular/common';\n\n@Injectable()\nexport class ApiService {\n  protected apiBase: string;\n\n  constructor(private strat: LocationStrategy) {\n    this.apiBase = this.strat.getBaseHref() + 'api/';\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class Constants {\n  public get VERSION(): string { return '1.0.2'; }\n  public get TOKEN(): string { return 'taskboard.jwt'; }\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable()\nexport class StringsService {\n  private strings = new BehaviorSubject<any>({});\n\n  public stringsChanged = this.strings.asObservable();\n\n  constructor(private http: HttpClient) {\n  }\n\n  loadStrings(language: string): void {\n    this.http.get('strings/' + language + '.json')\n    .subscribe((res: any) => {\n      this.strings.next(res);\n    });\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport {\n  ApiResponse,\n  User,\n  UserOptions\n} from '../models';\nimport { Constants } from '../constants';\nimport { StringsService } from '../strings/strings.service';\nimport { LocationStrategy } from '@angular/common';\nimport { ApiService } from '../api-service.service';\n\n@Injectable()\nexport class AuthService extends ApiService {\n  private activeUser = new BehaviorSubject<User>(null);\n\n  public userOptions: UserOptions = null;\n  public userChanged = this.activeUser.asObservable();\n\n  public attemptedRoute: string;\n\n  constructor(public constants: Constants, private http: HttpClient, public router: Router,\n              private strings: StringsService, strat: LocationStrategy) {\n    super(strat);\n  }\n\n  updateUser(user: User, userOpts?: UserOptions): void {\n    if (userOpts) {\n      this.userOptions = this.convertOpts(userOpts);\n      this.strings.loadStrings(this.userOptions.language);\n    }\n\n    this.activeUser.next(user);\n  }\n\n  authenticate(url: string, isLogin = false): Observable<boolean> {\n    if (!isLogin) {\n      this.attemptedRoute = url;\n    }\n\n    return this.http.post(this.apiBase + 'authenticate', null)\n    .pipe(\n      map((response: ApiResponse) => {\n        this.updateUser(response.data[1], response.data[2]);\n        return true;\n      }),\n      catchError((_, __) => of(false))\n    );\n  }\n\n  login(username: string, password: string,\n        remember: boolean): Observable<ApiResponse> {\n    const json = JSON.stringify({ username, password, remember });\n\n    return this.http.post(this.apiBase + 'login', json)\n    .pipe(\n      map((response: ApiResponse) => {\n        this.updateUser(response.data[1], response.data[2]);\n        return response;\n      }),\n      catchError((err, _) => {\n        this.updateUser(null, null);\n        return of(err.error as ApiResponse);\n      })\n    );\n  }\n\n  logout(): Observable<ApiResponse> {\n    return this.http.post(this.apiBase + 'logout', null)\n    .pipe(\n      map((response: ApiResponse) => {\n        return response;\n      })\n    );\n  }\n\n  private convertOpts(opts: any): UserOptions {\n    const converted = new UserOptions(+opts.id,\n      opts.new_tasks_at_bottom === '1',\n      opts.show_animations === '1',\n      opts.show_assignee === '1',\n      opts.multiple_tasks_per_row === '1',\n      opts.language);\n    return converted;\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { CanActivate, RouterStateSnapshot } from '@angular/router';\n\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService) {\n  }\n\n  canActivate(_: any, state: RouterStateSnapshot) {\n    return this.authService.authenticate(state.url);\n  }\n}\n\n","import { Injectable } from '@angular/core';\n\nimport { ContextMenuComponent } from './context-menu.component';\n\n@Injectable()\nexport class ContextMenuService {\n  private menus: ContextMenuComponent[] = [];\n\n  constructor() {\n    document.addEventListener('click', _ => { this.closeAllMenus(); });\n  }\n\n  registerMenu(newMenu: ContextMenuComponent) {\n    const index = this.menus.indexOf(newMenu);\n\n    if (index === -1) {\n      this.menus.push(newMenu);\n      return;\n    }\n\n    this.menus[index] = newMenu;\n  }\n\n  closeAllMenus() {\n    this.menus.forEach(menu => {\n      menu.isOpen = false;\n    });\n  }\n}\n\n","import { Injectable } from '@angular/core';\n\nimport { AuthService } from '../auth/auth.service';\nimport { UserOptions } from '../models';\nimport { ModalComponent } from './modal.component';\n\n@Injectable()\nexport class ModalService {\n  private modals: ModalComponent[];\n  private userOptions: UserOptions;\n\n  constructor(public auth: AuthService) {\n    this.modals = [];\n    this.userOptions = auth.userOptions;\n  }\n\n  registerModal(newModal: ModalComponent): void {\n    const modal = this.modals.find(modall => modall.modalId === newModal.modalId);\n\n    // Delete existing to replace the modal\n    if (modal) {\n      this.modals.splice(this.modals.indexOf(modal));\n    }\n\n    this.modals.push(newModal);\n  }\n\n  isOpen(modalId: string): boolean {\n    const modal = this.modals.find(modall => modall.modalId === modalId);\n\n    if (modal) {\n      return modal.isOpen;\n    }\n\n    return false;\n  }\n\n  open(modalId: string): void {\n    const modal = this.modals.find(modall => modall.modalId === modalId);\n\n    if (modal) {\n      modal.animate = (this.userOptions.show_animations);\n      modal.isOpen = true;\n      document.querySelector('body').classList.add('no-scroll');\n\n      setTimeout(() => {\n        if (modal.focusElement) {\n          modal.focusElement.nativeElement.focus();\n        }\n      },         100);\n    }\n  }\n\n  close(modalId: string, checkBlocking = false): void {\n    const modal = this.modals.find(modall => modall.modalId === modalId);\n\n    if (modal) {\n      if (checkBlocking && modal.blocking) {\n        return;\n      }\n\n      modal.isOpen = false;\n      document.querySelector('body').classList.remove('no-scroll');\n    }\n  }\n\n}\n\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { Notification } from '../models/notification.model';\n\n@Injectable()\nexport class NotificationsService {\n  private notifications = new Subject<Notification>();\n\n  public noteAdded = this.notifications.asObservable();\n\n  public add(notification: Notification): void {\n    this.notifications.next(notification);\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { LocationStrategy } from '@angular/common';\n\nimport * as marked from 'marked';\nimport hljs from 'node_modules/highlight.js/lib/core.js';\nimport javascript from 'node_modules/highlight.js/lib/languages/javascript.js';\nimport bash from 'node_modules/highlight.js/lib/languages/bash.js';\nimport css from 'node_modules/highlight.js/lib/languages/css.js';\nimport csharp from 'node_modules/highlight.js/lib/languages/csharp.js';\nimport php from 'node_modules/highlight.js/lib/languages/php.js';\n\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { ApiResponse, Board, Column, Attachment, Comment, Task } from '../shared/models';\nimport { ApiService } from '../shared/services';\n\ninterface MarkedReturn {\n  html: string;\n  counts: any;\n}\n\n@Injectable()\nexport class BoardService extends ApiService {\n  private checkCounts = {\n    total: 0,\n    complete: 0\n  };\n  private activeBoard = new BehaviorSubject<Board>(null);\n  private showTaskId = new BehaviorSubject<number>(null);\n\n  public activeBoardChanged = this.activeBoard.asObservable();\n  public showTaskIdChanged = this.showTaskId.asObservable();\n\n  constructor(private http: HttpClient, strat: LocationStrategy) {\n    super(strat);\n    this.initMarked();\n\n    hljs.registerLanguage('javascript', javascript);\n    hljs.registerLanguage('bash', bash);\n    hljs.registerLanguage('css', css);\n    hljs.registerLanguage('csharp', csharp);\n    hljs.registerLanguage('php', php);\n  }\n\n  showTask(id: number) {\n    this.showTaskId.next(id);\n  }\n\n  async convertMarkdown(markdown: string, callback = this.defaultCallback,\n                        doCount = false): Promise<MarkedReturn> {\n    this.checkCounts.total = 0;\n    this.checkCounts.complete = 0;\n\n    const retVal: MarkedReturn = { html: '', counts: {} };\n\n    retVal.html = callback(false, marked(markdown));\n\n    if (doCount) {\n      retVal.counts = Object.assign({}, this.checkCounts);\n    }\n\n    return retVal;\n  }\n\n  updateActiveBoard(board: any): void {\n    if (!board) {\n      return;\n    }\n\n    this.convertBoardData(board).then(newBoard => {\n      this.activeBoard.next(newBoard);\n    });\n  }\n\n  getBoards(): Observable<ApiResponse> {\n    return this.http.get(this.apiBase + 'boards')\n    .pipe(\n      map((response: ApiResponse) => response),\n      catchError((err) => of(err.error as ApiResponse))\n    );\n  }\n\n  toggleCollapsed(userId: number, columnId: number): Observable<ApiResponse> {\n    return this.http.post(this.apiBase + 'users/' + userId + '/cols', { id: columnId })\n    .pipe(\n      map((response: ApiResponse) => response),\n      catchError((err) => of(err.error as ApiResponse))\n    );\n  }\n\n  updateBoard(board: Board): Observable<ApiResponse> {\n    return this.http.post(this.apiBase + 'boards/' + board.id, board)\n    .pipe(\n      map((response: ApiResponse) => response),\n      catchError((err) => of(err.error as ApiResponse))\n    );\n  }\n\n  updateColumn(column: Column): Observable<ApiResponse> {\n    return this.http.post(this.apiBase + 'columns/' + column.id, column)\n    .pipe(\n      map((response: ApiResponse) => response),\n      catchError((err) => of(err.error as ApiResponse))\n    );\n  }\n\n  addTask(task: Task): Observable<ApiResponse> {\n    return this.http.post(this.apiBase + 'tasks', task)\n    .pipe(\n      map((response: ApiResponse) => response),\n      catchError((err) => of(err.error as ApiResponse))\n    );\n  }\n\n  updateTask(task: Task): Observable<ApiResponse> {\n    return this.http.post(this.apiBase + 'tasks/' + task.id, task)\n    .pipe(\n      map((response: ApiResponse) => response),\n      catchError((err) => of(err.error as ApiResponse))\n    );\n  }\n\n  removeTask(taskId: number): Observable<ApiResponse> {\n    return this.http.delete(this.apiBase + 'tasks/' + taskId)\n    .pipe(\n      map((response: ApiResponse) => response),\n      catchError((err) => of(err.error as ApiResponse))\n    );\n  }\n\n  getTaskActivity(taskId: number): Observable<ApiResponse> {\n    return this.http.get(this.apiBase + 'activity/task/' + taskId)\n    .pipe(\n      map((response: ApiResponse) => response),\n      catchError((err) => of(err.error as ApiResponse))\n    );\n  }\n\n  addComment(comment: Comment): Observable<ApiResponse> {\n    return this.http.post(this.apiBase + 'comments', comment)\n    .pipe(\n      map((response: ApiResponse) => response),\n      catchError((err) => of(err.error as ApiResponse))\n    );\n  }\n\n  updateComment(comment: Comment): Observable<ApiResponse> {\n    return this.http.post(this.apiBase + 'comments/' + comment.id, comment)\n    .pipe(\n      map((response: ApiResponse) => response),\n      catchError((err) => of(err.error as ApiResponse))\n    );\n  }\n\n  removeComment(commentId: number): Observable<ApiResponse> {\n    return this.http.delete(this.apiBase + 'comments/' + commentId)\n    .pipe(\n      map((response: ApiResponse) => response),\n      catchError((err) => of(err.error as ApiResponse))\n    );\n  }\n\n  addAttachment(attachment: Attachment): Observable<ApiResponse> {\n    return this.http.post(this.apiBase + 'attachments', attachment)\n    .pipe(\n      map((response: ApiResponse) => response),\n      catchError((err) => of(err.error as ApiResponse))\n    );\n  }\n\n  uploadAttachment(data: FormData, hash: string): Observable<ApiResponse> {\n    return this.http.post(this.apiBase + 'upload/' + hash, data)\n    .pipe(\n      map((response: ApiResponse) => response),\n      catchError((err) => of(err.error as ApiResponse))\n    );\n  }\n\n  removeAttachment(id: number): Observable<ApiResponse> {\n    return this.http.delete(this.apiBase + 'attachments/' + id)\n    .pipe(\n      map((response: ApiResponse) => response),\n      catchError((err) => of(err.error as ApiResponse))\n    )\n  }\n\n  private async convertBoardData(boardData: any): Promise<Board> {\n    if (boardData instanceof Board) {\n      return boardData;\n    }\n\n    return new Board(+boardData.id, boardData.name,\n                     boardData.is_active === '1',\n                     boardData.ownColumn,\n                     boardData.ownCategory,\n                     boardData.ownAutoAction,\n                     boardData.ownIssuetracker,\n                     boardData.sharedUser);\n  }\n\n  private defaultCallback = (err: any, text: string) => {\n    if (err) {\n      return '';\n    }\n\n    return text;\n  }\n\n  private initMarked(): void {\n    const renderer = new marked.Renderer();\n\n    renderer.checkbox = isChecked => {\n      const text = '<i class=\"icon icon-check' + (isChecked ? '' : '-empty') + '\"></i>';\n\n      this.checkCounts.total += 1;\n\n      if (isChecked) {\n        this.checkCounts.complete += 1;\n      }\n\n      return text;\n    };\n\n    renderer.link = (href, title, text) => {\n      let out = '<a href=\"' + href + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += ' target=\"tb_external\" rel=\"noreferrer\">' + text + '</a>';\n\n      return out;\n    };\n\n    marked.setOptions({\n      renderer,\n      smartypants: true,\n      highlight: code => {\n        return hljs.highlightAuto(code).value;\n      }\n    });\n  }\n\n}\n\n","<nav class=\"nav-top\">\n  <h1>\n    TaskBoard\n    <span>\n      <small>\n        - {{ pageName }}\n        <small class=\"dark small\">(v{{ version }})</small>\n      </small>\n    </span>\n  </h1>\n\n  <div class=\"buttons\" *ngIf=\"showButtons\">\n    <button [ngClass]=\"{ flat: !isActive('dashboard') }\"\n      (click)=\"navigateTo('dashboard')\">{{ strings['dashboard'] }}</button>\n\n    <button [ngClass]=\"{ flat: !isActive('boards') }\"\n      (click)=\"navigateTo('boards')\">{{ strings['boards'] }}</button>\n\n    <button [ngClass]=\"{ flat: !isActive('settings') }\"\n      (click)=\"navigateTo('settings')\">{{ strings['settings'] }}</button>\n\n    <button class=\"flat\"\n      (click)=\"logout()\">{{ strings['logout'] }} ({{ username }})</button>\n  </div>\n</nav>\n\n","import { Component, Input } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Notification } from '../models';\nimport { Constants } from '../constants';\nimport { AuthService, NotificationsService } from '../services';\nimport { StringsService } from '../strings/strings.service';\n\n@Component({\n  selector: 'tb-top-nav',\n  templateUrl: './top-nav.component.html'\n})\nexport class TopNavComponent {\n  public strings: any;\n\n  // tslint:disable-next-line\n  @Input('page-name') pageName: string = '';\n\n  // tslint:disable-next-line\n  @Input('show-buttons') showButtons: boolean = true;\n\n  version = '';\n  username = '';\n\n  constructor(public constants: Constants, private router: Router,\n              public authService: AuthService,\n              private notes: NotificationsService,\n              public stringsService: StringsService) {\n    this.version = constants.VERSION;\n\n    authService.userChanged\n      .subscribe(user => this.username = user ? user.username : '');\n\n    stringsService.stringsChanged.subscribe(newStrings => {\n      this.strings = newStrings;\n    });\n  }\n\n  logout(): void {\n    this.authService.logout().subscribe(res => {\n      const alert = res.alerts[0];\n      this.notes.add(new Notification(alert.type, alert.text));\n\n      this.router.navigate(['']);\n    });\n  }\n\n  isActive(route: string): boolean {\n    return this.router.url.indexOf(route) !== -1;\n  }\n\n  navigateTo(target: string): void {\n    this.router.navigate(['/' + target]);\n  }\n}\n\n","<div class=\"context-menu-container\" style=\"top: -99999em;\" *ngIf=\"isOpen\">\n  <ng-content></ng-content>\n</div>\n\n","import { Component, ElementRef } from '@angular/core';\n\nimport { ContextMenuService } from './context-menu.service';\n\n@Component({\n  selector: 'tb-context-menu',\n  templateUrl: './context-menu.component.html'\n})\nexport class ContextMenuComponent {\n  public isOpen = false;\n\n  constructor(public el: ElementRef,\n              private menuService: ContextMenuService) {\n    menuService.registerMenu(this);\n\n    const parentEl = el.nativeElement.parentElement;\n\n    parentEl.oncontextmenu = (event: MouseEvent) => {\n      this.parentEventHandler(event);\n\n      setTimeout(() => {\n        this.updatePosition(event);\n      }, 0);\n    };\n  }\n\n  private updatePosition(event: MouseEvent) {\n    const edgeBuffer = 10;\n\n    const target = this.el.nativeElement.firstElementChild;\n\n    // Adjust position if near an edge\n    const rect = target.getBoundingClientRect();\n    const offsetX = (event.pageX + rect.width + edgeBuffer) > window.innerWidth;\n    const offsetY = (event.pageY + rect.height + edgeBuffer) > window.innerHeight;\n\n    target.style.left = event.pageX - (offsetX ? rect.width : 0) + 'px';\n    target.style.top = event.pageY - (offsetY ? rect.height : 0) + 'px';\n  }\n\n  private parentEventHandler(event: MouseEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.menuService.closeAllMenus();\n    this.isOpen = true;\n  }\n}\n\n","<ng-content *ngIf=\"!isSeparator; else separator\"\n  class=\"context-menu-item\"></ng-content>\n<ng-template #separator class=\"context-menu-separator\">\n  <hr>\n</ng-template>\n","import { Component, ElementRef, Input } from '@angular/core';\n\n@Component({\n  selector: 'tb-context-menu-item',\n  templateUrl: './context-menu-item.component.html',\n  styles: [`:host {\n    cursor: pointer;\n    display: block;\n    padding: 4px 10px;\n    user-select: none;\n\n    :hover:not([ng-reflect-is-separator]) {\n      background-color: lighten($color-background, 5%);\n    }\n  }`]\n})\nexport class ContextMenuItemComponent {\n  @Input()\n  isSeparator: boolean;\n\n  @Input()\n  isCustomEvent: boolean;\n\n  constructor(public el: ElementRef) {\n    const elem = el.nativeElement;\n\n    elem.onclick = (event: any) => {\n      if (this.isSeparator || this.isCustomEvent) {\n        this.killEvent(event);\n        return;\n      }\n    };\n\n    elem.oncontextmenu = (event: any) => {\n      this.killEvent(event);\n    };\n  }\n\n  private killEvent(event: any) {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n}\n\n","<div class=\"modal-container\"\n  [ngClass]=\"{ animated: animate, 'modal-open': isOpen }\"\n  (click)=\"close(true)\"\n  (contextmenu)=\"$event.stopPropagation(); $event.preventDefault()\">\n\n  <div class=\"modal\"\n    [ngClass]=\"{ wide: wide, animated: animate, 'modal-closed': !isOpen }\"\n    (click)=\"filterClick($event)\">\n    <div class=\"title\" *ngIf=\"modalTitle\">\n      <h2>\n        {{ modalTitle }}\n        <span class=\"right\" (click)=\"close()\">\n          <i class=\"icon icon-cancel\"></i>\n        </span>\n      </h2>\n    </div>\n\n    <div class=\"body\">\n      <ng-content></ng-content>\n    </div>\n  </div>\n</div>\n\n","import {\n  Component,\n  Input,\n  OnInit,\n  ContentChild\n} from '@angular/core';\nimport { Location } from '@angular/common';\n\nimport { ModalService } from './modal.service';\n\n@Component({\n  selector: 'tb-modal',\n  templateUrl: './modal.component.html',\n  // tslint:disable-next-line\n  host: {\n    '(document:keyup.enter)': 'keyup($event)',\n    '(document:keyup.escape)': 'keyup($event)'\n  }\n})\nexport class ModalComponent implements OnInit {\n  // tslint:disable-next-line\n  @Input('modal-id') modalId = '';\n  // tslint:disable-next-line\n  @Input('modal-title') modalTitle = '';\n  @Input() blocking = false;\n  @Input() wide = false;\n\n  @ContentChild('focusMe', { static: false }) focusElement: any;\n  @ContentChild('defaultAction', { static: false }) defaultActionElement: any;\n\n  isOpen = false;\n  animate = true;\n\n  constructor(public modalService: ModalService, private location: Location) {\n  }\n\n  ngOnInit() {\n    this.modalService.registerModal(this);\n  }\n\n  close(checkBlocking = false): void {\n    this.modalService.close(this.modalId, checkBlocking);\n\n    const path = this.location.path().split('/');\n    path.length -= 1;\n\n    this.location.go(path.join('/'))\n  }\n\n  filterClick(event: Event): void {\n    // tslint:disable-next-line\n    event = event || window.event;\n\n    // Prevent click from propagating to modal container\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    }\n  }\n\n  keyup(event: KeyboardEvent): void {\n    if (event.key === 'Escape' && this.isOpen) {\n      this.close(true);\n    }\n\n    if (event.key === 'Enter') {\n      this.clickDefaultAction();\n    }\n  }\n\n  private clickDefaultAction(): void {\n    if (this.defaultActionElement) {\n      this.defaultActionElement.nativeElement.click();\n    }\n  }\n}\n\n","<div class=\"task\"\n     [ngClass]=\"{ 'filtered': taskData.filtered,\n                  'hide': taskData.hideFiltered }\"\n     [style.backgroundColor]=\"taskData.color\"\n     [style.color]=\"getTextColor(taskData.color)\">\n  <h4 class=\"drag-handle\">\n    <span class=\"icon\"\n          [style.color]=\"getTextColor(taskData.color)\"\n          [ngClass]=\"{ 'icon-minus-squared-alt': !isCollapsed,\n                        'icon-plus-squared-alt': isCollapsed }\"\n          [title]=\"isCollapsed ? strings['boards_expandTask']\n                               : strings['boards_collapseTask']\"\n          (click)=\"isCollapsed = !isCollapsed\"></span>\n\n    {{ taskData.title }}\n\n    <span *ngIf=\"taskData.points > 0\" class=\"badge right\"\n          [title]=\"strings['boards_taskPoints'] \">{{ taskData.points }}</span>\n  </h4>\n\n  <div class=\"description\" *ngIf=\"!isCollapsed\" [innerHtml]=\"taskData.html\">\n  </div>\n\n  <div class=\"stats\">\n    <span *ngIf=\"userOptions.show_assignee\">\n      {{ strings['boards_taskAssignedTo'] }}:\n\n      <span *ngFor=\"let assignee of taskData.assignees\">\n        {{ assignee.username }}\n      </span>\n\n      <span *ngIf=\"!taskData.assignees || !taskData.assignees.length\">\n        {{ strings['boards_taskUnassigned'] }}\n      </span>\n    </span>\n\n    <span class=\"right\">\n      <span *ngIf=\"taskData.due_date\" [class.overdue]=\"isOverdue\"\n            [class.near-due]=\"isNearlyDue\">\n        {{ strings['boards_taskDue'] }}: {{ taskData.due_date | date }}\n      </span>\n\n      <span *ngIf=\"taskData.comments.length\" class=\"icon icon-chat-empty\"\n            [title]=\"taskData.comments.length + ' ' +\n                      strings['boards_taskComments']\"></span>\n\n      <span *ngIf=\"taskData.attachments.length\" class=\"icon icon-attach\"\n            [title]=\"taskData.attachments.length + ' ' +\n                      strings['boards_taskAttachments']\"></span>\n\n      <span *ngFor=\"let category of taskData.categories\" class=\"category\"\n            [title]=\"strings['boards_taskCategory']\">\n        {{ category.name }}\n      </span>\n    </span>\n\n    <div *ngIf=\"percentComplete\" [style]=\"getPercentStyle()\"\n         [title]=\"getPercentTitle()\"></div>\n  </div>\n\n  <tb-context-menu>\n    <tb-context-menu-item (click)=\"viewTask()\">\n      {{ strings['boards_viewTask'] }}\n    </tb-context-menu-item>\n\n    <tb-context-menu-item (click)=\"editTask()\">\n      {{ strings['boards_editTask'] }}\n    </tb-context-menu-item>\n\n    <tb-context-menu-item (click)=\"removeTask()\">\n      {{ strings['boards_removeTask'] }}\n    </tb-context-menu-item>\n\n    <div *ngIf=\"boardsList && boardsList.length > 1\">\n      <tb-context-menu-item isSeparator=\"true\"></tb-context-menu-item>\n\n      <tb-context-menu-item isCustomEvent=\"true\">\n        {{ strings['boards_copyTaskTo'] }}:\n\n        <i class=\"icon icon-help-circled\"\n           attr.data-help=\"{{ strings['boards_copyMoveHelp'] }}\"></i>\n\n        <select id=\"boardsList{{ taskData.id }}{{\n                    strings['boards_copyTaskTo'].split(' ')[0] }}\"\n                (change)=\"copyTaskToBoard($event)\">\n          <option value=\"0\">{{ strings['boards_selectBoard'] }}</option>\n\n          <ng-container *ngFor=\"let board of boardsList\">\n            <option *ngIf=\"board.id !== activeBoard.id\" [value]=\"board.id\">\n              {{ board.name }}\n            </option>\n          </ng-container>\n\n        </select>\n      </tb-context-menu-item>\n\n      <tb-context-menu-item isCustomEvent=\"true\">\n        {{ strings['boards_moveTaskTo'] }}:\n\n        <i class=\"icon icon-help-circled\"\n           attr.data-help=\"{{ strings['boards_copyMoveHelp'] }}\"></i>\n\n        <select id=\"boardsList{{ taskData.id }}{{\n                    strings['boards_moveTaskTo'].split(' ')[0] }}\"\n                (change)=\"moveTaskToBoard($event)\">\n          <option value=\"0\">{{ strings['boards_selectBoard'] }}</option>\n\n          <ng-container *ngFor=\"let board of boardsList\">\n            <option *ngIf=\"board.id !== activeBoard.id\" [value]=\"board.id\">\n              {{ board.name }}\n            </option>\n          </ng-container>\n\n        </select>\n      </tb-context-menu-item>\n    </div>\n\n    <div *ngIf=\"activeBoard.columns.length > 1\">\n      <tb-context-menu-item isSeparator=\"true\"></tb-context-menu-item>\n\n      <tb-context-menu-item isCustomEvent=\"true\">\n        {{ strings['boards_moveTask'] }}:\n\n        <select id=\"columnsList{{ taskData.id }}\" (change)=\"changeTaskColumn($event)\">\n          <option value=\"0\">{{ strings['boards_selectColumn'] }}</option>\n\n          <option *ngFor=\"let col of activeBoard.columns\" [value]=\"col.id\">\n          {{ col.name }}\n          </option>\n        </select>\n      </tb-context-menu-item>\n    </div>\n\n    <tb-context-menu-item isSeparator=\"true\"></tb-context-menu-item>\n\n    <tb-context-menu-item (click)=\"addTask()\">\n      {{ strings['boards_addTask'] }}\n    </tb-context-menu-item>\n\n  </tb-context-menu>\n</div>\n\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nimport {\n  ApiResponse,\n  Board,\n  Notification,\n  Task,\n  UserOptions\n} from '../../shared/models';\nimport {\n  AuthService,\n  ModalService,\n  NotificationsService,\n  StringsService\n} from '../../shared/services';\nimport { BoardService } from '../board.service';\n\n@Component({\n  selector: 'tb-task',\n  templateUrl: './task.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TaskDisplayComponent implements OnInit, OnDestroy {\n  private subs: any[];\n\n  public isOverdue: boolean;\n  public isNearlyDue: boolean;\n  public strings: any;\n  public percentComplete: number;\n  public activeBoard: Board;\n  public userOptions: UserOptions;\n  public boardsList: Array<Board>;\n\n  // tslint:disable-next-line\n  @Input('task') taskData: Task;\n  // tslint:disable-next-line\n  @Input('add-task') addTask: Function;\n  // tslint:disable-next-line\n  @Input('edit-task') editTask: Function;\n  // tslint:disable-next-line\n  @Input('view-task') viewTask: Function;\n  // tslint:disable-next-line\n  @Input('remove-task') removeTask: Function;\n  // tslint:disable-next-line\n  @Input('collapse') isCollapsed: boolean;\n\n  // tslint:disable-next-line\n  @Output('on-update-boards') onUpdateBoards: EventEmitter<any>;\n\n  constructor(public auth: AuthService,\n              private sanitizer: DomSanitizer,\n              public boardService: BoardService,\n              public modal: ModalService,\n              private notes: NotificationsService,\n              public stringsService: StringsService) {\n    this.onUpdateBoards = new EventEmitter<any>();\n    this.percentComplete = 0;\n    this.subs = [];\n\n    let sub = stringsService.stringsChanged.subscribe(newStrings => {\n      this.strings = newStrings;\n    });\n    this.subs.push(sub);\n\n    sub = auth.userChanged.subscribe(() => {\n      this.userOptions = auth.userOptions;\n    });\n    this.subs.push(sub);\n\n    sub = boardService.activeBoardChanged.subscribe(newBoard => {\n      this.activeBoard = newBoard;\n    });\n    this.subs.push(sub);\n  }\n\n  ngOnInit() {\n    this.checkDueDate();\n    this.convertTaskDescription();\n  }\n\n  ngOnDestroy() {\n    this.subs.forEach(sub => sub.unsubscribe());\n  }\n\n  getPercentStyle() {\n    return this.sanitizer.bypassSecurityTrustStyle(\n      'padding: 0; height: 5px; background-color: rgba(0, 0, 0, .4); ' +\n      'width: ' + (this.percentComplete * 100) + '%;');\n  }\n\n  getPercentTitle() {\n    return this.strings.boards_task + ' ' +\n      (this.percentComplete * 100).toFixed(0) + '% ' +\n      this.strings.boards_taskComplete;\n  }\n\n  // Expects a color in full HEX with leading #, e.g. #ffffe0\n  getTextColor(color: string): string {\n    const r = parseInt(color.substr(1, 2), 16);\n    const g = parseInt(color.substr(3, 2), 16);\n    const b = parseInt(color.substr(5, 2), 16);\n    const yiq = ((r * 299) + (g * 587) + (b * 114)) / 1000;\n\n    return yiq >= 140 ? '#333333' : '#efefef';\n  }\n\n  changeTaskColumn(event: any) {\n    if (event.target.tagName !== 'SELECT') {\n      return;\n    }\n    event.target.parentElement.parentElement.click();\n\n    const select = document.getElementById('columnsList' + this.taskData.id) as\n      HTMLSelectElement;\n    const id = +(select[select.selectedIndex] as HTMLOptionElement).value;\n\n    if (id === 0) {\n      return;\n    }\n\n    this.taskData.column_id = id;\n\n    this.boardService.updateTask(this.taskData)\n      .subscribe((response: ApiResponse) => {\n        response.alerts.forEach(note => this.notes.add(note));\n\n        if (response.status === 'success') {\n          this.boardService.updateActiveBoard(response.data[2][0]);\n        }\n      });\n  }\n\n  copyTaskToBoard(event: any) {\n    if (event.target.tagName !== 'SELECT') {\n      return;\n    }\n    event.target.parentElement.parentElement.click();\n\n    const select = document.getElementById('boardsList' + this.taskData.id +\n      this.strings.boards_copyTaskTo.split(' ')[0]) as HTMLSelectElement;\n\n    const newBoardId = +(select[select.selectedIndex] as HTMLOptionElement).value;\n    const taskData = { ...this.taskData };\n    const boardData = this.boardsList.find(board => board.id === newBoardId);\n\n    taskData.column_id = boardData.columns[0].id;\n\n    this.boardService.addTask(taskData as any)\n      .subscribe((response: ApiResponse) => {\n        if (response.status === 'success') {\n          this.notes.add(\n            new Notification('success',\n              this.strings.boards_task +\n              ' ' + taskData.title + ' ' +\n              this.strings.boards_taskCopied +\n              ' ' + boardData.name));\n          this.onUpdateBoards.emit();\n\n          return;\n        }\n\n        response.alerts.forEach(note => this.notes.add(note));\n      });\n  }\n\n  moveTaskToBoard(event: any) {\n    if (event.target.tagName !== 'SELECT') {\n      return;\n    }\n    event.target.parentElement.parentElement.click();\n\n    const select = document.getElementById('boardsList' + this.taskData.id +\n      this.strings.boards_moveTaskTo.split(' ')[0]) as HTMLSelectElement;\n\n    const newBoardId = +(select[select.selectedIndex] as HTMLOptionElement).value;\n    let boardData: Board;\n\n    this.boardsList.forEach(board => {\n      if (board.id === newBoardId) {\n        this.taskData.column_id = board.columns[0].id;\n        boardData = board;\n      }\n    });\n\n    this.boardService.updateTask(this.taskData)\n      .subscribe((response: ApiResponse) => {\n        if (response.status === 'success') {\n          this.notes.add(\n            new Notification('success',\n              this.strings.boards_task +\n              ' ' + this.taskData.title + ' ' +\n              this.strings.boards_taskMoved +\n              ' ' + boardData.name));\n          this.onUpdateBoards.emit();\n\n          return;\n        }\n\n        response.alerts.forEach(note => this.notes.add(note));\n      });\n  }\n\n  private convertTaskDescription() {\n    if (!this.taskData || !this.taskData.description) {\n      return;\n    }\n\n    this.boardService\n      .convertMarkdown(this.taskData.description, this.markedCallback, true)\n      .then(data => {\n        data.html.replace(/(\\{)([^}]+)(\\})/g, '{{ \"{\" }}$2{{ \"}\"  }}');\n\n        if (data.counts.total) {\n          this.percentComplete = data.counts.complete / data.counts.total;\n        }\n\n        this.taskData.html = this.sanitizer.bypassSecurityTrustHtml(data.html);\n      });\n  }\n\n  private checkDueDate() {\n    if (!this.taskData || this.taskData.due_date === '') {\n      return;\n    }\n\n    const dueDate = new Date(this.taskData.due_date);\n\n    if (isNaN(dueDate.valueOf())) {\n      return;\n    }\n\n    const millisecondsPerDay = (1000 * 3600 * 24);\n    const today = new Date();\n    const timeDiff = today.getTime() - dueDate.getTime();\n    const daysDiff = Math.ceil(timeDiff / millisecondsPerDay);\n\n    if (daysDiff > 0) {\n      // past due date\n      this.isOverdue = true;\n    }\n\n    if (daysDiff <= 0 && daysDiff > -3) {\n      this.isNearlyDue = true;\n    }\n  }\n\n  // Needs anonymous function for proper `this` context.\n  private markedCallback = (_: any, text: string) => {\n    this.activeBoard.issue_trackers.forEach(tracker => {\n      const re = new RegExp(tracker.regex, 'ig');\n      const replacements = new Array<any>();\n\n      let result = re.exec(text);\n\n      while (result !== null) {\n        const link = '<a href=\"' + tracker.url.replace(/%BUGID%/g, result[1]) +\n          '\" target=\"tb_external\" rel=\"noreferrer\">' + result[0] + '</a>';\n\n        replacements.push({ str: result[0], link });\n        result = re.exec(text);\n      }\n\n      for (let i = replacements.length - 1; i >= 0; --i) {\n        text = text.replace(replacements[i].str, replacements[i].link);\n      }\n    });\n\n    return text;\n  }\n}\n\n","<h3 [class.near-limit]=\"columnData && columnData.hasTaskLimit() &&\n                        columnData?.task_limit - columnData?.tasks.length === 1\"\n    [class.limit-reached]=\"columnData && columnData.hasTaskLimit() &&\n                           columnData?.task_limit - columnData?.tasks.length <= 0\">\n\n  <span class=\"icon icon-minus-squared-alt\"\n        [title]=\"strings['boards_collapseAllTasks']\"\n        *ngIf=\"!collapseTasks\" (click)=\"toggleTaskCollapse()\"></span>\n\n  <span class=\"icon icon-plus-squared-alt\"\n        [title]=\"strings['boards_expandAllTasks']\"\n        *ngIf=\"collapseTasks\" (click)=\"toggleTaskCollapse()\"></span>\n\n  {{ columnData ? columnData.name : '' }}\n\n  <span class=\"count\">\n    {{ columnData?.tasks.length }}\n    <div *ngIf=\"columnData && columnData.hasTaskLimit()\">\n      {{ ' / ' + columnData.task_limit }}\n    </div>\n  </span>\n\n  <span class=\"badge\" [title]=\"strings['boards_tasksInColumn']\">\n    {{ columnData && columnData.tasks && columnData.tasks.length || 0 }}\n  </span>\n\n  <span class=\"icon icon-angle-double-up\"\n        [title]=\"strings['boards_expandColumn']\"\n        (click)=\"toggleCollapsed()\"></span>\n\n  <span class=\"right icon icon-angle-double-down\"\n        [title]=\"strings['boards_collapseColumn']\"\n        (click)=\"toggleCollapsed()\"></span>\n\n  <span class=\"count-editor\" *ngIf=\"activeUser && activeUser.isAnyAdmin()\">\n    <i class=\"icon icon-hashtag\" [title]=\"strings['boards_editTaskLimit']\"\n       (click)=\"beginLimitEdit()\"></i>\n\n    <div class=\"limit-editor\" *ngIf=\"showLimitEditor\">\n      <input type=\"number\" min=\"0\" [title]=\"'0 = ' + strings['boards_noLimit']\"\n             [(ngModel)]=\"taskLimit\">\n\n      <i class=\"icon icon-cancel right\" [title]=\"strings['boards_limitCancel']\"\n         (click)=\"cancelLimitChanges()\"></i>\n\n      <i class=\"icon icon-floppy primary right\"\n         [title]=\"strings['boards_limitSave']\" (click)=\"saveLimitChanges()\"></i>\n    </div>\n  </span>\n\n  <span class=\"sort-by\">\n    {{ strings['sortBy'] }}:\n\n    <select [(ngModel)]=\"sortOption\" (change)=\"sortTasks()\">\n      <option value=\"pos\">\n      {{ strings['boards_sortByPosition'] }}\n      </option>\n\n      <option value=\"due\">\n      {{ strings['boards_sortByDueDate'] }}\n      </option>\n\n      <option value=\"pnt\">\n      {{ strings['boards_sortByPoints'] }}\n      </option>\n    </select>\n  </span>\n</h3>\n\n<div class=\"quick-add\">\n  <input type=\"text\" [placeholder]=\"strings['boards_quickAdd']\"\n         [(ngModel)]=\"quickAdd.title\" (keyup.enter)=\"quickAddClicked($event)\">\n\n  <button class=\"flat\" [title] = \"strings['boards_addTask']\"\n          (click)=\"quickAddClicked($event)\">\n    <i class=\"icon icon-plus\"></i>\n  </button>\n</div>\n\n<div class=\"tasks\" [id]=\"'col' + columnData.id\" *ngIf=\"columnData\" cdkDropList\n     [cdkDropListData]=\"columnData.tasks\"\n     (cdkDropListDropped)=\"drop($event)\">\n\n  <tb-task class=\"task-container\" [id]=\"task.id\" cdkDrag\n           *ngFor=\"let task of columnData.tasks\"\n           [task]=\"task\" [add-task]=\"getShowModalFunction()\"\n           [edit-task]=\"getShowModalFunction(task.id)\"\n           [view-task]=\"getShowViewModalFunction(task.id)\"\n           [remove-task]=\"getRemoveTaskFunction(task.id)\"\n           [collapse]=\"collapseTasks\"\n           (on-update-boards)=\"callBoardUpdate();\"\n           (dblclick)=\"$event.preventDefault();getShowViewModalFunction(task.id)()\">\n  </tb-task>\n</div>\n\n<tb-context-menu>\n  <tb-context-menu-item (click)=\"showModal()\">\n    {{ strings['boards_addTask'] }}\n  </tb-context-menu-item>\n</tb-context-menu>\n\n<tb-modal class=\"view-modal\" *ngIf=\"activeBoard && columnData\" wide=\"true\"\n          modal-title=\"{{ strings['boards_viewTask'] }} -\n                       {{ viewModalProps.title }}\"\n          modal-id=\"{{ MODAL_VIEW_ID + (columnData ? columnData.id : '') }}\">\n  <div *ngIf=\"viewModalProps.points\">\n    <span class=\"badge\">{{ viewModalProps.points }}</span>\n  </div>\n\n  <div class=\"details\" [style.background-color]=\"viewModalProps.color\">\n    <div class=\"date\" *ngIf=\"viewModalProps.due_date\"\n         [class.overdue]=\"isOverdue\" [class.near-due]=\"isNearlyDue\">\n      {{ strings['boards_taskDue'] }} {{ viewModalProps.due_date | date }}\n    </div>\n\n    <div class=\"description\" *ngIf=\"viewModalProps.description.length\"\n         [innerHtml]=\"viewModalProps.html\">\n    </div>\n\n    <div class=\"stats\">\n      <div>\n        <strong>{{ strings['boards_taskAssignees'] }}</strong>\n\n        <span *ngFor=\"let user of viewModalProps.assignees\">\n          {{ user.username }}\n        </span>\n\n        <span *ngIf=\"viewModalProps.assignees.length === 0\">\n          {{ strings['boards_filterByUnassigned'] }}\n        </span>\n      </div>\n\n      <div>\n        <strong>{{ strings['boards_taskCategories'] }}</strong>\n\n        <span *ngFor=\"let cat of viewModalProps.categories\">\n          {{ cat.name }}\n        </span>\n\n        <span *ngIf=\"viewModalProps.categories.length === 0\">\n          {{ strings['boards_filterByUncategorized'] }}\n        </span>\n      </div>\n\n      <div>\n        <strong>{{ strings['boards_taskCurrentColumn'] }}</strong>\n\n        {{ columnData.name }}\n      </div>\n    </div>\n  </div>\n\n  <div class=\"quick-actions\">\n    <button class=\"flat\" (click)=\"this.modal.close(MODAL_VIEW_ID +\n                                    (columnData ? columnData.id : ''));\n                                  showModal(viewModalProps.id)\">\n      {{ strings['boards_editTask'] }}\n    </button>\n\n    <button class=\"flat\" (click)=\"getRemoveTaskFunction(viewModalProps.id)()\">\n      {{ strings['boards_removeTask'] }}\n    </button>\n  </div>\n\n  <div *ngIf=\"viewModalProps.attachments.length\">\n    <h3>{{ strings['boards_taskAttachments'] }}</h3>\n\n    <div class=\"list-group\">\n      <div class=\"list-group-item\"\n           *ngFor=\"let item of viewModalProps.attachments\">\n        {{ item.filename }}\n\n        <div class=\"detail small\">\n          {{ strings['boards_taskUploadedBy'] }}:\n          {{ userName(item.user_id) }}\n\n          {{ strings['boards_taskUploadedOn'] }}\n          {{ item.timestamp * 1000 | date:'medium' }}\n        </div>\n\n        <div class=\"pull-right\">\n          <i class=\"icon icon-eye\" (click)=\"viewFile(item.diskfilename)\"\n             [title]=\"strings['boards_taskView'] + ' ' + item.filename\"></i>\n\n          <a [href]=\"getUrl(item.diskfilename)\" download=\"{{ item.filename }}\">\n            <i class=\"icon icon-download\"\n               [title]=\"strings['boards_taskDownload'] + ' ' +\n                        item.filename\"></i>\n          </a>\n\n          <i class=\"icon icon-trash-empty color-secondary\"\n             [title]=\"strings['settings_remove'] + ' ' + item.filename\"\n             (click)=\"attachmentToRemove = item;\n                      modal.open(MODAL_CONFIRM_ATTACHMENT_ID +\n                         (columnData ? columnData.id : ''))\"></i>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"file-upload\">\n    <h3>{{ strings['boards_taskAddAttachment'] }}</h3>\n\n    <input type=\"file\" class=\"fileuploadinput\" #fileupload\n           (change)=\"fileChange(fileupload.files[0])\">\n\n    <button (click)=\"addFile()\"\n            [disabled]=\"!fileupload.files[0] || fileUploading\">\n      <i class=\"icon icon-upload\"></i>\n\n      {{ strings['boards_taskUpload'] }}\n    </button>\n  </div>\n\n  <div *ngIf=\"viewModalProps.comments.length\">\n    <h3>\n      {{ strings['boards_taskComments'] }}\n\n      <div class=\"right\">\n        <select [(ngModel)]=\"commentOrder\" (change)=\"sortComments()\">\n          <option value=\"oldest\">Oldest First</option>\n          <option value=\"newest\">Newest First</option>\n        </select>\n      </div>\n    </h3>\n\n    <div class=\"comment\" *ngFor=\"let comment of viewModalProps.comments\">\n      <div [innerHTML]=\"comment.html\" *ngIf=\"!comment.isEdit\"></div>\n\n      <textarea *ngIf=\"comment.isEdit\" [(ngModel)]=\"commentEdit.text\"\n                (keyup.control.enter)=\"comment.isEdit = false;editComment()\"\n                (keyup.enter)=\"preventEnter($event)\"></textarea>\n\n      <div class=\"byline\">\n        {{ comment.is_edited ? strings['boards_editedBy']\n           : strings['boards_postedBy'] }}\n\n        {{ getUserName(comment.user_id) }} &mdash;\n\n        {{ comment.timestamp | date:'medium' }}\n      </div>\n\n      <div class=\"actions\" *ngIf=\"canAdminComment(comment)\">\n        <i class=\"icon icon-cancel\" [title]=\"strings['cancel']\"\n           *ngIf=\"comment.isEdit\" (click)=\"comment.isEdit = false\"></i>\n        <i class=\"icon icon-floppy color-primary\" [title]=\"strings['save']\"\n           *ngIf=\"comment.isEdit\" (click)=\"comment.isEdit = false;editComment()\"\n        ></i>\n\n        <i class=\"icon icon-edit color-primary\"\n           [title]=\"strings['boards_taskEditComment']\" *ngIf=\"!comment.isEdit\"\n           (click)=\"comment.isEdit = true;beginEditComment(comment)\"></i>\n        <i class=\"icon icon-trash-empty color-secondary\"\n           [title]=\"strings['boards_taskRemoveComment']\"\n           (click)=\"commentToRemove=comment;\n                    modal.open(MODAL_CONFIRM_COMMENT_ID +\n                    (columnData ? columnData.id : ''))\"></i>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"clearfix\">\n    <h3>{{ strings['boards_taskAddComment'] }}</h3>\n\n    <textarea rows=\"5\" [(ngModel)]=\"newComment\"\n              (keyup.control.enter)=\"addComment()\"\n              (keyup.enter)=\"preventEnter($event)\"></textarea>\n\n    <button class=\"right\" (click)=\"addComment()\"\n            [disabled]=\"newComment?.length === 0\">\n      <i class=\"icon icon-comment-empty\"></i>\n\n      {{ strings['boards_taskAddComment'] }}\n    </button>\n  </div>\n\n  <div class=\"activity\" [class.collapsed]=\"collapseActivity\"\n       *ngIf=\"showActivity\">\n    <div class=\"title\">\n      <h2>\n        {{ strings['boards_taskActivity'] }}\n\n        <span class=\"right\">\n          <i class=\"icon icon-angle-double-down\"\n             *ngIf=\"!collapseActivity\"\n             (click)=\"collapseActivity = true\"></i>\n\n          <i class=\"icon icon-angle-double-up\"\n             *ngIf=\"collapseActivity\"\n             (click)=\"collapseActivity = false\"></i>\n        </span>\n      </h2>\n    </div>\n\n    <div class=\"log-items\" *ngIf=\"!collapseActivity\">\n      <div *ngFor=\"let item of viewTaskActivities\" class=\"log-item\">\n        {{ item.text }}\n\n        <span>{{ item.timestamp * 1000 | date:'medium' }}</span>\n      </div>\n    </div>\n\n  </div>\n</tb-modal>\n\n<tb-modal *ngIf=\"activeBoard && columnData\"\n          modal-title=\"{{ modalProps.id === 0 ? strings['boards_addTask']\n                          : strings['boards_editTask'] }}\"\n          modal-id=\"{{ MODAL_ID + (columnData ? columnData.id : '') }}\">\n  <label>\n    {{ strings['boards_taskTitle'] }}\n\n    <input type=\"text\" name=\"title\" #focusMe [(ngModel)]=\"modalProps.title\"\n           [placeholder]=\"strings['boards_taskTitlePlaceholder']\"\n           (keyup.control.enter)=\"modalProps.id === 0 ? addTask()\n                                  : updateTask()\"\n           (keyup.enter)=\"preventEnter($event)\">\n  </label>\n\n  <label>\n    {{ strings['boards_taskDescription'] }}\n\n    <textarea name=\"description\" rows=\"5\" [(ngModel)]=\"modalProps.description\"\n              [placeholder]=\"strings['boards_taskDescriptionPlaceholder']\"\n              (keyup.control.enter)=\"modalProps.id === 0 ? addTask()\n                                     : updateTask()\"\n              (keyup.enter)=\"preventEnter($event)\"></textarea>\n  </label>\n\n  <label>\n    {{ strings['boards_taskAssignees'] }}\n\n    <select name=\"assignees\" multiple [(ngModel)]=\"modalProps.assignees\">\n      <option *ngFor=\"let user of activeBoard.users\" [ngValue]=\"user\">\n        {{ user.username }}\n      </option>\n    </select>\n  </label>\n\n  <label *ngIf=\"activeBoard.categories.length\">\n    {{ strings['boards_taskCategories'] }}\n\n    <select name=\"categories\" multiple [ngModel]=\"modalProps.categories\"\n            (ngModelChange)=\"updateTaskColorByCategory($event)\">\n      <option *ngFor=\"let category of activeBoard.categories\"\n              [ngValue]=\"category\">\n        {{ category.name }}\n      </option>\n    </select>\n  </label>\n\n  <div class=\"half\">\n    <label>\n      {{ strings['boards_taskColumn'] }}\n\n      <select name=\"column\" [(ngModel)]=\"modalProps.column_id\">\n        <option *ngFor=\"let column of activeBoard.columns\"\n                [ngValue]=\"column.id\">\n          {{ column.name }}\n        </option>\n      </select>\n    </label>\n\n    <label>\n      {{ strings['boards_taskColor'] }}\n\n      <input type=\"color\" [(ngModel)]=\"modalProps.color\">\n    </label>\n  </div>\n\n  <div class=\"half\">\n    <label>\n      {{ strings['boards_taskDateDue'] }}\n\n      <input type=\"date\" [(ngModel)]=\"modalProps.due_date\">\n    </label>\n\n    <label>\n      {{ strings['boards_taskPoints'] }}\n\n      <input type=\"number\" [(ngModel)]=\"modalProps.points\">\n    </label>\n  </div>\n\n  <div class=\"buttons\">\n    <button #defaultAction *ngIf=\"modalProps.id === 0\" (click)=\"addTask()\"\n            [disabled]=\"saving\">\n      <i class=\"icon icon-plus\"></i>\n\n      {{ strings['boards_addTask'] }}\n    </button>\n\n    <button #defaultAction *ngIf=\"modalProps.id !== 0\" (click)=\"updateTask()\"\n            [disabled]=\"saving\">\n      <i class=\"icon icon-floppy\"></i>\n\n      {{ strings['boards_saveTask'] }}\n    </button>\n\n    <button class=\"flat\" (click)=\"modal.close(MODAL_ID + (columnData\n                                    ? columnData.id : ''))\">\n      {{ strings['cancel'] }}\n    </button>\n  </div>\n</tb-modal>\n\n<tb-modal modal-title=\"{{ strings['boards_confirmRemoveTask'] }}\"\n          blocking=\"true\"\n          modal-id=\"{{ MODAL_CONFIRM_ID + (columnData ? columnData.id : '') }}\">\n  <div class=\"center\">\n    {{ strings['boards_confirmWarning'] }}<br>\n\n    {{ strings['boards_confirmContinue'] }}\n  </div>\n\n  <div class=\"buttons\">\n    <button class=\"flat\" (click)=\"modal.close(MODAL_CONFIRM_ID +(columnData\n                                    ? columnData.id : ''));removeTask()\">\n      {{ strings['yes'] }}\n    </button>\n\n    <button #defaultAction #focusMe\n            (click)=\"modal.close(MODAL_CONFIRM_ID + (columnData\n                        ? columnData.id : ''))\">\n      {{ strings['no'] }}\n    </button>\n  </div>\n</tb-modal>\n\n<tb-modal modal-title=\"{{ strings['boards_confirmRemoveAttachment'] }}\"\n          blocking=\"true\"\n          modal-id=\"{{ MODAL_CONFIRM_ATTACHMENT_ID + (columnData\n                          ? columnData.id : '') }}\">\n  <div class=\"center\">\n    {{ strings['boards_confirmWarningAttachment'] }}<br>\n\n    {{ strings['boards_confirmContinue'] }}\n  </div>\n\n  <div class=\"buttons\">\n    <button class=\"flat\" (click)=\"modal.close(MODAL_CONFIRM_ATTACHMENT_ID +\n                                    (columnData ? columnData.id : ''));\n                                  removeAttachment()\">\n      {{ strings['yes'] }}\n    </button>\n\n    <button #defaultAction #focusMe\n            (click)=\"modal.close(MODAL_CONFIRM_ATTACHMENT_ID + (columnData\n                  ? columnData.id : ''))\">\n      {{ strings['no'] }}\n    </button>\n  </div>\n</tb-modal>\n\n<tb-modal modal-title=\"{{ strings['boards_confirmRemoveComment'] }}\"\n          blocking=\"true\"\n          modal-id=\"{{ MODAL_CONFIRM_COMMENT_ID + (columnData\n                          ? columnData.id : '') }}\">\n  <div class=\"center\">\n    {{ strings['boards_confirmWarningComment'] }}<br>\n\n    {{ strings['boards_confirmContinue'] }}\n  </div>\n\n  <div class=\"buttons\">\n    <button class=\"flat\" (click)=\"modal.close(MODAL_CONFIRM_COMMENT_ID +\n                                    (columnData ? columnData.id : ''));\n                                  removeComment()\">\n      {{ strings['yes'] }}\n    </button>\n\n    <button #defaultAction #focusMe\n            (click)=\"modal.close(MODAL_CONFIRM_COMMENT_ID + (columnData\n                        ? columnData.id : ''))\">\n      {{ strings['no'] }}\n    </button>\n  </div>\n</tb-modal>\n\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Location } from '@angular/common';\nimport {\n  CdkDragDrop,\n  moveItemInArray,\n  transferArrayItem\n} from '@angular/cdk/drag-drop';\n\nimport {\n  ApiResponse,\n  ActivitySimple,\n  Attachment,\n  Board,\n  Category,\n  Column,\n  Comment,\n  Notification,\n  Task,\n  User,\n  UserOptions\n} from '../../shared/models';\nimport {\n  AuthService,\n  ModalService,\n  NotificationsService,\n  StringsService\n} from '../../shared/services';\nimport { BoardService } from '../board.service';\n\n@Component({\n  selector: 'tb-column',\n  templateUrl: './column.component.html',\n})\nexport class ColumnDisplayComponent implements OnInit, OnDestroy {\n  public moveItemInArray: any;\n  public transferArrayItem: any;\n  public fileUpload: any;\n\n  private subs = [];\n\n  public viewTaskActivities: ActivitySimple[];\n\n  public fileUploading: boolean;\n  public showActivity: boolean;\n  public collapseActivity: boolean;\n  public isOverdue: boolean;\n  public isNearlyDue: boolean;\n  public showLimitEditor: boolean;\n  public collapseTasks: boolean;\n  public saving: boolean;\n\n  public taskLimit: number;\n  public taskToRemove: number;\n\n  public newComment: string;\n  public commentOrder: string;\n  public sortOption: string;\n\n  public templateElement: any;\n  public strings: any;\n\n  public commentEdit: Comment;\n  public commentToRemove: Comment;\n  public attachmentToRemove: Attachment;\n  public viewModalProps: Task;\n  public modalProps: Task;\n  public userOptions: UserOptions;\n  public activeUser: User;\n  public activeBoard: Board;\n  public quickAdd: Task;\n\n  public MODAL_ID: string;\n  public MODAL_VIEW_ID: string;\n  public MODAL_CONFIRM_ID: string;\n  public MODAL_CONFIRM_ATTACHMENT_ID: string;\n  public MODAL_CONFIRM_COMMENT_ID: string;\n\n  // tslint:disable-next-line\n  @Input('column') columnData: Column;\n\n  // tslint:disable-next-line\n  @Output('on-update-boards')\n  onUpdateBoards: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(public elRef: ElementRef,\n              private auth: AuthService,\n              private location: Location,\n              public notes: NotificationsService,\n              public modal: ModalService,\n              public stringsService: StringsService,\n              public boardService: BoardService,\n              private sanitizer: DomSanitizer) {\n    this.templateElement = elRef.nativeElement;\n    this.collapseTasks = false;\n    this.commentOrder = 'oldest';\n    this.sortOption = 'pos';\n\n    this.MODAL_ID = 'add-task-form-';\n    this.MODAL_VIEW_ID = 'view-task-form-';\n    this.MODAL_CONFIRM_ID = 'task-remove-confirm';\n    this.MODAL_CONFIRM_ATTACHMENT_ID = 'attachment-remove-confirm';\n    this.MODAL_CONFIRM_COMMENT_ID = 'comment-remove-confirm';\n\n    this.quickAdd = new Task();\n    this.modalProps = new Task();\n    this.viewModalProps = new Task();\n\n    // These are kept locally to allow override in tests.\n    this.moveItemInArray = moveItemInArray;\n    this.transferArrayItem = transferArrayItem;\n\n    let sub = stringsService.stringsChanged.subscribe(newStrings => {\n      this.strings = newStrings;\n    });\n    this.subs.push(sub);\n\n    sub = boardService.activeBoardChanged.subscribe(newBoard => {\n      this.activeBoard = newBoard;\n    });\n    this.subs.push(sub);\n\n    sub = boardService.showTaskIdChanged.subscribe(taskId => {\n      setTimeout(() => {\n        this.columnData?.tasks?.forEach(task => {\n          if (+task.id === +taskId) {\n            this.showViewModal(+taskId);\n          }\n        });\n      }, 0);\n    });\n    this.subs.push(sub);\n\n    sub = auth.userChanged.subscribe((user: User) => {\n      if (user === null) {\n        return;\n      }\n\n      this.activeUser = new User(+user.default_board_id,\n                                 user.email,\n                                 +user.id,\n                                 user.last_login,\n                                 +user.security_level,\n                                 +user.user_option_id,\n                                 user.username,\n                                 user.board_access,\n                                 user.collapsed);\n      this.userOptions = auth.userOptions;\n    });\n    this.subs.push(sub);\n  }\n\n  ngOnInit() {\n    this.templateElement.classList.remove('double');\n\n    if (this.userOptions && this.userOptions.multiple_tasks_per_row) {\n      this.templateElement.classList.add('double');\n    }\n\n    if (this.activeUser === undefined) {\n      return;\n    }\n\n    let isCollapsed = false;\n\n    this.activeUser.collapsed.forEach(id => {\n      if (+id === +this.columnData.id) {\n        isCollapsed = true;\n      }\n    });\n\n    if (isCollapsed) {\n      this.templateElement.classList.add('collapsed');\n    }\n\n    this.sortTasks();\n    this.taskLimit = this.columnData.task_limit;\n  }\n\n  ngOnDestroy() {\n    this.subs.forEach(sub => (sub.unsubscribe()));\n  }\n\n  userName(id: number) {\n    const user = this.activeBoard.users.find(u => u.id === id);\n\n    return user ? user.username : this.strings.none;\n  }\n\n  sortTasks() {\n    switch (this.sortOption) {\n      case 'pos':\n        this.columnData.tasks.sort((a, b) => {\n          return a.position - b.position;\n        });\n        break;\n\n      case 'due':\n        this.columnData.tasks.sort((a, b) => {\n          return new Date(a.due_date).getTime() -\n            new Date(b.due_date).getTime();\n        });\n        break;\n\n      case 'pnt':\n        this.columnData.tasks.sort((a, b) => {\n          return b.points - a.points;\n        });\n        break;\n    }\n  }\n\n  sortComments() {\n    this.viewModalProps.comments.sort((a, b) => {\n      if (this.commentOrder === 'oldest') {\n        return a.timestamp - b.timestamp;\n      }\n\n      return b.timestamp - a.timestamp;\n    })\n  }\n\n  toggleCollapsed() {\n    this.templateElement.classList.toggle('collapsed');\n\n    this.boardService.toggleCollapsed(this.activeUser.id, this.columnData.id)\n      .subscribe((apiResponse: ApiResponse) => {\n        this.activeUser.collapsed = apiResponse.data[1];\n        this.auth.updateUser(this.activeUser);\n      });\n  }\n\n  toggleTaskCollapse() {\n    this.collapseTasks = !this.collapseTasks;\n  }\n\n  updateTaskColorByCategory(event: Category[]) {\n    this.modalProps.categories = event;\n\n    if (!event.length) {\n      return;\n    }\n\n    this.modalProps.color = event[event.length - 1].default_task_color;\n  }\n\n  addTask(newTask: Task = this.modalProps) {\n    this.saving = true;\n\n    if (!this.validateTask(newTask)) {\n      this.saving = false;\n      return;\n    }\n\n    this.boardService.addTask(newTask)\n      .subscribe((response: ApiResponse) => {\n        response.alerts.forEach(note => this.notes.add(note));\n\n        if (response.status !== 'success') {\n          this.saving = false;\n          return;\n        }\n\n        this.modal.close(this.MODAL_ID + this.columnData.id + '');\n\n        const boardData = response.data[2][0];\n        boardData.ownColumn.forEach((column: any) => {\n          if (!column.ownTask) {\n            column.ownTask = [];\n          }\n        });\n\n        this.boardService.updateActiveBoard(boardData);\n        this.onUpdateBoards.next();\n        this.saving = false;\n      }, err => {\n        this.notes.add({ type: 'error', text: err.toString() });\n      });\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    if (event.previousContainer === event.container) {\n      this.moveItemInArray(event.container.data,\n        event.previousIndex, event.currentIndex);\n    } else {\n      this.transferArrayItem(event.previousContainer.data,\n        event.container.data, event.previousIndex, event.currentIndex);\n    }\n\n    const colId = event.container.id.substr(3) as unknown as number - 1;\n    const column = this.activeBoard.columns[colId];\n\n    column.tasks.forEach((task, index) => {\n      task.position = index + 1;\n    });\n\n    this.boardService.updateColumn(column).subscribe((response: ApiResponse) => {\n      if (response.status !== 'success') {\n        response.alerts.forEach(note => this.notes.add(note));\n        return;\n      }\n\n      this.boardService.updateActiveBoard(response.data[2][0]);\n    });\n  }\n\n  updateTask() {\n    this.saving = true;\n\n    if (!this.validateTask(this.modalProps)) {\n      this.saving = false;\n      return;\n    }\n\n    this.boardService.updateTask(this.modalProps)\n      .subscribe((response: ApiResponse) => {\n        response.alerts.forEach(note => this.notes.add(note));\n\n        if (response.status !== 'success') {\n          this.saving = false;\n          return;\n        }\n\n        this.boardService.updateActiveBoard(response.data[2][0]);\n        this.onUpdateBoards.next();\n        this.modal.close(this.MODAL_ID + this.columnData?.id + '');\n\n        this.saving = false;\n      });\n  }\n\n  removeTask() {\n    this.boardService.removeTask(this.taskToRemove)\n      .subscribe((response: ApiResponse) => {\n        response.alerts.forEach(note => this.notes.add(note));\n\n        if (response.status !== 'success') {\n          return;\n        }\n\n        this.boardService.updateActiveBoard(response.data[1][0]);\n        this.onUpdateBoards.next();\n      });\n  }\n\n  fileChange(file: File) {\n    this.fileUpload = file;\n  }\n\n  addFile() {\n    if (!this.fileUpload) {\n      this.notes\n        .add({ type: 'error', text: this.strings.boards_taskNoFileError });\n      return;\n    }\n\n    this.fileUploading = true;\n    const attachment = new Attachment();\n\n    attachment.filename = this.fileUpload.name;\n    attachment.name = attachment.filename.split('.').slice(0, -1).join('.');\n    attachment.type = this.fileUpload.type;\n    attachment.user_id = this.activeUser.id;\n    attachment.task_id = this.viewModalProps.id;\n\n    this.boardService.addAttachment(attachment).subscribe(response => {\n      if (response.status !== 'success') {\n        this.fileUploading = false;\n        this.resetFileInput();\n\n        return;\n      }\n\n      attachment.id = response.data[1].id;\n      attachment.diskfilename = response.data[1].diskfilename;\n\n      this.uploadFile(attachment, response);\n    });\n  }\n\n  viewFile(hash: string) {\n    window.open(`./files/${hash}`, 'tb-file-view');\n  }\n\n  getUrl(hash: string) {\n    const url = `./api/uploads/${hash}`;\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n\n  removeAttachment() {\n    this.boardService.removeAttachment(this.attachmentToRemove.id)\n      .subscribe(res => {\n        res.alerts.forEach(note => this.notes.add(note));\n\n        if (res.status === 'success') {\n          const index = this.viewModalProps.attachments\n            .findIndex(x => x.id === this.attachmentToRemove.id);\n\n          this.viewModalProps.attachments.splice(index, 1);\n          this.updateTaskActivity(this.viewModalProps.id);\n        }\n      });\n  }\n\n  addComment() {\n    if (this.viewModalProps.id < 1) {\n      return;\n    }\n\n    const comment = new Comment(0, this.newComment, this.activeUser.id,\n      this.viewModalProps.id);\n\n    this.newComment = '';\n\n    this.boardService.addComment(comment)\n      .subscribe((response: ApiResponse) => {\n        response.alerts.forEach(note => this.notes.add(note));\n\n        if (response.status !== 'success') {\n          return;\n        }\n\n        const updatedTask = response.data[1][0];\n        this.replaceUpdatedTask(updatedTask);\n\n        this.viewModalProps = this.convertToTask(updatedTask);\n        this.updateTaskActivity(this.viewModalProps.id);\n      });\n  }\n\n  beginEditComment(comment: Comment) {\n    this.commentEdit = { ...comment };\n  }\n\n  editComment() {\n    this.commentEdit.is_edited = true;\n    this.commentEdit.user_id = this.activeUser.id;\n\n    this.boardService.updateComment(this.commentEdit)\n      .subscribe((response: ApiResponse) => {\n        response.alerts.forEach(note => this.notes.add(note));\n\n        if (response.status !== 'success') {\n          return;\n        }\n\n        const updatedTask = response.data[1][0];\n        this.replaceUpdatedTask(updatedTask);\n\n        this.viewModalProps = this.convertToTask(updatedTask);\n        this.updateTaskActivity(this.viewModalProps.id);\n      });\n  }\n\n  removeComment() {\n    for (let i = this.viewModalProps.comments.length - 1; i >= 0; --i) {\n      if (this.viewModalProps.comments[i].id === this.commentToRemove.id) {\n        this.viewModalProps.comments.splice(i, 1);\n      }\n    }\n\n    this.boardService.removeComment(this.commentToRemove.id)\n      .subscribe((response: ApiResponse) => {\n        response.alerts.forEach(note => this.notes.add(note));\n\n        const updatedTask = response.data[1][0];\n        this.replaceUpdatedTask(updatedTask);\n        this.updateTaskActivity(this.viewModalProps.id);\n      });\n  }\n\n  canAdminComment(comment: Comment) {\n    if (this.activeUser.id === comment.user_id) {\n      return true;\n    }\n\n    return this.activeUser.isAnyAdmin();\n  }\n\n  beginLimitEdit() {\n    this.taskLimit = this.columnData.task_limit;\n    this.showLimitEditor = true;\n  }\n\n  cancelLimitChanges() {\n    this.showLimitEditor = false;\n  }\n\n  saveLimitChanges() {\n    const originalLimit = this.columnData.task_limit;\n\n    this.columnData.task_limit = this.taskLimit;\n\n    this.boardService.updateColumn(this.columnData)\n      .subscribe((response: ApiResponse) => {\n        response.alerts.forEach(note => this.notes.add(note));\n\n        if (response.status !== 'success') {\n          this.columnData.task_limit = originalLimit;\n          return;\n        }\n\n        const colData = response.data[1][0];\n        this.columnData = new Column(colData.id,\n                                     colData.name,\n                                     colData.position,\n                                     colData.board_id,\n                                     colData.task_limit,\n                                     colData.ownTask);\n      });\n\n    this.showLimitEditor = false;\n  }\n\n  // Expects a color in full HEX with leading #, e.g. #ffffe0\n  getTextColor(color: string): string {\n    const r = parseInt(color.substr(1, 2), 16);\n    const g = parseInt(color.substr(3, 2), 16);\n    const b = parseInt(color.substr(5, 2), 16);\n    const yiq = ((r * 299) + (g * 587) + (b * 114)) / 1000;\n\n    return yiq >= 140 ? '#333333' : '#efefef';\n  }\n\n  quickAddClicked(event: any) {\n    this.preventEnter(event);\n\n    if (this.quickAdd.title === '') {\n      this.showModal();\n      return;\n    }\n\n    this.quickAdd.column_id = this.columnData.id;\n    this.addTask(this.quickAdd);\n\n    this.quickAdd = new Task();\n  }\n\n  checkDueDate() {\n    if (this.viewModalProps.due_date === '') {\n      return;\n    }\n\n    const dueDate = new Date(this.viewModalProps.due_date);\n\n    if (isNaN(dueDate.valueOf())) {\n      return;\n    }\n\n    const millisecondsPerDay = (1000 * 3600 * 24);\n    const today = new Date();\n    const timeDiff = today.getTime() - dueDate.getTime();\n    const daysDiff = Math.ceil(timeDiff / millisecondsPerDay);\n\n    if (daysDiff > 0) {\n      // past due date\n      this.isOverdue = true;\n    }\n\n    if (daysDiff <= 0 && daysDiff > -3) {\n      this.isNearlyDue = true;\n    }\n  }\n\n  getRemoveTaskFunction(taskId: number): () => void {\n    return () => {\n      this.taskToRemove = taskId;\n      this.modal.open(this.MODAL_CONFIRM_ID + this.columnData.id);\n    };\n  }\n\n  getShowModalFunction(taskId: number = 0): () => void {\n    return () => { this.showModal(taskId); };\n  }\n\n  getShowViewModalFunction(taskId: number): () => void {\n    return () => {\n      const url = 'boards/' + this.activeBoard.id + '/' + taskId;\n      this.location.go(url);\n      this.showViewModal(taskId);\n    };\n  }\n\n  showModal(taskId: number = 0) {\n    if (taskId === 0) {\n      this.modalProps = new Task();\n      this.modalProps.column_id = this.columnData.id;\n\n      this.modal.open(this.MODAL_ID + this.columnData.id);\n      return;\n    }\n\n    const editTask = this.columnData.tasks.find(task => task.id === taskId);\n\n    this.modalProps = new Task(editTask.id, editTask.title,\n                               editTask.description, editTask.color,\n                               editTask.due_date, editTask.points,\n                               editTask.position, editTask.column_id,\n                               editTask.comments, editTask.attachments,\n                               [], []);\n\n    this.activeBoard.users.forEach(user => {\n      editTask.assignees.forEach(assignee => {\n        if (assignee.id === user.id) {\n          this.modalProps.assignees.push(user);\n        }\n      });\n    });\n\n    this.activeBoard.categories.forEach(category => {\n      editTask.categories.forEach(cat => {\n        if (cat.id === category.id) {\n          this.modalProps.categories.push(category);\n        }\n      });\n    });\n\n    this.modal.open(this.MODAL_ID + this.columnData.id);\n  }\n\n  getUserName(userId: number) {\n    const user = this.activeBoard.users\n      .find((test: User) => test.id === +userId);\n\n    return user.username;\n  }\n\n  callBoardUpdate() {\n    this.onUpdateBoards.emit();\n  }\n\n  showViewModal(taskId: number) {\n    const viewTask = this.columnData.tasks.find(task => task.id === taskId);\n\n    this.updateTaskActivity(taskId);\n\n    this.boardService\n      .convertMarkdown(viewTask.description, this.markedCallback)\n      .then(data => {\n        data.html.replace(/(\\{)([^}]+)(\\})/g, '{{ \"{\" }}$2{{ \"}\"  }}');\n\n        this.viewModalProps.html =\n          this.sanitizer.bypassSecurityTrustHtml(data.html);\n      });\n\n    viewTask.comments.forEach(comment => {\n      this.boardService.convertMarkdown(comment.text, this.markedCallback)\n        .then(data => {\n          comment.html = this.sanitizer.bypassSecurityTrustHtml(data.html);\n        });\n    });\n\n    this.newComment = '';\n    this.viewModalProps = Object.assign({}, viewTask);\n    this.checkDueDate();\n\n    this.showActivity = false;\n    setTimeout(() => (this.showActivity = true), 500);\n\n    this.modal.open(this.MODAL_VIEW_ID + this.columnData.id);\n  }\n\n  preventEnter(event: any) {\n    if (event && event.stopPropagation) {\n      event.stopPropagation();\n    }\n  }\n\n  private uploadFile(attachment: Attachment, response: ApiResponse) {\n      const data = new FormData();\n      data.append('file', this.fileUpload);\n\n      this.boardService.uploadAttachment(data, attachment.diskfilename)\n        .subscribe(res => {\n          res.alerts.forEach(note => this.notes.add(note));\n\n          this.fileUploading = false;\n          this.resetFileInput();\n\n          if (res.status === 'success') {\n            response.alerts.forEach(note => this.notes.add(note));\n\n            this.viewModalProps.attachments.push(attachment);\n            this.updateTaskActivity(this.viewModalProps.id);\n          }\n        });\n  }\n\n  private resetFileInput() {\n    const upload = document.getElementsByClassName('fileuploadinput');\n\n    Array.from(upload).forEach((input: any) => {\n      input.value = '';\n    })\n  }\n\n  private updateTaskActivity(id: number) {\n    this.viewTaskActivities = [];\n\n    if (this.activeUser.security_level > 2) {\n      return;\n    }\n\n    this.boardService.getTaskActivity(id)\n      .subscribe(response => {\n        if (response.data.length === 0) {\n          return;\n        }\n\n        response.data[1].forEach((item: any) => {\n          this.viewTaskActivities.push(\n            new ActivitySimple(item.text, item.timestamp));\n        });\n      });\n  }\n\n  private convertToTask(updatedTask: any) {\n    const task = new Task(updatedTask.id,\n                          updatedTask.title,\n                          updatedTask.description,\n                          updatedTask.color,\n                          updatedTask.due,\n                          updatedTask.points,\n                          updatedTask.position,\n                          updatedTask.column_id,\n                          updatedTask.ownComment,\n                          updatedTask.ownAttachment,\n                          updatedTask.sharedUser,\n                          updatedTask.sharedCategory);\n\n    task.html = updatedTask.html;\n    task.comments.forEach(comment => {\n      this.boardService.convertMarkdown(comment.text, this.markedCallback)\n        .then(data => { comment.html = data.html; });\n    });\n\n    return task;\n  }\n\n  private replaceUpdatedTask(updatedTask: any) {\n    const oldTask = this.activeBoard.columns\n      .find(column => +column.id === +updatedTask.column_id)\n      .tasks.find(task => +task.id === +updatedTask.id);\n\n    updatedTask.html = oldTask.html;\n\n    this.updateTaskComments(oldTask, updatedTask.ownComment);\n  }\n\n  private updateTaskComments(task: Task, newComments: any[]) {\n    task.comments = [];\n\n    if (!newComments) {\n      return;\n    }\n\n    newComments.forEach(comment => {\n      task.comments.push(\n        new Comment(comment.id, comment.text, comment.user_id,\n                    comment.task_id, comment.timestamp)\n      );\n    });\n\n    this.sortComments();\n  }\n\n  // Needs anonymous function for proper `this` context.\n  // istanbul ignore next\n  private markedCallback = (_: any, text: string) => {\n    this.activeBoard.issue_trackers?.forEach(tracker => {\n      const re = new RegExp(tracker.regex, 'ig');\n      const replacements = new Array<any>();\n\n      let result = re.exec(text);\n\n      while (result !== null) {\n        const link = '<a href=\"' + tracker.url.replace(/%BUGID%/g, result[1]) +\n          '\" target=\"tb_external\" rel=\"noreferrer\">' + result[0] + '</a>';\n\n        replacements.push({ str: result[0], link });\n        result = re.exec(text);\n      }\n\n      for (let i = replacements.length - 1; i >= 0; --i) {\n        text = text.replace(replacements[i].str, replacements[i].link);\n      }\n    });\n\n    return text;\n  }\n\n  private validateTask(task: Task) {\n    if (task.title === '') {\n      this.notes.add(\n        new Notification('error', 'Task title is required.'));\n      return false;\n    }\n\n    return true;\n  }\n}\n\n","<tb-top-nav page-name=\"{{ pageName }}\"></tb-top-nav>\n\n<div class=\"board-nav\">\n  <label *ngIf=\"boards && boards.length\">\n    {{ strings['boards_selectBoard'] }}:\n\n    <select [(ngModel)]=\"boardNavId\" (change)=\"goToBoard()\">\n      <option [ngValue]=\"null\">\n        {{ strings['boards_selectBoard'] }}...\n      </option>\n\n      <option *ngFor=\"let board of boards\" [ngValue]=\"board.id\">\n        {{ board.name }}\n      </option>\n    </select>\n  </label>\n\n  <div class=\"right\" *ngIf=\"activeBoard\">\n    <label>\n      {{ strings['boards_hideFiltered'] }}:\n\n      <input type=\"checkbox\" [(ngModel)]=\"hideFiltered\"\n             (change)=\"toggleFiltered()\">\n    </label>\n\n    <label>\n      {{ strings['boards_userFilter'] }}:\n\n      <select [(ngModel)]=\"userFilter\" (change)=\"filterTasks()\">\n        <option [ngValue]=\"null\">\n          {{ strings['boards_filterByAny'] }}\n        </option>\n\n        <option [ngValue]=\"-1\">\n         {{ strings['boards_filterByUnassigned'] }}\n        </option>\n\n        <option *ngFor=\"let user of activeBoard.users\" [ngValue]=\"user.id\">\n         {{ user.username }}\n        </option>\n      </select>\n    </label>\n\n    <label *ngIf=\"activeBoard.categories.length\">\n      {{ strings['boards_categoryFilter'] }}:\n\n      <select [(ngModel)]=\"categoryFilter\" (change)=\"filterTasks()\">\n        <option [ngValue]=\"null\">\n          {{ strings['boards_filterByAny'] }}\n        </option>\n\n        <option [ngValue]=\"-1\">\n          {{ strings['boards_filterByUncategorized'] }}\n        </option>\n\n        <option *ngFor=\"let category of activeBoard.categories\"\n                [ngValue]=\"category.id\">\n          {{ category.name }}\n        </option>\n      </select>\n    </label>\n\n  </div>\n</div>\n\n<div class=\"no-boards center\" *ngIf=\"!loading && boards.length === 0\">\n  <h1>{{ strings['boards_noBoards'] }}</h1>\n\n  <p>{{ noBoardsMessage }}</p>\n</div>\n\n<div class=\"no-boards center\"\n     *ngIf=\"!loading && !activeBoard && this.boards.length > 0 &&\n     !activeUser.default_board_id\">\n  <h1>{{ strings['boards_noDefault'] }}</h1>\n\n  <p>{{ strings['boards_noDefaultMessage'] }}\n    <a href=\"javascript:\"\n      [routerLink]=\"['/settings']\">{{ strings['settings'] }}</a>.\n  </p>\n\n  <p></p>\n</div>\n\n<div class=\"board\" *ngIf=\"loading\">\n  <div class=\"loading\">{{ strings['loading'] }}...</div>\n</div>\n\n<div class=\"board\" cdkDropListGroup *ngIf=\"activeBoard\">\n  <tb-column class=\"column\" [id]=\"column.id\" [column]=\"column\"\n             *ngFor=\"let column of activeBoard.columns\"\n             (on-update-boards)=\"updateBoards()\"></tb-column>\n</div>\n\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Title } from '@angular/platform-browser';\n\nimport {\n  AuthService,\n  ContextMenuService,\n  NotificationsService,\n  StringsService\n} from '../shared/services';\nimport { ApiResponse, Board, User } from '../shared/models';\nimport { BoardService } from './board.service';\n\n@Component({\n  selector: 'tb-board',\n  templateUrl: './board.component.html',\n})\nexport class BoardDisplayComponent implements OnInit, OnDestroy {\n  private subs: any[];\n\n  public categoryFilter: number;\n  public userFilter: number;\n  public boardNavId: number | null;\n\n  public activeUser: User;\n  public activeBoard: Board;\n  public boards: Board[];\n\n  public pageName: string;\n  public noBoardsMessage: string;\n\n  public strings: any;\n\n  public loading: boolean;\n  public hideFiltered: boolean;\n\n  constructor(public title: Title,\n              private router: Router,\n              public active: ActivatedRoute,\n              public auth: AuthService,\n              public boardService: BoardService,\n              public menuService: ContextMenuService,\n              public notes: NotificationsService,\n              public stringsService: StringsService) {\n    title.setTitle('TaskBoard - Kanban App');\n\n    this.boardNavId = null;\n    this.userFilter = null;\n    this.categoryFilter = null;\n\n    this.activeBoard = new Board();\n    this.activeUser = new User();\n\n    this.boards = [];\n    this.subs = [];\n\n    this.loading = true;\n    this.hideFiltered = false;\n\n    let sub = stringsService.stringsChanged.subscribe(newStrings => {\n      this.strings = newStrings;\n\n      // Updating the active user updates some display strings.\n      this.updateActiveUser(this.activeUser);\n    });\n    this.subs.push(sub);\n\n    this.pageName = this.strings.boards;\n\n    this.updateBoards();\n\n    sub = auth.userChanged.subscribe((user: User) => {\n      this.updateActiveUser(user);\n    });\n    this.subs.push(sub);\n\n    sub = active.params.subscribe(params => {\n      const id = +params.id;\n\n      this.loading = true;\n      this.boardNavId = id ? id : null;\n      this.updateActiveBoard();\n\n      if (!params.taskId) {\n        boardService.showTask(null);\n        return;\n      }\n\n      boardService.showTask(params.taskId);\n    });\n    this.subs.push(sub);\n  }\n\n  ngOnInit() {\n    if (this.boardNavId) {\n      return;\n    }\n\n    if (this.activeUser && this.activeUser.default_board_id) {\n      this.boardNavId = this.activeUser.default_board_id;\n      this.goToBoard();\n    }\n  }\n\n  ngOnDestroy() {\n    this.subs.forEach(sub => sub.unsubscribe());\n  }\n\n  goToBoard(): void {\n    if (this.boardNavId === null) {\n      return;\n    }\n\n    this.router.navigate(['/boards/' + this.boardNavId]);\n  }\n\n  toggleFiltered() {\n    this.activeBoard.columns.forEach(column => {\n      column.tasks.forEach(task => {\n        task.hideFiltered = this.hideFiltered;\n      });\n    });\n  }\n\n  filterTasks() {\n    this.activeBoard.columns.forEach(column => {\n      column.tasks.forEach(task => {\n        task.filtered = false;\n\n        if (this.userFilter) {\n          let found = (this.userFilter === -1 && task.assignees.length === 0);\n\n          if (task.assignees.some(user => user.id === this.userFilter)) {\n            found = true;\n          }\n\n          task.filtered = !found;\n        }\n\n        if (this.categoryFilter) {\n          let found = (this.categoryFilter === -1 &&\n                      task.categories.length === 0);\n\n          if (task.categories.some(cat => cat.id === this.categoryFilter)) {\n            found = true;\n          }\n\n          task.filtered = !found;\n        }\n      });\n    });\n  }\n\n  updateBoards(): void {\n    this.boardService.getBoards().subscribe((response: ApiResponse) => {\n      this.boards = [];\n\n      if (response.data.length > 1) {\n        this.updateBoardsList(response.data[1]);\n        return;\n      }\n\n      this.loading = false;\n    });\n  }\n\n  private updateBoardsList(boards: any[]): void {\n    const activeBoards: Board[] = [];\n\n    boards.forEach((board: any) => {\n      if (board.is_active !== '1') {\n        return;\n      }\n\n      const currentBoard = new Board(+board.id, board.name, true,\n                                     board.ownColumn,\n                                     board.ownCategory,\n                                     board.ownAutoAction,\n                                     board.ownIssuetracker,\n                                     board.sharedUser);\n      activeBoards.push(currentBoard);\n    });\n\n    this.boards = activeBoards;\n    this.loading = false;\n    this.updateActiveBoard();\n  }\n\n  private updateActiveBoard(): void {\n    if (!this.boardNavId || !this.boards) {\n      this.activeBoard = null;\n      return;\n    }\n\n    const board = this.boards.find(b => (b.id === this.boardNavId));\n\n    if (!board) {\n      return;\n    }\n\n    this.userFilter = null;\n    this.categoryFilter = null;\n\n    this.activeBoard = board;\n    this.pageName = board.name;\n\n    this.boardService.updateActiveBoard(board);\n    this.title.setTitle('TaskBoard - ' + this.activeBoard.name);\n\n    this.loading = false;\n  }\n\n  private updateActiveUser(activeUser: User) {\n    if (!activeUser) {\n      return;\n    }\n\n    this.activeUser = new User(+activeUser.default_board_id,\n                               activeUser.email,\n                               +activeUser.id,\n                               activeUser.last_login,\n                               +activeUser.security_level,\n                               +activeUser.user_option_id,\n                               activeUser.username,\n                               activeUser.board_access);\n\n    this.noBoardsMessage = this.strings.boards_noBoardsMessageUser;\n\n    if (+activeUser.security_level === 1) {\n      this.noBoardsMessage = this.strings.boards_noBoardsMessageAdmin;\n    }\n  }\n\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { LocationStrategy } from '@angular/common';\n\nimport { Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { ApiResponse } from '../shared/models';\nimport { ApiService } from '../shared/services';\n\n@Injectable()\nexport class FileViewerService extends ApiService {\n\n  constructor(private http: HttpClient, strat: LocationStrategy) {\n    super(strat);\n  }\n\n  getAttachmentInfo(hash: string): Observable<ApiResponse> {\n    return this.http.get(this.apiBase + 'attachments/hash/' + hash)\n    .pipe(\n      map((response: ApiResponse) => response),\n      catchError((err) => of(err.error as ApiResponse))\n    );\n  }\n\n}\n","<tb-top-nav page-name=\"{{ pageName }}\" [show-buttons]=\"false\"></tb-top-nav>\n\n<div class=\"file-viewer\">\n  <div class=\"header\">\n    {{ strings['attachment'] }}: {{ attachment?.filename }}\n\n    <span class=\"right\">\n      <a [href]=\"fileUrl\" download=\"{{ attachment?.filename }}\">\n        {{strings['boards_taskDownload']}}\n      </a>\n    </span>\n  </div>\n\n  <div class=\"content\" *ngIf=\"isLoaded\">\n    <iframe seamless [src]=\"fileUrl\"></iframe>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  Title,\n  DomSanitizer,\n  SafeResourceUrl\n} from '@angular/platform-browser';\n\nimport { FileViewerService } from './file-viewer.service';\nimport { User, Attachment } from '../shared/models';\nimport {\n  StringsService,\n  AuthService,\n  NotificationsService\n} from '../shared/services';\n\n@Component({\n  selector: 'tb-file-viewer',\n  templateUrl: './file-viewer.component.html'\n})\nexport class FileViewerComponent implements OnInit, OnDestroy {\n  private subs: any[];\n  private fileHash: string;\n\n  public strings: any;\n  public pageName: string;\n  public isLoaded: boolean;\n  public fileUrl: SafeResourceUrl;\n\n  public attachment: Attachment;\n  public activeUser: User;\n\n  constructor(private title: Title,\n              private active: ActivatedRoute,\n              private sanitizer: DomSanitizer,\n              public service: FileViewerService,\n              private notes: NotificationsService,\n              private auth: AuthService,\n              private stringsService: StringsService) {\n    title.setTitle('TaskBoard - File Viewer');\n    this.isLoaded = false;\n    this.subs = [];\n\n    let sub = this.stringsService.stringsChanged.subscribe(newStrings => {\n      this.strings = newStrings;\n\n      this.pageName = this.strings.files;\n      this.title.setTitle(`TaskBoard - ${this.pageName}`);\n    });\n    this.subs.push(sub);\n\n    sub = this.auth.userChanged.subscribe((user: User) => {\n      this.activeUser = user;\n    });\n    this.subs.push(sub);\n\n    sub = this.active.params.subscribe(params => {\n      this.fileHash = params.hash;\n    });\n    this.subs.push(sub);\n  }\n\n  ngOnInit() {\n    this.service.getAttachmentInfo(this.fileHash).subscribe(res => {\n      res.alerts.forEach(note => this.notes.add(note));\n\n      if (res.status === 'success') {\n        this.attachment = res.data[1];\n\n        const url = `./api/uploads/${this.attachment.diskfilename}`;\n        this.fileUrl = this.sanitizer.bypassSecurityTrustResourceUrl(url);\n\n        this.isLoaded = true;\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.subs.forEach(sub => sub.unsubscribe());\n  }\n}\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport {\n  ApiResponse,\n  Notification\n} from '../shared/models';\nimport {\n  AuthService,\n  Constants,\n  NotificationsService\n} from '../shared/services';\n\n@Component({\n  selector: 'tb-login',\n  templateUrl: './login.component.html'\n})\nexport class LoginComponent implements OnInit {\n  version: string;\n  username = '';\n  password = '';\n  remember = false;\n  isSubmitted = false;\n\n  constructor(public constants: Constants, public authService: AuthService,\n              private router: Router, private notes: NotificationsService) {\n    this.version = constants.VERSION;\n  }\n\n  ngOnInit(): void {\n    this.authService.authenticate(undefined, true)\n      .subscribe(isAuth => {\n        if (isAuth) {\n          this.router.navigate(['/boards']);\n        }\n      });\n  }\n\n  login(): void {\n    if (this.username === '' || this.password === '') {\n      this.notes\n        .add(new Notification('error',\n          'Username and password are required.'));\n      return;\n    }\n\n    this.isSubmitted = true;\n\n    this.authService.login(this.username, this.password, this.remember)\n    .subscribe((response: ApiResponse) => {\n      response.alerts.forEach(msg => {\n        this.notes.add(new Notification(msg.type, msg.text));\n      });\n\n      if (response.status === 'success') {\n        if (this.authService.attemptedRoute?.length) {\n          this.router.navigate([this.authService.attemptedRoute]);\n\n          this.authService.attemptedRoute = undefined;\n          this.isSubmitted = false;\n\n          return;\n        }\n\n        this.router.navigate(['/boards']);\n      }\n\n      this.isSubmitted = false;\n    });\n  }\n}\n\n","<div class=\"login\">\n  <form #f=\"ngForm\">\n    <h1>TaskBoard</h1>\n    <input type=\"text\" placeholder=\"Username\" title=\"Username\"\n    [(ngModel)]=\"username\" name=\"username\" autofocus>\n    <input type=\"password\" placeholder=\"Password\" title=\"Password\"\n    [(ngModel)]=\"password\" name=\"password\">\n    <label><input type=\"checkbox\"\n      [(ngModel)]=\"remember\" name=\"remember\"> Remember Me</label>\n    <button type=\"submit\" [disabled]=\"isSubmitted\"\n      (click)=\"login()\" >Sign In</button>\n  </form>\n  <p>v{{ version }}</p>\n</div>\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { LocationStrategy } from '@angular/common';\n\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport {\n  ApiResponse,\n  User,\n  Board,\n  AutoAction\n} from '../shared/models';\nimport { ApiService } from '../shared/services';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingsService extends ApiService {\n  private users = new BehaviorSubject<User[]>([]);\n  private boards = new BehaviorSubject<Board[]>([]);\n  private actions = new BehaviorSubject<AutoAction[]>([]);\n\n  public usersChanged = this.users.asObservable();\n  public boardsChanged = this.boards.asObservable();\n  public actionsChanged = this.actions.asObservable();\n\n  constructor(private http: HttpClient, strat: LocationStrategy) {\n    super(strat);\n  }\n\n  updateUsers(users: User[]): void {\n    this.users.next(users);\n  }\n\n  getUsers(): Observable<ApiResponse> {\n    return this.http.get(this.apiBase + 'users')\n    .pipe(\n      map((response: ApiResponse) => response),\n      catchError((err) => of(err.error as ApiResponse))\n    );\n  }\n\n  updateBoards(boards: Board[]): void {\n    this.getActions().subscribe((response: ApiResponse) => {\n      this.actions.next(response.data[1]);\n      this.boards.next(boards);\n    });\n  }\n\n  getBoards(): Observable<ApiResponse> {\n    return this.http.get(this.apiBase + 'boards')\n    .pipe(\n      map((response: ApiResponse) => response),\n      catchError((err) => of(err.error as ApiResponse))\n    );\n  }\n\n  updateActions(actions: AutoAction[]): void {\n    this.actions.next(actions);\n  }\n\n  getActions(): Observable<ApiResponse> {\n    return this.http.get(this.apiBase + 'autoactions')\n    .pipe(\n      map((response: ApiResponse) => response),\n      catchError((err) => of(err.error as ApiResponse))\n    );\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { LocationStrategy } from '@angular/common';\n\nimport { Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport {\n  User,\n  UserOptions,\n  ApiResponse\n} from '../../shared/models';\nimport { AuthService, ApiService } from '../../shared/services';\n\ninterface UpdateUser extends User {\n  new_password?: string;\n  old_password?: string;\n}\n\n@Injectable()\nexport class UserSettingsService extends ApiService {\n  activeUser: User = null;\n\n  constructor(private auth: AuthService, private http: HttpClient, strat: LocationStrategy) {\n    super(strat);\n\n    auth.userChanged.subscribe(user => this.activeUser = user);\n  }\n\n  changeDefaultBoard(user: User): Observable<ApiResponse> {\n    const json = JSON.stringify(user);\n\n    return this.http.post(this.apiBase + 'users/' + this.activeUser.id, json)\n    .pipe(\n      map((response: ApiResponse) =>  response),\n      catchError((err) =>  of(err.error as ApiResponse))\n    );\n  }\n\n  changePassword(oldPass: string, newPass: string): Observable<ApiResponse> {\n    const updateUser: UpdateUser = this.activeUser;\n    updateUser.new_password = newPass;\n    updateUser.old_password = oldPass;\n\n    const json = JSON.stringify(updateUser);\n\n    return this.http.post(this.apiBase + 'users/' + this.activeUser.id, json)\n    .pipe(\n      map((response: ApiResponse) =>  response),\n      catchError((err) =>  of(err.error as ApiResponse))\n    );\n  }\n\n  changeUsername(newName: string): Observable<ApiResponse> {\n    const updateUser = this.activeUser;\n    updateUser.username = newName;\n\n    const json = JSON.stringify(updateUser);\n\n    return this.http.post(this.apiBase + 'users/' + this.activeUser.id, json)\n    .pipe(\n      map((response: ApiResponse) => {\n        this.auth.updateUser(JSON.parse(response.data[1]));\n        return response;\n      }),\n      catchError((err) =>  of(err.error as ApiResponse))\n    );\n  }\n\n  changeEmail(newEmail: string): Observable<ApiResponse> {\n    const updateUser = this.activeUser;\n    updateUser.email = newEmail;\n\n    const json = JSON.stringify(updateUser);\n\n    return this.http.post(this.apiBase + 'users/' + this.activeUser.id, json)\n    .pipe(\n      map((response: ApiResponse) => {\n        this.auth.updateUser(JSON.parse(response.data[1]));\n        return response;\n      }),\n      catchError((err) =>  of(err.error as ApiResponse))\n    );\n  }\n\n  changeUserOptions(newOptions: UserOptions): Observable<ApiResponse> {\n    const json = JSON.stringify(newOptions);\n\n    return this.http.post(this.apiBase + 'users/' + this.activeUser.id + '/opts', json)\n    .pipe(\n      map((response: ApiResponse) => {\n        this.auth.updateUser(JSON.parse(response.data[2]),\n                             JSON.parse(response.data[1]));\n        return response;\n      }),\n      catchError((err) =>  of(err.error as ApiResponse))\n    );\n  }\n}\n\n","export class PassForm {\n  constructor(public current: string = '', public newPass: string = '',\n              public verPass: string = '', public submitted: boolean = false) {\n  }\n}\n\nexport class UsernameForm {\n  constructor(public newName: string = '',\n              public submitted: boolean = false) {\n  }\n}\n\nexport class EmailForm {\n  constructor(public newEmail: string = '',\n              public submitted: boolean = false) {\n  }\n}\n\n","<section>\n  <h2>{{ strings['settings_userSettings'] }}</h2>\n\n  <div class=\"half\">\n    <h3>{{ strings['settings_changePassword'] }}</h3>\n\n    <form>\n      <label for=\"currentPassword\" class=\"hidden\">\n        {{ strings['settings_currentPassword'] }}</label>\n      <input type=\"password\" id=\"currentPassword\" name=\"currentPassword\"\n      placeholder=\"{{ strings['settings_currentPassword'] }}\"\n      [(ngModel)]=\"changePassword.current\">\n\n      <label for=\"newPassword\" class=\"hidden\">\n        {{ strings['settings_newPassword'] }}</label>\n      <input type=\"password\" id=\"newPassword\" name=\"newPassword\"\n      placeholder=\"{{ strings['settings_newPassword'] }}\"\n      [(ngModel)]=\"changePassword.newPass\">\n\n      <label for=\"verifyPassword\" class=\"hidden\">\n        {{ strings['settings_verifyPassword'] }}</label>\n      <input type=\"password\" id=\"verifyPassword\" name=\"verifyPassword\"\n      placeholder=\"{{ strings['settings_verifyPassword'] }}\"\n      [(ngModel)]=\"changePassword.verPass\">\n\n      <button type=\"submit\" [disabled]=\"changePassword.submitted\"\n        (click)=\"updatePassword()\">{{ strings['settings_changePassword'] }}</button>\n      <button class=\"flat\" [disabled] = \"changePassword.submitted\"\n        (click)=\"resetPasswordForm()\">{{ strings['reset'] }}</button>\n    </form>\n\n    <h3 class=\"tall\">{{ strings['settings_globalOptions'] }}</h3>\n    <label>\n      {{ strings['settings_displayLanguage'] }}:\n      <select class=\"autosize\"\n        *ngIf=\"userOptions\"\n        [ngModel]=\"userOptions.language\"\n        (ngModelChange)=\"onOptionChange('language', $event)\">\n        <option value=\"en\">English</option>\n        <option value=\"es\">Español</option>\n        <option value=\"fr\">Français</option>\n        <option value=\"de\">Deutsch</option>\n      </select>&nbsp;\n      <a href=\"https://github.com/kiswa/TaskBoard/wiki/Translations\"\n        target=\"translations\" rel=\"noopener noreferrer\">Add Yours?</a>\n    </label>\n    <label>\n      {{ strings['settings_selectDefaultBoard'] }}:\n      <select class=\"autosize\"\n        *ngIf=\"user\"\n        [ngModel]=\"user.default_board_id\"\n        (ngModelChange)=\"updateDefaultBoard($event)\">\n        <option value=\"0\">{{ strings['none'] }}</option>\n        <option *ngFor=\"let board of boards\" value=\"{{ board.id }}\">\n          {{ board.name }}\n        </option>\n      </select>\n    </label>\n    <label>\n      {{ strings['settings_newTasks'] }}:\n      <select class=\"autosize\"\n        *ngIf=\"userOptions\"\n        [ngModel]=\"userOptions.new_tasks_at_bottom\"\n        (ngModelChange)=\"onOptionChange('new_tasks', $event)\">\n        <option value=\"true\">{{ strings['settings_bottom'] }}</option>\n        <option value=\"false\">{{ strings['settings_top'] }}</option>\n      </select>\n    </label>\n  </div>\n\n  <div class=\"half\">\n    <h3>{{ strings['settings_changeUsername'] }}</h3>\n\n    <form>\n      <label for=\"username\" class=\"hidden\">{{ strings['settings_newUsername'] }}</label>\n      <input type=\"text\" id=\"username\" name=\"username\"\n      placeholder=\"{{ strings['settings_newUsername'] }}\"\n      [(ngModel)]=\"changeUsername.newName\">\n\n      <button type=\"submit\" [disabled]=\"changeUsername.submitted\"\n        (click)=\"updateUsername()\">{{ strings['settings_changeUsername'] }}</button>\n      <button class=\"flat\" [disabled]=\"changeUsername.submitted\"\n        (click)=\"resetUsernameForm()\">{{ strings['reset'] }}</button>\n    </form>\n\n    <form>\n      <h3 class=\"tall\">{{ strings['settings_changeEmail'] }}</h3>\n\n      <label for=\"email\" class=\"hidden\">{{ strings['settings_newEmail'] }}</label>\n      <input type=\"text\" id=\"email\" name=\"email\"\n      placeholder=\"{{ strings['settings_newEmail'] }} - {{ strings['settings_blank'] }}\"\n      [(ngModel)]=\"changeEmail.newEmail\">\n\n      <button type=\"submit\" [disabled]=\"changeEmail.submitted\"\n        (click)=\"updateEmail()\">{{ strings['settings_changeEmail'] }}</button>\n      <button class=\"flat\" [disabled]=\"changeEmail.submitted\"\n        (click)=\"resetEmailForm()\">{{ strings['reset'] }}</button>\n    </form>\n\n    <div class=\"hold-bottom\" *ngIf=\"userOptions\">\n      <label>\n        {{ strings['settings_optionsDisplay'] }}\n        <input type=\"checkbox\" class=\"hidden\"\n        [ngModel]=\"userOptions.multiple_tasks_per_row\"\n        (ngModelChange)=\"onOptionChange('mult_tasks', $event)\">\n        <span class=\"toggle\"></span>\n      </label>\n      <label>\n        {{ strings['settings_optionsAnimate'] }}\n        <input type=\"checkbox\" class=\"hidden\"\n        [ngModel]=\"userOptions.show_animations\"\n        (ngModelChange)=\"onOptionChange('show_anim', $event)\">\n        <span class=\"toggle\"></span>\n      </label>\n      <label>\n        {{ strings['settings_optionsAssignee'] }}\n        <input type=\"checkbox\" class=\"hidden\"\n        [ngModel]=\"userOptions.show_assignee\"\n        (ngModelChange)=\"onOptionChange('show_assign', $event)\">\n        <span class=\"toggle\"></span>\n      </label>\n    </div>\n  </div>\n</section>\n\n","import { Component, OnInit } from '@angular/core';\n\nimport { SettingsService } from '../settings.service';\nimport { UserSettingsService } from './user-settings.service';\nimport { PassForm, UsernameForm, EmailForm } from './user-settings.models';\nimport {\n  ApiResponse,\n  Board,\n  Notification,\n  User,\n  UserOptions\n} from '../../shared/models';\nimport {\n  AuthService,\n  NotificationsService,\n  StringsService\n} from '../../shared/services';\n\n@Component({\n  selector: 'tb-user-settings',\n  templateUrl: './user-settings.component.html',\n  providers: [ UserSettingsService ]\n})\nexport class UserSettingsComponent implements OnInit {\n  public boards: Board[];\n  public user: User;\n  public userOptions: UserOptions;\n  public changePassword: PassForm;\n  public changeUsername: UsernameForm;\n  public changeEmail: EmailForm;\n  public strings: any;\n\n  constructor(private auth: AuthService,\n              private notes: NotificationsService,\n              private settings: SettingsService,\n              public users: UserSettingsService,\n              public stringsService: StringsService) {\n    this.user = new User();\n    this.changeEmail = new EmailForm();\n\n    this.boards = [];\n    this.strings = {};\n\n    auth.userChanged.subscribe(user => {\n      if (!user) {\n        return;\n      }\n\n      this.user = user;\n      this.changeEmail.newEmail = user.email;\n      this.userOptions = auth.userOptions;\n    });\n\n    stringsService.stringsChanged.subscribe(newStrings => {\n      this.strings = newStrings;\n    });\n\n    settings.boardsChanged.subscribe(boards => {\n      this.boards = boards;\n    });\n  }\n\n  ngOnInit() {\n    this.resetForms();\n  }\n\n  onOptionChange(option: string, event: any) {\n    switch (option) {\n      case 'new_tasks':\n        this.userOptions.new_tasks_at_bottom = event === 'true';\n        break;\n\n      case 'mult_tasks':\n        this.userOptions.multiple_tasks_per_row = event;\n        break;\n\n      case 'show_anim':\n        this.userOptions.show_animations = event;\n        break;\n\n      case 'show_assign':\n        this.userOptions.show_assignee = event;\n        break;\n\n      case 'language':\n        this.userOptions.language = event;\n        break;\n    }\n    this.updateUserOptions();\n  }\n\n  updateUserOptions() {\n    this.users.changeUserOptions(this.userOptions)\n      .subscribe((response: ApiResponse) => {\n        this.addAlerts(response.alerts);\n      });\n  }\n\n  updateDefaultBoard(boardId: string) {\n    this.user.default_board_id = parseInt(boardId, 10);\n\n    this.users.changeDefaultBoard(this.user)\n      .subscribe((response: ApiResponse) => {\n        this.addAlerts(response.alerts);\n        this.auth.updateUser(JSON.parse(response.data[1]));\n      });\n  }\n\n  updatePassword() {\n    this.changePassword.submitted = true;\n\n    if (!this.validatePassForm()) {\n      return;\n    }\n\n    this.users.changePassword(this.changePassword.current,\n      this.changePassword.newPass)\n      .subscribe((response: ApiResponse) => {\n        this.addAlerts(response.alerts);\n        this.resetPasswordForm();\n        this.changePassword.submitted = false;\n\n        if (response.status === 'success') {\n          this.auth.updateUser(JSON.parse(response.data[1]));\n        }\n      });\n  }\n\n  updateUsername() {\n    this.changeUsername.submitted = true;\n\n    if (this.changeUsername.newName === '') {\n      this.notes.add(new Notification('error',\n        // tslint:disable-next-line\n        this.strings['settings_usernameRequired']));\n      this.changeUsername.submitted = false;\n\n      return;\n    }\n\n    this.users.changeUsername(this.changeUsername.newName)\n      .subscribe((response: ApiResponse) => {\n        this.addAlerts(response.alerts);\n        this.resetUsernameForm();\n        this.changeUsername.submitted = false;\n\n        this.settings.getBoards()\n          .subscribe((res: ApiResponse) => {\n            const boardData = res.data[1];\n            const boards: Board[] = [];\n\n            if (boardData) {\n              boardData.forEach((board: any) => {\n                boards.push(new Board(+board.id, board.name,\n                  board.is_active === '1',\n                  board.ownColumn,\n                  board.ownCategory,\n                  board.ownAutoAction,\n                  board.ownIssuetracker,\n                  board.sharedUser));\n              });\n\n              this.settings.updateBoards(boards);\n            }\n          });\n      });\n  }\n\n  updateEmail() {\n    this.changeEmail.submitted = true;\n\n    // https://davidcel.is/posts/stop-validating-email-addresses-with-regex/\n    const emailRegex = /.+@.+\\..+/i;\n    const match = this.changeEmail.newEmail.match(emailRegex);\n\n    if (!match && this.changeEmail.newEmail !== '') {\n      this.notes.add(new Notification('error', 'Invalid email address.'));\n      this.changeEmail.submitted = false;\n\n      return;\n    }\n\n    this.users.changeEmail(this.changeEmail.newEmail)\n      .subscribe((response: ApiResponse) => {\n        this.addAlerts(response.alerts);\n        this.resetEmailForm();\n        this.changeEmail.submitted = false;\n      });\n  }\n\n  resetPasswordForm() {\n    this.changePassword = new PassForm();\n  }\n\n  resetUsernameForm() {\n    this.changeUsername = new UsernameForm();\n  }\n\n  resetEmailForm() {\n    this.changeEmail = new EmailForm(this.user.email);\n  }\n\n  private addAlerts(alerts: Notification[]) {\n    alerts.forEach(msg => {\n      this.notes.add(msg);\n    });\n  }\n\n  private resetForms() {\n    this.resetPasswordForm();\n    this.resetUsernameForm();\n    this.resetEmailForm();\n  }\n\n  private validatePassForm() {\n    if (this.changePassword.current === '' ||\n        this.changePassword.newPass === '' ||\n        this.changePassword.verPass === '') {\n      this.notes.add(new Notification(\n        'error',\n        'All fields are required to change your password.'));\n      this.changePassword.submitted = false;\n\n      return false;\n    }\n\n    if (this.changePassword.newPass !== this.changePassword.verPass) {\n      this.notes.add(new Notification(\n        'error',\n        'New password and verify password do not match.'));\n      this.changePassword.submitted = false;\n\n      return false;\n    }\n\n    return true;\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { LocationStrategy } from '@angular/common';\n\nimport { Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { ApiResponse } from 'src/app/shared/models';\nimport { ModalUser } from './user-admin.models';\nimport { ApiService } from 'src/app/shared/services';\n\n@Injectable()\nexport class UserAdminService extends ApiService {\n  constructor(private http: HttpClient, strat: LocationStrategy) {\n    super(strat);\n  }\n\n  addUser(user: ModalUser): Observable<ApiResponse> {\n    return this.http.post(this.apiBase + 'users', user)\n    .pipe(\n      map((response: ApiResponse) =>  response),\n      catchError((err) =>  of(err.error as ApiResponse))\n    );\n  }\n\n  editUser(user: ModalUser): Observable<ApiResponse> {\n    return this.http.post(this.apiBase + 'users/' + user.id, user)\n    .pipe(\n      map((response: ApiResponse) =>  response),\n      catchError((err) =>  of(err.error as ApiResponse))\n    );\n  }\n\n  removeUser(userId: number): Observable<ApiResponse> {\n    return this.http.delete(this.apiBase + 'users/' + userId)\n    .pipe(\n      map((response: ApiResponse) =>  response),\n      catchError((err) =>  of(err.error as ApiResponse))\n    );\n  }\n}\n\n","import { User } from '../../shared/models';\n\nexport class UserDisplay extends User {\n  /* tslint:disable:variable-name */\n  public default_board_name: string;\n  public security_level_name: string;\n  public can_admin: boolean;\n  /* tslint:enable:variable-name */\n}\n\nexport class ModalUser extends UserDisplay {\n  public password = '';\n  public password_verify: string = ''; // tslint:disable-line\n  public boardAccess: string[] = [];\n\n  /* istanbul ignore next */\n  constructor(user: User) {\n    super(+user.default_board_id, user.email, +user.id,\n          user.last_login, +user.security_level, +user.user_option_id,\n          user.username, user.board_access);\n\n    if (+user.id === 0) {\n      this.security_level = 3;\n    }\n\n    user.board_access.forEach(id => {\n      this.boardAccess.push('' + id);\n    });\n  }\n}\n\nexport class ModalProperties {\n  constructor(public prefix: boolean,\n              public user: ModalUser) {\n  }\n}\n\n","<section>\n  <h2>{{ strings['settings_userAdmin'] }}</h2>\n\n  <div class=\"row\">\n    <table class=\"alternating\">\n      <thead>\n        <tr>\n          <th>{{ strings['settings_user'] }}</th>\n          <th>{{ strings['settings_email'] }}</th>\n          <th>{{ strings['settings_securityLevel'] }}</th>\n          <th>{{ strings['settings_defaultBoard'] }}</th>\n          <th>{{ strings['settings_actions'] }}</th>\n        </tr>\n      </thead>\n      <tbody *ngIf=\"!loading\">\n        <tr *ngFor=\"let user of users\">\n          <td>{{ user.username }}</td>\n          <td>{{ user.email }}</td>\n          <td>{{ user.security_level_name }}</td>\n          <td>{{ user.default_board_name }}</td>\n          <td>\n            <span *ngIf=\"user.can_admin\">\n              <a class=\"padded\" href=\"javascript:\"\n                title=\"{{ strings['settings_editUser'] }}\"\n                (click)=\"showModal(false, user)\">\n                <i class=\"icon icon-edit color-primary\"></i>\n              </a>\n              <a class=\"padded\" href=\"javascript:\"\n                title=\"{{ strings['settings_removeUser'] }}\"\n                (click)=\"showConfirmModal(user)\">\n                <i class=\"icon icon-trash-empty color-secondary\"></i>\n              </a>\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <div *ngIf=\"loading\" class=\"center\">\n      <div class=\"spinner\"></div>\n    </div>\n\n    <button *ngIf=\"activeUser && activeUser.security_level < 3\"\n      (click)=\"showModal()\">\n      <i class=\"icon icon-plus\"></i>\n      {{ strings['settings_addUser'] }}\n    </button>\n  </div>\n</section>\n\n<tb-modal modal-title=\"Confirm User Removal\" blocking=\"true\"\n  modal-id=\"{{ MODAL_CONFIRM_ID }}\">\n  <div class=\"center\">\n    {{ strings['settings_removeUserWarning'] }}<br>\n    {{ strings['settings_continue'] }}\n  </div>\n  <div class=\"buttons\">\n    <button class=\"flat\"\n      (click)=\"removeUser()\">{{ strings['yes'] }}</button>\n    <button #defaultAction #focusMe\n      (click)=\"modal.close(MODAL_CONFIRM_ID)\">{{ strings['no'] }}</button>\n  </div>\n</tb-modal>\n\n<tb-modal modal-title=\"{{ modalProps.prefix ? strings['settings_addUser']\n  : strings['settings_editUser'] }}\"\n  modal-id=\"{{ MODAL_ID }}\">\n  <label>\n    {{ modalProps.prefix ? strings['settings_username']\n    : strings['settings_changeUsername'] }}\n    <input #focusMe type=\"text\" name=\"new-username\"\n    placeholder=\"{{ strings['settings_username'] }}\"\n    [(ngModel)]=\"modalProps.user.username\">\n  </label>\n\n  <label>\n    {{ modalProps.prefix ? strings['settings_password']\n    : strings['settings_changePassword']}}\n    <input type=\"password\" name=\"new-password\"\n    placeholder=\"{{ strings['settings_password'] }}\"\n    [(ngModel)]=\"modalProps.user.password\">\n  </label>\n  <input type=\"password\" name=\"new-password-verify\"\n  placeholder=\"{{ strings['settings_verifyPassword'] }}\"\n  [(ngModel)]=\"modalProps.user.password_verify\">\n\n  <label>\n    {{ modalProps.prefix ? strings['settings_email']\n    : strings['settings_changeEmail']}}\n    <input type=\"text\" name=\"new-email\"\n    placeholder=\"{{ strings['settings_emailPlaceholder'] }}\"\n    [(ngModel)]=\"modalProps.user.email\">\n  </label>\n\n  <div *ngIf=\"boards.length\">\n    <label>\n      {{ strings['settings_defaultBoard'] }}\n      <i [attr.data-help]=\"strings['settings_defaultBoardHelp']\"\n        class=\"icon icon-help-circled\"></i>\n      <select [(ngModel)]=\"modalProps.user.default_board_id\">\n        <option value=\"0\">{{ strings['none'] }}</option>\n        <option *ngFor=\"let board of boards\" value=\"{{ board.id }}\">\n          {{ board.name }}\n        </option>\n      </select>\n    </label>\n\n    <label>\n      {{ strings['settings_boardAccess'] }}\n      <select multiple [(ngModel)]=\"modalProps.user.boardAccess\">\n        <option *ngFor=\"let board of boards\" value=\"{{ board.id }}\">\n          {{ board.name }}\n        </option>\n      </select>\n    </label>\n  </div>\n\n  <label>\n    {{ strings['settings_securityLevel'] }}\n    <select name=\"new-security\"\n      [(ngModel)]=\"modalProps.user.security_level\">\n      <option value=\"3\">{{ strings['settings_user'] }}</option>\n      <option value=\"2\">{{ strings['settings_boardAdmin'] }}</option>\n      <option value=\"1\">{{ strings['settings_admin'] }}</option>\n    </select>\n  </label>\n\n  <div class=\"buttons\">\n    <button #defaultAction\n      (click)=\"addEditUser()\" [disabled]=\"saving\">\n      <i class=\"icon\"\n        [ngClass]=\"{ 'icon-plus': modalProps.prefix,\n        'icon-floppy': !modalProps.prefix }\"></i>\n      {{ modalProps.prefix ? strings['settings_addUser']\n      : strings['settings_saveUser'] }}\n    </button>\n    <button class=\"flat\" (click)=\"modal.close(MODAL_ID)\">\n      {{ strings['cancel'] }}\n    </button>\n  </div>\n</tb-modal>\n\n","import { Component } from '@angular/core';\n\nimport { UserAdminService } from './user-admin.service';\nimport { SettingsService } from '../settings.service';\n\nimport {\n  ApiResponse,\n  Board,\n  Notification,\n  User\n} from '../../shared/models';\nimport {\n  AuthService,\n  ModalService,\n  NotificationsService,\n  StringsService\n} from '../../shared/services';\n\nimport {\n  UserDisplay,\n  ModalUser,\n  ModalProperties\n} from './user-admin.models';\n\n@Component({\n  selector: 'tb-user-admin',\n  templateUrl: './user-admin.component.html',\n  providers: [ UserAdminService ]\n})\nexport class UserAdminComponent {\n  public users: UserDisplay[];\n\n  public userToRemove: UserDisplay;\n\n  public boards: Board[];\n  public activeUser: User;\n  public modalProps: ModalProperties;\n  public strings: any;\n\n  public loading = true;\n  public saving = false;\n\n  public MODAL_ID: string;\n  public MODAL_CONFIRM_ID: string;\n\n  constructor(public userService: UserAdminService,\n              private notes: NotificationsService,\n              public auth: AuthService,\n              private settings: SettingsService,\n              public modal: ModalService,\n              public stringsService: StringsService) {\n    this.MODAL_ID = 'user-addEdit-form';\n    this.MODAL_CONFIRM_ID = 'user-remove-confirm';\n\n    this.users = [];\n    this.boards = [];\n    this.modalProps = new ModalProperties(true, new ModalUser(new User()));\n\n    auth.userChanged\n      .subscribe(activeUser => {\n        if (!activeUser) {\n          return;\n        }\n\n        this.activeUser = new User(+activeUser.default_board_id,\n          activeUser.email,\n          +activeUser.id,\n          activeUser.last_login,\n          +activeUser.security_level,\n          +activeUser.user_option_id,\n          activeUser.username,\n          activeUser.board_access);\n        this.replaceUser(activeUser);\n      });\n\n    stringsService.stringsChanged.subscribe(newStrings => {\n      this.strings = newStrings;\n      this.updateUserList();\n    });\n\n    settings.boardsChanged\n      .subscribe(boards => {\n        this.boards = boards;\n      });\n\n    settings.getUsers()\n      .subscribe((response: ApiResponse) => {\n        if (response.data[1]) {\n          response.data[1].forEach((user: any) => {\n            this.users.push(this.convertUser(user));\n          });\n        }\n\n        this.getBoards();\n      });\n  }\n\n  addEditUser(): void {\n    if (!this.modal.isOpen(this.MODAL_ID)) {\n      return;\n    }\n\n    const isAdd = this.modalProps.prefix;\n    this.saving = true;\n\n    if (!this.validateModalUser()) {\n      this.saving = false;\n      return;\n    }\n\n    if (isAdd) {\n      this.userService.addUser(this.modalProps.user)\n        .subscribe((response: ApiResponse) => {\n          response.alerts.forEach(note => this.notes.add(note));\n\n          this.replaceUserList(response);\n          this.closeModal(response.status);\n        });\n\n      return;\n    }\n\n    this.userService.editUser(this.modalProps.user)\n    .subscribe((response: ApiResponse) => {\n      response.alerts.forEach(note => this.notes.add(note));\n\n      this.replaceUser(JSON.parse(response.data[1]));\n      this.closeModal(response.status);\n    });\n  }\n\n  removeUser(): void {\n    this.userService.removeUser(this.userToRemove.id)\n    .subscribe((response: ApiResponse) => {\n      response.alerts.forEach(note => this.notes.add(note));\n      this.replaceUserList(response);\n\n      if (response.status === 'success') {\n        this.modal.close(this.MODAL_CONFIRM_ID);\n        this.getBoards();\n      }\n    });\n  }\n\n  showModal(isAdd: boolean = true, user?: UserDisplay): void {\n    this.modalProps = {\n      prefix: isAdd,\n      user: isAdd ? new ModalUser(new User()) : new ModalUser(user)\n    };\n\n    this.modal.open(this.MODAL_ID);\n  }\n\n  showConfirmModal(user: UserDisplay): void {\n    this.userToRemove = user;\n    this.modal.open(this.MODAL_CONFIRM_ID);\n  }\n\n  private closeModal(status: string): void {\n    /* istanbul ignore else */\n    if (status === 'success') {\n      this.modal.close(this.MODAL_ID);\n      this.saving = false;\n\n      this.getBoards();\n    }\n  }\n\n  private getBoards(): void {\n    this.settings.getBoards()\n    .subscribe((response: ApiResponse) => {\n      const boards = response.data[1];\n      this.boards = [];\n\n      /* istanbul ignore else */\n      if (boards) {\n        boards.forEach((board: any) => {\n          this.boards.push(new Board(+board.id, board.name,\n            board.is_active === '1',\n            board.ownColumn,\n            board.ownCategory,\n            board.ownAutoAction,\n            board.ownIssuetracker,\n            board.sharedUser));\n        });\n      }\n\n      this.settings.updateBoards(this.boards);\n\n      this.updateUserList();\n      this.getActions();\n    });\n  }\n\n  private getActions(): void {\n    this.settings.getActions()\n    .subscribe((response: ApiResponse) => {\n      this.settings.updateActions(response.status === 'success'\n        /* istanbul ignore next */\n        ? response.data[1]\n        : []);\n      this.loading = false;\n    });\n  }\n\n  private convertUser(user: any): UserDisplay {\n    return new UserDisplay(+user.default_board_id, user.email,\n      +user.id, user.last_login, +user.security_level,\n      +user.user_option_id, user.username,\n      user.board_access);\n  }\n\n  private replaceUser(newUser: User) {\n    this.users.forEach((user, index) => {\n      if (+user.id === +newUser.id) {\n        this.users[index] = this.convertUser(newUser);\n        this.updateUserList();\n      }\n    });\n  }\n\n  private replaceUserList(response: ApiResponse): void {\n    /* istanbul ignore else */\n    if (response.status === 'success') {\n      this.users = [];\n\n      response.data[1].forEach((user: any) => {\n        this.users.push(this.convertUser(user));\n      });\n\n      this.updateUserList();\n    }\n  }\n\n  private validateModalUser(): boolean {\n    const user = this.modalProps.user;\n\n    if (user.username === '') {\n      this.notes.add(\n        new Notification('error', this.strings.settings_usernameRequired));\n      return false;\n    }\n\n    if (this.modalProps.prefix && user.password === '') {\n      this.notes.add(\n        new Notification('error', this.strings.settings_passwordRequired));\n      return false;\n    }\n\n    if (user.password !== user.password_verify) {\n      this.notes.add(\n        new Notification('error', this.strings.settings_verifyError));\n      return false;\n    }\n\n    const emailRegex = /.+@.+\\..+/i;\n    const match = user.email.match(emailRegex);\n\n    if (!match && user.email !== '') {\n      this.notes.add(\n        new Notification('error', this.strings.settings_emailError));\n      return false;\n    }\n\n    return true;\n  }\n\n  private getDefaultBoardName(user: UserDisplay): string {\n    const filtered = this.boards\n      .filter(board => board.id === user.default_board_id);\n\n    if (filtered.length) {\n      return filtered[0].name;\n    }\n\n    return this.strings.none;\n  }\n\n  private updateUserList(): void {\n    this.users.forEach((user: UserDisplay) => {\n      user.default_board_name = this.getDefaultBoardName(user);\n      user.security_level_name = +user.security_level === 1\n        ? this.strings.settings_admin\n        : +user.security_level === 2\n        ? this.strings.settings_boardAdmin\n        : this.strings.settings_user;\n      user.can_admin = true;\n\n      if (+user.id === +this.activeUser.id ||\n        +this.activeUser.security_level === 3) {\n        user.can_admin = false;\n      }\n    });\n\n    this.settings.updateUsers(this.users as User[]);\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { LocationStrategy } from '@angular/common';\n\nimport { Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { ApiResponse } from '../../shared/models';\nimport { BoardData } from './board-data.model';\nimport { ApiService } from 'src/app/shared/services';\n\n@Injectable()\nexport class BoardAdminService extends ApiService {\n  constructor(private http: HttpClient, strat: LocationStrategy) {\n    super(strat);\n  }\n\n  addBoard(board: BoardData): Observable<ApiResponse> {\n    return this.http.post(this.apiBase + 'boards', board)\n    .pipe(\n      map((response: ApiResponse) =>  response),\n      catchError((err) =>  of(err.error as ApiResponse))\n    );\n  }\n\n  editBoard(board: BoardData): Observable<ApiResponse> {\n    return this.http.post(this.apiBase + 'boards/' + board.id, board)\n    .pipe(\n      map((response: ApiResponse) =>  response),\n      catchError((err) =>  of(err.error as ApiResponse))\n    );\n  }\n\n  removeBoard(boardId: number): Observable<ApiResponse> {\n    return this.http.delete(this.apiBase + 'boards/' + boardId)\n    .pipe(\n      map((response: ApiResponse) =>  response),\n      catchError((err) =>  of(err.error as ApiResponse))\n    );\n  }\n\n}\n\n","import { User } from '../../shared/models';\n\nexport class BoardData {\n  constructor(public title = '',\n              public id = 0,\n              public name = '',\n              public is_active = true, // tslint:disable-line\n              public columns: any[] = [],\n              public categories: any[] = [],\n              public issue_trackers: any[] = [], // tslint:disable-line\n              public users: User[] = [],\n              public categoryDefaultColor = '#ffffe0',\n              public newColumnName = '',\n              public newCategoryName = '',\n              public issueTrackerUrl = '',\n              public issueTrackerBugId = '') { }\n\n  addColumn(): void {\n    if (this.newColumnName === '') {\n      return;\n    }\n\n    this.columns.push({\n      name: this.newColumnName,\n      position: this.columns.length\n    });\n    this.newColumnName = '';\n  }\n\n  removeColumn(column: any): void {\n    const index = this.columns.indexOf(column);\n\n    if (index === -1) {\n      return;\n    }\n\n    this.columns.splice(index, 1);\n  }\n\n  addCategory(): void {\n    if (this.newCategoryName === '') {\n      return;\n    }\n\n    this.categories.push({\n      name: this.newCategoryName,\n      default_task_color: this.categoryDefaultColor\n    });\n    this.newCategoryName = '';\n  }\n\n  removeCategory(category: any): void {\n    const index = this.categories.indexOf(category);\n\n    if (index === -1) {\n      return;\n    }\n\n    this.categories.splice(index, 1);\n  }\n\n  addIssueTracker(): void {\n    if (this.issueTrackerUrl === '' || this.issueTrackerBugId === '') {\n      return;\n    }\n\n    this.issue_trackers.push({\n      url: this.issueTrackerUrl,\n      regex: this.issueTrackerBugId\n    });\n    this.issueTrackerUrl = '';\n    this.issueTrackerBugId = '';\n  }\n\n  removeIssueTracker(tracker: any): void {\n    const index = this.issue_trackers.indexOf(tracker);\n\n    if (index === -1) {\n      return;\n    }\n\n    this.issue_trackers.splice(index, 1);\n  }\n}\n\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\n\n@Component({\n  selector: 'tb-inline-edit',\n  templateUrl: './inline-edit.component.html'\n})\nexport class InlineEditComponent {\n  public isDisplay = true;\n\n  @Input() text: string;\n  @Input() isTextarea: boolean;\n  @Output() edit = new EventEmitter<string>();\n\n  beginEdit(el: HTMLElement): void {\n    this.isDisplay = false;\n\n    setTimeout(() => { el.focus(); }, 100);\n  }\n\n  editDone(newText: string, event?: Event): void {\n    this.isDisplay = true;\n    this.text = newText;\n    this.edit.emit(this.text);\n\n    // Prevent Enter key from propagating to parent controls\n    if (event && event.stopPropagation) {\n      event.stopPropagation();\n    }\n  }\n}\n\n","<div class=\"inline-edit\">\n  <span [hidden]=\"!isDisplay\">\n    {{ text }}\n    <i class=\"icon icon-edit color-primary\" title=\"Edit\"\n      (click)=\"beginEdit(editText)\"></i>\n  </span>\n  <span [hidden]=\"isDisplay\">\n    <input #editText type=\"text\"\n    [value]=\"text\" (keyup.enter)=\"editDone(editText.value, $event)\">\n    <i class=\"icon icon-floppy color-primary\" title=\"Save\"\n      (click)=\"editDone(editText.value)\"></i>\n  </span>\n</div>\n\n","<section>\n  <h2>{{ strings['settings_boardAdministration'] }}</h2>\n\n  <div class=\"row\">\n    <h3>{{ strings['settings_currentBoards']  }}</h3>\n\n    <div class=\"small right filters\" *ngIf=\"boards.length\">\n      <label class=\"inline right\">\n        {{ strings['settings_showByUser'] }}:\n        <select class=\"autosize\" [(ngModel)]=\"userFilter\"\n          (change)=\"filterBoards()\">\n          <option value=\"-1\">{{ strings['settings_anyUser'] }}</option>\n          <option *ngFor=\"let user of users\"\n            [value]=\"user.id\">\n            {{ user.username }}\n          </option>\n        </select>\n      </label>\n\n      <label class=\"inline right\">\n        {{ strings['settings_filterBy'] }}:\n        <select class=\"autosize\" [(ngModel)]=\"statusFilter\"\n          (change)=\"filterBoards()\">\n          <option value=\"-1\">{{ strings['settings_allBoards'] }}</option>\n          <option value=\"1\">{{ strings['settings_active'] }}</option>\n          <option value=\"0\">{{ strings['settings_inactive'] }}</option>\n        </select>\n      </label>\n\n      <label class=\"inline right\">\n        {{ strings['sortBy'] }}:\n        <select class=\"autosize\" [(ngModel)]=\"sortFilter\"\n          (change)=\"filterBoards()\">\n          <option value=\"name-asc\">{{ strings['settings_name'] }} (A-Z)</option>\n          <option value=\"name-desc\">{{ strings['settings_name'] }} (Z-A)</option>\n          <option value=\"id-desc\">{{ strings['settings_creationNew'] }}</option>\n          <option value=\"id-asc\">{{ strings['settings_creationOld'] }}</option>\n        </select>\n      </label>\n    </div>\n\n    <table class=\"alternating\">\n      <thead>\n        <tr>\n          <th>{{ strings['settings_name'] }}</th>\n          <th>{{ strings['settings_columns'] }}</th>\n          <th>{{ strings['settings_categories'] }}</th>\n          <th>{{ strings['settings_users'] }}</th>\n          <th>{{ strings['settings_actions'] }}</th>\n        </tr>\n      </thead>\n\n      <tbody *ngIf=\"!loading\">\n        <tr *ngIf=\"boards.length === 0\">\n          <td colspan=\"5\" class=\"center\"\n            [innerHTML]=\"noBoardsMessage\"></td>\n        </tr>\n        <tr *ngFor=\"let board of displayBoards\">\n          <td>\n            <a href=\"javscript:\" [routerLink]=\"['/boards/' +  board.id]\">\n              {{ board.name }}</a>\n          </td>\n\n          <td>\n            <ul>\n              <li *ngFor=\"let col of board.columns\">\n                {{ col.name }}\n                <span class=\"badge\" title=\"Task Count\">\n                  {{ col.tasks ? col.tasks.length : 0 }}</span>\n              </li>\n            </ul>\n          </td>\n\n          <td>\n            <ul *ngIf=\"board.categories && board.categories.length\">\n              <li *ngFor=\"let cat of board.categories\">\n                {{ cat.name }}\n                <span class=\"badge\"\n                  [title]=\"strings['settings_defaultTaskColor']\"\n                  [style.background-color]=\"getColor(cat)\">\n                  &nbsp;\n                </span>\n              </li>\n            </ul>\n          </td>\n\n          <td>\n            <ul>\n              <li *ngFor=\"let user of board.users\">\n                {{ user.username }}\n              </li>\n            </ul>\n          </td>\n\n          <td>\n            <span *ngIf=\"activeUser && activeUser.security_level < 3\">\n              <a class=\"padded\" href=\"javascript:\"\n                title=\"{{ strings['settings_editBoard'] }}\"\n                (click)=\"showModal('Edit', board)\">\n                <i class=\"icon icon-edit color-primary\"></i>\n              </a>\n              <a class=\"padded\" href=\"javascript:\"\n                title=\"{{ strings['settings_removeBoard'] }}\"\n                (click)=\"showConfirmModal(board)\">\n                <i class=\"icon icon-trash-empty\n                  color-secondary\"></i>\n              </a>\n              <label class=\"padded\">\n                <input type=\"checkbox\" class=\"hidden\"\n                (change)=\"toggleBoardStatus(board)\"\n                [ngModel]=\"board.is_active\">\n                <span class=\"toggle\"></span>\n                {{ board.is_active\n                ? strings['settings_active']\n                : strings['settings_inactive'] }}\n              </label>\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <div *ngIf=\"loading\" class=\"center\">\n      <div class=\"spinner\"></div>\n    </div>\n\n    <button *ngIf=\"activeUser && activeUser.security_level === 1\"\n      (click)=\"showModal('Add')\">\n      <i class=\"icon icon-plus\"></i> {{ strings['settings_addBoard'] }}\n    </button>\n  </div>\n</section>\n\n<tb-modal modal-title=\"{{ strings['settings_confirmBoardRemoval'] }}\"\n  blocking=\"true\" modal-id=\"{{ MODAL_CONFIRM_ID }}\">\n\n  <div class=\"center\">\n    {{ strings['settings_removeBoardWarning'] }}<br>{{ strings['settings_continue'] }}\n  </div>\n\n  <div class=\"buttons\">\n    <button class=\"flat\"\n      (click)=\"removeBoard()\"\n      [disabled]=\"saving\">{{ strings['yes'] }}</button>\n    <button #defaultAction #focusMe\n      (click)=\"modal.close(MODAL_CONFIRM_ID)\"\n      [disabled]=\"saving\">{{ strings['no'] }}</button>\n  </div>\n</tb-modal>\n\n<tb-modal modal-title=\"{{ modalProps.title === 'Add' ?\n  strings['settings_addBoard'] : strings['settings_editBoard'] }}\"\n  modal-id=\"{{ MODAL_ID }}\" wide=\"true\">\n  <label>\n    {{ strings['settings_boardName'] }}\n    <input #focusMe type=\"text\" name=\"board-name\"\n    placeholder=\"Board Name\" [(ngModel)]=\"modalProps.name\">\n  </label>\n\n  <div class=\"half-modal\">\n    <label>{{ strings['settings_columns'] }}</label>\n    <ul class=\"modal-list\" [hidden]=\"!modalProps.columns.length\"\n      cdkDropList [cdkDropListData]=\"modalProps.columns\"\n      (cdkDropListDropped)=\"dropColumns($event)\">\n      <li class=\"drag-item\" cdkDrag\n        *ngFor=\"let column of modalProps.columns; let i = index\">\n        <i class=\"icon icon-resize-vertical\" cdkDragHandle></i>\n        <tb-inline-edit [text]=\"getPropertyValue('columns', 'name', i)\"\n          (edit)=\"onPropertyEdit('columns', 'name', i, $event)\"></tb-inline-edit>\n        <span class=\"actions\">\n          <i class=\"icon icon-trash-empty color-secondary\"\n            title=\"{{ strings['settings_removeColumn'] }}\"\n            (click)=\"modalProps.removeColumn(column)\"></i>\n        </span>\n      </li>\n    </ul>\n\n    <div class=\"quick-add\">\n      <form>\n        <input type=\"text\" name=\"new-column\"\n        placeholder=\"{{ strings['settings_columnName'] }}\"\n        (keyup.enter)=\"cancelEnterKey($event)\"\n        [(ngModel)]=\"modalProps.newColumnName\">\n        <button type=\"submit\" class=\"flat\"\n          title=\"{{ strings['settings_addColumn'] }}\"\n          (click)=\"modalProps.addColumn()\">\n          <i class=\"icon icon-plus\"></i>\n        </button>\n      </form>\n    </div>\n  </div>\n\n  <div class=\"half-modal\">\n    <label>{{ strings['settings_categories'] }}</label>\n    <ul *ngIf=\"modalProps.categories.length\" class=\"modal-list category-list\">\n      <li *ngFor=\"let category of modalProps.categories; let i = index\">\n        <input type=\"color\" [title]=\"strings['settings_defaultTaskColor']\"\n        [ngModel]=\"getColor(category)\"\n        (ngModelChange)=\"setCategoryColor($event, i)\">\n        <tb-inline-edit [text]=\"getPropertyValue('categories', 'name', i)\"\n          (edit)=\"onPropertyEdit('categories', 'name', i, $event)\"></tb-inline-edit>\n        <span class=\"actions\">\n          <i class=\"icon icon-trash-empty color-secondary\"\n            title=\"{{ strings['settings_removeCategory'] }}\"\n            (click)=\"modalProps.removeCategory(category)\"></i>\n        </span>\n      </li>\n    </ul>\n\n    <div class=\"quick-add categories\">\n      <form>\n        <input type=\"text\" name=\"new-category\"\n        placeholder=\"{{ strings['settings_categoryName'] }}\"\n        (keyup.enter)=\"cancelEnterKey($event)\"\n        [(ngModel)]=\"modalProps.newCategoryName\">\n        <input type=\"color\" name=\"category-default-color\"\n        [title]=\"strings['settings_defaultTaskColor']\"\n        [(ngModel)]=\"modalProps.categoryDefaultColor\">\n        <button type=\"submit\" class=\"flat\" [title]=\"strings['settings_addCategory']\"\n          (click)=\"modalProps.addCategory()\">\n          <i class=\"icon icon-plus\"></i>\n        </button>\n      </form>\n    </div>\n  </div>\n\n  <div class=\"clearfix\"></div>\n\n  <div class=\"issue-trackers\">\n    <label>\n      {{ strings['settings_issueTrackers'] }}\n      <i class=\"icon icon-help-circled\"\n        [attr.data-help]=\"strings['settings_issueTrackersHelp']\"></i>\n    </label>\n\n    <ul *ngIf=\"modalProps.issue_trackers.length\" class=\"modal-list\">\n      <li class=\"double-edit\"\n        *ngFor=\"let tracker of modalProps.issue_trackers; let i = index\">\n        <tb-inline-edit class=\"first\"\n          [text]=\"getPropertyValue('issue_trackers', 'url', i)\"\n          (edit)=\"onPropertyEdit('issue_trackers', 'url', i, $event)\">\n        </tb-inline-edit>\n        <tb-inline-edit class=\"last\"\n          [text]=\"getPropertyValue('issue_trackers', 'regex', i)\"\n          (edit)=\"onPropertyEdit('issue_trackers', 'regex', i, $event)\">\n        </tb-inline-edit>\n        <span class=\"actions\">\n          <i class=\"icon icon-trash-empty color-secondary\"\n            (click)=\"modalProps.removeIssueTracker(tracker)\"></i>\n        </span>\n      </li>\n    </ul>\n\n    <div>\n      <form>\n        <input type=\"text\" name=\"issue-tracker\"\n        placeholder=\"{{ strings['settings_issueTrakcerUrl'] }}\"\n        (keyup.enter)=\"cancelEnterKey($event)\"\n        [(ngModel)]=\"modalProps.issueTrackerUrl\">\n        <input type=\"text\" name=\"issue-tracker-bug-id\"\n        placeholder=\"{{ strings['settings_issueTrackerRegExp'] }}\"\n        (keyup.enter)=\"cancelEnterKey($event)\"\n        [(ngModel)]=\"modalProps.issueTrackerBugId\">\n        <button type=\"submit\" class=\"flat\" [title]=\"strings['settings_addIssueTracker']\"\n          (click)=\"modalProps.addIssueTracker()\">\n          <i class=\"icon icon-plus\"></i>\n        </button>\n      </form>\n    </div>\n  </div>\n\n  <div class=\"users\">\n    <label>{{ strings['settings_selectUsers'] }}</label>\n    <div class=\"clearfix\"></div>\n    <label class=\"user-select\" *ngFor=\"let user of users; let i = index\">\n      <input type=\"checkbox\" [(ngModel)]=\"users[i].selected\">\n      {{ user.username }}\n      <span *ngIf=\"user.security_level === 2\">*</span>\n    </label>\n\n    <div>\n      <em *ngIf=\"hasBAUsers\"><strong>*</strong>\n        {{ strings['settings_boardAdminMessage'] }}<br></em>\n      <em>{{ strings['settings_adminAccessMessage'] }}</em>\n    </div>\n  </div>\n\n  <div class=\"buttons\">\n    <button #defaultAction (click)=\"addEditBoard()\" [disabled]=\"saving\">\n      <i class=\"icon\"\n        [ngClass]=\"{ 'icon-plus': modalProps.title === 'Add', 'icon-floppy': modalProps.title !== 'Add' }\"></i>\n      {{ modalProps.title === 'Add'\n      ? strings['settings_addBoard']\n      : strings['settings_saveBoard'] }}\n    </button>\n    <button class=\"flat\" (click)=\"modal.close(MODAL_ID)\">\n      {{ strings['cancel'] }}\n    </button>\n  </div>\n</tb-modal>\n\n","import { Component, OnDestroy } from '@angular/core';\nimport {\n  CdkDragDrop,\n  moveItemInArray,\n} from '@angular/cdk/drag-drop';\n\nimport {\n  ApiResponse,\n  Board,\n  Column,\n  User,\n  Notification\n} from '../../shared/models';\nimport {\n  AuthService,\n  ModalService,\n  NotificationsService,\n  StringsService\n} from '../../shared/services';\nimport { SettingsService } from '../settings.service';\nimport { BoardAdminService } from './board-admin.service';\nimport { BoardData } from './board-data.model';\n\nclass SelectableUser extends User {\n  public selected: boolean;\n}\n\n@Component({\n  selector: 'tb-board-admin',\n  templateUrl: './board-admin.component.html',\n  providers: [ BoardAdminService ]\n})\nexport class BoardAdminComponent implements OnDestroy {\n\n  private subs: any[];\n\n  public displayBoards: Board[];\n  public users: SelectableUser[];\n  public boards: Board[];\n  public activeUser: User;\n  public modalProps: BoardData;\n  public boardToRemove: Board;\n  public strings: any;\n\n  public hasBAUsers = false;\n  public loading = true;\n  public saving = false;\n\n  public userFilter: string;\n  public statusFilter: string;\n  public sortFilter: string;\n  public noBoardsMessage: string;\n\n  public MODAL_ID: string;\n  public MODAL_CONFIRM_ID: string;\n\n  constructor(public auth: AuthService,\n              public modal: ModalService,\n              public settings: SettingsService,\n              public boardService: BoardAdminService,\n              private notes: NotificationsService,\n              public stringsService: StringsService) {\n    this.MODAL_ID = 'board-addedit-form';\n    this.MODAL_CONFIRM_ID = 'board-remove-confirm';\n\n    this.users = [];\n    this.boards = [];\n    this.displayBoards = [];\n    this.subs = [];\n\n    this.modalProps = new BoardData();\n    this.activeUser = new User();\n\n    this.userFilter = '-1'; // Any User\n    this.statusFilter = '-1'; // Any active status\n    this.sortFilter = 'name-asc';\n\n    let sub = auth.userChanged.subscribe((user: User) => {\n      this.updateActiveUser(user);\n    });\n    this.subs.push(sub);\n\n    sub = settings.usersChanged.subscribe((users: User[]) => {\n      this.updateUsersList(users);\n    });\n    this.subs.push(sub);\n\n    sub = settings.boardsChanged.subscribe((boards: Board[]) => {\n      this.updateBoardsList(boards);\n    });\n    this.subs.push(sub);\n\n    sub = stringsService.stringsChanged.subscribe(newStrings => {\n      this.strings = newStrings;\n      this.updateActiveUser(this.activeUser);\n    });\n    this.subs.push(sub);\n  }\n\n  ngOnDestroy() {\n    this.subs.forEach(sub => sub.unsubscribe());\n  }\n\n  dropColumns(event: CdkDragDrop<string[]>) {\n    moveItemInArray(event.container.data,\n      event.previousIndex, event.currentIndex);\n\n    this.modalProps.columns.forEach((item, index) => {\n      item.position = index;\n    });\n  }\n\n  addEditBoard(): void {\n    if (!this.modal.isOpen(this.MODAL_ID)) {\n      return;\n    }\n\n    const isAdd = this.modalProps.title === 'Add';\n\n    this.saving = true;\n    this.setBoardUsers();\n\n    if (!this.validateBoard()) {\n      this.saving = false;\n      return;\n    }\n\n    if (isAdd) {\n      this.boardService.addBoard(this.modalProps)\n        .subscribe((response: ApiResponse) => {\n          this.handleResponse(response);\n        });\n      return;\n    }\n\n    this.boardService.editBoard(this.modalProps)\n      .subscribe((response: ApiResponse) => {\n        this.handleResponse(response);\n      });\n  }\n\n  removeBoard(): void {\n    this.saving = true;\n\n    this.boardService.removeBoard(this.boardToRemove.id)\n    .subscribe((response: ApiResponse) => {\n      this.handleResponse(response);\n\n      this.settings.getActions()\n        .subscribe((res: ApiResponse) => {\n          this.settings.updateActions(res.data[1]);\n        });\n    });\n  }\n\n  toggleBoardStatus(board: Board): void {\n    const boardData = new BoardData('', board.id, board.name,\n      !board.is_active, board.columns,\n      board.categories, board.issue_trackers,\n      board.users);\n\n    this.boardService.editBoard(boardData)\n    .subscribe((response: ApiResponse) => {\n      this.handleResponse(response);\n    });\n  }\n\n  filterBoards(): void {\n    const userBoards = this.filterBoardsByUser();\n    const statusBoards = this.filterBoardsByStatus();\n\n    this.displayBoards = [];\n\n    this.boards.forEach((board: Board) => {\n      let foundInUserBoards = false;\n      let foundInStatusBoards = false;\n\n      userBoards.forEach((userBoard: Board) => {\n        if (userBoard.id === board.id) {\n          foundInUserBoards = true;\n        }\n      });\n\n      statusBoards.forEach((statusBoard: Board) => {\n        if (statusBoard.id === board.id) {\n          foundInStatusBoards = true;\n        }\n      });\n\n      if (foundInUserBoards && foundInStatusBoards) {\n        this.displayBoards.push(board);\n      }\n    });\n\n    // Always sort the filtered boards\n    this.sortBoards();\n  }\n\n  cancelEnterKey(event: any): void {\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    }\n  }\n\n  private sortBoards(): void {\n    switch (this.sortFilter) {\n      case 'name-asc':\n        this.displayBoards.sort((a: Board, b: Board) => {\n          return a.name.localeCompare(b.name);\n        });\n        break;\n\n      case 'name-desc':\n        this.displayBoards.sort((a: Board, b: Board) => {\n          return b.name.localeCompare(a.name);\n        });\n        break;\n\n      case 'id-desc':\n        this.displayBoards.sort((a: Board, b: Board) => {\n          return b.id - a.id;\n        });\n        break;\n\n      case 'id-asc':\n        this.displayBoards.sort((a: Board, b: Board) => {\n          return a.id - b.id;\n        });\n        break;\n    }\n  }\n\n  private filterBoardsByUser(): Board[] {\n    if (+this.userFilter === -1) {\n      return this.deepCopy(this.boards);\n    }\n\n    const filteredBoards: Board[] = [];\n\n    this.boards.forEach((board: Board) => {\n      let userFound = false;\n\n      board.users.forEach(user => {\n        if (+user.id === +this.userFilter) {\n          userFound = true;\n        }\n      });\n\n      if (userFound) {\n        filteredBoards.push(board);\n      }\n    });\n\n    return filteredBoards;\n  }\n\n  private filterBoardsByStatus(): Board[] {\n    if (+this.statusFilter === -1) {\n      return this.deepCopy(this.boards);\n    }\n\n    const filteredBoards: Board[] = [];\n\n    this.boards.forEach((board: Board) => {\n      if ((board.is_active && +this.statusFilter === 1) ||\n        (!board.is_active && +this.statusFilter === 0)) {\n\n        filteredBoards.push(board);\n      }\n    });\n\n    return filteredBoards;\n  }\n\n  private validateBoard(): boolean {\n    if (this.modalProps.name === '') {\n      this.notes.add(\n        new Notification('error', this.strings.settings_boardNameError));\n      return false;\n    }\n\n    if (this.modalProps.columns.length === 0) {\n      this.notes.add(\n        new Notification('error', this.strings.settings_columnError));\n      return false;\n    }\n\n    return true;\n  }\n\n  private handleResponse(response: ApiResponse): void {\n    response.alerts.forEach(note => this.notes.add(note));\n\n    if (response.status === 'success') {\n      this.modal.close(this.MODAL_ID);\n      this.modal.close(this.MODAL_CONFIRM_ID);\n\n      const boards: Board[] = [];\n      response.data[1].forEach((board: any) => {\n        boards.push(new Board(+board.id, board.name,\n          board.is_active === '1', board.ownColumn,\n          board.ownCategory, board.ownAutoAction,\n          board.ownIssuetracker, board.sharedUser));\n      });\n\n      this.settings.updateBoards(boards);\n      this.saving = false;\n    }\n  }\n\n  private setBoardUsers(): void {\n    this.modalProps.users = [];\n\n    this.users.forEach(user => {\n      if (user.selected) {\n        this.modalProps.users.push(user);\n      }\n    });\n  }\n\n  private updateActiveUser(activeUser: User): void {\n    if (!activeUser) {\n      return;\n    }\n\n    this.activeUser = new User(+activeUser.default_board_id,\n      activeUser.email,\n      +activeUser.id,\n      activeUser.last_login,\n      +activeUser.security_level,\n      +activeUser.user_option_id,\n      activeUser.username,\n      activeUser.board_access);\n\n    if (!this.strings) {\n      return;\n    }\n\n    this.noBoardsMessage = this.strings.settings_noBoards;\n\n    if (+activeUser.security_level === 1) {\n      this.noBoardsMessage = this.strings.settings_noBoardsAdmin;\n    }\n  }\n\n  private updateUsersList(users: any[]): void {\n    this.users = [];\n    this.hasBAUsers = false;\n\n    users.forEach(user => {\n      // Don't include admin users\n      if (user.security_level > 1) {\n        this.users.push(user);\n\n        if (user.security_level === 2) {\n          this.hasBAUsers = true;\n        }\n      }\n    });\n  }\n\n  private updateBoardsList(boards: Board[]): void {\n    this.boards = boards;\n\n    this.boards.forEach(board => {\n      board.columns.sort((a: Column, b: Column) => {\n        return +a.position - +b.position;\n      });\n    });\n\n    this.filterBoards();\n\n    this.loading = false;\n  }\n\n  public getPropertyValue(obj: string, prop: string, i: number): string {\n    return this.modalProps[obj][i][prop];\n  }\n\n  public onPropertyEdit(obj: string, prop: string,\n                        i: number, value: any): void {\n    this.modalProps[obj][i][prop] = value;\n  }\n\n  public getColor(category: any): string {\n    if (category.default_task_color) {\n      return category.default_task_color;\n    }\n\n    return category.defaultColor;\n  }\n\n  public setCategoryColor(color: any, index: number): void {\n    this.modalProps.categories[index].default_task_color = color;\n  }\n\n  private deepCopy(source: any): any {\n    let output: any;\n    let value: any;\n\n    output = Array.isArray(source) ? [] : {};\n\n    for (const key in source) {\n      if (source.hasOwnProperty(key)) {\n        value = source[key];\n        output[key] = (typeof value === 'object') ?\n          this.deepCopy(value) : value;\n      }\n    }\n\n    return output;\n  }\n\n  public showModal(title: string, board?: Board): void {\n    const isAdd = (title === 'Add');\n\n    this.modalProps = new BoardData(title);\n\n    if (isAdd) {\n      this.users.forEach((user: SelectableUser) => {\n        user.selected = false;\n      });\n    } else {\n      this.modalProps.id = board.id;\n      this.modalProps.name = board.name;\n      this.modalProps.columns = this.deepCopy(board.columns);\n      this.modalProps.categories = this.deepCopy(board.categories);\n      this.modalProps.issue_trackers = this.deepCopy(board.issue_trackers);\n\n      this.users.forEach((user: SelectableUser) => {\n        const filtered = board.users.filter(u => +u.id === user.id);\n\n        user.selected = filtered.length > 0;\n      });\n    }\n\n    this.modal.open(this.MODAL_ID);\n  }\n\n  public showConfirmModal(board: Board): void {\n    this.boardToRemove = board;\n    this.modal.open(this.MODAL_CONFIRM_ID);\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { LocationStrategy } from '@angular/common';\n\nimport { Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport {\n  ApiResponse,\n  AutoAction\n} from '../../shared/models';\nimport { ApiService } from 'src/app/shared/services';\n\n@Injectable()\nexport class AutoActionsService extends ApiService {\n  constructor(private http: HttpClient, strat: LocationStrategy) {\n    super(strat)\n  }\n\n  addAction(action: AutoAction): Observable<ApiResponse> {\n    return this.http.post(this.apiBase + 'autoactions', action)\n    .pipe(\n      map((response: ApiResponse) =>  response),\n      catchError((err) =>  of(err.error as ApiResponse))\n    );\n  }\n\n  removeAction(action: AutoAction): Observable<ApiResponse> {\n    return this.http.delete(this.apiBase + 'autoactions/' + action.id)\n    .pipe(\n      map((response: ApiResponse) =>  response),\n      catchError((err) =>  of(err.error as ApiResponse))\n    );\n  }\n}\n\n","<section>\n  <h2>{{ strings['settings_automaticActions'] }}</h2>\n\n  <div class=\"row\">\n    <h3>{{ strings['settings_currentAction'] }}</h3>\n\n    <table class=\"alternating no-bottom-margin\">\n      <thead>\n        <tr>\n          <th>{{ strings['settings_board'] }}</th>\n          <th>{{ strings['settings_trigger'] }}</th>\n          <th>{{ strings['settings_action'] }}</th>\n          <th>{{ strings['settings_remove'] }}</th>\n        </tr>\n      </thead>\n\n      <tbody *ngIf=\"!loading\">\n        <tr *ngIf=\"autoActions && autoActions.length === 0\">\n          <td colspan=\"4\" class=\"center\"\n            [innerHTML]=\"noActionsMessage\"></td>\n        </tr>\n        <tr *ngFor=\"let action of autoActions\">\n          <td>{{ getBoardName(action.board_id) }}</td>\n          <td>{{ getTriggerDescription(action) }}</td>\n          <td [innerHTML]=\"getTypeDescription(action)\"></td>\n          <td>\n            <span *ngIf=\"activeUser && activeUser.security_level < 3\">\n              <a href=\"javascript:\"\n                title=\"{{ strings['settings_removeAutoAction'] }}\"\n                (click)=\"showConfirmModal(action)\">\n                <i class=\"icon icon-trash-empty\n                  color-secondary\"></i>\n              </a>\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <div *ngIf=\"!loading && hasInactiveBoards\">\n      <em>* {{ strings['settings_inactiveBoardMessage'] }}</em>\n    </div>\n\n    <div *ngIf=\"loading\" class=\"center\">\n      <div class=\"spinner\"></div>\n    </div>\n  </div>\n\n  <div class=\"row\" *ngIf=\"activeUser && activeUser.security_level < 3\">\n    <h3>{{ strings['settings_addAction'] }}</h3>\n\n    <table>\n      <thead>\n        <tr class=\"borderless\">\n          <th>{{ strings['settings_selectBoard'] }}:</th>\n          <th>{{ strings['settings_selectTrigger'] }}:</th>\n          <th>{{ strings['settings_selectAction'] }}</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        <tr class=\"borderless\">\n          <td>\n            <select [(ngModel)]=\"newAction.board_id\"\n              (change)=\"updateTriggerSources()\">\n              <option [ngValue]=\"null\">\n                {{ strings['settings_selectBoard'] }}...\n              </option>\n              <option *ngFor=\"let board of boards\"\n                [ngValue]=\"board.id\">\n                {{ board.name }}\n              </option>\n            </select>\n          </td>\n          <td>\n            <select [disabled]=\"newAction.board_id === null\"\n              [(ngModel)]=\"newAction.trigger\"\n              (change)=\"updateTriggerSources()\">\n              <option *ngFor=\"let trigger of triggers\"\n                [ngValue]=\"trigger[0]\">{{ trigger[1] }}</option>\n            </select>\n          </td>\n          <td>\n            <select [disabled]=\"newAction.board_id === null\"\n              [(ngModel)]=\"newAction.type\"\n              (change)=\"updateActionSources()\">\n              <option *ngFor=\"let type of types\"\n                [ngValue]=\"type[0]\">{{ type[1] }}</option>\n            </select>\n          </td>\n        </tr>\n\n        <tr class=\"borderless\">\n          <td></td>\n          <td>\n            <select [disabled]=\"newAction.board_id === null\"\n              *ngIf=\"triggerSources.length\"\n              [(ngModel)]=\"newAction.source_id\"\n              (change)=\"checkAddDisabled()\">\n              <option *ngFor=\"let source of triggerSources\"\n                [ngValue]=\"source[0]\">{{ source[1] }}</option>\n            </select>\n          </td>\n          <td>\n            <select [disabled]=\"newAction.board_id === null\"\n              [(ngModel)]=\"newAction.change_to\"\n              (change)=\"checkAddDisabled()\"\n              *ngIf=\"newAction.type > 1 && newAction.type < 6\">\n              <option *ngFor=\"let source of actionSources\"\n                [ngValue]=\"source[0]\">{{ source[1] }}</option>\n            </select>\n            <input type=\"color\" name=\"change-to-color\"\n            [disabled]=\"newAction.board_id === null\"\n            *ngIf=\"newAction.type == 1\"\n            [(ngModel)]=\"newAction.change_to\"\n            (change)=\"checkAddDisabled()\">\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <button class=\"right\"\n      [disabled]=\"isAddDisabled\"\n      (click)=\"addNewAction()\">\n      <i class=\"icon icon-plus\"></i>\n      {{ strings['settings_addAction'] }}\n    </button>\n  </div>\n</section>\n\n<tb-modal modal-title=\"Confirm Automatic Action Removal\" blocking=\"true\"\n  modal-id=\"{{ MODAL_CONFIRM_ID }}\">\n\n  <div class=\"center\">\n    Removing an automatic action cannot be undone.<br>Continue?\n  </div>\n\n  <div class=\"buttons\">\n    <button class=\"flat\"\n      (click)=\"removeAutoAction()\"\n      [disabled]=\"saving\">Yes</button>\n    <button #defaultAction #focusMe\n      (click)=\"modal.close(MODAL_CONFIRM_ID)\"\n      [disabled]=\"saving\">No</button>\n  </div>\n</tb-modal>\n\n","import { Component, OnDestroy } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport {\n  ApiResponse,\n  AutoAction,\n  ActionTrigger,\n  ActionType,\n  User,\n  Board,\n} from '../../shared/models';\nimport {\n  AuthService,\n  ModalService,\n  NotificationsService,\n  StringsService\n} from '../../shared/services';\nimport { SettingsService } from '../settings.service';\nimport { AutoActionsService } from './auto-actions.service';\n\n@Component({\n  selector: 'tb-auto-actions',\n  templateUrl: './auto-actions.component.html',\n  providers: [ AutoActionsService ]\n})\nexport class AutoActionsComponent implements OnDestroy {\n  private actionToRemove: AutoAction;\n\n  public autoActions: AutoAction[];\n  private subs: any[];\n\n  private firstRun = true;\n  public isAddDisabled = true;\n\n  public triggers: any[][];\n  public boards: Board[];\n  public triggerSources: any[][];\n  public actionSources: any[][];\n  public types: any[][];\n  public typesList: any[][];\n\n  public newAction: AutoAction;\n  public activeUser: User;\n\n  public noActionsMessage: string;\n  public strings: any;\n  public MODAL_CONFIRM_ID: string;\n\n  public saving = false;\n  public loading = true;\n  public hasInactiveBoards = false;\n\n  constructor(public auth: AuthService,\n              public modal: ModalService,\n              private settings: SettingsService,\n              public actions: AutoActionsService,\n              private notes: NotificationsService,\n              public stringsService: StringsService,\n              private sanitizer: DomSanitizer) {\n    this.newAction = new AutoAction();\n    this.activeUser = new User();\n\n    this.boards = [];\n    this.autoActions = [];\n    this.strings = {};\n    this.subs = [];\n    this.MODAL_CONFIRM_ID = 'action-remove-confirm';\n\n    let sub = auth.userChanged.subscribe(activeUser => {\n      this.updateActiveUser(activeUser);\n    });\n    this.subs.push(sub);\n\n    sub = settings.boardsChanged.subscribe((boards: Board[]) => {\n      this.boards = boards;\n      this.updateHasInactiveBoards();\n    });\n    this.subs.push(sub);\n\n    sub = settings.actionsChanged\n      .subscribe((actionsList: AutoAction[]) => {\n        this.updateActions(actionsList);\n      });\n    this.subs.push(sub);\n\n    sub = stringsService.stringsChanged.subscribe((newStrings: any) => {\n      this.updateStrings(newStrings);\n    });\n    this.subs.push(sub);\n  }\n\n  ngOnDestroy() {\n    this.subs.forEach(sub => sub.unsubscribe());\n  }\n\n  updateActions(actionList: AutoAction[]) {\n    this.autoActions = actionList;\n    this.updateHasInactiveBoards();\n\n    this.autoActions.sort((a, b) => {\n      const nameA = this.getBoardName(a.board_id);\n      const nameB = this.getBoardName(b.board_id);\n\n      return nameA.localeCompare(nameB);\n    });\n\n    if (this.firstRun) {\n      this.firstRun = false;\n      return;\n    }\n\n    this.loading = false;\n  }\n\n  updateStrings(newStrings: any) {\n    this.strings = newStrings;\n\n    this.triggers = [\n      [\n        ActionTrigger.MovedToColumn,\n        this.strings.settings_triggerMoveToColumn\n      ],\n      [\n        ActionTrigger.AssignedToUser,\n        this.strings.settings_triggerAssignedToUser\n      ],\n      [\n        ActionTrigger.AddedToCategory,\n        this.strings.settings_triggerAddedToCategory\n      ],\n      [\n        ActionTrigger.PointsChanged,\n        this.strings.settings_triggerPointsChanged\n      ]\n    ];\n\n    this.typesList = [\n      [\n        ActionType.SetColor,\n        this.strings.settings_actionSetColor\n      ],\n      [\n        ActionType.SetCategory,\n        this.strings.settings_actionSetCategory\n      ],\n      [\n        ActionType.AddCategory,\n        this.strings.settings_actionAddCategory\n      ],\n      [\n        ActionType.SetAssignee,\n        this.strings.settings_actionSetAssignee\n      ],\n      [\n        ActionType.AddAssignee,\n        this.strings.settings_actionAddAssignee\n      ],\n      [\n        ActionType.ClearDueDate,\n        this.strings.settings_actionClearDueDate\n      ]\n    ];\n\n    this.types = this.typesList;\n    this.updateTriggerSources();\n    this.updateActionSources();\n    this.updateActiveUser(this.activeUser);\n  }\n\n  addNewAction(): void {\n    this.actions.addAction(this.newAction)\n    .subscribe((response: ApiResponse) => {\n      this.handleResponse(response);\n\n      this.newAction = new AutoAction();\n    });\n  }\n\n  updateTriggerSources(): void {\n    this.triggerSources = [];\n    this.newAction.source_id = null;\n    this.newAction.change_to = '#000000';\n\n    this.types = this.typesList;\n\n    switch (this.newAction.trigger) {\n      case ActionTrigger.MovedToColumn:\n        this.buildSourcesArray('triggerSources', 'Column', 'columns');\n        break;\n\n      case ActionTrigger.AssignedToUser:\n        this.buildSourcesArray('triggerSources', 'User', 'users', 'username');\n        break;\n\n      case ActionTrigger.AddedToCategory:\n        this.buildSourcesArray('triggerSources', 'Category', 'categories');\n        break;\n\n      case ActionTrigger.PointsChanged:\n        // Leave triggerSources empty\n        this.types = [ [\n          ActionType.AlterColorByPoints,\n          this.strings.settings_alterByPoints\n        ] ];\n        break;\n    }\n\n    this.newAction.type = this.types ?\n    this.types[0][0] : ActionType.SetColor;\n\n    this.checkAddDisabled();\n  }\n\n  updateActionSources(): void {\n    this.actionSources = [];\n    this.newAction.change_to = null;\n\n    switch (this.newAction.type) {\n      case ActionType.SetCategory:\n      case ActionType.AddCategory:\n        this.buildSourcesArray('actionSources', 'Category', 'categories');\n        break;\n\n      case ActionType.SetAssignee:\n      case ActionType.AddAssignee:\n        this.buildSourcesArray('actionSources', 'Assignee', 'users', 'username');\n        break;\n\n      case ActionType.SetColor:\n        this.newAction.change_to = '#000000';\n        break;\n    }\n\n    this.checkAddDisabled();\n  }\n\n  checkAddDisabled(): void {\n    this.isAddDisabled = false;\n\n    if (this.newAction.board_id === null) {\n      this.isAddDisabled = true;\n      return;\n    }\n\n    if (this.newAction.source_id === null) {\n      this.isAddDisabled =\n        (this.newAction.trigger !== ActionTrigger.PointsChanged);\n    }\n\n    if (!this.isAddDisabled && this.newAction.change_to === null) {\n      this.isAddDisabled =\n        (this.newAction.type !== ActionType.ClearDueDate);\n    }\n  }\n\n  getBoardName(id: number): string {\n    const board = this.getBoard(+id);\n\n    if (board) {\n      const note = +board.is_active ? '' : '*';\n\n      return board.name + note;\n    }\n\n    return '';\n  }\n\n  getTriggerDescription(action: AutoAction): string {\n    let desc = '';\n    const board = this.getBoard(action.board_id);\n\n    if (!board) {\n      return;\n    }\n\n    switch (+action.trigger) {\n      case ActionTrigger.MovedToColumn:\n        desc = this.strings.settings_triggerMoveToColumn + ' ';\n        desc += this.getNameFromArray(board.columns, action.source_id);\n        break;\n\n      case ActionTrigger.AssignedToUser:\n        desc = this.strings.settings_triggerAssignedToUser + ' ';\n        desc += this.getNameFromArray(board.users,\n          action.source_id, 'username');\n        break;\n\n      case ActionTrigger.AddedToCategory:\n        desc = this.strings.settings_triggerAddedToCategory + ' ';\n        desc += this.getNameFromArray(board.categories,\n          action.source_id);\n        break;\n\n      case ActionTrigger.PointsChanged:\n        desc = this.strings.settings_triggerPointsChanged;\n        break;\n    }\n\n    return desc;\n  }\n\n  getTypeDescription(action: AutoAction): SafeHtml {\n    let desc = '';\n    const board = this.getBoard(action.board_id);\n\n    if (!board) {\n      return;\n    }\n\n    switch (+action.type) {\n      case ActionType.SetColor:\n        desc = this.strings.settings_actionSetColor + ' <span style=\"background-color: ' +\n          action.change_to + ';\">' + action.change_to + '</span>';\n        break;\n\n      case ActionType.SetCategory:\n        desc = this.strings.settings_actionSetCategory + ' ';\n        desc += this.getNameFromArray(board.categories,\n          +action.change_to);\n        break;\n\n      case ActionType.AddCategory:\n        desc = this.strings.settings_actionAddCategory + ' ';\n        desc += this.getNameFromArray(board.categories,\n          +action.change_to);\n        break;\n\n      case ActionType.SetAssignee:\n        desc = this.strings.settings_actionSetAssignee + ' ';\n        desc += this.getNameFromArray(board.users,\n          +action.change_to, 'username');\n        break;\n\n      case ActionType.AddAssignee:\n        desc = this.strings.settings_actionAddAssignee + ' ';\n        desc += this.getNameFromArray(board.users,\n          +action.change_to, 'username');\n        break;\n\n      case ActionType.ClearDueDate:\n        desc = this.strings.settings_actionClearDueDate;\n        break;\n\n      case ActionType.AlterColorByPoints:\n        desc = this.strings.settings_actionAlterColor;\n        break;\n    }\n\n    return this.sanitizer.bypassSecurityTrustHtml(desc);\n  }\n\n  removeAutoAction(): void {\n    this.saving = true;\n\n    this.actions.removeAction(this.actionToRemove)\n    .subscribe((response: ApiResponse) => {\n      this.handleResponse(response);\n    });\n  }\n\n  showConfirmModal(action: AutoAction): void {\n    this.actionToRemove = action;\n    this.modal.open(this.MODAL_CONFIRM_ID);\n  }\n\n  private updateHasInactiveBoards(): void {\n    this.hasInactiveBoards = false;\n\n    this.boards.forEach(board => {\n      if (!(+board.is_active)) {\n        this.hasInactiveBoards = true;\n      }\n    });\n  }\n\n  private handleResponse(response: ApiResponse): void {\n    response.alerts.forEach(alert => {\n      this.notes.add(alert);\n    });\n\n    this.settings.updateActions(response.data[1]);\n    this.saving = false;\n    this.modal.close(this.MODAL_CONFIRM_ID);\n  }\n\n  private buildSourcesArray(sourceArray: string,\n                            name: string,\n                            arrayName: string,\n                            prop: string = 'name'): void {\n      this[sourceArray] = [[null, this.strings['settings_select' + name]]];\n\n      for (const board of this.boards) {\n        if (board.id !== this.newAction.board_id) {\n          continue;\n        }\n\n        board[arrayName].forEach((item: any) => {\n          this[sourceArray].push([ item.id, item[prop] ]);\n        });\n      }\n    }\n\n  private getBoard(id: number): Board {\n    let foundBoard: Board = null;\n\n    for (const board of this.boards) {\n      if (+board.id === +id) {\n        foundBoard = board;\n        break;\n      }\n    }\n\n    return foundBoard;\n  }\n\n  private getNameFromArray(boardArray: any[],\n                           arrayItemId: number,\n                           prop: string = 'name') {\n    let name = '';\n\n    boardArray.forEach(item => {\n      if (+item.id !== +arrayItemId) {\n        return;\n      }\n\n      name = item[prop];\n    });\n\n    return name;\n  }\n\n  private updateActiveUser(activeUser: User) {\n    if (!activeUser) {\n      return;\n    }\n\n    this.activeUser = new User(+activeUser.default_board_id,\n      activeUser.email,\n      +activeUser.id,\n      activeUser.last_login,\n      +activeUser.security_level,\n      +activeUser.user_option_id,\n      activeUser.username,\n      activeUser.board_access);\n    this.noActionsMessage = this.strings.settings_noActions;\n\n    if (activeUser.security_level < 3) {\n      this.noActionsMessage = this.strings.settings_noActionsAdmin;\n    }\n  }\n\n}\n\n","import { Component, OnDestroy } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\nimport { StringsService } from '../shared/services';\nimport { SettingsService } from './settings.service';\n\n@Component({\n  selector: 'tb-settings',\n  templateUrl: './settings.component.html'\n})\nexport class SettingsComponent implements OnDestroy {\n  public strings: any;\n  private subs: any[];\n\n  constructor(public stringsService: StringsService,\n              public settings: SettingsService,\n              public title: Title) {\n    this.subs = [];\n\n    const sub = stringsService.stringsChanged.subscribe(newStrings => {\n      this.strings = newStrings;\n      title.setTitle('TaskBoard - ' + this.strings['settings']); // tslint:disable-line\n    });\n    this.subs.push(sub);\n  }\n\n  ngOnDestroy() {\n    this.subs.forEach(sub => sub.unsubscribe());\n  }\n}\n\n","<tb-top-nav page-name=\"{{ strings['settings'] }}\"></tb-top-nav>\n\n<div class=\"settings\">\n  <div class=\"half-page\">\n    <tb-user-settings></tb-user-settings>\n    <tb-user-admin></tb-user-admin>\n  </div>\n\n  <div class=\"half-page\">\n    <tb-board-admin></tb-board-admin>\n    <tb-auto-actions></tb-auto-actions>\n  </div>\n</div>\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { LocationStrategy } from '@angular/common';\n\nimport { Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { ApiResponse } from '../shared/models';\nimport { ApiService } from '../shared/services';\n\n@Injectable()\nexport class DashboardService extends ApiService {\n\n  constructor(private http: HttpClient, strat: LocationStrategy) {\n    super(strat);\n  }\n\n  getBoardInfo(): Observable<ApiResponse> {\n    return this.http.get(this.apiBase + 'dashboard/boards')\n    .pipe(\n      map((response: ApiResponse) => response),\n      catchError((err) => of(err.error as ApiResponse))\n    );\n  }\n\n  getTaskInfo(): Observable<ApiResponse> {\n    return this.http.get(this.apiBase + 'dashboard/tasks')\n    .pipe(\n      map((response: ApiResponse) => response),\n      catchError((err) => of(err.error as ApiResponse))\n    );\n  }\n}\n","<section class=\"boards-and-tasks\">\n  <h2>{{ strings['dashboard_boardsAndTasks'] }}</h2>\n\n  <div class=\"row\">\n    <h3>{{ strings['dashboard_myBoards'] }}</h3>\n\n    <table class=\"alternating scrollable\">\n      <thead>\n        <tr>\n          <th>{{ strings['settings_board'] }}</th>\n          <th>{{ strings['settings_columns'] }}</th>\n          <th>{{ strings['settings_categories'] }}</th>\n        </tr>\n      </thead>\n\n      <tbody *ngIf=\"boardsLoading\">\n        <tr>\n          <td colspan=\"3\">\n            Loading ...\n          </td>\n        </tr>\n      </tbody>\n\n      <tbody *ngIf=\"!boardsLoading && !boards\">\n        <tr>\n          <td colspan=\"3\">\n            {{ boardsMessage }}\n          </td>\n        </tr>\n      </tbody>\n\n      <tbody *ngIf=\"boards && !boardsLoading\">\n        <tr *ngFor=\"let board of boards\">\n          <td><a href=\"./boards/{{ board.id }}\">{{ board.name }}</a></td>\n\n          <td>\n            <span *ngFor=\"let col of board.columns\">\n              {{ col.name }}\n              <span class=\"badge\" title=\"{{ strings['boards_tasksInColumn'] }}\">\n                {{ col.tasks }}</span>\n            </span>\n          </td>\n\n          <td>\n            <!-- Ugly here, so it looks good in the browser -->\n            <span *ngFor=\"let cat of board.categories\">{{ cat.name }}\n              <span class=\"badge\"\n                    title=\"{{ strings['dashboard_tasksInCategory'] }}\">{{ cat.tasks }}</span></span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n\n  <div class=\"row\">\n    <h3>{{ strings['dashboard_myTasks'] }}</h3>\n\n    <table class=\"alternating scrollable\">\n      <thead>\n        <tr>\n          <th>{{ strings['settings_board'] }}</th>\n          <th>{{ strings['boards_task'] }}</th>\n          <th>{{ strings['dashboard_details'] }}</th>\n        </tr>\n      </thead>\n\n      <tbody *ngIf=\"tasksLoading\">\n        <tr>\n          <td colspan=\"3\">\n            Loading ...\n          </td>\n        </tr>\n      </tbody>\n\n      <tbody *ngIf=\"!tasksLoading && !tasks\">\n        <tr>\n          <td colspan=\"3\">\n            {{ tasksMessage }}\n          </td>\n        </tr>\n      </tbody>\n\n      <tbody *ngIf=\"tasks && !tasksLoading\">\n        <tr *ngFor=\"let task of tasks\">\n          <td><a href=\"./boards/{{ task.board_id }}\">{{ task.board }}</a></td>\n\n          <td>\n            <!-- <a href=\"#\">An Important Task</a> -->\n            {{ task.title }}\n            <span class=\"badge\" title=\"Task Color\"\n                  style=\"background-color:{{ task.color }}\">&nbsp;</span>\n          </td>\n\n          <td>\n            <span class=\"details\">{{ strings['boards_taskColumn'] }}:\n              <em>{{ task.column }}</em></span>\n            <span class=\"details\" *ngIf=\"task.date_due\">{{ strings['boards_taskDateDue'] }}:\n              <em>{{ task.date_due | date }}</em></span>\n            <span class=\"details\" *ngIf=\"task.points\">{{ strings['boards_taskPoints'] }}:\n              <em>{{ task.points }}</em></span>\n            <span class=\"details\" *ngIf=\"task.attachments.length\">{{ strings['boards_taskAttachments'] }}:\n              <em>{{ task.attachments }}</em></span>\n            <span class=\"details\" *ngIf=\"task.comments.length\">{{ strings['boards_taskComments'] }}:\n              <em>{{ task.comments }}</em></span>\n          </td>\n        </tr>\n\n      </tbody>\n    </table>\n\n  </div>\n</section>\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'tb-my-items',\n  templateUrl: './my-items.component.html'\n})\nexport class MyItemsComponent {\n  @Input()\n  boards: any;\n\n  @Input()\n  boardsLoading: boolean;\n\n  @Input()\n  boardsMessage: string;\n\n  @Input()\n  tasks: any;\n\n  @Input()\n  tasksLoading: boolean;\n\n  @Input()\n  tasksMessage: string;\n\n  @Input()\n  strings: any[];\n\n  constructor() {\n    this.boardsLoading = true;\n    this.tasksLoading = true;\n  }\n\n}\n\n","<div id=\"{{ chartName }}\" class=\"ct-chart\"\n  [ngClass]=\"{'ct-golden-section': chartType === 'pie', 'white-labels': chartType === 'pie'}\"></div>\n\n<table class=\"alternating\" *ngIf=\"chartType !== 'line'\">\n  <thead>\n    <tr>\n      <th>{{ tableHead }}</th>\n      <th>Task Count</th>\n      <th>Percentage</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let percent of percentages; let i = index;\">\n      <td>{{ words[i] }}</td>\n      <td>{{ data[i] }}</td>\n      <td>{{ percent }}%</td>\n    </tr>\n  </tbody>\n</table>\n\n","import { Component, Input, AfterViewInit } from '@angular/core';\nimport * as Chartist from 'chartist';\n\n/* istanbul ignore next */\n@Component({\n  selector: 'tb-charts',\n  templateUrl: './charts.component.html'\n})\nexport class ChartsComponent implements AfterViewInit {\n  public percentages: number[];\n  public data: number[];\n  public words: string[];\n\n  // tslint:disable-next-line\n  @Input('chart-name') chartName = '';\n  // tslint:disable-next-line\n  @Input('chart-type') chartType = 'pie';\n  // tslint:disable-next-line\n  @Input('series') series = '';\n  // tslint:disable-next-line\n  @Input('labels') labels = '';\n  // tslint:disable-next-line\n  @Input('table-head') tableHead = '';\n\n  constructor() {\n    this.percentages = [];\n    this.data = [];\n    this.words = [];\n  }\n\n  ngAfterViewInit() {\n    this.data = this.convertToNumberArray(this.series.split(','));\n    this.words = this.labels.split(',');\n\n    if (this.chartType === 'line') {\n      this.createLineChart();\n    } else {\n      this.createPieChart();\n    }\n  }\n\n  private createPieChart() {\n    const data = {\n      series: this.data,\n      labels: this.words\n    };\n    const options = {\n      donut: true,\n      donutWidth: 100,\n      labelInterpolationFnc: (label: string, index: number) => {\n        const value = this.data[index];\n        const percent = Math.round(value /\n          this.data.reduce(Chartist.sum) * 100);\n\n        if (this.percentages.length < this.data.length) {\n          this.percentages.push(percent);\n        }\n\n        return label + ' ' + percent + '%';\n      }\n    };\n\n    // tslint:disable-next-line\n    new Chartist.Pie('#' + this.chartName, data, options);\n  }\n\n  private createLineChart() {\n    const data = {\n      series: [this.data],\n      labels: this.words\n    };\n    const options = {\n      axisY: {\n        onlyInteger: true\n      },\n      low: 0,\n      height: '300px'// ,\n      // plugins: [ Chartist.plugins.tooltip({\n      //     transformTooltipTextFnc: (value) => {\n      //         return value + ' points remaining'\n      //     }\n      // }) ]\n    };\n\n    // tslint:disable-next-line\n    new Chartist.Line('#' + this.chartName, data, options);\n  }\n\n  private convertToNumberArray(arr: string[]): number[] {\n    const nums: number[] = [];\n\n    for (let i = 0, len = arr.length; i < len; ++i) {\n      nums.push(Number(arr[i]));\n    }\n\n    return nums;\n  }\n}\n\n","<h3>Tasks Due by Month</h3>\n\n<table class=\"calendar\">\n  <thead>\n    <tr>\n      <th><i class=\"icon icon-angle-double-left\"\n          (click)=\"previousMonth()\"></i></th>\n      <th colspan=\"5\">{{ monthLabels[month] }} {{ year }}</th>\n      <th><i class=\"icon icon-angle-double-right\"\n          (click)=\"nextMonth()\"></i></th>\n    </tr>\n    <tr class=\"days\">\n      <th *ngFor=\"let day of dayLabels\">{{ day }}</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let week of calendarDays\">\n      <td *ngFor=\"let day of week\" class=\"day\"\n        [ngClass]=\"{ today: today.getMonth() === month && today.getDate() === day }\">\n        <span class=\"date\">{{ day }}</span>\n        <span *ngIf=\"tasks[day]\" class=\"tasks-wrapper\">\n          <span class=\"task\" *ngFor=\"let task of tasks[day]\"\n            [style.background-color]=\"getColor(task)\">\n            <span class=\"points\">{{ task.points }}</span>\n            {{ task.title }}\n          </span>\n        </span>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n","import { Component, Input } from '@angular/core';\n\n/* istanbul ignore next */\n@Component({\n  selector: 'tb-calendar',\n  templateUrl: './calendar.component.html'\n})\nexport class CalendarComponent {\n  public today: Date;\n  public tasks: any[]; // TODO: Use Task model when created\n\n  public dayLabels = [ 'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat' ];\n  public monthLabels = [\n    'January', 'February', 'March', 'April',\n    'May', 'June', 'July', 'August',\n    'September', 'October', 'November', 'December'\n  ];\n\n  public month: number;\n  public year: number;\n  public calendarDays: string[][];\n\n  // tslint:disable-next-line\n  @Input('board-id') boardId: number;\n\n  constructor() {\n    this.today = new Date();\n\n    this.month = this.today.getMonth();\n    this.year = this.today.getFullYear();\n\n    this.tasks = [];\n    this.tasks[22] = [\n      {\n        title: 'Some work that must get done',\n        points: 5,\n        color: '#bee7f4'\n      },\n      {\n        title: 'Another thing to do',\n        points: 3,\n        color: '#debee8'\n      },\n      {\n        title: 'Testing a date with multiple tasks',\n        points: 8,\n        color: '#ffffe0'\n      }\n    ];\n\n    this.generateCalendar();\n  }\n\n  previousMonth(): void {\n    this.month -= 1;\n\n    // Months are zero-index in JS\n    if (this.month < 0) {\n      this.year -= 1;\n      this.month = 11;\n    }\n\n    this.generateCalendar();\n  }\n\n  nextMonth(): void {\n    this.month += 1;\n\n    if (this.month > 11) {\n      this.year += 1;\n      this.month = 0;\n    }\n\n    this.generateCalendar();\n  }\n\n  getColor(task: any) { // TODO: Use Task model\n    return task.color;\n  }\n\n  private generateCalendar(): void {\n    const firstDate = new Date(this.year, this.month, 1);\n    const startingDay = firstDate.getDay();\n    const monthLength = new Date(this.year, this.month + 1, 0).getDate();\n    const rows = Math.ceil((monthLength + startingDay) / 7);\n    let day = 1;\n\n    this.calendarDays = [];\n\n    for (let i = 0; i < rows; ++i) {\n      const weekDays: string[] = [];\n\n      for (let j = 0; j < 7; ++j) {\n        if (day <= monthLength && (j >= startingDay || i > 0)) {\n          weekDays.push('' + day);\n          day++;\n        } else {\n          weekDays.push('');\n        }\n      }\n\n      this.calendarDays.push(weekDays);\n    }\n  }\n}\n\n","<tb-top-nav page-name=\"{{ pageName }}\"></tb-top-nav>\n\n<div class=\"dashboard\">\n  <tb-my-items [boardsLoading]=\"boardsLoading\"\n               [boards]=\"boards\" [boardsMessage]=\"boardsMessage\"\n               [tasksLoading]=\"tasksLoading\" [tasks]=\"tasks\"\n               [tasksMessage]=\"tasksMessage\"\n               [strings]=\"strings\"></tb-my-items>\n\n  <section>\n    <h2>{{ strings['dashboard_analytics'] }}</h2>\n\n    <div class=\"row\">\n      <select [(ngModel)]=\"analyticsBoardId\" (change)=\"updateAnalytics()\">\n        <option [ngValue]=\"null\">\n          {{ strings['boards_selectBoard'] }}...\n        </option>\n\n        <option *ngFor=\"let board of boards\">\n          {{ board.name }}\n        </option>\n      </select>\n    </div>\n\n    <div class=\"row\" *ngIf=\"analyticsBoardId\">\n      <h3>Task Burndown</h3>\n\n      <label class=\"inline\">\n        Start Date:\n        <input type=\"date\" [(ngModel)]=\"burndownDates.start\"\n               (change)=\"validateDates()\">\n      </label>\n\n      <label class=\"inline\">\n        End Date:\n        <input type=\"date\" [(ngModel)]=\"burndownDates.end\"\n               (change)=\"validateDates()\">\n      </label>\n\n      <div *ngIf=\"datesError.length\" class=\"error\">{{ datesError }}</div>\n\n      <div *ngIf=\"!showBurndown\">Select dates to display burndown chart.</div>\n\n      <tb-charts *ngIf=\"showBurndown\"\n                 chart-name=\"chartBurndown\" chart-type=\"line\"\n                 series=\"29,26,21,18,13,8,3\"\n                 labels=\"12/31/2015,1/1/2016,1/2/2016,1/3/2016,1/4/2016,1/5/2016,1/6/2016\"\n                 table-head=\"Date\"></tb-charts>\n    </div>\n\n    <div class=\"row\" *ngIf=\"analyticsBoardId\">\n      <div class=\"half-page\">\n        <h3>Task Distribution by User</h3>\n\n        <tb-charts chart-name=\"chartByUser\" series=\"7,13,8,5\"\n                   labels=\"admin,tester,user,another\"\n                   table-head=\"User\"></tb-charts>\n      </div>\n\n      <div class=\"half-page\">\n        <h3>Task Distribution by Column</h3>\n\n        <tb-charts chart-name=\"chartByColumn\" series=\"18,3,7\"\n                   labels=\"To Do,Doing,Done\"\n                   table-head=\"Column\"></tb-charts>\n      </div>\n    </div>\n\n    <div class=\"row\" *ngIf=\"analyticsBoardId\">\n      <tb-calendar board-id=\"1\"></tb-calendar>\n    </div>\n  </section>\n\n  <section>\n    <h2>Activity Log</h2>\n\n    <div class=\"row\">\n      <table class=\"alternating\">\n        <thead>\n          <tr>\n            <th>User</th>\n            <th>Action</th>\n            <th>Timestamp</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>admin</td>\n            <td>admin added task Mockup Dashboard.</td>\n            <td>5/22/2016 1:31:53 PM</td>\n            <td><a href=\"#\">View Task</a></td>\n          </tr>\n          <tr>\n            <td>admin</td>\n            <td>admin added board Test.</td>\n            <td>5/13/2016 4:16:46 PM</td>\n            <td><a href=\"#\">View Board</a></td>\n          </tr>\n          <tr>\n            <td>admin</td>\n            <td>admin removed board Demo.</td>\n            <td>5/11/2016 9:21:39 AM</td>\n            <td></td>\n          </tr>\n          <tr>\n            <td>admin</td>\n            <td>admin added board Demo.</td>\n            <td>5/11/2016 9:18:26 AM</td>\n            <td></td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </section>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\nimport { DashboardService } from './dashboard.service';\nimport { StringsService } from '../shared/services';\n\ninterface BurndownDates {\n  start: string;\n  end: string;\n\n  startDate: Date;\n  endDate: Date;\n}\n\n@Component({\n  selector: 'tb-dashboard',\n  templateUrl: './dashboard.component.html'\n})\nexport class DashboardComponent implements OnInit, OnDestroy {\n  private subs: any[];\n\n  public boards: any;\n  public boardsLoading: boolean;\n  public boardsMessage: string;\n\n  public tasks: any;\n  public tasksLoading: boolean;\n  public tasksMessage: string;\n\n  public strings: any;\n  public pageName: string;\n\n  public analyticsBoardId: number;\n  public burndownDates: BurndownDates;\n  public datesError: string;\n\n  get showBurndown() {\n    return this.burndownDates.start &&\n      this.burndownDates.end && !this.datesError.length;\n  }\n\n  constructor(public title: Title,\n              private service: DashboardService,\n              public stringsService: StringsService) {\n    this.subs = [];\n    this.boardsLoading = true;\n    this.tasksLoading = true;\n\n    this.burndownDates = {\n      start: null,\n      end: null,\n      startDate: null,\n      endDate: null\n    };\n    this.datesError = '';\n\n    this.subs.push(\n      stringsService.stringsChanged.subscribe(newStrings => {\n        this.strings = newStrings;\n\n        title.setTitle('TaskBoard - ' + this.strings.dashboard);\n        this.pageName = this.strings.dashboard;\n      })\n    );\n  }\n\n  ngOnInit() {\n    this.service.getBoardInfo().subscribe(res => {\n      this.boards = res.data[1];\n\n      if (res.status === 'failure') {\n        this.boardsMessage = res.alerts[0].text;\n      }\n\n      this.boardsLoading = false;\n    });\n\n    this.service.getTaskInfo().subscribe(res => {\n      this.tasks = res.data[1];\n\n      if (res.status === 'failure') {\n        this.tasksMessage = res.alerts[0].text;\n      }\n\n      this.tasksLoading = false;\n    })\n  }\n\n  ngOnDestroy() {\n    this.subs.forEach(sub => sub.unsubscribe());\n  }\n\n  validateDates() {\n    if (this.burndownDates.start === null || this.burndownDates.end === null) {\n      return;\n    }\n    this.datesError = '';\n\n    this.burndownDates.startDate = new Date(this.burndownDates.start);\n    this.burndownDates.endDate = new Date(this.burndownDates.end);\n\n    const start = this.burndownDates.startDate.valueOf();\n    const end = this.burndownDates.endDate.valueOf();\n    const now = new Date().valueOf();\n\n    if (start > end) {\n      this.datesError = 'End date must be after start date.';\n    }\n\n    if (start > now) {\n      this.datesError += ' Start date must be today or earlier.';\n    }\n\n    if (end > now) {\n      this.datesError += ' End date must be today or earlier.';\n    }\n  }\n\n  updateAnalytics() {\n\n  }\n}\n\n","import { Routes } from '@angular/router';\n\nimport { BoardDisplayComponent } from './board/board.component';\nimport { FileViewerComponent } from './files/file-viewer.component';\nimport { LoginComponent } from './login/login.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { AuthGuard } from './shared/auth/auth.guard';\n\nexport const ROUTES: Routes = [\n  {\n    path: '',\n    component: LoginComponent\n  },\n  {\n    path: 'boards',\n    component: BoardDisplayComponent,\n    canActivate: [ AuthGuard ]\n  },\n  {\n    path: 'boards/:id',\n    component: BoardDisplayComponent,\n    canActivate: [ AuthGuard ]\n  },\n  {\n    path: 'boards/:id/:taskId',\n    component: BoardDisplayComponent,\n    canActivate: [ AuthGuard ]\n  },\n  {\n    path: 'settings',\n    component: SettingsComponent,\n    canActivate: [ AuthGuard ]\n  },\n  {\n    path: 'dashboard',\n    component: DashboardComponent,\n    canActivate: [ AuthGuard ]\n  },\n  {\n    path: 'files/:hash',\n    component: FileViewerComponent,\n    canActivate: [ AuthGuard ]\n  }\n];\n\n","<div class=\"notifications\">\n  <div (click)=\"hide(note)\" class=\"{{ note.type }}\"\n    *ngFor=\"let note of notes\">\n    {{ note.text }}\n  </div>\n</div>\n\n","import { Component } from '@angular/core';\n\nimport { Notification } from '../models/notification.model';\nimport { NotificationsService } from './notifications.service';\n\n@Component({\n  selector: 'tb-notifications',\n  templateUrl: './notifications.component.html'\n})\nexport class NotificationsComponent {\n  public notes: Notification[];\n\n  constructor(public notifications: NotificationsService) {\n    this.notes = new Array<Notification>();\n\n    notifications.noteAdded\n      .subscribe(note => {\n        this.notes.push(note);\n        setTimeout(() => { this.hide.bind(this)(note); }, 3000);\n      });\n  }\n\n  hide(note: Notification): void {\n    const index = this.notes.indexOf(note);\n\n    if (index >= 0) {\n      note.type += ' clicked';\n\n      setTimeout(() => {\n        this.notes.splice(index, 1);\n      }, 500); // 500ms is the fade out transition time\n    }\n  }\n}\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'tb-app-component',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  constructor() { }\n}\n\n","<router-outlet></router-outlet>\n\n<tb-notifications></tb-notifications>\n\n","import { Injectable } from '@angular/core';\nimport {\n  HttpHeaderResponse,\n  HttpResponseBase,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Router } from '@angular/router';\n\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { ApiResponse } from './shared/models';\n\n@Injectable()\nexport class ApiInterceptor implements HttpInterceptor {\n  private JWT_KEY = 'taskboard.jwt';\n\n  constructor(private router: Router) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler):\n    Observable<HttpEvent<any>> {\n\n    const headers = (request.body instanceof FormData)\n      ? { }\n      : { 'Content-Type': 'application/json' };\n    const token = sessionStorage.getItem(this.JWT_KEY);\n\n    if (token !== null) {\n      // tslint:disable-next-line\n      headers['Authorization'] = token;\n    }\n\n    request = request.clone({\n      setHeaders: headers\n    });\n\n    return next.handle(request).pipe(\n      tap(evt => {\n        if (evt instanceof HttpHeaderResponse ||\n            !(evt instanceof HttpResponseBase)) {\n          return;\n        }\n\n        const response: ApiResponse = evt.body;\n        if (response.data) {\n          sessionStorage.setItem(this.JWT_KEY, response.data[0]);\n        }\n      }, error => {\n        /* istanbul ignore else */\n        if ((error.status === 401 ||\n            /* istanbul ignore next */ error.status === 400)) {\n          sessionStorage.removeItem(this.JWT_KEY);\n          this.router.navigate(['/']);\n        }\n      })\n    );\n  }\n\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthGuard } from './auth/auth.guard';\nimport { AuthService } from './auth/auth.service';\nimport { ContextMenuComponent } from './context-menu/context-menu.component';\nimport { ContextMenuItemComponent } from './context-menu/context-menu-item.component';\nimport { ContextMenuService } from './context-menu/context-menu.service';\nimport { InlineEditComponent } from './inline-edit/inline-edit.component';\nimport { ModalComponent } from './modal/modal.component';\nimport { ModalService } from './modal/modal.service';\nimport { NotificationsComponent } from './notifications/notifications.component';\nimport { NotificationsService } from './notifications/notifications.service';\nimport { StringsService } from './strings/strings.service';\nimport { TopNavComponent } from './top-nav/top-nav.component';\nimport { Constants } from './constants';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    ContextMenuComponent,\n    ContextMenuItemComponent,\n    InlineEditComponent,\n    ModalComponent,\n    NotificationsComponent,\n    TopNavComponent\n  ],\n  providers: [\n    AuthGuard,\n    AuthService,\n    Constants,\n    ContextMenuService,\n    ModalService,\n    NotificationsService,\n    StringsService\n  ],\n  exports: [\n    ContextMenuComponent,\n    ContextMenuItemComponent,\n    InlineEditComponent,\n    ModalComponent,\n    NotificationsComponent,\n    TopNavComponent\n  ]\n})\nexport class SharedModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\n\nimport { SharedModule } from '../shared/shared.module';\n\nimport { BoardDisplayComponent } from './board.component';\nimport { ColumnDisplayComponent } from './column/column.component';\nimport { TaskDisplayComponent } from './task/task.component';\nimport { BoardService } from './board.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DragDropModule,\n    FormsModule,\n    RouterModule,\n    SharedModule\n  ],\n  declarations: [\n    BoardDisplayComponent,\n    ColumnDisplayComponent,\n    TaskDisplayComponent\n  ],\n  providers: [ BoardService ],\n  exports: [\n    BoardDisplayComponent,\n    ColumnDisplayComponent,\n    TaskDisplayComponent,\n  ]\n})\nexport class BoardModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { SharedModule } from '../shared/shared.module';\n\nimport { FileViewerComponent } from './file-viewer.component';\nimport { FileViewerService } from './file-viewer.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    SharedModule\n  ],\n  declarations: [\n    FileViewerComponent\n  ],\n  providers: [\n    FileViewerService\n  ],\n  exports: [\n    FileViewerComponent\n  ]\n})\nexport class FileModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { SharedModule } from '../shared/shared.module';\n\nimport { CalendarComponent } from './calendar/calendar.component';\nimport { ChartsComponent } from './charts/charts.component';\nimport { DashboardComponent } from './dashboard.component';\nimport { DashboardService } from './dashboard.service';\nimport { MyItemsComponent } from './my-items/my-items.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    SharedModule\n  ],\n  declarations: [\n    CalendarComponent,\n    ChartsComponent,\n    DashboardComponent,\n    MyItemsComponent\n  ],\n  providers: [\n    DashboardService\n  ],\n  exports: [\n    CalendarComponent,\n    ChartsComponent,\n    DashboardComponent,\n    MyItemsComponent\n  ]\n})\nexport class DashboardModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\n\nimport { SharedModule } from '../shared/shared.module';\n\nimport { SettingsService } from 'src/app/settings/settings.service';\nimport { AutoActionsService } from 'src/app/settings/auto-actions/auto-actions.service';\nimport { BoardAdminService } from 'src/app/settings/board-admin/board-admin.service';\nimport { UserAdminService } from 'src/app/settings/user-admin/user-admin.service';\nimport { UserSettingsService } from 'src/app/settings/user-settings/user-settings.service';\n\nimport { AutoActionsComponent } from './auto-actions/auto-actions.component';\nimport { BoardAdminComponent } from './board-admin/board-admin.component';\nimport { SettingsComponent } from './settings.component';\nimport { UserAdminComponent } from './user-admin/user-admin.component';\nimport { UserSettingsComponent } from './user-settings/user-settings.component';\n\nconst declarationsAndExports = [\n  AutoActionsComponent,\n  BoardAdminComponent,\n  SettingsComponent,\n  UserAdminComponent,\n  UserSettingsComponent\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DragDropModule,\n    FormsModule,\n    RouterModule,\n    SharedModule\n  ],\n\n  providers: [\n    AutoActionsService,\n    BoardAdminService,\n    SettingsService,\n    UserAdminService,\n    UserSettingsService\n  ],\n\n  declarations: declarationsAndExports,\n\n  exports: declarationsAndExports\n})\nexport class SettingsModule { }\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\n\nimport { ROUTES } from './app.routes';\nimport { AppComponent } from './app.component';\nimport { ApiInterceptor } from './app.api-http';\n\nimport { LoginComponent } from './login/login.component';\nimport { BoardModule } from './board/board.module';\nimport { FileModule } from './files/file-viewer.module';\nimport { DashboardModule } from './dashboard/dashboard.module';\nimport { SettingsModule } from './settings/settings.module';\nimport { SharedModule } from './shared/shared.module';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    BoardModule,\n    FileModule,\n    DashboardModule,\n    DragDropModule,\n    SettingsModule,\n    SharedModule,\n    RouterModule.forRoot(ROUTES)\n  ],\n\n  providers: [{\n    provide: HTTP_INTERCEPTORS,\n    useClass: ApiInterceptor,\n    multi: true\n  }],\n\n  declarations: [\n    AppComponent,\n    LoginComponent\n  ],\n\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { Subscriber } from './Subscriber';\nimport { Observable } from './Observable';\nimport { subscribeTo } from './util/subscribeTo';\nexport class SimpleInnerSubscriber extends Subscriber {\n    constructor(parent) {\n        super();\n        this.parent = parent;\n    }\n    _next(value) {\n        this.parent.notifyNext(value);\n    }\n    _error(error) {\n        this.parent.notifyError(error);\n        this.unsubscribe();\n    }\n    _complete() {\n        this.parent.notifyComplete();\n        this.unsubscribe();\n    }\n}\nexport class ComplexInnerSubscriber extends Subscriber {\n    constructor(parent, outerValue, outerIndex) {\n        super();\n        this.parent = parent;\n        this.outerValue = outerValue;\n        this.outerIndex = outerIndex;\n    }\n    _next(value) {\n        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this);\n    }\n    _error(error) {\n        this.parent.notifyError(error);\n        this.unsubscribe();\n    }\n    _complete() {\n        this.parent.notifyComplete(this);\n        this.unsubscribe();\n    }\n}\nexport class SimpleOuterSubscriber extends Subscriber {\n    notifyNext(innerValue) {\n        this.destination.next(innerValue);\n    }\n    notifyError(err) {\n        this.destination.error(err);\n    }\n    notifyComplete() {\n        this.destination.complete();\n    }\n}\nexport class ComplexOuterSubscriber extends Subscriber {\n    notifyNext(_outerValue, innerValue, _outerIndex, _innerSub) {\n        this.destination.next(innerValue);\n    }\n    notifyError(error) {\n        this.destination.error(error);\n    }\n    notifyComplete(_innerSub) {\n        this.destination.complete();\n    }\n}\nexport function innerSubscribe(result, innerSubscriber) {\n    if (innerSubscriber.closed) {\n        return undefined;\n    }\n    if (result instanceof Observable) {\n        return result.subscribe(innerSubscriber);\n    }\n    return subscribeTo(result)(innerSubscriber);\n}\n//# sourceMappingURL=innerSubscribe.js.map"],"sourceRoot":"webpack:///"}